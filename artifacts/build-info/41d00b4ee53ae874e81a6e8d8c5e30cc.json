{"id":"41d00b4ee53ae874e81a6e8d8c5e30cc","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/governance/extensions/GovernorCountingSimple.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (governance/extensions/GovernorCountingSimple.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Governor.sol\";\n\n/**\n * @dev Extension of {Governor} for simple, 3 options, vote counting.\n *\n * _Available since v4.3._\n */\nabstract contract GovernorCountingSimple is Governor {\n    /**\n     * @dev Supported vote types. Matches Governor Bravo ordering.\n     */\n    enum VoteType {\n        Against,\n        For,\n        Abstain\n    }\n\n    struct ProposalVote {\n        uint256 againstVotes;\n        uint256 forVotes;\n        uint256 abstainVotes;\n        mapping(address => bool) hasVoted;\n    }\n\n    mapping(uint256 => ProposalVote) private _proposalVotes;\n\n    /**\n     * @dev See {IGovernor-COUNTING_MODE}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function COUNTING_MODE() public pure virtual override returns (string memory) {\n        return \"support=bravo&quorum=for,abstain\";\n    }\n\n    /**\n     * @dev See {IGovernor-hasVoted}.\n     */\n    function hasVoted(uint256 proposalId, address account) public view virtual override returns (bool) {\n        return _proposalVotes[proposalId].hasVoted[account];\n    }\n\n    /**\n     * @dev Accessor to the internal vote counts.\n     */\n    function proposalVotes(uint256 proposalId)\n        public\n        view\n        virtual\n        returns (\n            uint256 againstVotes,\n            uint256 forVotes,\n            uint256 abstainVotes\n        )\n    {\n        ProposalVote storage proposalVote = _proposalVotes[proposalId];\n        return (proposalVote.againstVotes, proposalVote.forVotes, proposalVote.abstainVotes);\n    }\n\n    /**\n     * @dev See {Governor-_quorumReached}.\n     */\n    function _quorumReached(uint256 proposalId) internal view virtual override returns (bool) {\n        ProposalVote storage proposalVote = _proposalVotes[proposalId];\n\n        return quorum(proposalSnapshot(proposalId)) <= proposalVote.forVotes + proposalVote.abstainVotes;\n    }\n\n    /**\n     * @dev See {Governor-_voteSucceeded}. In this module, the forVotes must be strictly over the againstVotes.\n     */\n    function _voteSucceeded(uint256 proposalId) internal view virtual override returns (bool) {\n        ProposalVote storage proposalVote = _proposalVotes[proposalId];\n\n        return proposalVote.forVotes > proposalVote.againstVotes;\n    }\n\n    /**\n     * @dev See {Governor-_countVote}. In this module, the support follows the `VoteType` enum (from Governor Bravo).\n     */\n    function _countVote(\n        uint256 proposalId,\n        address account,\n        uint8 support,\n        uint256 weight,\n        bytes memory // params\n    ) internal virtual override {\n        ProposalVote storage proposalVote = _proposalVotes[proposalId];\n\n        require(!proposalVote.hasVoted[account], \"GovernorVotingSimple: vote already cast\");\n        proposalVote.hasVoted[account] = true;\n\n        if (support == uint8(VoteType.Against)) {\n            proposalVote.againstVotes += weight;\n        } else if (support == uint8(VoteType.For)) {\n            proposalVote.forVotes += weight;\n        } else if (support == uint8(VoteType.Abstain)) {\n            proposalVote.abstainVotes += weight;\n        } else {\n            revert(\"GovernorVotingSimple: invalid value for enum VoteType\");\n        }\n    }\n}\n"},"@openzeppelin/contracts/governance/extensions/GovernorSettings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (governance/extensions/GovernorSettings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Governor.sol\";\n\n/**\n * @dev Extension of {Governor} for settings updatable through governance.\n *\n * _Available since v4.4._\n */\nabstract contract GovernorSettings is Governor {\n    uint256 private _votingDelay;\n    uint256 private _votingPeriod;\n    uint256 private _proposalThreshold;\n\n    event VotingDelaySet(uint256 oldVotingDelay, uint256 newVotingDelay);\n    event VotingPeriodSet(uint256 oldVotingPeriod, uint256 newVotingPeriod);\n    event ProposalThresholdSet(uint256 oldProposalThreshold, uint256 newProposalThreshold);\n\n    /**\n     * @dev Initialize the governance parameters.\n     */\n    constructor(\n        uint256 initialVotingDelay,\n        uint256 initialVotingPeriod,\n        uint256 initialProposalThreshold\n    ) {\n        _setVotingDelay(initialVotingDelay);\n        _setVotingPeriod(initialVotingPeriod);\n        _setProposalThreshold(initialProposalThreshold);\n    }\n\n    /**\n     * @dev See {IGovernor-votingDelay}.\n     */\n    function votingDelay() public view virtual override returns (uint256) {\n        return _votingDelay;\n    }\n\n    /**\n     * @dev See {IGovernor-votingPeriod}.\n     */\n    function votingPeriod() public view virtual override returns (uint256) {\n        return _votingPeriod;\n    }\n\n    /**\n     * @dev See {Governor-proposalThreshold}.\n     */\n    function proposalThreshold() public view virtual override returns (uint256) {\n        return _proposalThreshold;\n    }\n\n    /**\n     * @dev Update the voting delay. This operation can only be performed through a governance proposal.\n     *\n     * Emits a {VotingDelaySet} event.\n     */\n    function setVotingDelay(uint256 newVotingDelay) public virtual onlyGovernance {\n        _setVotingDelay(newVotingDelay);\n    }\n\n    /**\n     * @dev Update the voting period. This operation can only be performed through a governance proposal.\n     *\n     * Emits a {VotingPeriodSet} event.\n     */\n    function setVotingPeriod(uint256 newVotingPeriod) public virtual onlyGovernance {\n        _setVotingPeriod(newVotingPeriod);\n    }\n\n    /**\n     * @dev Update the proposal threshold. This operation can only be performed through a governance proposal.\n     *\n     * Emits a {ProposalThresholdSet} event.\n     */\n    function setProposalThreshold(uint256 newProposalThreshold) public virtual onlyGovernance {\n        _setProposalThreshold(newProposalThreshold);\n    }\n\n    /**\n     * @dev Internal setter for the voting delay.\n     *\n     * Emits a {VotingDelaySet} event.\n     */\n    function _setVotingDelay(uint256 newVotingDelay) internal virtual {\n        emit VotingDelaySet(_votingDelay, newVotingDelay);\n        _votingDelay = newVotingDelay;\n    }\n\n    /**\n     * @dev Internal setter for the voting period.\n     *\n     * Emits a {VotingPeriodSet} event.\n     */\n    function _setVotingPeriod(uint256 newVotingPeriod) internal virtual {\n        // voting period must be at least one block long\n        require(newVotingPeriod > 0, \"GovernorSettings: voting period too low\");\n        emit VotingPeriodSet(_votingPeriod, newVotingPeriod);\n        _votingPeriod = newVotingPeriod;\n    }\n\n    /**\n     * @dev Internal setter for the proposal threshold.\n     *\n     * Emits a {ProposalThresholdSet} event.\n     */\n    function _setProposalThreshold(uint256 newProposalThreshold) internal virtual {\n        emit ProposalThresholdSet(_proposalThreshold, newProposalThreshold);\n        _proposalThreshold = newProposalThreshold;\n    }\n}\n"},"@openzeppelin/contracts/governance/extensions/GovernorVotes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (governance/extensions/GovernorVotes.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Governor.sol\";\nimport \"../utils/IVotes.sol\";\n\n/**\n * @dev Extension of {Governor} for voting weight extraction from an {ERC20Votes} token, or since v4.5 an {ERC721Votes} token.\n *\n * _Available since v4.3._\n */\nabstract contract GovernorVotes is Governor {\n    IVotes public immutable token;\n\n    constructor(IVotes tokenAddress) {\n        token = tokenAddress;\n    }\n\n    /**\n     * Read the voting weight from the token's built in snapshot mechanism (see {Governor-_getVotes}).\n     */\n    function _getVotes(\n        address account,\n        uint256 blockNumber,\n        bytes memory /*params*/\n    ) internal view virtual override returns (uint256) {\n        return token.getPastVotes(account, blockNumber);\n    }\n}\n"},"@openzeppelin/contracts/governance/extensions/GovernorVotesQuorumFraction.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (governance/extensions/GovernorVotesQuorumFraction.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./GovernorVotes.sol\";\nimport \"../../utils/Checkpoints.sol\";\nimport \"../../utils/math/SafeCast.sol\";\n\n/**\n * @dev Extension of {Governor} for voting weight extraction from an {ERC20Votes} token and a quorum expressed as a\n * fraction of the total supply.\n *\n * _Available since v4.3._\n */\nabstract contract GovernorVotesQuorumFraction is GovernorVotes {\n    using Checkpoints for Checkpoints.History;\n\n    uint256 private _quorumNumerator; // DEPRECATED\n    Checkpoints.History private _quorumNumeratorHistory;\n\n    event QuorumNumeratorUpdated(uint256 oldQuorumNumerator, uint256 newQuorumNumerator);\n\n    /**\n     * @dev Initialize quorum as a fraction of the token's total supply.\n     *\n     * The fraction is specified as `numerator / denominator`. By default the denominator is 100, so quorum is\n     * specified as a percent: a numerator of 10 corresponds to quorum being 10% of total supply. The denominator can be\n     * customized by overriding {quorumDenominator}.\n     */\n    constructor(uint256 quorumNumeratorValue) {\n        _updateQuorumNumerator(quorumNumeratorValue);\n    }\n\n    /**\n     * @dev Returns the current quorum numerator. See {quorumDenominator}.\n     */\n    function quorumNumerator() public view virtual returns (uint256) {\n        return _quorumNumeratorHistory._checkpoints.length == 0 ? _quorumNumerator : _quorumNumeratorHistory.latest();\n    }\n\n    /**\n     * @dev Returns the quorum numerator at a specific block number. See {quorumDenominator}.\n     */\n    function quorumNumerator(uint256 blockNumber) public view virtual returns (uint256) {\n        // If history is empty, fallback to old storage\n        uint256 length = _quorumNumeratorHistory._checkpoints.length;\n        if (length == 0) {\n            return _quorumNumerator;\n        }\n\n        // Optimistic search, check the latest checkpoint\n        Checkpoints.Checkpoint memory latest = _quorumNumeratorHistory._checkpoints[length - 1];\n        if (latest._blockNumber <= blockNumber) {\n            return latest._value;\n        }\n\n        // Otherwise, do the binary search\n        return _quorumNumeratorHistory.getAtBlock(blockNumber);\n    }\n\n    /**\n     * @dev Returns the quorum denominator. Defaults to 100, but may be overridden.\n     */\n    function quorumDenominator() public view virtual returns (uint256) {\n        return 100;\n    }\n\n    /**\n     * @dev Returns the quorum for a block number, in terms of number of votes: `supply * numerator / denominator`.\n     */\n    function quorum(uint256 blockNumber) public view virtual override returns (uint256) {\n        return (token.getPastTotalSupply(blockNumber) * quorumNumerator(blockNumber)) / quorumDenominator();\n    }\n\n    /**\n     * @dev Changes the quorum numerator.\n     *\n     * Emits a {QuorumNumeratorUpdated} event.\n     *\n     * Requirements:\n     *\n     * - Must be called through a governance proposal.\n     * - New numerator must be smaller or equal to the denominator.\n     */\n    function updateQuorumNumerator(uint256 newQuorumNumerator) external virtual onlyGovernance {\n        _updateQuorumNumerator(newQuorumNumerator);\n    }\n\n    /**\n     * @dev Changes the quorum numerator.\n     *\n     * Emits a {QuorumNumeratorUpdated} event.\n     *\n     * Requirements:\n     *\n     * - New numerator must be smaller or equal to the denominator.\n     */\n    function _updateQuorumNumerator(uint256 newQuorumNumerator) internal virtual {\n        require(\n            newQuorumNumerator <= quorumDenominator(),\n            \"GovernorVotesQuorumFraction: quorumNumerator over quorumDenominator\"\n        );\n\n        uint256 oldQuorumNumerator = quorumNumerator();\n\n        // Make sure we keep track of the original numerator in contracts upgraded from a version without checkpoints.\n        if (oldQuorumNumerator != 0 && _quorumNumeratorHistory._checkpoints.length == 0) {\n            _quorumNumeratorHistory._checkpoints.push(\n                Checkpoints.Checkpoint({_blockNumber: 0, _value: SafeCast.toUint224(oldQuorumNumerator)})\n            );\n        }\n\n        // Set new quorum for future proposals\n        _quorumNumeratorHistory.push(newQuorumNumerator);\n\n        emit QuorumNumeratorUpdated(oldQuorumNumerator, newQuorumNumerator);\n    }\n}\n"},"@openzeppelin/contracts/governance/Governor.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (governance/Governor.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../token/ERC721/IERC721Receiver.sol\";\nimport \"../token/ERC1155/IERC1155Receiver.sol\";\nimport \"../utils/cryptography/ECDSA.sol\";\nimport \"../utils/cryptography/EIP712.sol\";\nimport \"../utils/introspection/ERC165.sol\";\nimport \"../utils/math/SafeCast.sol\";\nimport \"../utils/structs/DoubleEndedQueue.sol\";\nimport \"../utils/Address.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Timers.sol\";\nimport \"./IGovernor.sol\";\n\n/**\n * @dev Core of the governance system, designed to be extended though various modules.\n *\n * This contract is abstract and requires several function to be implemented in various modules:\n *\n * - A counting module must implement {quorum}, {_quorumReached}, {_voteSucceeded} and {_countVote}\n * - A voting module must implement {_getVotes}\n * - Additionanly, the {votingPeriod} must also be implemented\n *\n * _Available since v4.3._\n */\nabstract contract Governor is Context, ERC165, EIP712, IGovernor, IERC721Receiver, IERC1155Receiver {\n    using DoubleEndedQueue for DoubleEndedQueue.Bytes32Deque;\n    using SafeCast for uint256;\n    using Timers for Timers.BlockNumber;\n\n    bytes32 public constant BALLOT_TYPEHASH = keccak256(\"Ballot(uint256 proposalId,uint8 support)\");\n    bytes32 public constant EXTENDED_BALLOT_TYPEHASH =\n        keccak256(\"ExtendedBallot(uint256 proposalId,uint8 support,string reason,bytes params)\");\n\n    struct ProposalCore {\n        Timers.BlockNumber voteStart;\n        Timers.BlockNumber voteEnd;\n        bool executed;\n        bool canceled;\n    }\n\n    string private _name;\n\n    mapping(uint256 => ProposalCore) private _proposals;\n\n    // This queue keeps track of the governor operating on itself. Calls to functions protected by the\n    // {onlyGovernance} modifier needs to be whitelisted in this queue. Whitelisting is set in {_beforeExecute},\n    // consumed by the {onlyGovernance} modifier and eventually reset in {_afterExecute}. This ensures that the\n    // execution of {onlyGovernance} protected calls can only be achieved through successful proposals.\n    DoubleEndedQueue.Bytes32Deque private _governanceCall;\n\n    /**\n     * @dev Restricts a function so it can only be executed through governance proposals. For example, governance\n     * parameter setters in {GovernorSettings} are protected using this modifier.\n     *\n     * The governance executing address may be different from the Governor's own address, for example it could be a\n     * timelock. This can be customized by modules by overriding {_executor}. The executor is only able to invoke these\n     * functions during the execution of the governor's {execute} function, and not under any other circumstances. Thus,\n     * for example, additional timelock proposers are not able to change governance parameters without going through the\n     * governance protocol (since v4.6).\n     */\n    modifier onlyGovernance() {\n        require(_msgSender() == _executor(), \"Governor: onlyGovernance\");\n        if (_executor() != address(this)) {\n            bytes32 msgDataHash = keccak256(_msgData());\n            // loop until popping the expected operation - throw if deque is empty (operation not authorized)\n            while (_governanceCall.popFront() != msgDataHash) {}\n        }\n        _;\n    }\n\n    /**\n     * @dev Sets the value for {name} and {version}\n     */\n    constructor(string memory name_) EIP712(name_, version()) {\n        _name = name_;\n    }\n\n    /**\n     * @dev Function to receive ETH that will be handled by the governor (disabled if executor is a third party contract)\n     */\n    receive() external payable virtual {\n        require(_executor() == address(this));\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC165) returns (bool) {\n        // In addition to the current interfaceId, also support previous version of the interfaceId that did not\n        // include the castVoteWithReasonAndParams() function as standard\n        return\n            interfaceId ==\n            (type(IGovernor).interfaceId ^\n                this.castVoteWithReasonAndParams.selector ^\n                this.castVoteWithReasonAndParamsBySig.selector ^\n                this.getVotesWithParams.selector) ||\n            interfaceId == type(IGovernor).interfaceId ||\n            interfaceId == type(IERC1155Receiver).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IGovernor-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IGovernor-version}.\n     */\n    function version() public view virtual override returns (string memory) {\n        return \"1\";\n    }\n\n    /**\n     * @dev See {IGovernor-hashProposal}.\n     *\n     * The proposal id is produced by hashing the ABI encoded `targets` array, the `values` array, the `calldatas` array\n     * and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id\n     * can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in\n     * advance, before the proposal is submitted.\n     *\n     * Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the\n     * same proposal (with same operation and same description) will have the same id if submitted on multiple governors\n     * across multiple networks. This also means that in order to execute the same operation twice (on the same\n     * governor) the proposer will have to change the description in order to avoid proposal id conflicts.\n     */\n    function hashProposal(\n        address[] memory targets,\n        uint256[] memory values,\n        bytes[] memory calldatas,\n        bytes32 descriptionHash\n    ) public pure virtual override returns (uint256) {\n        return uint256(keccak256(abi.encode(targets, values, calldatas, descriptionHash)));\n    }\n\n    /**\n     * @dev See {IGovernor-state}.\n     */\n    function state(uint256 proposalId) public view virtual override returns (ProposalState) {\n        ProposalCore storage proposal = _proposals[proposalId];\n\n        if (proposal.executed) {\n            return ProposalState.Executed;\n        }\n\n        if (proposal.canceled) {\n            return ProposalState.Canceled;\n        }\n\n        uint256 snapshot = proposalSnapshot(proposalId);\n\n        if (snapshot == 0) {\n            revert(\"Governor: unknown proposal id\");\n        }\n\n        if (snapshot >= block.number) {\n            return ProposalState.Pending;\n        }\n\n        uint256 deadline = proposalDeadline(proposalId);\n\n        if (deadline >= block.number) {\n            return ProposalState.Active;\n        }\n\n        if (_quorumReached(proposalId) && _voteSucceeded(proposalId)) {\n            return ProposalState.Succeeded;\n        } else {\n            return ProposalState.Defeated;\n        }\n    }\n\n    /**\n     * @dev See {IGovernor-proposalSnapshot}.\n     */\n    function proposalSnapshot(uint256 proposalId) public view virtual override returns (uint256) {\n        return _proposals[proposalId].voteStart.getDeadline();\n    }\n\n    /**\n     * @dev See {IGovernor-proposalDeadline}.\n     */\n    function proposalDeadline(uint256 proposalId) public view virtual override returns (uint256) {\n        return _proposals[proposalId].voteEnd.getDeadline();\n    }\n\n    /**\n     * @dev Part of the Governor Bravo's interface: _\"The number of votes required in order for a voter to become a proposer\"_.\n     */\n    function proposalThreshold() public view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev Amount of votes already cast passes the threshold limit.\n     */\n    function _quorumReached(uint256 proposalId) internal view virtual returns (bool);\n\n    /**\n     * @dev Is the proposal successful or not.\n     */\n    function _voteSucceeded(uint256 proposalId) internal view virtual returns (bool);\n\n    /**\n     * @dev Get the voting weight of `account` at a specific `blockNumber`, for a vote as described by `params`.\n     */\n    function _getVotes(\n        address account,\n        uint256 blockNumber,\n        bytes memory params\n    ) internal view virtual returns (uint256);\n\n    /**\n     * @dev Register a vote for `proposalId` by `account` with a given `support`, voting `weight` and voting `params`.\n     *\n     * Note: Support is generic and can represent various things depending on the voting system used.\n     */\n    function _countVote(\n        uint256 proposalId,\n        address account,\n        uint8 support,\n        uint256 weight,\n        bytes memory params\n    ) internal virtual;\n\n    /**\n     * @dev Default additional encoded parameters used by castVote methods that don't include them\n     *\n     * Note: Should be overridden by specific implementations to use an appropriate value, the\n     * meaning of the additional params, in the context of that implementation\n     */\n    function _defaultParams() internal view virtual returns (bytes memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IGovernor-propose}.\n     */\n    function propose(\n        address[] memory targets,\n        uint256[] memory values,\n        bytes[] memory calldatas,\n        string memory description\n    ) public virtual override returns (uint256) {\n        require(\n            getVotes(_msgSender(), block.number - 1) >= proposalThreshold(),\n            \"Governor: proposer votes below proposal threshold\"\n        );\n\n        uint256 proposalId = hashProposal(targets, values, calldatas, keccak256(bytes(description)));\n\n        require(targets.length == values.length, \"Governor: invalid proposal length\");\n        require(targets.length == calldatas.length, \"Governor: invalid proposal length\");\n        require(targets.length > 0, \"Governor: empty proposal\");\n\n        ProposalCore storage proposal = _proposals[proposalId];\n        require(proposal.voteStart.isUnset(), \"Governor: proposal already exists\");\n\n        uint64 snapshot = block.number.toUint64() + votingDelay().toUint64();\n        uint64 deadline = snapshot + votingPeriod().toUint64();\n\n        proposal.voteStart.setDeadline(snapshot);\n        proposal.voteEnd.setDeadline(deadline);\n\n        emit ProposalCreated(\n            proposalId,\n            _msgSender(),\n            targets,\n            values,\n            new string[](targets.length),\n            calldatas,\n            snapshot,\n            deadline,\n            description\n        );\n\n        return proposalId;\n    }\n\n    /**\n     * @dev See {IGovernor-execute}.\n     */\n    function execute(\n        address[] memory targets,\n        uint256[] memory values,\n        bytes[] memory calldatas,\n        bytes32 descriptionHash\n    ) public payable virtual override returns (uint256) {\n        uint256 proposalId = hashProposal(targets, values, calldatas, descriptionHash);\n\n        ProposalState status = state(proposalId);\n        require(\n            status == ProposalState.Succeeded || status == ProposalState.Queued,\n            \"Governor: proposal not successful\"\n        );\n        _proposals[proposalId].executed = true;\n\n        emit ProposalExecuted(proposalId);\n\n        _beforeExecute(proposalId, targets, values, calldatas, descriptionHash);\n        _execute(proposalId, targets, values, calldatas, descriptionHash);\n        _afterExecute(proposalId, targets, values, calldatas, descriptionHash);\n\n        return proposalId;\n    }\n\n    /**\n     * @dev Internal execution mechanism. Can be overridden to implement different execution mechanism\n     */\n    function _execute(\n        uint256, /* proposalId */\n        address[] memory targets,\n        uint256[] memory values,\n        bytes[] memory calldatas,\n        bytes32 /*descriptionHash*/\n    ) internal virtual {\n        string memory errorMessage = \"Governor: call reverted without message\";\n        for (uint256 i = 0; i < targets.length; ++i) {\n            (bool success, bytes memory returndata) = targets[i].call{value: values[i]}(calldatas[i]);\n            Address.verifyCallResult(success, returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Hook before execution is triggered.\n     */\n    function _beforeExecute(\n        uint256, /* proposalId */\n        address[] memory targets,\n        uint256[] memory, /* values */\n        bytes[] memory calldatas,\n        bytes32 /*descriptionHash*/\n    ) internal virtual {\n        if (_executor() != address(this)) {\n            for (uint256 i = 0; i < targets.length; ++i) {\n                if (targets[i] == address(this)) {\n                    _governanceCall.pushBack(keccak256(calldatas[i]));\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Hook after execution is triggered.\n     */\n    function _afterExecute(\n        uint256, /* proposalId */\n        address[] memory, /* targets */\n        uint256[] memory, /* values */\n        bytes[] memory, /* calldatas */\n        bytes32 /*descriptionHash*/\n    ) internal virtual {\n        if (_executor() != address(this)) {\n            if (!_governanceCall.empty()) {\n                _governanceCall.clear();\n            }\n        }\n    }\n\n    /**\n     * @dev Internal cancel mechanism: locks up the proposal timer, preventing it from being re-submitted. Marks it as\n     * canceled to allow distinguishing it from executed proposals.\n     *\n     * Emits a {IGovernor-ProposalCanceled} event.\n     */\n    function _cancel(\n        address[] memory targets,\n        uint256[] memory values,\n        bytes[] memory calldatas,\n        bytes32 descriptionHash\n    ) internal virtual returns (uint256) {\n        uint256 proposalId = hashProposal(targets, values, calldatas, descriptionHash);\n        ProposalState status = state(proposalId);\n\n        require(\n            status != ProposalState.Canceled && status != ProposalState.Expired && status != ProposalState.Executed,\n            \"Governor: proposal not active\"\n        );\n        _proposals[proposalId].canceled = true;\n\n        emit ProposalCanceled(proposalId);\n\n        return proposalId;\n    }\n\n    /**\n     * @dev See {IGovernor-getVotes}.\n     */\n    function getVotes(address account, uint256 blockNumber) public view virtual override returns (uint256) {\n        return _getVotes(account, blockNumber, _defaultParams());\n    }\n\n    /**\n     * @dev See {IGovernor-getVotesWithParams}.\n     */\n    function getVotesWithParams(\n        address account,\n        uint256 blockNumber,\n        bytes memory params\n    ) public view virtual override returns (uint256) {\n        return _getVotes(account, blockNumber, params);\n    }\n\n    /**\n     * @dev See {IGovernor-castVote}.\n     */\n    function castVote(uint256 proposalId, uint8 support) public virtual override returns (uint256) {\n        address voter = _msgSender();\n        return _castVote(proposalId, voter, support, \"\");\n    }\n\n    /**\n     * @dev See {IGovernor-castVoteWithReason}.\n     */\n    function castVoteWithReason(\n        uint256 proposalId,\n        uint8 support,\n        string calldata reason\n    ) public virtual override returns (uint256) {\n        address voter = _msgSender();\n        return _castVote(proposalId, voter, support, reason);\n    }\n\n    /**\n     * @dev See {IGovernor-castVoteWithReasonAndParams}.\n     */\n    function castVoteWithReasonAndParams(\n        uint256 proposalId,\n        uint8 support,\n        string calldata reason,\n        bytes memory params\n    ) public virtual override returns (uint256) {\n        address voter = _msgSender();\n        return _castVote(proposalId, voter, support, reason, params);\n    }\n\n    /**\n     * @dev See {IGovernor-castVoteBySig}.\n     */\n    function castVoteBySig(\n        uint256 proposalId,\n        uint8 support,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override returns (uint256) {\n        address voter = ECDSA.recover(\n            _hashTypedDataV4(keccak256(abi.encode(BALLOT_TYPEHASH, proposalId, support))),\n            v,\n            r,\n            s\n        );\n        return _castVote(proposalId, voter, support, \"\");\n    }\n\n    /**\n     * @dev See {IGovernor-castVoteWithReasonAndParamsBySig}.\n     */\n    function castVoteWithReasonAndParamsBySig(\n        uint256 proposalId,\n        uint8 support,\n        string calldata reason,\n        bytes memory params,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override returns (uint256) {\n        address voter = ECDSA.recover(\n            _hashTypedDataV4(\n                keccak256(\n                    abi.encode(\n                        EXTENDED_BALLOT_TYPEHASH,\n                        proposalId,\n                        support,\n                        keccak256(bytes(reason)),\n                        keccak256(params)\n                    )\n                )\n            ),\n            v,\n            r,\n            s\n        );\n\n        return _castVote(proposalId, voter, support, reason, params);\n    }\n\n    /**\n     * @dev Internal vote casting mechanism: Check that the vote is pending, that it has not been cast yet, retrieve\n     * voting weight using {IGovernor-getVotes} and call the {_countVote} internal function. Uses the _defaultParams().\n     *\n     * Emits a {IGovernor-VoteCast} event.\n     */\n    function _castVote(\n        uint256 proposalId,\n        address account,\n        uint8 support,\n        string memory reason\n    ) internal virtual returns (uint256) {\n        return _castVote(proposalId, account, support, reason, _defaultParams());\n    }\n\n    /**\n     * @dev Internal vote casting mechanism: Check that the vote is pending, that it has not been cast yet, retrieve\n     * voting weight using {IGovernor-getVotes} and call the {_countVote} internal function.\n     *\n     * Emits a {IGovernor-VoteCast} event.\n     */\n    function _castVote(\n        uint256 proposalId,\n        address account,\n        uint8 support,\n        string memory reason,\n        bytes memory params\n    ) internal virtual returns (uint256) {\n        ProposalCore storage proposal = _proposals[proposalId];\n        require(state(proposalId) == ProposalState.Active, \"Governor: vote not currently active\");\n\n        uint256 weight = _getVotes(account, proposal.voteStart.getDeadline(), params);\n        _countVote(proposalId, account, support, weight, params);\n\n        if (params.length == 0) {\n            emit VoteCast(account, proposalId, support, weight, reason);\n        } else {\n            emit VoteCastWithParams(account, proposalId, support, weight, reason, params);\n        }\n\n        return weight;\n    }\n\n    /**\n     * @dev Relays a transaction or function call to an arbitrary target. In cases where the governance executor\n     * is some contract other than the governor itself, like when using a timelock, this function can be invoked\n     * in a governance proposal to recover tokens or Ether that was sent to the governor contract by mistake.\n     * Note that if the executor is simply the governor itself, use of `relay` is redundant.\n     */\n    function relay(\n        address target,\n        uint256 value,\n        bytes calldata data\n    ) external payable virtual onlyGovernance {\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        Address.verifyCallResult(success, returndata, \"Governor: relay reverted without message\");\n    }\n\n    /**\n     * @dev Address through which the governor executes action. Will be overloaded by module that execute actions\n     * through another contract such as a timelock.\n     */\n    function _executor() internal view virtual returns (address) {\n        return address(this);\n    }\n\n    /**\n     * @dev See {IERC721Receiver-onERC721Received}.\n     */\n    function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n\n    /**\n     * @dev See {IERC1155Receiver-onERC1155Received}.\n     */\n    function onERC1155Received(\n        address,\n        address,\n        uint256,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155Received.selector;\n    }\n\n    /**\n     * @dev See {IERC1155Receiver-onERC1155BatchReceived}.\n     */\n    function onERC1155BatchReceived(\n        address,\n        address,\n        uint256[] memory,\n        uint256[] memory,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155BatchReceived.selector;\n    }\n}\n"},"@openzeppelin/contracts/governance/IGovernor.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (governance/IGovernor.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Interface of the {Governor} core.\n *\n * _Available since v4.3._\n */\nabstract contract IGovernor is IERC165 {\n    enum ProposalState {\n        Pending,\n        Active,\n        Canceled,\n        Defeated,\n        Succeeded,\n        Queued,\n        Expired,\n        Executed\n    }\n\n    /**\n     * @dev Emitted when a proposal is created.\n     */\n    event ProposalCreated(\n        uint256 proposalId,\n        address proposer,\n        address[] targets,\n        uint256[] values,\n        string[] signatures,\n        bytes[] calldatas,\n        uint256 startBlock,\n        uint256 endBlock,\n        string description\n    );\n\n    /**\n     * @dev Emitted when a proposal is canceled.\n     */\n    event ProposalCanceled(uint256 proposalId);\n\n    /**\n     * @dev Emitted when a proposal is executed.\n     */\n    event ProposalExecuted(uint256 proposalId);\n\n    /**\n     * @dev Emitted when a vote is cast without params.\n     *\n     * Note: `support` values should be seen as buckets. Their interpretation depends on the voting module used.\n     */\n    event VoteCast(address indexed voter, uint256 proposalId, uint8 support, uint256 weight, string reason);\n\n    /**\n     * @dev Emitted when a vote is cast with params.\n     *\n     * Note: `support` values should be seen as buckets. Their interpretation depends on the voting module used.\n     * `params` are additional encoded parameters. Their intepepretation also depends on the voting module used.\n     */\n    event VoteCastWithParams(\n        address indexed voter,\n        uint256 proposalId,\n        uint8 support,\n        uint256 weight,\n        string reason,\n        bytes params\n    );\n\n    /**\n     * @notice module:core\n     * @dev Name of the governor instance (used in building the ERC712 domain separator).\n     */\n    function name() public view virtual returns (string memory);\n\n    /**\n     * @notice module:core\n     * @dev Version of the governor instance (used in building the ERC712 domain separator). Default: \"1\"\n     */\n    function version() public view virtual returns (string memory);\n\n    /**\n     * @notice module:voting\n     * @dev A description of the possible `support` values for {castVote} and the way these votes are counted, meant to\n     * be consumed by UIs to show correct vote options and interpret the results. The string is a URL-encoded sequence of\n     * key-value pairs that each describe one aspect, for example `support=bravo&quorum=for,abstain`.\n     *\n     * There are 2 standard keys: `support` and `quorum`.\n     *\n     * - `support=bravo` refers to the vote options 0 = Against, 1 = For, 2 = Abstain, as in `GovernorBravo`.\n     * - `quorum=bravo` means that only For votes are counted towards quorum.\n     * - `quorum=for,abstain` means that both For and Abstain votes are counted towards quorum.\n     *\n     * If a counting module makes use of encoded `params`, it should  include this under a `params` key with a unique\n     * name that describes the behavior. For example:\n     *\n     * - `params=fractional` might refer to a scheme where votes are divided fractionally between for/against/abstain.\n     * - `params=erc721` might refer to a scheme where specific NFTs are delegated to vote.\n     *\n     * NOTE: The string can be decoded by the standard\n     * https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams[`URLSearchParams`]\n     * JavaScript class.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function COUNTING_MODE() public pure virtual returns (string memory);\n\n    /**\n     * @notice module:core\n     * @dev Hashing function used to (re)build the proposal id from the proposal details..\n     */\n    function hashProposal(\n        address[] memory targets,\n        uint256[] memory values,\n        bytes[] memory calldatas,\n        bytes32 descriptionHash\n    ) public pure virtual returns (uint256);\n\n    /**\n     * @notice module:core\n     * @dev Current state of a proposal, following Compound's convention\n     */\n    function state(uint256 proposalId) public view virtual returns (ProposalState);\n\n    /**\n     * @notice module:core\n     * @dev Block number used to retrieve user's votes and quorum. As per Compound's Comp and OpenZeppelin's\n     * ERC20Votes, the snapshot is performed at the end of this block. Hence, voting for this proposal starts at the\n     * beginning of the following block.\n     */\n    function proposalSnapshot(uint256 proposalId) public view virtual returns (uint256);\n\n    /**\n     * @notice module:core\n     * @dev Block number at which votes close. Votes close at the end of this block, so it is possible to cast a vote\n     * during this block.\n     */\n    function proposalDeadline(uint256 proposalId) public view virtual returns (uint256);\n\n    /**\n     * @notice module:user-config\n     * @dev Delay, in number of block, between the proposal is created and the vote starts. This can be increassed to\n     * leave time for users to buy voting power, or delegate it, before the voting of a proposal starts.\n     */\n    function votingDelay() public view virtual returns (uint256);\n\n    /**\n     * @notice module:user-config\n     * @dev Delay, in number of blocks, between the vote start and vote ends.\n     *\n     * NOTE: The {votingDelay} can delay the start of the vote. This must be considered when setting the voting\n     * duration compared to the voting delay.\n     */\n    function votingPeriod() public view virtual returns (uint256);\n\n    /**\n     * @notice module:user-config\n     * @dev Minimum number of cast voted required for a proposal to be successful.\n     *\n     * Note: The `blockNumber` parameter corresponds to the snapshot used for counting vote. This allows to scale the\n     * quorum depending on values such as the totalSupply of a token at this block (see {ERC20Votes}).\n     */\n    function quorum(uint256 blockNumber) public view virtual returns (uint256);\n\n    /**\n     * @notice module:reputation\n     * @dev Voting power of an `account` at a specific `blockNumber`.\n     *\n     * Note: this can be implemented in a number of ways, for example by reading the delegated balance from one (or\n     * multiple), {ERC20Votes} tokens.\n     */\n    function getVotes(address account, uint256 blockNumber) public view virtual returns (uint256);\n\n    /**\n     * @notice module:reputation\n     * @dev Voting power of an `account` at a specific `blockNumber` given additional encoded parameters.\n     */\n    function getVotesWithParams(\n        address account,\n        uint256 blockNumber,\n        bytes memory params\n    ) public view virtual returns (uint256);\n\n    /**\n     * @notice module:voting\n     * @dev Returns whether `account` has cast a vote on `proposalId`.\n     */\n    function hasVoted(uint256 proposalId, address account) public view virtual returns (bool);\n\n    /**\n     * @dev Create a new proposal. Vote start {IGovernor-votingDelay} blocks after the proposal is created and ends\n     * {IGovernor-votingPeriod} blocks after the voting starts.\n     *\n     * Emits a {ProposalCreated} event.\n     */\n    function propose(\n        address[] memory targets,\n        uint256[] memory values,\n        bytes[] memory calldatas,\n        string memory description\n    ) public virtual returns (uint256 proposalId);\n\n    /**\n     * @dev Execute a successful proposal. This requires the quorum to be reached, the vote to be successful, and the\n     * deadline to be reached.\n     *\n     * Emits a {ProposalExecuted} event.\n     *\n     * Note: some module can modify the requirements for execution, for example by adding an additional timelock.\n     */\n    function execute(\n        address[] memory targets,\n        uint256[] memory values,\n        bytes[] memory calldatas,\n        bytes32 descriptionHash\n    ) public payable virtual returns (uint256 proposalId);\n\n    /**\n     * @dev Cast a vote\n     *\n     * Emits a {VoteCast} event.\n     */\n    function castVote(uint256 proposalId, uint8 support) public virtual returns (uint256 balance);\n\n    /**\n     * @dev Cast a vote with a reason\n     *\n     * Emits a {VoteCast} event.\n     */\n    function castVoteWithReason(\n        uint256 proposalId,\n        uint8 support,\n        string calldata reason\n    ) public virtual returns (uint256 balance);\n\n    /**\n     * @dev Cast a vote with a reason and additional encoded parameters\n     *\n     * Emits a {VoteCast} or {VoteCastWithParams} event depending on the length of params.\n     */\n    function castVoteWithReasonAndParams(\n        uint256 proposalId,\n        uint8 support,\n        string calldata reason,\n        bytes memory params\n    ) public virtual returns (uint256 balance);\n\n    /**\n     * @dev Cast a vote using the user's cryptographic signature.\n     *\n     * Emits a {VoteCast} event.\n     */\n    function castVoteBySig(\n        uint256 proposalId,\n        uint8 support,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual returns (uint256 balance);\n\n    /**\n     * @dev Cast a vote with a reason and additional encoded parameters using the user's cryptographic signature.\n     *\n     * Emits a {VoteCast} or {VoteCastWithParams} event depending on the length of params.\n     */\n    function castVoteWithReasonAndParamsBySig(\n        uint256 proposalId,\n        uint8 support,\n        string calldata reason,\n        bytes memory params,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual returns (uint256 balance);\n}\n"},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (governance/utils/IVotes.sol)\npragma solidity ^0.8.0;\n\n/**\n * @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n *\n * _Available since v4.5._\n */\ninterface IVotes {\n    /**\n     * @dev Emitted when an account changes their delegate.\n     */\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /**\n     * @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\n     */\n    event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance);\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of votes that `account` had at the end of a past block (`blockNumber`).\n     */\n    function getPastVotes(address account, uint256 blockNumber) external view returns (uint256);\n\n    /**\n     * @dev Returns the total supply of votes available at the end of a past block (`blockNumber`).\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     */\n    function getPastTotalSupply(uint256 blockNumber) external view returns (uint256);\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) external view returns (address);\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) external;\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Checkpoints.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.1) (utils/Checkpoints.sol)\n// This file was procedurally generated from scripts/generate/templates/Checkpoints.js.\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SafeCast.sol\";\n\n/**\n * @dev This library defines the `History` struct, for checkpointing values as they change at different points in\n * time, and later looking up past values by block number. See {Votes} as an example.\n *\n * To create a history of checkpoints define a variable type `Checkpoints.History` in your contract, and store a new\n * checkpoint for the current transaction block using the {push} function.\n *\n * _Available since v4.5._\n */\nlibrary Checkpoints {\n    struct History {\n        Checkpoint[] _checkpoints;\n    }\n\n    struct Checkpoint {\n        uint32 _blockNumber;\n        uint224 _value;\n    }\n\n    /**\n     * @dev Returns the value at a given block number. If a checkpoint is not available at that block, the closest one\n     * before it is returned, or zero otherwise. Because the number returned corresponds to that at the end of the\n     * block, the requested block number must be in the past, excluding the current block.\n     */\n    function getAtBlock(History storage self, uint256 blockNumber) internal view returns (uint256) {\n        require(blockNumber < block.number, \"Checkpoints: block not yet mined\");\n        uint32 key = SafeCast.toUint32(blockNumber);\n\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value at a given block number. If a checkpoint is not available at that block, the closest one\n     * before it is returned, or zero otherwise. Similar to {upperLookup} but optimized for the case when the searched\n     * checkpoint is probably \"recent\", defined as being among the last sqrt(N) checkpoints where N is the number of\n     * checkpoints.\n     */\n    function getAtProbablyRecentBlock(History storage self, uint256 blockNumber) internal view returns (uint256) {\n        require(blockNumber < block.number, \"Checkpoints: block not yet mined\");\n        uint32 key = SafeCast.toUint32(blockNumber);\n\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._blockNumber) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Pushes a value onto a History so that it is stored as the checkpoint for the current block.\n     *\n     * Returns previous value and new value.\n     */\n    function push(History storage self, uint256 value) internal returns (uint256, uint256) {\n        return _insert(self._checkpoints, SafeCast.toUint32(block.number), SafeCast.toUint224(value));\n    }\n\n    /**\n     * @dev Pushes a value onto a History, by updating the latest value using binary operation `op`. The new value will\n     * be set to `op(latest, delta)`.\n     *\n     * Returns previous value and new value.\n     */\n    function push(\n        History storage self,\n        function(uint256, uint256) view returns (uint256) op,\n        uint256 delta\n    ) internal returns (uint256, uint256) {\n        return push(self, op(latest(self), delta));\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(History storage self) internal view returns (uint224) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(History storage self)\n        internal\n        view\n        returns (\n            bool exists,\n            uint32 _blockNumber,\n            uint224 _value\n        )\n    {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint memory ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._blockNumber, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(History storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(\n        Checkpoint[] storage self,\n        uint32 key,\n        uint224 value\n    ) private returns (uint224, uint224) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            // Copying to memory is important here.\n            Checkpoint memory last = _unsafeAccess(self, pos - 1);\n\n            // Checkpoints keys must be increasing.\n            require(last._blockNumber <= key, \"Checkpoint: invalid key\");\n\n            // Update or push new checkpoint\n            if (last._blockNumber == key) {\n                _unsafeAccess(self, pos - 1)._value = value;\n            } else {\n                self.push(Checkpoint({_blockNumber: key, _value: value}));\n            }\n            return (last._value, value);\n        } else {\n            self.push(Checkpoint({_blockNumber: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the oldest checkpoint whose key is greater than the search key, or `high` if there is none.\n     * `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._blockNumber > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the oldest checkpoint whose key is greater or equal than the search key, or `high` if there is none.\n     * `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._blockNumber < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(Checkpoint[] storage self, uint256 pos) private pure returns (Checkpoint storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n\n    struct Trace224 {\n        Checkpoint224[] _checkpoints;\n    }\n\n    struct Checkpoint224 {\n        uint32 _key;\n        uint224 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace224 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     */\n    function push(\n        Trace224 storage self,\n        uint32 key,\n        uint224 value\n    ) internal returns (uint224, uint224) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the oldest checkpoint with key greater or equal than the search key, or zero if there is none.\n     */\n    function lowerLookup(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint with key lower or equal than the search key.\n     */\n    function upperLookup(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace224 storage self) internal view returns (uint224) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace224 storage self)\n        internal\n        view\n        returns (\n            bool exists,\n            uint32 _key,\n            uint224 _value\n        )\n    {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint224 memory ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(Trace224 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint224 value\n    ) private returns (uint224, uint224) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            // Copying to memory is important here.\n            Checkpoint224 memory last = _unsafeAccess(self, pos - 1);\n\n            // Checkpoints keys must be increasing.\n            require(last._key <= key, \"Checkpoint: invalid key\");\n\n            // Update or push new checkpoint\n            if (last._key == key) {\n                _unsafeAccess(self, pos - 1)._value = value;\n            } else {\n                self.push(Checkpoint224({_key: key, _value: value}));\n            }\n            return (last._value, value);\n        } else {\n            self.push(Checkpoint224({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the oldest checkpoint whose key is greater than the search key, or `high` if there is none.\n     * `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the oldest checkpoint whose key is greater or equal than the search key, or `high` if there is none.\n     * `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(Checkpoint224[] storage self, uint256 pos)\n        private\n        pure\n        returns (Checkpoint224 storage result)\n    {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n\n    struct Trace160 {\n        Checkpoint160[] _checkpoints;\n    }\n\n    struct Checkpoint160 {\n        uint96 _key;\n        uint160 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace160 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     */\n    function push(\n        Trace160 storage self,\n        uint96 key,\n        uint160 value\n    ) internal returns (uint160, uint160) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the oldest checkpoint with key greater or equal than the search key, or zero if there is none.\n     */\n    function lowerLookup(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint with key lower or equal than the search key.\n     */\n    function upperLookup(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace160 storage self) internal view returns (uint160) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace160 storage self)\n        internal\n        view\n        returns (\n            bool exists,\n            uint96 _key,\n            uint160 _value\n        )\n    {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint160 memory ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(Trace160 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint160 value\n    ) private returns (uint160, uint160) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            // Copying to memory is important here.\n            Checkpoint160 memory last = _unsafeAccess(self, pos - 1);\n\n            // Checkpoints keys must be increasing.\n            require(last._key <= key, \"Checkpoint: invalid key\");\n\n            // Update or push new checkpoint\n            if (last._key == key) {\n                _unsafeAccess(self, pos - 1)._value = value;\n            } else {\n                self.push(Checkpoint160({_key: key, _value: value}));\n            }\n            return (last._value, value);\n        } else {\n            self.push(Checkpoint160({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the oldest checkpoint whose key is greater than the search key, or `high` if there is none.\n     * `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the oldest checkpoint whose key is greater or equal than the search key, or `high` if there is none.\n     * `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(Checkpoint160[] storage self, uint256 pos)\n        private\n        pure\n        returns (Checkpoint160 storage result)\n    {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ECDSA.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * _Available since v3.4._\n */\nabstract contract EIP712 {\n    /* solhint-disable var-name-mixedcase */\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _CACHED_DOMAIN_SEPARATOR;\n    uint256 private immutable _CACHED_CHAIN_ID;\n    address private immutable _CACHED_THIS;\n\n    bytes32 private immutable _HASHED_NAME;\n    bytes32 private immutable _HASHED_VERSION;\n    bytes32 private immutable _TYPE_HASH;\n\n    /* solhint-enable var-name-mixedcase */\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        bytes32 hashedName = keccak256(bytes(name));\n        bytes32 hashedVersion = keccak256(bytes(version));\n        bytes32 typeHash = keccak256(\n            \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"\n        );\n        _HASHED_NAME = hashedName;\n        _HASHED_VERSION = hashedVersion;\n        _CACHED_CHAIN_ID = block.chainid;\n        _CACHED_DOMAIN_SEPARATOR = _buildDomainSeparator(typeHash, hashedName, hashedVersion);\n        _CACHED_THIS = address(this);\n        _TYPE_HASH = typeHash;\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _CACHED_THIS && block.chainid == _CACHED_CHAIN_ID) {\n            return _CACHED_DOMAIN_SEPARATOR;\n        } else {\n            return _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME, _HASHED_VERSION);\n        }\n    }\n\n    function _buildDomainSeparator(\n        bytes32 typeHash,\n        bytes32 nameHash,\n        bytes32 versionHash\n    ) private view returns (bytes32) {\n        return keccak256(abi.encode(typeHash, nameHash, versionHash, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n * all math on `uint256` and `int256` and then downcasting.\n */\nlibrary SafeCast {\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        require(value <= type(uint248).max, \"SafeCast: value doesn't fit in 248 bits\");\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        require(value <= type(uint240).max, \"SafeCast: value doesn't fit in 240 bits\");\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        require(value <= type(uint232).max, \"SafeCast: value doesn't fit in 232 bits\");\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        require(value <= type(uint224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        require(value <= type(uint216).max, \"SafeCast: value doesn't fit in 216 bits\");\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        require(value <= type(uint208).max, \"SafeCast: value doesn't fit in 208 bits\");\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        require(value <= type(uint200).max, \"SafeCast: value doesn't fit in 200 bits\");\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        require(value <= type(uint192).max, \"SafeCast: value doesn't fit in 192 bits\");\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        require(value <= type(uint184).max, \"SafeCast: value doesn't fit in 184 bits\");\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        require(value <= type(uint176).max, \"SafeCast: value doesn't fit in 176 bits\");\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        require(value <= type(uint168).max, \"SafeCast: value doesn't fit in 168 bits\");\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        require(value <= type(uint160).max, \"SafeCast: value doesn't fit in 160 bits\");\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        require(value <= type(uint152).max, \"SafeCast: value doesn't fit in 152 bits\");\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        require(value <= type(uint144).max, \"SafeCast: value doesn't fit in 144 bits\");\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        require(value <= type(uint136).max, \"SafeCast: value doesn't fit in 136 bits\");\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        require(value <= type(uint128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        require(value <= type(uint120).max, \"SafeCast: value doesn't fit in 120 bits\");\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        require(value <= type(uint112).max, \"SafeCast: value doesn't fit in 112 bits\");\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        require(value <= type(uint104).max, \"SafeCast: value doesn't fit in 104 bits\");\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        require(value <= type(uint96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        require(value <= type(uint88).max, \"SafeCast: value doesn't fit in 88 bits\");\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        require(value <= type(uint80).max, \"SafeCast: value doesn't fit in 80 bits\");\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        require(value <= type(uint72).max, \"SafeCast: value doesn't fit in 72 bits\");\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        require(value <= type(uint64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        require(value <= type(uint56).max, \"SafeCast: value doesn't fit in 56 bits\");\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        require(value <= type(uint48).max, \"SafeCast: value doesn't fit in 48 bits\");\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        require(value <= type(uint40).max, \"SafeCast: value doesn't fit in 40 bits\");\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        require(value <= type(uint32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        require(value <= type(uint24).max, \"SafeCast: value doesn't fit in 24 bits\");\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        require(value <= type(uint16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        require(value <= type(uint8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     *\n     * _Available since v3.0._\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        require(value >= 0, \"SafeCast: value must be positive\");\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 248 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 240 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 232 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 224 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 216 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 208 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 200 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 192 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 184 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 176 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 168 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 160 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 152 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 144 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 136 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 128 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 120 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 112 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 104 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 96 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 88 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 80 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 72 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 64 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 56 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 48 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 40 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 32 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 24 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 16 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 8 bits\");\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     *\n     * _Available since v3.0._\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        require(value <= uint256(type(int256).max), \"SafeCast: value doesn't fit in an int256\");\n        return int256(value);\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/structs/DoubleEndedQueue.sol)\npragma solidity ^0.8.4;\n\nimport \"../math/SafeCast.sol\";\n\n/**\n * @dev A sequence of items with the ability to efficiently push and pop items (i.e. insert and remove) on both ends of\n * the sequence (called front and back). Among other access patterns, it can be used to implement efficient LIFO and\n * FIFO queues. Storage use is optimized, and all operations are O(1) constant time. This includes {clear}, given that\n * the existing queue contents are left in storage.\n *\n * The struct is called `Bytes32Deque`. Other types can be cast to and from `bytes32`. This data structure can only be\n * used in storage, and not in memory.\n * ```\n * DoubleEndedQueue.Bytes32Deque queue;\n * ```\n *\n * _Available since v4.6._\n */\nlibrary DoubleEndedQueue {\n    /**\n     * @dev An operation (e.g. {front}) couldn't be completed due to the queue being empty.\n     */\n    error Empty();\n\n    /**\n     * @dev An operation (e.g. {at}) couldn't be completed due to an index being out of bounds.\n     */\n    error OutOfBounds();\n\n    /**\n     * @dev Indices are signed integers because the queue can grow in any direction. They are 128 bits so begin and end\n     * are packed in a single storage slot for efficient access. Since the items are added one at a time we can safely\n     * assume that these 128-bit indices will not overflow, and use unchecked arithmetic.\n     *\n     * Struct members have an underscore prefix indicating that they are \"private\" and should not be read or written to\n     * directly. Use the functions provided below instead. Modifying the struct manually may violate assumptions and\n     * lead to unexpected behavior.\n     *\n     * Indices are in the range [begin, end) which means the first item is at data[begin] and the last item is at\n     * data[end - 1].\n     */\n    struct Bytes32Deque {\n        int128 _begin;\n        int128 _end;\n        mapping(int128 => bytes32) _data;\n    }\n\n    /**\n     * @dev Inserts an item at the end of the queue.\n     */\n    function pushBack(Bytes32Deque storage deque, bytes32 value) internal {\n        int128 backIndex = deque._end;\n        deque._data[backIndex] = value;\n        unchecked {\n            deque._end = backIndex + 1;\n        }\n    }\n\n    /**\n     * @dev Removes the item at the end of the queue and returns it.\n     *\n     * Reverts with `Empty` if the queue is empty.\n     */\n    function popBack(Bytes32Deque storage deque) internal returns (bytes32 value) {\n        if (empty(deque)) revert Empty();\n        int128 backIndex;\n        unchecked {\n            backIndex = deque._end - 1;\n        }\n        value = deque._data[backIndex];\n        delete deque._data[backIndex];\n        deque._end = backIndex;\n    }\n\n    /**\n     * @dev Inserts an item at the beginning of the queue.\n     */\n    function pushFront(Bytes32Deque storage deque, bytes32 value) internal {\n        int128 frontIndex;\n        unchecked {\n            frontIndex = deque._begin - 1;\n        }\n        deque._data[frontIndex] = value;\n        deque._begin = frontIndex;\n    }\n\n    /**\n     * @dev Removes the item at the beginning of the queue and returns it.\n     *\n     * Reverts with `Empty` if the queue is empty.\n     */\n    function popFront(Bytes32Deque storage deque) internal returns (bytes32 value) {\n        if (empty(deque)) revert Empty();\n        int128 frontIndex = deque._begin;\n        value = deque._data[frontIndex];\n        delete deque._data[frontIndex];\n        unchecked {\n            deque._begin = frontIndex + 1;\n        }\n    }\n\n    /**\n     * @dev Returns the item at the beginning of the queue.\n     *\n     * Reverts with `Empty` if the queue is empty.\n     */\n    function front(Bytes32Deque storage deque) internal view returns (bytes32 value) {\n        if (empty(deque)) revert Empty();\n        int128 frontIndex = deque._begin;\n        return deque._data[frontIndex];\n    }\n\n    /**\n     * @dev Returns the item at the end of the queue.\n     *\n     * Reverts with `Empty` if the queue is empty.\n     */\n    function back(Bytes32Deque storage deque) internal view returns (bytes32 value) {\n        if (empty(deque)) revert Empty();\n        int128 backIndex;\n        unchecked {\n            backIndex = deque._end - 1;\n        }\n        return deque._data[backIndex];\n    }\n\n    /**\n     * @dev Return the item at a position in the queue given by `index`, with the first item at 0 and last item at\n     * `length(deque) - 1`.\n     *\n     * Reverts with `OutOfBounds` if the index is out of bounds.\n     */\n    function at(Bytes32Deque storage deque, uint256 index) internal view returns (bytes32 value) {\n        // int256(deque._begin) is a safe upcast\n        int128 idx = SafeCast.toInt128(int256(deque._begin) + SafeCast.toInt256(index));\n        if (idx >= deque._end) revert OutOfBounds();\n        return deque._data[idx];\n    }\n\n    /**\n     * @dev Resets the queue back to being empty.\n     *\n     * NOTE: The current items are left behind in storage. This does not affect the functioning of the queue, but misses\n     * out on potential gas refunds.\n     */\n    function clear(Bytes32Deque storage deque) internal {\n        deque._begin = 0;\n        deque._end = 0;\n    }\n\n    /**\n     * @dev Returns the number of items in the queue.\n     */\n    function length(Bytes32Deque storage deque) internal view returns (uint256) {\n        // The interface preserves the invariant that begin <= end so we assume this will not overflow.\n        // We also assume there are at most int256.max items in the queue.\n        unchecked {\n            return uint256(int256(deque._end) - int256(deque._begin));\n        }\n    }\n\n    /**\n     * @dev Returns true if the queue is empty.\n     */\n    function empty(Bytes32Deque storage deque) internal view returns (bool) {\n        return deque._end <= deque._begin;\n    }\n}\n"},"@openzeppelin/contracts/utils/Timers.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Timers.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Tooling for timepoints, timers and delays\n */\nlibrary Timers {\n    struct Timestamp {\n        uint64 _deadline;\n    }\n\n    function getDeadline(Timestamp memory timer) internal pure returns (uint64) {\n        return timer._deadline;\n    }\n\n    function setDeadline(Timestamp storage timer, uint64 timestamp) internal {\n        timer._deadline = timestamp;\n    }\n\n    function reset(Timestamp storage timer) internal {\n        timer._deadline = 0;\n    }\n\n    function isUnset(Timestamp memory timer) internal pure returns (bool) {\n        return timer._deadline == 0;\n    }\n\n    function isStarted(Timestamp memory timer) internal pure returns (bool) {\n        return timer._deadline > 0;\n    }\n\n    function isPending(Timestamp memory timer) internal view returns (bool) {\n        return timer._deadline > block.timestamp;\n    }\n\n    function isExpired(Timestamp memory timer) internal view returns (bool) {\n        return isStarted(timer) && timer._deadline <= block.timestamp;\n    }\n\n    struct BlockNumber {\n        uint64 _deadline;\n    }\n\n    function getDeadline(BlockNumber memory timer) internal pure returns (uint64) {\n        return timer._deadline;\n    }\n\n    function setDeadline(BlockNumber storage timer, uint64 timestamp) internal {\n        timer._deadline = timestamp;\n    }\n\n    function reset(BlockNumber storage timer) internal {\n        timer._deadline = 0;\n    }\n\n    function isUnset(BlockNumber memory timer) internal pure returns (bool) {\n        return timer._deadline == 0;\n    }\n\n    function isStarted(BlockNumber memory timer) internal pure returns (bool) {\n        return timer._deadline > 0;\n    }\n\n    function isPending(BlockNumber memory timer) internal view returns (bool) {\n        return timer._deadline > block.number;\n    }\n\n    function isExpired(BlockNumber memory timer) internal view returns (bool) {\n        return isStarted(timer) && timer._deadline <= block.number;\n    }\n}\n"},"contracts/MyGovernor.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport \"@openzeppelin/contracts/governance/Governor.sol\";\nimport \"@openzeppelin/contracts/governance/extensions/GovernorSettings.sol\";\nimport \"@openzeppelin/contracts/governance/extensions/GovernorCountingSimple.sol\";\nimport \"@openzeppelin/contracts/governance/extensions/GovernorVotes.sol\";\nimport \"@openzeppelin/contracts/governance/extensions/GovernorVotesQuorumFraction.sol\";\n\ncontract MyGovernor is\n    Governor,\n    GovernorSettings,\n    GovernorCountingSimple,\n    GovernorVotes,\n    GovernorVotesQuorumFraction\n{\n    constructor(\n        IVotes _token\n    )\n        Governor(\"MyGovernor\")\n        GovernorSettings(1, 50400, 0)\n        GovernorVotes(_token)\n        GovernorVotesQuorumFraction(4)\n    {}\n\n    // The following functions are overrides required by Solidity.\n\n    function votingDelay()\n        public\n        view\n        override(IGovernor, GovernorSettings)\n        returns (uint256)\n    {\n        return super.votingDelay();\n    }\n\n    function votingPeriod()\n        public\n        view\n        override(IGovernor, GovernorSettings)\n        returns (uint256)\n    {\n        return super.votingPeriod();\n    }\n\n    function quorum(\n        uint256 blockNumber\n    )\n        public\n        view\n        override(IGovernor, GovernorVotesQuorumFraction)\n        returns (uint256)\n    {\n        return super.quorum(blockNumber);\n    }\n\n    function proposalThreshold()\n        public\n        view\n        override(Governor, GovernorSettings)\n        returns (uint256)\n    {\n        return super.proposalThreshold();\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/governance/Governor.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/Governor.sol","exportedSymbols":{"Address":[2720],"Context":[4113],"DoubleEndedQueue":[7800],"ECDSA":[4863],"EIP712":[5017],"ERC165":[5041],"Governor":[1307],"IERC1155Receiver":[2372],"IERC165":[5053],"IERC721Receiver":[2390],"IGovernor":[1604],"Math":[5918],"SafeCast":[7459],"Strings":[4288],"Timers":[4502]},"id":1308,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:0"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../token/ERC721/IERC721Receiver.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1308,"sourceUnit":2391,"src":"132:45:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"../token/ERC1155/IERC1155Receiver.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1308,"sourceUnit":2373,"src":"178:47:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../utils/cryptography/ECDSA.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1308,"sourceUnit":4864,"src":"226:41:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../utils/cryptography/EIP712.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1308,"sourceUnit":5018,"src":"268:42:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":6,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1308,"sourceUnit":5042,"src":"311:43:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../utils/math/SafeCast.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1308,"sourceUnit":7460,"src":"355:36:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol","file":"../utils/structs/DoubleEndedQueue.sol","id":8,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1308,"sourceUnit":7801,"src":"392:47:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../utils/Address.sol","id":9,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1308,"sourceUnit":2721,"src":"440:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":10,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1308,"sourceUnit":4114,"src":"471:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Timers.sol","file":"../utils/Timers.sol","id":11,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1308,"sourceUnit":4503,"src":"502:29:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/governance/IGovernor.sol","file":"./IGovernor.sol","id":12,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1308,"sourceUnit":1605,"src":"532:25:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":14,"name":"Context","nameLocations":["1028:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":4113,"src":"1028:7:0"},"id":15,"nodeType":"InheritanceSpecifier","src":"1028:7:0"},{"baseName":{"id":16,"name":"ERC165","nameLocations":["1037:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":5041,"src":"1037:6:0"},"id":17,"nodeType":"InheritanceSpecifier","src":"1037:6:0"},{"baseName":{"id":18,"name":"EIP712","nameLocations":["1045:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":5017,"src":"1045:6:0"},"id":19,"nodeType":"InheritanceSpecifier","src":"1045:6:0"},{"baseName":{"id":20,"name":"IGovernor","nameLocations":["1053:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":1604,"src":"1053:9:0"},"id":21,"nodeType":"InheritanceSpecifier","src":"1053:9:0"},{"baseName":{"id":22,"name":"IERC721Receiver","nameLocations":["1064:15:0"],"nodeType":"IdentifierPath","referencedDeclaration":2390,"src":"1064:15:0"},"id":23,"nodeType":"InheritanceSpecifier","src":"1064:15:0"},{"baseName":{"id":24,"name":"IERC1155Receiver","nameLocations":["1081:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":2372,"src":"1081:16:0"},"id":25,"nodeType":"InheritanceSpecifier","src":"1081:16:0"}],"canonicalName":"Governor","contractDependencies":[],"contractKind":"contract","documentation":{"id":13,"nodeType":"StructuredDocumentation","src":"559:438:0","text":" @dev Core of the governance system, designed to be extended though various modules.\n This contract is abstract and requires several function to be implemented in various modules:\n - A counting module must implement {quorum}, {_quorumReached}, {_voteSucceeded} and {_countVote}\n - A voting module must implement {_getVotes}\n - Additionanly, the {votingPeriod} must also be implemented\n _Available since v4.3._"},"fullyImplemented":false,"id":1307,"linearizedBaseContracts":[1307,2372,2390,1604,5017,5041,5053,4113],"name":"Governor","nameLocation":"1016:8:0","nodeType":"ContractDefinition","nodes":[{"global":false,"id":29,"libraryName":{"id":26,"name":"DoubleEndedQueue","nameLocations":["1110:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":7800,"src":"1110:16:0"},"nodeType":"UsingForDirective","src":"1104:57:0","typeName":{"id":28,"nodeType":"UserDefinedTypeName","pathNode":{"id":27,"name":"DoubleEndedQueue.Bytes32Deque","nameLocations":["1131:16:0","1148:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":7478,"src":"1131:29:0"},"referencedDeclaration":7478,"src":"1131:29:0","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}}},{"global":false,"id":32,"libraryName":{"id":30,"name":"SafeCast","nameLocations":["1172:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":7459,"src":"1172:8:0"},"nodeType":"UsingForDirective","src":"1166:27:0","typeName":{"id":31,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"global":false,"id":36,"libraryName":{"id":33,"name":"Timers","nameLocations":["1204:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":4502,"src":"1204:6:0"},"nodeType":"UsingForDirective","src":"1198:36:0","typeName":{"id":35,"nodeType":"UserDefinedTypeName","pathNode":{"id":34,"name":"Timers.BlockNumber","nameLocations":["1215:6:0","1222:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":4399,"src":"1215:18:0"},"referencedDeclaration":4399,"src":"1215:18:0","typeDescriptions":{"typeIdentifier":"t_struct$_BlockNumber_$4399_storage_ptr","typeString":"struct Timers.BlockNumber"}}},{"constant":true,"functionSelector":"deaaa7cc","id":41,"mutability":"constant","name":"BALLOT_TYPEHASH","nameLocation":"1264:15:0","nodeType":"VariableDeclaration","scope":1307,"src":"1240:95:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1240:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"42616c6c6f742875696e743235362070726f706f73616c49642c75696e743820737570706f727429","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1292:42:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f","typeString":"literal_string \"Ballot(uint256 proposalId,uint8 support)\""},"value":"Ballot(uint256 proposalId,uint8 support)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f","typeString":"literal_string \"Ballot(uint256 proposalId,uint8 support)\""}],"id":38,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1282:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1282:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"2fe3e261","id":46,"mutability":"constant","name":"EXTENDED_BALLOT_TYPEHASH","nameLocation":"1365:24:0","nodeType":"VariableDeclaration","scope":1307,"src":"1341:147:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":42,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1341:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"457874656e64656442616c6c6f742875696e743235362070726f706f73616c49642c75696e743820737570706f72742c737472696e6720726561736f6e2c627974657320706172616d7329","id":44,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1410:77:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_b3b3f3b703cd84ce352197dcff232b1b5d3cfb2025ce47cf04742d0651f1af88","typeString":"literal_string \"ExtendedBallot(uint256 proposalId,uint8 support,string reason,bytes params)\""},"value":"ExtendedBallot(uint256 proposalId,uint8 support,string reason,bytes params)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_b3b3f3b703cd84ce352197dcff232b1b5d3cfb2025ce47cf04742d0651f1af88","typeString":"literal_string \"ExtendedBallot(uint256 proposalId,uint8 support,string reason,bytes params)\""}],"id":43,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1400:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":45,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1400:88:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"canonicalName":"Governor.ProposalCore","id":57,"members":[{"constant":false,"id":49,"mutability":"mutable","name":"voteStart","nameLocation":"1544:9:0","nodeType":"VariableDeclaration","scope":57,"src":"1525:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_BlockNumber_$4399_storage_ptr","typeString":"struct Timers.BlockNumber"},"typeName":{"id":48,"nodeType":"UserDefinedTypeName","pathNode":{"id":47,"name":"Timers.BlockNumber","nameLocations":["1525:6:0","1532:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":4399,"src":"1525:18:0"},"referencedDeclaration":4399,"src":"1525:18:0","typeDescriptions":{"typeIdentifier":"t_struct$_BlockNumber_$4399_storage_ptr","typeString":"struct Timers.BlockNumber"}},"visibility":"internal"},{"constant":false,"id":52,"mutability":"mutable","name":"voteEnd","nameLocation":"1582:7:0","nodeType":"VariableDeclaration","scope":57,"src":"1563:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_BlockNumber_$4399_storage_ptr","typeString":"struct Timers.BlockNumber"},"typeName":{"id":51,"nodeType":"UserDefinedTypeName","pathNode":{"id":50,"name":"Timers.BlockNumber","nameLocations":["1563:6:0","1570:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":4399,"src":"1563:18:0"},"referencedDeclaration":4399,"src":"1563:18:0","typeDescriptions":{"typeIdentifier":"t_struct$_BlockNumber_$4399_storage_ptr","typeString":"struct Timers.BlockNumber"}},"visibility":"internal"},{"constant":false,"id":54,"mutability":"mutable","name":"executed","nameLocation":"1604:8:0","nodeType":"VariableDeclaration","scope":57,"src":"1599:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":53,"name":"bool","nodeType":"ElementaryTypeName","src":"1599:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":56,"mutability":"mutable","name":"canceled","nameLocation":"1627:8:0","nodeType":"VariableDeclaration","scope":57,"src":"1622:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":55,"name":"bool","nodeType":"ElementaryTypeName","src":"1622:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"ProposalCore","nameLocation":"1502:12:0","nodeType":"StructDefinition","scope":1307,"src":"1495:147:0","visibility":"public"},{"constant":false,"id":59,"mutability":"mutable","name":"_name","nameLocation":"1663:5:0","nodeType":"VariableDeclaration","scope":1307,"src":"1648:20:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":58,"name":"string","nodeType":"ElementaryTypeName","src":"1648:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":64,"mutability":"mutable","name":"_proposals","nameLocation":"1716:10:0","nodeType":"VariableDeclaration","scope":1307,"src":"1675:51:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProposalCore_$57_storage_$","typeString":"mapping(uint256 => struct Governor.ProposalCore)"},"typeName":{"id":63,"keyType":{"id":60,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1675:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProposalCore_$57_storage_$","typeString":"mapping(uint256 => struct Governor.ProposalCore)"},"valueType":{"id":62,"nodeType":"UserDefinedTypeName","pathNode":{"id":61,"name":"ProposalCore","nameLocations":["1694:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"1694:12:0"},"referencedDeclaration":57,"src":"1694:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$57_storage_ptr","typeString":"struct Governor.ProposalCore"}}},"visibility":"private"},{"constant":false,"id":67,"mutability":"mutable","name":"_governanceCall","nameLocation":"2203:15:0","nodeType":"VariableDeclaration","scope":1307,"src":"2165:53:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":66,"nodeType":"UserDefinedTypeName","pathNode":{"id":65,"name":"DoubleEndedQueue.Bytes32Deque","nameLocations":["2165:16:0","2182:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":7478,"src":"2165:29:0"},"referencedDeclaration":7478,"src":"2165:29:0","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"private"},{"body":{"id":103,"nodeType":"Block","src":"2989:378:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"3007:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3007:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_executor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"3023:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3023:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3007:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476f7665726e6f723a206f6e6c79476f7665726e616e6365","id":76,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3036:26:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_01397b9b23826f2770c44682f6f60114915147b09511a75fee3231adbc22847f","typeString":"literal_string \"Governor: onlyGovernance\""},"value":"Governor: onlyGovernance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_01397b9b23826f2770c44682f6f60114915147b09511a75fee3231adbc22847f","typeString":"literal_string \"Governor: onlyGovernance\""}],"id":70,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2999:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":77,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2999:64:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":78,"nodeType":"ExpressionStatement","src":"2999:64:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":79,"name":"_executor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"3077:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":80,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3077:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":83,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3100:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Governor_$1307","typeString":"contract Governor"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Governor_$1307","typeString":"contract Governor"}],"id":82,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3092:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":81,"name":"address","nodeType":"ElementaryTypeName","src":"3092:7:0","typeDescriptions":{}}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3092:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3077:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":101,"nodeType":"IfStatement","src":"3073:277:0","trueBody":{"id":100,"nodeType":"Block","src":"3107:243:0","statements":[{"assignments":[87],"declarations":[{"constant":false,"id":87,"mutability":"mutable","name":"msgDataHash","nameLocation":"3129:11:0","nodeType":"VariableDeclaration","scope":100,"src":"3121:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":86,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3121:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":92,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":89,"name":"_msgData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4112,"src":"3153:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$","typeString":"function () view returns (bytes calldata)"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3153:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":88,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3143:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":91,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3143:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3121:43:0"},{"body":{"id":98,"nodeType":"Block","src":"3338:2:0","statements":[]},"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":97,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":93,"name":"_governanceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"3295:15:0","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage","typeString":"struct DoubleEndedQueue.Bytes32Deque storage ref"}},"id":94,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3311:8:0","memberName":"popFront","nodeType":"MemberAccess","referencedDeclaration":7636,"src":"3295:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Deque_$7478_storage_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_Bytes32Deque_$7478_storage_ptr_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer) returns (bytes32)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3295:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":96,"name":"msgDataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"3325:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3295:41:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":99,"nodeType":"WhileStatement","src":"3288:52:0"}]}},{"id":102,"nodeType":"PlaceholderStatement","src":"3359:1:0"}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"2225:733:0","text":" @dev Restricts a function so it can only be executed through governance proposals. For example, governance\n parameter setters in {GovernorSettings} are protected using this modifier.\n The governance executing address may be different from the Governor's own address, for example it could be a\n timelock. This can be customized by modules by overriding {_executor}. The executor is only able to invoke these\n functions during the execution of the governor's {execute} function, and not under any other circumstances. Thus,\n for example, additional timelock proposers are not able to change governance parameters without going through the\n governance protocol (since v4.6)."},"id":104,"name":"onlyGovernance","nameLocation":"2972:14:0","nodeType":"ModifierDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"2986:2:0"},"src":"2963:404:0","virtual":false,"visibility":"internal"},{"body":{"id":119,"nodeType":"Block","src":"3499:30:0","statements":[{"expression":{"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":115,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59,"src":"3509:5:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":116,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":107,"src":"3517:5:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3509:13:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":118,"nodeType":"ExpressionStatement","src":"3509:13:0"}]},"documentation":{"id":105,"nodeType":"StructuredDocumentation","src":"3373:63:0","text":" @dev Sets the value for {name} and {version}"},"id":120,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":110,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":107,"src":"3481:5:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":111,"name":"version","nodeType":"Identifier","overloadedDeclarations":[206],"referencedDeclaration":206,"src":"3488:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3488:9:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":113,"kind":"baseConstructorSpecifier","modifierName":{"id":109,"name":"EIP712","nameLocations":["3474:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":5017,"src":"3474:6:0"},"nodeType":"ModifierInvocation","src":"3474:24:0"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":107,"mutability":"mutable","name":"name_","nameLocation":"3467:5:0","nodeType":"VariableDeclaration","scope":120,"src":"3453:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":106,"name":"string","nodeType":"ElementaryTypeName","src":"3453:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3452:21:0"},"returnParameters":{"id":114,"nodeType":"ParameterList","parameters":[],"src":"3499:0:0"},"scope":1307,"src":"3441:88:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":134,"nodeType":"Block","src":"3708:54:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":125,"name":"_executor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"3726:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3726:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":129,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3749:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Governor_$1307","typeString":"contract Governor"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Governor_$1307","typeString":"contract Governor"}],"id":128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3741:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":127,"name":"address","nodeType":"ElementaryTypeName","src":"3741:7:0","typeDescriptions":{}}},"id":130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3741:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3726:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":124,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3718:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3718:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":133,"nodeType":"ExpressionStatement","src":"3718:37:0"}]},"documentation":{"id":121,"nodeType":"StructuredDocumentation","src":"3535:133:0","text":" @dev Function to receive ETH that will be handled by the governor (disabled if executor is a third party contract)"},"id":135,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[],"src":"3680:2:0"},"returnParameters":{"id":123,"nodeType":"ParameterList","parameters":[],"src":"3708:0:0"},"scope":1307,"src":"3673:89:0","stateMutability":"payable","virtual":true,"visibility":"external"},{"baseFunctions":[5040,5052],"body":{"id":185,"nodeType":"Block","src":"3937:630:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":146,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"4153:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":148,"name":"IGovernor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"4186:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGovernor_$1604_$","typeString":"type(contract IGovernor)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IGovernor_$1604_$","typeString":"type(contract IGovernor)"}],"id":147,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4181:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4181:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IGovernor_$1604","typeString":"type(contract IGovernor)"}},"id":150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4197:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"4181:27:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"expression":{"expression":{"id":151,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4227:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Governor_$1307","typeString":"contract Governor"}},"id":152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4232:27:0","memberName":"castVoteWithReasonAndParams","nodeType":"MemberAccess","referencedDeclaration":991,"src":"4227:32:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint8_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint8,string memory,bytes memory) external returns (uint256)"}},"id":153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4260:8:0","memberName":"selector","nodeType":"MemberAccess","src":"4227:41:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"4181:87:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"expression":{"expression":{"id":155,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4287:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Governor_$1307","typeString":"contract Governor"}},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4292:32:0","memberName":"castVoteWithReasonAndParamsBySig","nodeType":"MemberAccess","referencedDeclaration":1093,"src":"4287:37:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint8_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_uint256_$","typeString":"function (uint256,uint8,string memory,bytes memory,uint8,bytes32,bytes32) external returns (uint256)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4325:8:0","memberName":"selector","nodeType":"MemberAccess","src":"4287:46:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"4181:152:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"expression":{"expression":{"id":159,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4352:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Governor_$1307","typeString":"contract Governor"}},"id":160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4357:18:0","memberName":"getVotesWithParams","nodeType":"MemberAccess","referencedDeclaration":912,"src":"4352:23:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,uint256,bytes memory) view external returns (uint256)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4376:8:0","memberName":"selector","nodeType":"MemberAccess","src":"4352:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"4181:203:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"id":163,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4180:205:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"4153:232:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":165,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"4401:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":167,"name":"IGovernor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"4421:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGovernor_$1604_$","typeString":"type(contract IGovernor)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IGovernor_$1604_$","typeString":"type(contract IGovernor)"}],"id":166,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4416:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4416:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IGovernor_$1604","typeString":"type(contract IGovernor)"}},"id":169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4432:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"4416:27:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"4401:42:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4153:290:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":172,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"4459:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":174,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2372,"src":"4479:16:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$2372_$","typeString":"type(contract IERC1155Receiver)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$2372_$","typeString":"type(contract IERC1155Receiver)"}],"id":173,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4474:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4474:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155Receiver_$2372","typeString":"type(contract IERC1155Receiver)"}},"id":176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4497:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"4474:34:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"4459:49:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4153:355:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":181,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"4548:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":179,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4524:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Governor_$1307_$","typeString":"type(contract super Governor)"}},"id":180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4530:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":5040,"src":"4524:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4524:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4153:407:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":145,"id":184,"nodeType":"Return","src":"4134:426:0"}]},"documentation":{"id":136,"nodeType":"StructuredDocumentation","src":"3768:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":186,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3838:17:0","nodeType":"FunctionDefinition","overrides":{"id":142,"nodeType":"OverrideSpecifier","overrides":[{"id":140,"name":"IERC165","nameLocations":["3905:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":5053,"src":"3905:7:0"},{"id":141,"name":"ERC165","nameLocations":["3914:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":5041,"src":"3914:6:0"}],"src":"3896:25:0"},"parameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"interfaceId","nameLocation":"3863:11:0","nodeType":"VariableDeclaration","scope":186,"src":"3856:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":137,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3856:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3855:20:0"},"returnParameters":{"id":145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":186,"src":"3931:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":143,"name":"bool","nodeType":"ElementaryTypeName","src":"3931:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3930:6:0"},"scope":1307,"src":"3829:738:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1391],"body":{"id":195,"nodeType":"Block","src":"4692:29:0","statements":[{"expression":{"id":193,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59,"src":"4709:5:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":192,"id":194,"nodeType":"Return","src":"4702:12:0"}]},"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"4573:45:0","text":" @dev See {IGovernor-name}."},"functionSelector":"06fdde03","id":196,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"4632:4:0","nodeType":"FunctionDefinition","overrides":{"id":189,"nodeType":"OverrideSpecifier","overrides":[],"src":"4659:8:0"},"parameters":{"id":188,"nodeType":"ParameterList","parameters":[],"src":"4636:2:0"},"returnParameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":191,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":196,"src":"4677:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":190,"name":"string","nodeType":"ElementaryTypeName","src":"4677:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4676:15:0"},"scope":1307,"src":"4623:98:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1397],"body":{"id":205,"nodeType":"Block","src":"4852:27:0","statements":[{"expression":{"hexValue":"31","id":203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4869:3:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"},"functionReturnParameters":202,"id":204,"nodeType":"Return","src":"4862:10:0"}]},"documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"4727:48:0","text":" @dev See {IGovernor-version}."},"functionSelector":"54fd4d50","id":206,"implemented":true,"kind":"function","modifiers":[],"name":"version","nameLocation":"4789:7:0","nodeType":"FunctionDefinition","overrides":{"id":199,"nodeType":"OverrideSpecifier","overrides":[],"src":"4819:8:0"},"parameters":{"id":198,"nodeType":"ParameterList","parameters":[],"src":"4796:2:0"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":206,"src":"4837:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":200,"name":"string","nodeType":"ElementaryTypeName","src":"4837:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4836:15:0"},"scope":1307,"src":"4780:99:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1420],"body":{"id":237,"nodeType":"Block","src":"6033:99:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":229,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"6079:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":230,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"6088:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":231,"name":"calldatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"6096:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},{"id":232,"name":"descriptionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"6107:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":227,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6068:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6072:6:0","memberName":"encode","nodeType":"MemberAccess","src":"6068:10:0","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6068:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":226,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6058:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6058:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6050:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":224,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:0","typeDescriptions":{}}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6050:75:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":223,"id":236,"nodeType":"Return","src":"6043:82:0"}]},"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"4885:934:0","text":" @dev See {IGovernor-hashProposal}.\n The proposal id is produced by hashing the ABI encoded `targets` array, the `values` array, the `calldatas` array\n and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id\n can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in\n advance, before the proposal is submitted.\n Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the\n same proposal (with same operation and same description) will have the same id if submitted on multiple governors\n across multiple networks. This also means that in order to execute the same operation twice (on the same\n governor) the proposer will have to change the description in order to avoid proposal id conflicts."},"functionSelector":"c59057e4","id":238,"implemented":true,"kind":"function","modifiers":[],"name":"hashProposal","nameLocation":"5833:12:0","nodeType":"FunctionDefinition","overrides":{"id":220,"nodeType":"OverrideSpecifier","overrides":[],"src":"6006:8:0"},"parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"targets","nameLocation":"5872:7:0","nodeType":"VariableDeclaration","scope":238,"src":"5855:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":208,"name":"address","nodeType":"ElementaryTypeName","src":"5855:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":209,"nodeType":"ArrayTypeName","src":"5855:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":213,"mutability":"mutable","name":"values","nameLocation":"5906:6:0","nodeType":"VariableDeclaration","scope":238,"src":"5889:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":211,"name":"uint256","nodeType":"ElementaryTypeName","src":"5889:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":212,"nodeType":"ArrayTypeName","src":"5889:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":216,"mutability":"mutable","name":"calldatas","nameLocation":"5937:9:0","nodeType":"VariableDeclaration","scope":238,"src":"5922:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":214,"name":"bytes","nodeType":"ElementaryTypeName","src":"5922:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":215,"nodeType":"ArrayTypeName","src":"5922:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":218,"mutability":"mutable","name":"descriptionHash","nameLocation":"5964:15:0","nodeType":"VariableDeclaration","scope":238,"src":"5956:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":217,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5956:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5845:140:0"},"returnParameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":238,"src":"6024:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":221,"name":"uint256","nodeType":"ElementaryTypeName","src":"6024:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6023:9:0"},"scope":1307,"src":"5824:308:0","stateMutability":"pure","virtual":true,"visibility":"public"},{"baseFunctions":[1429],"body":{"id":324,"nodeType":"Block","src":"6277:826:0","statements":[{"assignments":[250],"declarations":[{"constant":false,"id":250,"mutability":"mutable","name":"proposal","nameLocation":"6308:8:0","nodeType":"VariableDeclaration","scope":324,"src":"6287:29:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$57_storage_ptr","typeString":"struct Governor.ProposalCore"},"typeName":{"id":249,"nodeType":"UserDefinedTypeName","pathNode":{"id":248,"name":"ProposalCore","nameLocations":["6287:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"6287:12:0"},"referencedDeclaration":57,"src":"6287:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$57_storage_ptr","typeString":"struct Governor.ProposalCore"}},"visibility":"internal"}],"id":254,"initialValue":{"baseExpression":{"id":251,"name":"_proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"6319:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProposalCore_$57_storage_$","typeString":"mapping(uint256 => struct Governor.ProposalCore storage ref)"}},"id":253,"indexExpression":{"id":252,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"6330:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6319:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$57_storage","typeString":"struct Governor.ProposalCore storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6287:54:0"},{"condition":{"expression":{"id":255,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":250,"src":"6356:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$57_storage_ptr","typeString":"struct Governor.ProposalCore storage pointer"}},"id":256,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6365:8:0","memberName":"executed","nodeType":"MemberAccess","referencedDeclaration":54,"src":"6356:17:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":261,"nodeType":"IfStatement","src":"6352:77:0","trueBody":{"id":260,"nodeType":"Block","src":"6375:54:0","statements":[{"expression":{"expression":{"id":257,"name":"ProposalState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"6396:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ProposalState_$1322_$","typeString":"type(enum IGovernor.ProposalState)"}},"id":258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6410:8:0","memberName":"Executed","nodeType":"MemberAccess","referencedDeclaration":1321,"src":"6396:22:0","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1322","typeString":"enum IGovernor.ProposalState"}},"functionReturnParameters":247,"id":259,"nodeType":"Return","src":"6389:29:0"}]}},{"condition":{"expression":{"id":262,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":250,"src":"6443:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$57_storage_ptr","typeString":"struct Governor.ProposalCore storage pointer"}},"id":263,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6452:8:0","memberName":"canceled","nodeType":"MemberAccess","referencedDeclaration":56,"src":"6443:17:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":268,"nodeType":"IfStatement","src":"6439:77:0","trueBody":{"id":267,"nodeType":"Block","src":"6462:54:0","statements":[{"expression":{"expression":{"id":264,"name":"ProposalState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"6483:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ProposalState_$1322_$","typeString":"type(enum IGovernor.ProposalState)"}},"id":265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6497:8:0","memberName":"Canceled","nodeType":"MemberAccess","referencedDeclaration":1316,"src":"6483:22:0","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1322","typeString":"enum IGovernor.ProposalState"}},"functionReturnParameters":247,"id":266,"nodeType":"Return","src":"6476:29:0"}]}},{"assignments":[270],"declarations":[{"constant":false,"id":270,"mutability":"mutable","name":"snapshot","nameLocation":"6534:8:0","nodeType":"VariableDeclaration","scope":324,"src":"6526:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"6526:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":274,"initialValue":{"arguments":[{"id":272,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"6562:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":271,"name":"proposalSnapshot","nodeType":"Identifier","overloadedDeclarations":[342],"referencedDeclaration":342,"src":"6545:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6545:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6526:47:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":275,"name":"snapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"6588:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6600:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6588:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":283,"nodeType":"IfStatement","src":"6584:83:0","trueBody":{"id":282,"nodeType":"Block","src":"6603:64:0","statements":[{"expression":{"arguments":[{"hexValue":"476f7665726e6f723a20756e6b6e6f776e2070726f706f73616c206964","id":279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6624:31:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_be0e8e67d15e920d3846a46401854a27a676d8965bbdde05e68fc2cc5672c892","typeString":"literal_string \"Governor: unknown proposal id\""},"value":"Governor: unknown proposal id"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_be0e8e67d15e920d3846a46401854a27a676d8965bbdde05e68fc2cc5672c892","typeString":"literal_string \"Governor: unknown proposal id\""}],"id":278,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"6617:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6617:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":281,"nodeType":"ExpressionStatement","src":"6617:39:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":284,"name":"snapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"6681:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":285,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6693:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6699:6:0","memberName":"number","nodeType":"MemberAccess","src":"6693:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6681:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":292,"nodeType":"IfStatement","src":"6677:83:0","trueBody":{"id":291,"nodeType":"Block","src":"6707:53:0","statements":[{"expression":{"expression":{"id":288,"name":"ProposalState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"6728:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ProposalState_$1322_$","typeString":"type(enum IGovernor.ProposalState)"}},"id":289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6742:7:0","memberName":"Pending","nodeType":"MemberAccess","referencedDeclaration":1314,"src":"6728:21:0","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1322","typeString":"enum IGovernor.ProposalState"}},"functionReturnParameters":247,"id":290,"nodeType":"Return","src":"6721:28:0"}]}},{"assignments":[294],"declarations":[{"constant":false,"id":294,"mutability":"mutable","name":"deadline","nameLocation":"6778:8:0","nodeType":"VariableDeclaration","scope":324,"src":"6770:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":293,"name":"uint256","nodeType":"ElementaryTypeName","src":"6770:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":298,"initialValue":{"arguments":[{"id":296,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"6806:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":295,"name":"proposalDeadline","nodeType":"Identifier","overloadedDeclarations":[359],"referencedDeclaration":359,"src":"6789:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6789:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6770:47:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":299,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"6832:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":300,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6844:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6850:6:0","memberName":"number","nodeType":"MemberAccess","src":"6844:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6832:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":307,"nodeType":"IfStatement","src":"6828:82:0","trueBody":{"id":306,"nodeType":"Block","src":"6858:52:0","statements":[{"expression":{"expression":{"id":303,"name":"ProposalState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"6879:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ProposalState_$1322_$","typeString":"type(enum IGovernor.ProposalState)"}},"id":304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6893:6:0","memberName":"Active","nodeType":"MemberAccess","referencedDeclaration":1315,"src":"6879:20:0","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1322","typeString":"enum IGovernor.ProposalState"}},"functionReturnParameters":247,"id":305,"nodeType":"Return","src":"6872:27:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":309,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"6939:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":308,"name":"_quorumReached","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"6924:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6924:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"id":312,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"6969:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":311,"name":"_voteSucceeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6954:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6954:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6924:56:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":322,"nodeType":"Block","src":"7043:54:0","statements":[{"expression":{"expression":{"id":319,"name":"ProposalState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"7064:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ProposalState_$1322_$","typeString":"type(enum IGovernor.ProposalState)"}},"id":320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7078:8:0","memberName":"Defeated","nodeType":"MemberAccess","referencedDeclaration":1317,"src":"7064:22:0","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1322","typeString":"enum IGovernor.ProposalState"}},"functionReturnParameters":247,"id":321,"nodeType":"Return","src":"7057:29:0"}]},"id":323,"nodeType":"IfStatement","src":"6920:177:0","trueBody":{"id":318,"nodeType":"Block","src":"6982:55:0","statements":[{"expression":{"expression":{"id":315,"name":"ProposalState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"7003:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ProposalState_$1322_$","typeString":"type(enum IGovernor.ProposalState)"}},"id":316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7017:9:0","memberName":"Succeeded","nodeType":"MemberAccess","referencedDeclaration":1318,"src":"7003:23:0","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1322","typeString":"enum IGovernor.ProposalState"}},"functionReturnParameters":247,"id":317,"nodeType":"Return","src":"6996:30:0"}]}}]},"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"6138:46:0","text":" @dev See {IGovernor-state}."},"functionSelector":"3e4f49e6","id":325,"implemented":true,"kind":"function","modifiers":[],"name":"state","nameLocation":"6198:5:0","nodeType":"FunctionDefinition","overrides":{"id":243,"nodeType":"OverrideSpecifier","overrides":[],"src":"6244:8:0"},"parameters":{"id":242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"proposalId","nameLocation":"6212:10:0","nodeType":"VariableDeclaration","scope":325,"src":"6204:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":240,"name":"uint256","nodeType":"ElementaryTypeName","src":"6204:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6203:20:0"},"returnParameters":{"id":247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":325,"src":"6262:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1322","typeString":"enum IGovernor.ProposalState"},"typeName":{"id":245,"nodeType":"UserDefinedTypeName","pathNode":{"id":244,"name":"ProposalState","nameLocations":["6262:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":1322,"src":"6262:13:0"},"referencedDeclaration":1322,"src":"6262:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1322","typeString":"enum IGovernor.ProposalState"}},"visibility":"internal"}],"src":"6261:15:0"},"scope":1307,"src":"6189:914:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1437],"body":{"id":341,"nodeType":"Block","src":"7264:70:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"baseExpression":{"id":334,"name":"_proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"7281:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProposalCore_$57_storage_$","typeString":"mapping(uint256 => struct Governor.ProposalCore storage ref)"}},"id":336,"indexExpression":{"id":335,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"7292:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7281:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$57_storage","typeString":"struct Governor.ProposalCore storage ref"}},"id":337,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7304:9:0","memberName":"voteStart","nodeType":"MemberAccess","referencedDeclaration":49,"src":"7281:32:0","typeDescriptions":{"typeIdentifier":"t_struct$_BlockNumber_$4399_storage","typeString":"struct Timers.BlockNumber storage ref"}},"id":338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7314:11:0","memberName":"getDeadline","nodeType":"MemberAccess","referencedDeclaration":4411,"src":"7281:44:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_BlockNumber_$4399_memory_ptr_$returns$_t_uint64_$bound_to$_t_struct$_BlockNumber_$4399_memory_ptr_$","typeString":"function (struct Timers.BlockNumber memory) pure returns (uint64)"}},"id":339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7281:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":333,"id":340,"nodeType":"Return","src":"7274:53:0"}]},"documentation":{"id":326,"nodeType":"StructuredDocumentation","src":"7109:57:0","text":" @dev See {IGovernor-proposalSnapshot}."},"functionSelector":"2d63f693","id":342,"implemented":true,"kind":"function","modifiers":[],"name":"proposalSnapshot","nameLocation":"7180:16:0","nodeType":"FunctionDefinition","overrides":{"id":330,"nodeType":"OverrideSpecifier","overrides":[],"src":"7237:8:0"},"parameters":{"id":329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":328,"mutability":"mutable","name":"proposalId","nameLocation":"7205:10:0","nodeType":"VariableDeclaration","scope":342,"src":"7197:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":327,"name":"uint256","nodeType":"ElementaryTypeName","src":"7197:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7196:20:0"},"returnParameters":{"id":333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":332,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":342,"src":"7255:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":331,"name":"uint256","nodeType":"ElementaryTypeName","src":"7255:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7254:9:0"},"scope":1307,"src":"7171:163:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1445],"body":{"id":358,"nodeType":"Block","src":"7495:68:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"baseExpression":{"id":351,"name":"_proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"7512:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProposalCore_$57_storage_$","typeString":"mapping(uint256 => struct Governor.ProposalCore storage ref)"}},"id":353,"indexExpression":{"id":352,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"7523:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7512:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$57_storage","typeString":"struct Governor.ProposalCore storage ref"}},"id":354,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7535:7:0","memberName":"voteEnd","nodeType":"MemberAccess","referencedDeclaration":52,"src":"7512:30:0","typeDescriptions":{"typeIdentifier":"t_struct$_BlockNumber_$4399_storage","typeString":"struct Timers.BlockNumber storage ref"}},"id":355,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7543:11:0","memberName":"getDeadline","nodeType":"MemberAccess","referencedDeclaration":4411,"src":"7512:42:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_BlockNumber_$4399_memory_ptr_$returns$_t_uint64_$bound_to$_t_struct$_BlockNumber_$4399_memory_ptr_$","typeString":"function (struct Timers.BlockNumber memory) pure returns (uint64)"}},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7512:44:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":350,"id":357,"nodeType":"Return","src":"7505:51:0"}]},"documentation":{"id":343,"nodeType":"StructuredDocumentation","src":"7340:57:0","text":" @dev See {IGovernor-proposalDeadline}."},"functionSelector":"c01f9e37","id":359,"implemented":true,"kind":"function","modifiers":[],"name":"proposalDeadline","nameLocation":"7411:16:0","nodeType":"FunctionDefinition","overrides":{"id":347,"nodeType":"OverrideSpecifier","overrides":[],"src":"7468:8:0"},"parameters":{"id":346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":345,"mutability":"mutable","name":"proposalId","nameLocation":"7436:10:0","nodeType":"VariableDeclaration","scope":359,"src":"7428:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":344,"name":"uint256","nodeType":"ElementaryTypeName","src":"7428:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7427:20:0"},"returnParameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":359,"src":"7486:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":348,"name":"uint256","nodeType":"ElementaryTypeName","src":"7486:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7485:9:0"},"scope":1307,"src":"7402:161:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":367,"nodeType":"Block","src":"7780:25:0","statements":[{"expression":{"hexValue":"30","id":365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7797:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":364,"id":366,"nodeType":"Return","src":"7790:8:0"}]},"documentation":{"id":360,"nodeType":"StructuredDocumentation","src":"7569:139:0","text":" @dev Part of the Governor Bravo's interface: _\"The number of votes required in order for a voter to become a proposer\"_."},"functionSelector":"b58131b0","id":368,"implemented":true,"kind":"function","modifiers":[],"name":"proposalThreshold","nameLocation":"7722:17:0","nodeType":"FunctionDefinition","parameters":{"id":361,"nodeType":"ParameterList","parameters":[],"src":"7739:2:0"},"returnParameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":368,"src":"7771:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":362,"name":"uint256","nodeType":"ElementaryTypeName","src":"7771:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7770:9:0"},"scope":1307,"src":"7713:92:0","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":369,"nodeType":"StructuredDocumentation","src":"7811:80:0","text":" @dev Amount of votes already cast passes the threshold limit."},"id":376,"implemented":false,"kind":"function","modifiers":[],"name":"_quorumReached","nameLocation":"7905:14:0","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":371,"mutability":"mutable","name":"proposalId","nameLocation":"7928:10:0","nodeType":"VariableDeclaration","scope":376,"src":"7920:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":370,"name":"uint256","nodeType":"ElementaryTypeName","src":"7920:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7919:20:0"},"returnParameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":376,"src":"7971:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":373,"name":"bool","nodeType":"ElementaryTypeName","src":"7971:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7970:6:0"},"scope":1307,"src":"7896:81:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":377,"nodeType":"StructuredDocumentation","src":"7983:58:0","text":" @dev Is the proposal successful or not."},"id":384,"implemented":false,"kind":"function","modifiers":[],"name":"_voteSucceeded","nameLocation":"8055:14:0","nodeType":"FunctionDefinition","parameters":{"id":380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":379,"mutability":"mutable","name":"proposalId","nameLocation":"8078:10:0","nodeType":"VariableDeclaration","scope":384,"src":"8070:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":378,"name":"uint256","nodeType":"ElementaryTypeName","src":"8070:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8069:20:0"},"returnParameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":384,"src":"8121:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":381,"name":"bool","nodeType":"ElementaryTypeName","src":"8121:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8120:6:0"},"scope":1307,"src":"8046:81:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":385,"nodeType":"StructuredDocumentation","src":"8133:124:0","text":" @dev Get the voting weight of `account` at a specific `blockNumber`, for a vote as described by `params`."},"id":396,"implemented":false,"kind":"function","modifiers":[],"name":"_getVotes","nameLocation":"8271:9:0","nodeType":"FunctionDefinition","parameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":387,"mutability":"mutable","name":"account","nameLocation":"8298:7:0","nodeType":"VariableDeclaration","scope":396,"src":"8290:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"8290:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":389,"mutability":"mutable","name":"blockNumber","nameLocation":"8323:11:0","nodeType":"VariableDeclaration","scope":396,"src":"8315:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":388,"name":"uint256","nodeType":"ElementaryTypeName","src":"8315:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":391,"mutability":"mutable","name":"params","nameLocation":"8357:6:0","nodeType":"VariableDeclaration","scope":396,"src":"8344:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":390,"name":"bytes","nodeType":"ElementaryTypeName","src":"8344:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8280:89:0"},"returnParameters":{"id":395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":396,"src":"8401:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":393,"name":"uint256","nodeType":"ElementaryTypeName","src":"8401:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8400:9:0"},"scope":1307,"src":"8262:148:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":397,"nodeType":"StructuredDocumentation","src":"8416:239:0","text":" @dev Register a vote for `proposalId` by `account` with a given `support`, voting `weight` and voting `params`.\n Note: Support is generic and can represent various things depending on the voting system used."},"id":410,"implemented":false,"kind":"function","modifiers":[],"name":"_countVote","nameLocation":"8669:10:0","nodeType":"FunctionDefinition","parameters":{"id":408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"mutability":"mutable","name":"proposalId","nameLocation":"8697:10:0","nodeType":"VariableDeclaration","scope":410,"src":"8689:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":398,"name":"uint256","nodeType":"ElementaryTypeName","src":"8689:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":401,"mutability":"mutable","name":"account","nameLocation":"8725:7:0","nodeType":"VariableDeclaration","scope":410,"src":"8717:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":400,"name":"address","nodeType":"ElementaryTypeName","src":"8717:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":403,"mutability":"mutable","name":"support","nameLocation":"8748:7:0","nodeType":"VariableDeclaration","scope":410,"src":"8742:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":402,"name":"uint8","nodeType":"ElementaryTypeName","src":"8742:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":405,"mutability":"mutable","name":"weight","nameLocation":"8773:6:0","nodeType":"VariableDeclaration","scope":410,"src":"8765:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":404,"name":"uint256","nodeType":"ElementaryTypeName","src":"8765:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":407,"mutability":"mutable","name":"params","nameLocation":"8802:6:0","nodeType":"VariableDeclaration","scope":410,"src":"8789:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":406,"name":"bytes","nodeType":"ElementaryTypeName","src":"8789:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8679:135:0"},"returnParameters":{"id":409,"nodeType":"ParameterList","parameters":[],"src":"8831:0:0"},"scope":1307,"src":"8660:172:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":418,"nodeType":"Block","src":"9205:26:0","statements":[{"expression":{"hexValue":"","id":416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9222:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":415,"id":417,"nodeType":"Return","src":"9215:9:0"}]},"documentation":{"id":411,"nodeType":"StructuredDocumentation","src":"8838:291:0","text":" @dev Default additional encoded parameters used by castVote methods that don't include them\n Note: Should be overridden by specific implementations to use an appropriate value, the\n meaning of the additional params, in the context of that implementation"},"id":419,"implemented":true,"kind":"function","modifiers":[],"name":"_defaultParams","nameLocation":"9143:14:0","nodeType":"FunctionDefinition","parameters":{"id":412,"nodeType":"ParameterList","parameters":[],"src":"9157:2:0"},"returnParameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":419,"src":"9191:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":413,"name":"bytes","nodeType":"ElementaryTypeName","src":"9191:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9190:14:0"},"scope":1307,"src":"9134:97:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1514],"body":{"id":564,"nodeType":"Block","src":"9491:1207:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":439,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"9531:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9531:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":441,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9545:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9551:6:0","memberName":"number","nodeType":"MemberAccess","src":"9545:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9560:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9545:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":438,"name":"getVotes","nodeType":"Identifier","overloadedDeclarations":[892],"referencedDeclaration":892,"src":"9522:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":446,"name":"proposalThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"9566:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9566:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9522:63:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476f7665726e6f723a2070726f706f73657220766f7465732062656c6f772070726f706f73616c207468726573686f6c64","id":449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9599:51:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_df78ee0077e11770202b643d4ac130b9964a5ac311c9b8d8ed6242eb4e2dcf86","typeString":"literal_string \"Governor: proposer votes below proposal threshold\""},"value":"Governor: proposer votes below proposal threshold"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df78ee0077e11770202b643d4ac130b9964a5ac311c9b8d8ed6242eb4e2dcf86","typeString":"literal_string \"Governor: proposer votes below proposal threshold\""}],"id":437,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9501:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9501:159:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":451,"nodeType":"ExpressionStatement","src":"9501:159:0"},{"assignments":[453],"declarations":[{"constant":false,"id":453,"mutability":"mutable","name":"proposalId","nameLocation":"9679:10:0","nodeType":"VariableDeclaration","scope":564,"src":"9671:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":452,"name":"uint256","nodeType":"ElementaryTypeName","src":"9671:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":465,"initialValue":{"arguments":[{"id":455,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"9705:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":456,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"9714:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":457,"name":"calldatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"9722:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},{"arguments":[{"arguments":[{"id":461,"name":"description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"9749:11:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9743:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":459,"name":"bytes","nodeType":"ElementaryTypeName","src":"9743:5:0","typeDescriptions":{}}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9743:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":458,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9733:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9733:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":454,"name":"hashProposal","nodeType":"Identifier","overloadedDeclarations":[238],"referencedDeclaration":238,"src":"9692:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$returns$_t_uint256_$","typeString":"function (address[] memory,uint256[] memory,bytes memory[] memory,bytes32) pure returns (uint256)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9692:71:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9671:92:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":467,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"9782:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9790:6:0","memberName":"length","nodeType":"MemberAccess","src":"9782:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":469,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"9800:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9807:6:0","memberName":"length","nodeType":"MemberAccess","src":"9800:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9782:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e677468","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9815:35:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_35c793b1b5a6be245307722bba06fa552ac609ebfd70358ab0b3220eed40db4d","typeString":"literal_string \"Governor: invalid proposal length\""},"value":"Governor: invalid proposal length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_35c793b1b5a6be245307722bba06fa552ac609ebfd70358ab0b3220eed40db4d","typeString":"literal_string \"Governor: invalid proposal length\""}],"id":466,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9774:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9774:77:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":474,"nodeType":"ExpressionStatement","src":"9774:77:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":476,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"9869:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9877:6:0","memberName":"length","nodeType":"MemberAccess","src":"9869:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":478,"name":"calldatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"9887:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9897:6:0","memberName":"length","nodeType":"MemberAccess","src":"9887:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9869:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e677468","id":481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9905:35:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_35c793b1b5a6be245307722bba06fa552ac609ebfd70358ab0b3220eed40db4d","typeString":"literal_string \"Governor: invalid proposal length\""},"value":"Governor: invalid proposal length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_35c793b1b5a6be245307722bba06fa552ac609ebfd70358ab0b3220eed40db4d","typeString":"literal_string \"Governor: invalid proposal length\""}],"id":475,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9861:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:80:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":483,"nodeType":"ExpressionStatement","src":"9861:80:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":485,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"9959:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9967:6:0","memberName":"length","nodeType":"MemberAccess","src":"9959:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9976:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9959:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476f7665726e6f723a20656d7074792070726f706f73616c","id":489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9979:26:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_8400b334e0df18026c76df742cddc258619f9923d5f5b8ba67cd6eec1d1f3513","typeString":"literal_string \"Governor: empty proposal\""},"value":"Governor: empty proposal"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8400b334e0df18026c76df742cddc258619f9923d5f5b8ba67cd6eec1d1f3513","typeString":"literal_string \"Governor: empty proposal\""}],"id":484,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9951:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9951:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":491,"nodeType":"ExpressionStatement","src":"9951:55:0"},{"assignments":[494],"declarations":[{"constant":false,"id":494,"mutability":"mutable","name":"proposal","nameLocation":"10038:8:0","nodeType":"VariableDeclaration","scope":564,"src":"10017:29:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$57_storage_ptr","typeString":"struct Governor.ProposalCore"},"typeName":{"id":493,"nodeType":"UserDefinedTypeName","pathNode":{"id":492,"name":"ProposalCore","nameLocations":["10017:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"10017:12:0"},"referencedDeclaration":57,"src":"10017:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$57_storage_ptr","typeString":"struct Governor.ProposalCore"}},"visibility":"internal"}],"id":498,"initialValue":{"baseExpression":{"id":495,"name":"_proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"10049:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProposalCore_$57_storage_$","typeString":"mapping(uint256 => struct Governor.ProposalCore storage ref)"}},"id":497,"indexExpression":{"id":496,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"10060:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10049:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$57_storage","typeString":"struct Governor.ProposalCore storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10017:54:0"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":500,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"10089:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$57_storage_ptr","typeString":"struct Governor.ProposalCore storage pointer"}},"id":501,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10098:9:0","memberName":"voteStart","nodeType":"MemberAccess","referencedDeclaration":49,"src":"10089:18:0","typeDescriptions":{"typeIdentifier":"t_struct$_BlockNumber_$4399_storage","typeString":"struct Timers.BlockNumber storage ref"}},"id":502,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10108:7:0","memberName":"isUnset","nodeType":"MemberAccess","referencedDeclaration":4453,"src":"10089:26:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_BlockNumber_$4399_memory_ptr_$returns$_t_bool_$bound_to$_t_struct$_BlockNumber_$4399_memory_ptr_$","typeString":"function (struct Timers.BlockNumber memory) pure returns (bool)"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10089:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476f7665726e6f723a2070726f706f73616c20616c726561647920657869737473","id":504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10119:35:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c1bb0f67bc14091429c4b8b5d74e1f929b2838d72b5fb3c5a2cbef13b2faab40","typeString":"literal_string \"Governor: proposal already exists\""},"value":"Governor: proposal already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c1bb0f67bc14091429c4b8b5d74e1f929b2838d72b5fb3c5a2cbef13b2faab40","typeString":"literal_string \"Governor: proposal already exists\""}],"id":499,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10081:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10081:74:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":506,"nodeType":"ExpressionStatement","src":"10081:74:0"},{"assignments":[508],"declarations":[{"constant":false,"id":508,"mutability":"mutable","name":"snapshot","nameLocation":"10173:8:0","nodeType":"VariableDeclaration","scope":564,"src":"10166:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":507,"name":"uint64","nodeType":"ElementaryTypeName","src":"10166:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":518,"initialValue":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":509,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10184:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10190:6:0","memberName":"number","nodeType":"MemberAccess","src":"10184:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10197:8:0","memberName":"toUint64","nodeType":"MemberAccess","referencedDeclaration":6521,"src":"10184:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint64_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint64)"}},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10184:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":513,"name":"votingDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"10210:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10210:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10224:8:0","memberName":"toUint64","nodeType":"MemberAccess","referencedDeclaration":6521,"src":"10210:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint64_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint64)"}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10210:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"10184:50:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"10166:68:0"},{"assignments":[520],"declarations":[{"constant":false,"id":520,"mutability":"mutable","name":"deadline","nameLocation":"10251:8:0","nodeType":"VariableDeclaration","scope":564,"src":"10244:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":519,"name":"uint64","nodeType":"ElementaryTypeName","src":"10244:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":527,"initialValue":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":521,"name":"snapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"10262:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":522,"name":"votingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"10273:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10273:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10288:8:0","memberName":"toUint64","nodeType":"MemberAccess","referencedDeclaration":6521,"src":"10273:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint64_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint64)"}},"id":525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10273:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"10262:36:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"10244:54:0"},{"expression":{"arguments":[{"id":533,"name":"snapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"10340:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"expression":{"id":528,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"10309:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$57_storage_ptr","typeString":"struct Governor.ProposalCore storage pointer"}},"id":531,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10318:9:0","memberName":"voteStart","nodeType":"MemberAccess","referencedDeclaration":49,"src":"10309:18:0","typeDescriptions":{"typeIdentifier":"t_struct$_BlockNumber_$4399_storage","typeString":"struct Timers.BlockNumber storage ref"}},"id":532,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10328:11:0","memberName":"setDeadline","nodeType":"MemberAccess","referencedDeclaration":4426,"src":"10309:30:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_BlockNumber_$4399_storage_ptr_$_t_uint64_$returns$__$bound_to$_t_struct$_BlockNumber_$4399_storage_ptr_$","typeString":"function (struct Timers.BlockNumber storage pointer,uint64)"}},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10309:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":535,"nodeType":"ExpressionStatement","src":"10309:40:0"},{"expression":{"arguments":[{"id":541,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"10388:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"expression":{"id":536,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"10359:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$57_storage_ptr","typeString":"struct Governor.ProposalCore storage pointer"}},"id":539,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10368:7:0","memberName":"voteEnd","nodeType":"MemberAccess","referencedDeclaration":52,"src":"10359:16:0","typeDescriptions":{"typeIdentifier":"t_struct$_BlockNumber_$4399_storage","typeString":"struct Timers.BlockNumber storage ref"}},"id":540,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10376:11:0","memberName":"setDeadline","nodeType":"MemberAccess","referencedDeclaration":4426,"src":"10359:28:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_BlockNumber_$4399_storage_ptr_$_t_uint64_$returns$__$bound_to$_t_struct$_BlockNumber_$4399_storage_ptr_$","typeString":"function (struct Timers.BlockNumber storage pointer,uint64)"}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10359:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":543,"nodeType":"ExpressionStatement","src":"10359:38:0"},{"eventCall":{"arguments":[{"id":545,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"10442:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":546,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"10466:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10466:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":548,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"10492:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":549,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"10513:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"expression":{"id":553,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"10546:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10554:6:0","memberName":"length","nodeType":"MemberAccess","src":"10546:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10533:12:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":550,"name":"string","nodeType":"ElementaryTypeName","src":"10537:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":551,"nodeType":"ArrayTypeName","src":"10537:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10533:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},{"id":556,"name":"calldatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"10575:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},{"id":557,"name":"snapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"10598:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":558,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"10620:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":559,"name":"description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"10642:11:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"},{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":544,"name":"ProposalCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"10413:15:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,address[] memory,uint256[] memory,string memory[] memory,bytes memory[] memory,uint256,uint256,string memory)"}},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10413:250:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":561,"nodeType":"EmitStatement","src":"10408:255:0"},{"expression":{"id":562,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"10681:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":436,"id":563,"nodeType":"Return","src":"10674:17:0"}]},"documentation":{"id":420,"nodeType":"StructuredDocumentation","src":"9237:48:0","text":" @dev See {IGovernor-propose}."},"functionSelector":"7d5e81e2","id":565,"implemented":true,"kind":"function","modifiers":[],"name":"propose","nameLocation":"9299:7:0","nodeType":"FunctionDefinition","overrides":{"id":433,"nodeType":"OverrideSpecifier","overrides":[],"src":"9464:8:0"},"parameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"mutability":"mutable","name":"targets","nameLocation":"9333:7:0","nodeType":"VariableDeclaration","scope":565,"src":"9316:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":421,"name":"address","nodeType":"ElementaryTypeName","src":"9316:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":422,"nodeType":"ArrayTypeName","src":"9316:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":426,"mutability":"mutable","name":"values","nameLocation":"9367:6:0","nodeType":"VariableDeclaration","scope":565,"src":"9350:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":424,"name":"uint256","nodeType":"ElementaryTypeName","src":"9350:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":425,"nodeType":"ArrayTypeName","src":"9350:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":429,"mutability":"mutable","name":"calldatas","nameLocation":"9398:9:0","nodeType":"VariableDeclaration","scope":565,"src":"9383:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":427,"name":"bytes","nodeType":"ElementaryTypeName","src":"9383:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":428,"nodeType":"ArrayTypeName","src":"9383:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":431,"mutability":"mutable","name":"description","nameLocation":"9431:11:0","nodeType":"VariableDeclaration","scope":565,"src":"9417:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":430,"name":"string","nodeType":"ElementaryTypeName","src":"9417:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9306:142:0"},"returnParameters":{"id":436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":565,"src":"9482:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":434,"name":"uint256","nodeType":"ElementaryTypeName","src":"9482:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9481:9:0"},"scope":1307,"src":"9290:1408:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1531],"body":{"id":649,"nodeType":"Block","src":"10964:660:0","statements":[{"assignments":[584],"declarations":[{"constant":false,"id":584,"mutability":"mutable","name":"proposalId","nameLocation":"10982:10:0","nodeType":"VariableDeclaration","scope":649,"src":"10974:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":583,"name":"uint256","nodeType":"ElementaryTypeName","src":"10974:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":591,"initialValue":{"arguments":[{"id":586,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"11008:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":587,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"11017:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":588,"name":"calldatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"11025:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},{"id":589,"name":"descriptionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"11036:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":585,"name":"hashProposal","nodeType":"Identifier","overloadedDeclarations":[238],"referencedDeclaration":238,"src":"10995:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$returns$_t_uint256_$","typeString":"function (address[] memory,uint256[] memory,bytes memory[] memory,bytes32) pure returns (uint256)"}},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10995:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10974:78:0"},{"assignments":[594],"declarations":[{"constant":false,"id":594,"mutability":"mutable","name":"status","nameLocation":"11077:6:0","nodeType":"VariableDeclaration","scope":649,"src":"11063:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1322","typeString":"enum IGovernor.ProposalState"},"typeName":{"id":593,"nodeType":"UserDefinedTypeName","pathNode":{"id":592,"name":"ProposalState","nameLocations":["11063:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":1322,"src":"11063:13:0"},"referencedDeclaration":1322,"src":"11063:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1322","typeString":"enum IGovernor.ProposalState"}},"visibility":"internal"}],"id":598,"initialValue":{"arguments":[{"id":596,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"11092:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":595,"name":"state","nodeType":"Identifier","overloadedDeclarations":[325],"referencedDeclaration":325,"src":"11086:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_enum$_ProposalState_$1322_$","typeString":"function (uint256) view returns (enum IGovernor.ProposalState)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11086:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1322","typeString":"enum IGovernor.ProposalState"}},"nodeType":"VariableDeclarationStatement","src":"11063:40:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_ProposalState_$1322","typeString":"enum IGovernor.ProposalState"},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":600,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"11134:6:0","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1322","typeString":"enum IGovernor.ProposalState"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":601,"name":"ProposalState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"11144:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ProposalState_$1322_$","typeString":"type(enum IGovernor.ProposalState)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11158:9:0","memberName":"Succeeded","nodeType":"MemberAccess","referencedDeclaration":1318,"src":"11144:23:0","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1322","typeString":"enum IGovernor.ProposalState"}},"src":"11134:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_ProposalState_$1322","typeString":"enum IGovernor.ProposalState"},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":604,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"11171:6:0","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1322","typeString":"enum IGovernor.ProposalState"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":605,"name":"ProposalState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"11181:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ProposalState_$1322_$","typeString":"type(enum IGovernor.ProposalState)"}},"id":606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11195:6:0","memberName":"Queued","nodeType":"MemberAccess","referencedDeclaration":1319,"src":"11181:20:0","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1322","typeString":"enum IGovernor.ProposalState"}},"src":"11171:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11134:67:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476f7665726e6f723a2070726f706f73616c206e6f74207375636365737366756c","id":609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11215:35:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_a608627370ddd238e48feab42026732822e64969fe5a8155723eaa5f397576d9","typeString":"literal_string \"Governor: proposal not successful\""},"value":"Governor: proposal not successful"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a608627370ddd238e48feab42026732822e64969fe5a8155723eaa5f397576d9","typeString":"literal_string \"Governor: proposal not successful\""}],"id":599,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11113:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11113:147:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":611,"nodeType":"ExpressionStatement","src":"11113:147:0"},{"expression":{"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":612,"name":"_proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"11270:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProposalCore_$57_storage_$","typeString":"mapping(uint256 => struct Governor.ProposalCore storage ref)"}},"id":614,"indexExpression":{"id":613,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"11281:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11270:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$57_storage","typeString":"struct Governor.ProposalCore storage ref"}},"id":615,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11293:8:0","memberName":"executed","nodeType":"MemberAccess","referencedDeclaration":54,"src":"11270:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11304:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"11270:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":618,"nodeType":"ExpressionStatement","src":"11270:38:0"},{"eventCall":{"arguments":[{"id":620,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"11341:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":619,"name":"ProposalExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"11324:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11324:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":622,"nodeType":"EmitStatement","src":"11319:33:0"},{"expression":{"arguments":[{"id":624,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"11378:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":625,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"11390:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":626,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"11399:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":627,"name":"calldatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"11407:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},{"id":628,"name":"descriptionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"11418:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":623,"name":"_beforeExecute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"11363:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$returns$__$","typeString":"function (uint256,address[] memory,uint256[] memory,bytes memory[] memory,bytes32)"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11363:71:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":630,"nodeType":"ExpressionStatement","src":"11363:71:0"},{"expression":{"arguments":[{"id":632,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"11453:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":633,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"11465:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":634,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"11474:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":635,"name":"calldatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"11482:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},{"id":636,"name":"descriptionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"11493:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":631,"name":"_execute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"11444:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$returns$__$","typeString":"function (uint256,address[] memory,uint256[] memory,bytes memory[] memory,bytes32)"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11444:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":638,"nodeType":"ExpressionStatement","src":"11444:65:0"},{"expression":{"arguments":[{"id":640,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"11533:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":641,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"11545:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":642,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"11554:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":643,"name":"calldatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"11562:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},{"id":644,"name":"descriptionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"11573:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":639,"name":"_afterExecute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"11519:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$returns$__$","typeString":"function (uint256,address[] memory,uint256[] memory,bytes memory[] memory,bytes32)"}},"id":645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11519:70:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":646,"nodeType":"ExpressionStatement","src":"11519:70:0"},{"expression":{"id":647,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"11607:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":582,"id":648,"nodeType":"Return","src":"11600:17:0"}]},"documentation":{"id":566,"nodeType":"StructuredDocumentation","src":"10704:48:0","text":" @dev See {IGovernor-execute}."},"functionSelector":"2656227d","id":650,"implemented":true,"kind":"function","modifiers":[],"name":"execute","nameLocation":"10766:7:0","nodeType":"FunctionDefinition","overrides":{"id":579,"nodeType":"OverrideSpecifier","overrides":[],"src":"10937:8:0"},"parameters":{"id":578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":569,"mutability":"mutable","name":"targets","nameLocation":"10800:7:0","nodeType":"VariableDeclaration","scope":650,"src":"10783:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"10783:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":568,"nodeType":"ArrayTypeName","src":"10783:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":572,"mutability":"mutable","name":"values","nameLocation":"10834:6:0","nodeType":"VariableDeclaration","scope":650,"src":"10817:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":570,"name":"uint256","nodeType":"ElementaryTypeName","src":"10817:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":571,"nodeType":"ArrayTypeName","src":"10817:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":575,"mutability":"mutable","name":"calldatas","nameLocation":"10865:9:0","nodeType":"VariableDeclaration","scope":650,"src":"10850:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":573,"name":"bytes","nodeType":"ElementaryTypeName","src":"10850:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":574,"nodeType":"ArrayTypeName","src":"10850:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":577,"mutability":"mutable","name":"descriptionHash","nameLocation":"10892:15:0","nodeType":"VariableDeclaration","scope":650,"src":"10884:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":576,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10884:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10773:140:0"},"returnParameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":650,"src":"10955:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":580,"name":"uint256","nodeType":"ElementaryTypeName","src":"10955:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10954:9:0"},"scope":1307,"src":"10757:867:0","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":709,"nodeType":"Block","src":"11962:328:0","statements":[{"assignments":[668],"declarations":[{"constant":false,"id":668,"mutability":"mutable","name":"errorMessage","nameLocation":"11986:12:0","nodeType":"VariableDeclaration","scope":709,"src":"11972:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":667,"name":"string","nodeType":"ElementaryTypeName","src":"11972:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":670,"initialValue":{"hexValue":"476f7665726e6f723a2063616c6c20726576657274656420776974686f7574206d657373616765","id":669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12001:41:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_60bfcc3776c91812db2df5ee8e14efc111acb8df47a38be82f94cf8f4bc73336","typeString":"literal_string \"Governor: call reverted without message\""},"value":"Governor: call reverted without message"},"nodeType":"VariableDeclarationStatement","src":"11972:70:0"},{"body":{"id":707,"nodeType":"Block","src":"12097:187:0","statements":[{"assignments":[683,685],"declarations":[{"constant":false,"id":683,"mutability":"mutable","name":"success","nameLocation":"12117:7:0","nodeType":"VariableDeclaration","scope":707,"src":"12112:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":682,"name":"bool","nodeType":"ElementaryTypeName","src":"12112:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":685,"mutability":"mutable","name":"returndata","nameLocation":"12139:10:0","nodeType":"VariableDeclaration","scope":707,"src":"12126:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":684,"name":"bytes","nodeType":"ElementaryTypeName","src":"12126:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":698,"initialValue":{"arguments":[{"baseExpression":{"id":694,"name":"calldatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"12187:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":696,"indexExpression":{"id":695,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"12197:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12187:12:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"baseExpression":{"id":686,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"12153:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":688,"indexExpression":{"id":687,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"12161:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12153:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12164:4:0","memberName":"call","nodeType":"MemberAccess","src":"12153:15:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"baseExpression":{"id":690,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"12176:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":692,"indexExpression":{"id":691,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"12183:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12176:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"12153:33:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12153:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"12111:89:0"},{"expression":{"arguments":[{"id":702,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"12239:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":703,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"12248:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":704,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"12260:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":699,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"12214:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2720_$","typeString":"type(library Address)"}},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12222:16:0","memberName":"verifyCallResult","nodeType":"MemberAccess","referencedDeclaration":2699,"src":"12214:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12214:59:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":706,"nodeType":"ExpressionStatement","src":"12214:59:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":675,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"12072:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":676,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"12076:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12084:6:0","memberName":"length","nodeType":"MemberAccess","src":"12076:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12072:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":708,"initializationExpression":{"assignments":[672],"declarations":[{"constant":false,"id":672,"mutability":"mutable","name":"i","nameLocation":"12065:1:0","nodeType":"VariableDeclaration","scope":708,"src":"12057:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":671,"name":"uint256","nodeType":"ElementaryTypeName","src":"12057:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":674,"initialValue":{"hexValue":"30","id":673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12069:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12057:13:0"},"loopExpression":{"expression":{"id":680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"12092:3:0","subExpression":{"id":679,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"12094:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":681,"nodeType":"ExpressionStatement","src":"12092:3:0"},"nodeType":"ForStatement","src":"12052:232:0"}]},"documentation":{"id":651,"nodeType":"StructuredDocumentation","src":"11630:114:0","text":" @dev Internal execution mechanism. Can be overridden to implement different execution mechanism"},"id":710,"implemented":true,"kind":"function","modifiers":[],"name":"_execute","nameLocation":"11758:8:0","nodeType":"FunctionDefinition","parameters":{"id":665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":710,"src":"11776:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":652,"name":"uint256","nodeType":"ElementaryTypeName","src":"11776:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":656,"mutability":"mutable","name":"targets","nameLocation":"11827:7:0","nodeType":"VariableDeclaration","scope":710,"src":"11810:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":654,"name":"address","nodeType":"ElementaryTypeName","src":"11810:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":655,"nodeType":"ArrayTypeName","src":"11810:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":659,"mutability":"mutable","name":"values","nameLocation":"11861:6:0","nodeType":"VariableDeclaration","scope":710,"src":"11844:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":657,"name":"uint256","nodeType":"ElementaryTypeName","src":"11844:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":658,"nodeType":"ArrayTypeName","src":"11844:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":662,"mutability":"mutable","name":"calldatas","nameLocation":"11892:9:0","nodeType":"VariableDeclaration","scope":710,"src":"11877:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":660,"name":"bytes","nodeType":"ElementaryTypeName","src":"11877:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":661,"nodeType":"ArrayTypeName","src":"11877:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":710,"src":"11911:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":663,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11911:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11766:178:0"},"returnParameters":{"id":666,"nodeType":"ParameterList","parameters":[],"src":"11962:0:0"},"scope":1307,"src":"11749:541:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":769,"nodeType":"Block","src":"12585:274:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":727,"name":"_executor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"12599:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12599:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":731,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12622:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Governor_$1307","typeString":"contract Governor"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Governor_$1307","typeString":"contract Governor"}],"id":730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12614:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":729,"name":"address","nodeType":"ElementaryTypeName","src":"12614:7:0","typeDescriptions":{}}},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12614:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12599:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":768,"nodeType":"IfStatement","src":"12595:258:0","trueBody":{"id":767,"nodeType":"Block","src":"12629:224:0","statements":[{"body":{"id":765,"nodeType":"Block","src":"12688:155:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":745,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"12710:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":747,"indexExpression":{"id":746,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"12718:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12710:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":750,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12732:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Governor_$1307","typeString":"contract Governor"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Governor_$1307","typeString":"contract Governor"}],"id":749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12724:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":748,"name":"address","nodeType":"ElementaryTypeName","src":"12724:7:0","typeDescriptions":{}}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12724:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12710:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":764,"nodeType":"IfStatement","src":"12706:123:0","trueBody":{"id":763,"nodeType":"Block","src":"12739:90:0","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":757,"name":"calldatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"12796:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":759,"indexExpression":{"id":758,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"12806:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12796:12:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":756,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"12786:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12786:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":753,"name":"_governanceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"12761:15:0","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage","typeString":"struct DoubleEndedQueue.Bytes32Deque storage ref"}},"id":755,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12777:8:0","memberName":"pushBack","nodeType":"MemberAccess","referencedDeclaration":7510,"src":"12761:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Deque_$7478_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_struct$_Bytes32Deque_$7478_storage_ptr_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer,bytes32)"}},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12761:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":762,"nodeType":"ExpressionStatement","src":"12761:49:0"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":738,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"12663:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":739,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"12667:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12675:6:0","memberName":"length","nodeType":"MemberAccess","src":"12667:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12663:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":766,"initializationExpression":{"assignments":[735],"declarations":[{"constant":false,"id":735,"mutability":"mutable","name":"i","nameLocation":"12656:1:0","nodeType":"VariableDeclaration","scope":766,"src":"12648:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":734,"name":"uint256","nodeType":"ElementaryTypeName","src":"12648:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":737,"initialValue":{"hexValue":"30","id":736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12660:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12648:13:0"},"loopExpression":{"expression":{"id":743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"12683:3:0","subExpression":{"id":742,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"12685:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":744,"nodeType":"ExpressionStatement","src":"12683:3:0"},"nodeType":"ForStatement","src":"12643:200:0"}]}}]},"documentation":{"id":711,"nodeType":"StructuredDocumentation","src":"12296:59:0","text":" @dev Hook before execution is triggered."},"id":770,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeExecute","nameLocation":"12369:14:0","nodeType":"FunctionDefinition","parameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":770,"src":"12393:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":712,"name":"uint256","nodeType":"ElementaryTypeName","src":"12393:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":716,"mutability":"mutable","name":"targets","nameLocation":"12444:7:0","nodeType":"VariableDeclaration","scope":770,"src":"12427:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":714,"name":"address","nodeType":"ElementaryTypeName","src":"12427:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":715,"nodeType":"ArrayTypeName","src":"12427:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":770,"src":"12461:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":717,"name":"uint256","nodeType":"ElementaryTypeName","src":"12461:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":718,"nodeType":"ArrayTypeName","src":"12461:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":722,"mutability":"mutable","name":"calldatas","nameLocation":"12515:9:0","nodeType":"VariableDeclaration","scope":770,"src":"12500:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":720,"name":"bytes","nodeType":"ElementaryTypeName","src":"12500:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":721,"nodeType":"ArrayTypeName","src":"12500:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":770,"src":"12534:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":723,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12534:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12383:184:0"},"returnParameters":{"id":726,"nodeType":"ParameterList","parameters":[],"src":"12585:0:0"},"scope":1307,"src":"12360:499:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":807,"nodeType":"Block","src":"13164:160:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":787,"name":"_executor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"13178:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13178:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":791,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13201:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Governor_$1307","typeString":"contract Governor"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Governor_$1307","typeString":"contract Governor"}],"id":790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13193:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":789,"name":"address","nodeType":"ElementaryTypeName","src":"13193:7:0","typeDescriptions":{}}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13193:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13178:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":806,"nodeType":"IfStatement","src":"13174:144:0","trueBody":{"id":805,"nodeType":"Block","src":"13208:110:0","statements":[{"condition":{"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13226:24:0","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":794,"name":"_governanceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"13227:15:0","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage","typeString":"struct DoubleEndedQueue.Bytes32Deque storage ref"}},"id":795,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13243:5:0","memberName":"empty","nodeType":"MemberAccess","referencedDeclaration":7799,"src":"13227:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Deque_$7478_storage_ptr_$returns$_t_bool_$bound_to$_t_struct$_Bytes32Deque_$7478_storage_ptr_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (bool)"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13227:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":804,"nodeType":"IfStatement","src":"13222:86:0","trueBody":{"id":803,"nodeType":"Block","src":"13252:56:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":798,"name":"_governanceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"13270:15:0","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage","typeString":"struct DoubleEndedQueue.Bytes32Deque storage ref"}},"id":800,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13286:5:0","memberName":"clear","nodeType":"MemberAccess","referencedDeclaration":7757,"src":"13270:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Deque_$7478_storage_ptr_$returns$__$bound_to$_t_struct$_Bytes32Deque_$7478_storage_ptr_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer)"}},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13270:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":802,"nodeType":"ExpressionStatement","src":"13270:23:0"}]}}]}}]},"documentation":{"id":771,"nodeType":"StructuredDocumentation","src":"12865:58:0","text":" @dev Hook after execution is triggered."},"id":808,"implemented":true,"kind":"function","modifiers":[],"name":"_afterExecute","nameLocation":"12937:13:0","nodeType":"FunctionDefinition","parameters":{"id":785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":808,"src":"12960:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":772,"name":"uint256","nodeType":"ElementaryTypeName","src":"12960:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":808,"src":"12994:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":774,"name":"address","nodeType":"ElementaryTypeName","src":"12994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":775,"nodeType":"ArrayTypeName","src":"12994:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":808,"src":"13034:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":777,"name":"uint256","nodeType":"ElementaryTypeName","src":"13034:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":778,"nodeType":"ArrayTypeName","src":"13034:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":782,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":808,"src":"13073:14:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":780,"name":"bytes","nodeType":"ElementaryTypeName","src":"13073:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":781,"nodeType":"ArrayTypeName","src":"13073:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":808,"src":"13113:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":783,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13113:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12950:196:0"},"returnParameters":{"id":786,"nodeType":"ParameterList","parameters":[],"src":"13164:0:0"},"scope":1307,"src":"12928:396:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":872,"nodeType":"Block","src":"13783:455:0","statements":[{"assignments":[826],"declarations":[{"constant":false,"id":826,"mutability":"mutable","name":"proposalId","nameLocation":"13801:10:0","nodeType":"VariableDeclaration","scope":872,"src":"13793:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":825,"name":"uint256","nodeType":"ElementaryTypeName","src":"13793:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":833,"initialValue":{"arguments":[{"id":828,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"13827:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":829,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"13836:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":830,"name":"calldatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"13844:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},{"id":831,"name":"descriptionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"13855:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":827,"name":"hashProposal","nodeType":"Identifier","overloadedDeclarations":[238],"referencedDeclaration":238,"src":"13814:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$returns$_t_uint256_$","typeString":"function (address[] memory,uint256[] memory,bytes memory[] memory,bytes32) pure returns (uint256)"}},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13814:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13793:78:0"},{"assignments":[836],"declarations":[{"constant":false,"id":836,"mutability":"mutable","name":"status","nameLocation":"13895:6:0","nodeType":"VariableDeclaration","scope":872,"src":"13881:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1322","typeString":"enum IGovernor.ProposalState"},"typeName":{"id":835,"nodeType":"UserDefinedTypeName","pathNode":{"id":834,"name":"ProposalState","nameLocations":["13881:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":1322,"src":"13881:13:0"},"referencedDeclaration":1322,"src":"13881:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1322","typeString":"enum IGovernor.ProposalState"}},"visibility":"internal"}],"id":840,"initialValue":{"arguments":[{"id":838,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"13910:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":837,"name":"state","nodeType":"Identifier","overloadedDeclarations":[325],"referencedDeclaration":325,"src":"13904:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_enum$_ProposalState_$1322_$","typeString":"function (uint256) view returns (enum IGovernor.ProposalState)"}},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13904:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1322","typeString":"enum IGovernor.ProposalState"}},"nodeType":"VariableDeclarationStatement","src":"13881:40:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_ProposalState_$1322","typeString":"enum IGovernor.ProposalState"},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":842,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"13953:6:0","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1322","typeString":"enum IGovernor.ProposalState"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":843,"name":"ProposalState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"13963:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ProposalState_$1322_$","typeString":"type(enum IGovernor.ProposalState)"}},"id":844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13977:8:0","memberName":"Canceled","nodeType":"MemberAccess","referencedDeclaration":1316,"src":"13963:22:0","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1322","typeString":"enum IGovernor.ProposalState"}},"src":"13953:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_ProposalState_$1322","typeString":"enum IGovernor.ProposalState"},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":846,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"13989:6:0","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1322","typeString":"enum IGovernor.ProposalState"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":847,"name":"ProposalState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"13999:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ProposalState_$1322_$","typeString":"type(enum IGovernor.ProposalState)"}},"id":848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14013:7:0","memberName":"Expired","nodeType":"MemberAccess","referencedDeclaration":1320,"src":"13999:21:0","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1322","typeString":"enum IGovernor.ProposalState"}},"src":"13989:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13953:67:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_ProposalState_$1322","typeString":"enum IGovernor.ProposalState"},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":851,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"14024:6:0","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1322","typeString":"enum IGovernor.ProposalState"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":852,"name":"ProposalState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"14034:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ProposalState_$1322_$","typeString":"type(enum IGovernor.ProposalState)"}},"id":853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14048:8:0","memberName":"Executed","nodeType":"MemberAccess","referencedDeclaration":1321,"src":"14034:22:0","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1322","typeString":"enum IGovernor.ProposalState"}},"src":"14024:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13953:103:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476f7665726e6f723a2070726f706f73616c206e6f7420616374697665","id":856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14070:31:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9df62e32cc9e9c02131fa3d2189c515bf05634e5979aec1a0e5b3a9e44a36d0b","typeString":"literal_string \"Governor: proposal not active\""},"value":"Governor: proposal not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9df62e32cc9e9c02131fa3d2189c515bf05634e5979aec1a0e5b3a9e44a36d0b","typeString":"literal_string \"Governor: proposal not active\""}],"id":841,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13932:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13932:179:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":858,"nodeType":"ExpressionStatement","src":"13932:179:0"},{"expression":{"id":864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":859,"name":"_proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"14121:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProposalCore_$57_storage_$","typeString":"mapping(uint256 => struct Governor.ProposalCore storage ref)"}},"id":861,"indexExpression":{"id":860,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"14132:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14121:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$57_storage","typeString":"struct Governor.ProposalCore storage ref"}},"id":862,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14144:8:0","memberName":"canceled","nodeType":"MemberAccess","referencedDeclaration":56,"src":"14121:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14155:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"14121:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":865,"nodeType":"ExpressionStatement","src":"14121:38:0"},{"eventCall":{"arguments":[{"id":867,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"14192:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":866,"name":"ProposalCanceled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"14175:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14175:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":869,"nodeType":"EmitStatement","src":"14170:33:0"},{"expression":{"id":870,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"14221:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":824,"id":871,"nodeType":"Return","src":"14214:17:0"}]},"documentation":{"id":809,"nodeType":"StructuredDocumentation","src":"13330:256:0","text":" @dev Internal cancel mechanism: locks up the proposal timer, preventing it from being re-submitted. Marks it as\n canceled to allow distinguishing it from executed proposals.\n Emits a {IGovernor-ProposalCanceled} event."},"id":873,"implemented":true,"kind":"function","modifiers":[],"name":"_cancel","nameLocation":"13600:7:0","nodeType":"FunctionDefinition","parameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":812,"mutability":"mutable","name":"targets","nameLocation":"13634:7:0","nodeType":"VariableDeclaration","scope":873,"src":"13617:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":810,"name":"address","nodeType":"ElementaryTypeName","src":"13617:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":811,"nodeType":"ArrayTypeName","src":"13617:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":815,"mutability":"mutable","name":"values","nameLocation":"13668:6:0","nodeType":"VariableDeclaration","scope":873,"src":"13651:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":813,"name":"uint256","nodeType":"ElementaryTypeName","src":"13651:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":814,"nodeType":"ArrayTypeName","src":"13651:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":818,"mutability":"mutable","name":"calldatas","nameLocation":"13699:9:0","nodeType":"VariableDeclaration","scope":873,"src":"13684:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":816,"name":"bytes","nodeType":"ElementaryTypeName","src":"13684:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":817,"nodeType":"ArrayTypeName","src":"13684:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":820,"mutability":"mutable","name":"descriptionHash","nameLocation":"13726:15:0","nodeType":"VariableDeclaration","scope":873,"src":"13718:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":819,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13718:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13607:140:0"},"returnParameters":{"id":824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":873,"src":"13774:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":822,"name":"uint256","nodeType":"ElementaryTypeName","src":"13774:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13773:9:0"},"scope":1307,"src":"13591:647:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1475],"body":{"id":891,"nodeType":"Block","src":"14401:73:0","statements":[{"expression":{"arguments":[{"id":885,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"14428:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":886,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"14437:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":887,"name":"_defaultParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"14450:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes_memory_ptr_$","typeString":"function () view returns (bytes memory)"}},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14450:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":884,"name":"_getVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"14418:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,uint256,bytes memory) view returns (uint256)"}},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14418:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":883,"id":890,"nodeType":"Return","src":"14411:56:0"}]},"documentation":{"id":874,"nodeType":"StructuredDocumentation","src":"14244:49:0","text":" @dev See {IGovernor-getVotes}."},"functionSelector":"eb9019d4","id":892,"implemented":true,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"14307:8:0","nodeType":"FunctionDefinition","overrides":{"id":880,"nodeType":"OverrideSpecifier","overrides":[],"src":"14374:8:0"},"parameters":{"id":879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":876,"mutability":"mutable","name":"account","nameLocation":"14324:7:0","nodeType":"VariableDeclaration","scope":892,"src":"14316:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":875,"name":"address","nodeType":"ElementaryTypeName","src":"14316:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":878,"mutability":"mutable","name":"blockNumber","nameLocation":"14341:11:0","nodeType":"VariableDeclaration","scope":892,"src":"14333:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":877,"name":"uint256","nodeType":"ElementaryTypeName","src":"14333:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14315:38:0"},"returnParameters":{"id":883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":892,"src":"14392:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":881,"name":"uint256","nodeType":"ElementaryTypeName","src":"14392:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14391:9:0"},"scope":1307,"src":"14298:176:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1487],"body":{"id":911,"nodeType":"Block","src":"14708:63:0","statements":[{"expression":{"arguments":[{"id":906,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"14735:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":907,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"14744:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":908,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"14757:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":905,"name":"_getVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"14725:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,uint256,bytes memory) view returns (uint256)"}},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14725:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":904,"id":910,"nodeType":"Return","src":"14718:46:0"}]},"documentation":{"id":893,"nodeType":"StructuredDocumentation","src":"14480:59:0","text":" @dev See {IGovernor-getVotesWithParams}."},"functionSelector":"9a802a6d","id":912,"implemented":true,"kind":"function","modifiers":[],"name":"getVotesWithParams","nameLocation":"14553:18:0","nodeType":"FunctionDefinition","overrides":{"id":901,"nodeType":"OverrideSpecifier","overrides":[],"src":"14681:8:0"},"parameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":895,"mutability":"mutable","name":"account","nameLocation":"14589:7:0","nodeType":"VariableDeclaration","scope":912,"src":"14581:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":894,"name":"address","nodeType":"ElementaryTypeName","src":"14581:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":897,"mutability":"mutable","name":"blockNumber","nameLocation":"14614:11:0","nodeType":"VariableDeclaration","scope":912,"src":"14606:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":896,"name":"uint256","nodeType":"ElementaryTypeName","src":"14606:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":899,"mutability":"mutable","name":"params","nameLocation":"14648:6:0","nodeType":"VariableDeclaration","scope":912,"src":"14635:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":898,"name":"bytes","nodeType":"ElementaryTypeName","src":"14635:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14571:89:0"},"returnParameters":{"id":904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":912,"src":"14699:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":902,"name":"uint256","nodeType":"ElementaryTypeName","src":"14699:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14698:9:0"},"scope":1307,"src":"14544:227:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1541],"body":{"id":935,"nodeType":"Block","src":"14926:103:0","statements":[{"assignments":[924],"declarations":[{"constant":false,"id":924,"mutability":"mutable","name":"voter","nameLocation":"14944:5:0","nodeType":"VariableDeclaration","scope":935,"src":"14936:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":923,"name":"address","nodeType":"ElementaryTypeName","src":"14936:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":927,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":925,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"14952:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14952:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14936:28:0"},{"expression":{"arguments":[{"id":929,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"14991:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":930,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"15003:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":931,"name":"support","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"15010:7:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"hexValue":"","id":932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15019:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":928,"name":"_castVote","nodeType":"Identifier","overloadedDeclarations":[1117,1196],"referencedDeclaration":1117,"src":"14981:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint8_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,address,uint8,string memory) returns (uint256)"}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14981:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":922,"id":934,"nodeType":"Return","src":"14974:48:0"}]},"documentation":{"id":913,"nodeType":"StructuredDocumentation","src":"14777:49:0","text":" @dev See {IGovernor-castVote}."},"functionSelector":"56781388","id":936,"implemented":true,"kind":"function","modifiers":[],"name":"castVote","nameLocation":"14840:8:0","nodeType":"FunctionDefinition","overrides":{"id":919,"nodeType":"OverrideSpecifier","overrides":[],"src":"14899:8:0"},"parameters":{"id":918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":915,"mutability":"mutable","name":"proposalId","nameLocation":"14857:10:0","nodeType":"VariableDeclaration","scope":936,"src":"14849:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":914,"name":"uint256","nodeType":"ElementaryTypeName","src":"14849:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":917,"mutability":"mutable","name":"support","nameLocation":"14875:7:0","nodeType":"VariableDeclaration","scope":936,"src":"14869:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":916,"name":"uint8","nodeType":"ElementaryTypeName","src":"14869:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"14848:35:0"},"returnParameters":{"id":922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":936,"src":"14917:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":920,"name":"uint256","nodeType":"ElementaryTypeName","src":"14917:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14916:9:0"},"scope":1307,"src":"14831:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1553],"body":{"id":961,"nodeType":"Block","src":"15258:107:0","statements":[{"assignments":[950],"declarations":[{"constant":false,"id":950,"mutability":"mutable","name":"voter","nameLocation":"15276:5:0","nodeType":"VariableDeclaration","scope":961,"src":"15268:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":949,"name":"address","nodeType":"ElementaryTypeName","src":"15268:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":953,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":951,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"15284:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15284:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15268:28:0"},{"expression":{"arguments":[{"id":955,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"15323:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":956,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"15335:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":957,"name":"support","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"15342:7:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":958,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"15351:6:0","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":954,"name":"_castVote","nodeType":"Identifier","overloadedDeclarations":[1117,1196],"referencedDeclaration":1117,"src":"15313:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint8_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,address,uint8,string memory) returns (uint256)"}},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15313:45:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":948,"id":960,"nodeType":"Return","src":"15306:52:0"}]},"documentation":{"id":937,"nodeType":"StructuredDocumentation","src":"15035:59:0","text":" @dev See {IGovernor-castVoteWithReason}."},"functionSelector":"7b3c71d3","id":962,"implemented":true,"kind":"function","modifiers":[],"name":"castVoteWithReason","nameLocation":"15108:18:0","nodeType":"FunctionDefinition","overrides":{"id":945,"nodeType":"OverrideSpecifier","overrides":[],"src":"15231:8:0"},"parameters":{"id":944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":939,"mutability":"mutable","name":"proposalId","nameLocation":"15144:10:0","nodeType":"VariableDeclaration","scope":962,"src":"15136:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":938,"name":"uint256","nodeType":"ElementaryTypeName","src":"15136:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":941,"mutability":"mutable","name":"support","nameLocation":"15170:7:0","nodeType":"VariableDeclaration","scope":962,"src":"15164:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":940,"name":"uint8","nodeType":"ElementaryTypeName","src":"15164:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":943,"mutability":"mutable","name":"reason","nameLocation":"15203:6:0","nodeType":"VariableDeclaration","scope":962,"src":"15187:22:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":942,"name":"string","nodeType":"ElementaryTypeName","src":"15187:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15126:89:0"},"returnParameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":962,"src":"15249:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":946,"name":"uint256","nodeType":"ElementaryTypeName","src":"15249:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15248:9:0"},"scope":1307,"src":"15099:266:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1567],"body":{"id":990,"nodeType":"Block","src":"15641:115:0","statements":[{"assignments":[978],"declarations":[{"constant":false,"id":978,"mutability":"mutable","name":"voter","nameLocation":"15659:5:0","nodeType":"VariableDeclaration","scope":990,"src":"15651:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":977,"name":"address","nodeType":"ElementaryTypeName","src":"15651:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":981,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":979,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"15667:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15667:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15651:28:0"},{"expression":{"arguments":[{"id":983,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"15706:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":984,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"15718:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":985,"name":"support","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"15725:7:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":986,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"15734:6:0","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":987,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"15742:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":982,"name":"_castVote","nodeType":"Identifier","overloadedDeclarations":[1117,1196],"referencedDeclaration":1196,"src":"15696:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint8_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,address,uint8,string memory,bytes memory) returns (uint256)"}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15696:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":976,"id":989,"nodeType":"Return","src":"15689:60:0"}]},"documentation":{"id":963,"nodeType":"StructuredDocumentation","src":"15371:68:0","text":" @dev See {IGovernor-castVoteWithReasonAndParams}."},"functionSelector":"5f398a14","id":991,"implemented":true,"kind":"function","modifiers":[],"name":"castVoteWithReasonAndParams","nameLocation":"15453:27:0","nodeType":"FunctionDefinition","overrides":{"id":973,"nodeType":"OverrideSpecifier","overrides":[],"src":"15614:8:0"},"parameters":{"id":972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"proposalId","nameLocation":"15498:10:0","nodeType":"VariableDeclaration","scope":991,"src":"15490:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":964,"name":"uint256","nodeType":"ElementaryTypeName","src":"15490:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":967,"mutability":"mutable","name":"support","nameLocation":"15524:7:0","nodeType":"VariableDeclaration","scope":991,"src":"15518:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":966,"name":"uint8","nodeType":"ElementaryTypeName","src":"15518:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":969,"mutability":"mutable","name":"reason","nameLocation":"15557:6:0","nodeType":"VariableDeclaration","scope":991,"src":"15541:22:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":968,"name":"string","nodeType":"ElementaryTypeName","src":"15541:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":971,"mutability":"mutable","name":"params","nameLocation":"15586:6:0","nodeType":"VariableDeclaration","scope":991,"src":"15573:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":970,"name":"bytes","nodeType":"ElementaryTypeName","src":"15573:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15480:118:0"},"returnParameters":{"id":976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":991,"src":"15632:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":974,"name":"uint256","nodeType":"ElementaryTypeName","src":"15632:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15631:9:0"},"scope":1307,"src":"15444:312:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1583],"body":{"id":1034,"nodeType":"Block","src":"15998:250:0","statements":[{"assignments":[1009],"declarations":[{"constant":false,"id":1009,"mutability":"mutable","name":"voter","nameLocation":"16016:5:0","nodeType":"VariableDeclaration","scope":1034,"src":"16008:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1008,"name":"address","nodeType":"ElementaryTypeName","src":"16008:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1026,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":1016,"name":"BALLOT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"16089:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1017,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"16106:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1018,"name":"support","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"16118:7:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":1014,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16078:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16082:6:0","memberName":"encode","nodeType":"MemberAccess","src":"16078:10:0","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16078:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1013,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"16068:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16068:59:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1012,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"16051:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16051:77:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1022,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"16142:1:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1023,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"16157:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1024,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"16172:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1010,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"16024:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$4863_$","typeString":"type(library ECDSA)"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16030:7:0","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":4803,"src":"16024:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16024:159:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16008:175:0"},{"expression":{"arguments":[{"id":1028,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"16210:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1029,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"16222:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1030,"name":"support","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"16229:7:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"hexValue":"","id":1031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16238:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1027,"name":"_castVote","nodeType":"Identifier","overloadedDeclarations":[1117,1196],"referencedDeclaration":1117,"src":"16200:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint8_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,address,uint8,string memory) returns (uint256)"}},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16200:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1007,"id":1033,"nodeType":"Return","src":"16193:48:0"}]},"documentation":{"id":992,"nodeType":"StructuredDocumentation","src":"15762:54:0","text":" @dev See {IGovernor-castVoteBySig}."},"functionSelector":"3bccf4fd","id":1035,"implemented":true,"kind":"function","modifiers":[],"name":"castVoteBySig","nameLocation":"15830:13:0","nodeType":"FunctionDefinition","overrides":{"id":1004,"nodeType":"OverrideSpecifier","overrides":[],"src":"15971:8:0"},"parameters":{"id":1003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":994,"mutability":"mutable","name":"proposalId","nameLocation":"15861:10:0","nodeType":"VariableDeclaration","scope":1035,"src":"15853:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":993,"name":"uint256","nodeType":"ElementaryTypeName","src":"15853:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":996,"mutability":"mutable","name":"support","nameLocation":"15887:7:0","nodeType":"VariableDeclaration","scope":1035,"src":"15881:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":995,"name":"uint8","nodeType":"ElementaryTypeName","src":"15881:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":998,"mutability":"mutable","name":"v","nameLocation":"15910:1:0","nodeType":"VariableDeclaration","scope":1035,"src":"15904:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":997,"name":"uint8","nodeType":"ElementaryTypeName","src":"15904:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1000,"mutability":"mutable","name":"r","nameLocation":"15929:1:0","nodeType":"VariableDeclaration","scope":1035,"src":"15921:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":999,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15921:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1002,"mutability":"mutable","name":"s","nameLocation":"15948:1:0","nodeType":"VariableDeclaration","scope":1035,"src":"15940:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1001,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15940:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15843:112:0"},"returnParameters":{"id":1007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1035,"src":"15989:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1005,"name":"uint256","nodeType":"ElementaryTypeName","src":"15989:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15988:9:0"},"scope":1307,"src":"15821:427:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1603],"body":{"id":1092,"nodeType":"Block","src":"16589:527:0","statements":[{"assignments":[1057],"declarations":[{"constant":false,"id":1057,"mutability":"mutable","name":"voter","nameLocation":"16607:5:0","nodeType":"VariableDeclaration","scope":1092,"src":"16599:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1056,"name":"address","nodeType":"ElementaryTypeName","src":"16599:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1083,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":1064,"name":"EXTENDED_BALLOT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"16743:24:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1065,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"16793:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1066,"name":"support","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"16829:7:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[{"arguments":[{"id":1070,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"16878:6:0","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":1069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16872:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1068,"name":"bytes","nodeType":"ElementaryTypeName","src":"16872:5:0","typeDescriptions":{}}},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16872:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1067,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"16862:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16862:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":1074,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"16922:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1073,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"16912:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16912:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1062,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16707:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16711:6:0","memberName":"encode","nodeType":"MemberAccess","src":"16707:10:0","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16707:244:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1061,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"16676:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16676:293:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1060,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"16642:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16642:341:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1079,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"16997:1:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1080,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"17012:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1081,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"17027:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1058,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"16615:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$4863_$","typeString":"type(library ECDSA)"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16621:7:0","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":4803,"src":"16615:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16615:423:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16599:439:0"},{"expression":{"arguments":[{"id":1085,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"17066:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1086,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"17078:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1087,"name":"support","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"17085:7:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1088,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"17094:6:0","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":1089,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"17102:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1084,"name":"_castVote","nodeType":"Identifier","overloadedDeclarations":[1117,1196],"referencedDeclaration":1196,"src":"17056:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint8_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,address,uint8,string memory,bytes memory) returns (uint256)"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17056:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1055,"id":1091,"nodeType":"Return","src":"17049:60:0"}]},"documentation":{"id":1036,"nodeType":"StructuredDocumentation","src":"16254:73:0","text":" @dev See {IGovernor-castVoteWithReasonAndParamsBySig}."},"functionSelector":"03420181","id":1093,"implemented":true,"kind":"function","modifiers":[],"name":"castVoteWithReasonAndParamsBySig","nameLocation":"16341:32:0","nodeType":"FunctionDefinition","overrides":{"id":1052,"nodeType":"OverrideSpecifier","overrides":[],"src":"16562:8:0"},"parameters":{"id":1051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1038,"mutability":"mutable","name":"proposalId","nameLocation":"16391:10:0","nodeType":"VariableDeclaration","scope":1093,"src":"16383:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1037,"name":"uint256","nodeType":"ElementaryTypeName","src":"16383:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1040,"mutability":"mutable","name":"support","nameLocation":"16417:7:0","nodeType":"VariableDeclaration","scope":1093,"src":"16411:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1039,"name":"uint8","nodeType":"ElementaryTypeName","src":"16411:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1042,"mutability":"mutable","name":"reason","nameLocation":"16450:6:0","nodeType":"VariableDeclaration","scope":1093,"src":"16434:22:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":1041,"name":"string","nodeType":"ElementaryTypeName","src":"16434:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1044,"mutability":"mutable","name":"params","nameLocation":"16479:6:0","nodeType":"VariableDeclaration","scope":1093,"src":"16466:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1043,"name":"bytes","nodeType":"ElementaryTypeName","src":"16466:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1046,"mutability":"mutable","name":"v","nameLocation":"16501:1:0","nodeType":"VariableDeclaration","scope":1093,"src":"16495:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1045,"name":"uint8","nodeType":"ElementaryTypeName","src":"16495:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1048,"mutability":"mutable","name":"r","nameLocation":"16520:1:0","nodeType":"VariableDeclaration","scope":1093,"src":"16512:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1047,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16512:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1050,"mutability":"mutable","name":"s","nameLocation":"16539:1:0","nodeType":"VariableDeclaration","scope":1093,"src":"16531:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1049,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16531:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16373:173:0"},"returnParameters":{"id":1055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1093,"src":"16580:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1053,"name":"uint256","nodeType":"ElementaryTypeName","src":"16580:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16579:9:0"},"scope":1307,"src":"16332:784:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1116,"nodeType":"Block","src":"17591:89:0","statements":[{"expression":{"arguments":[{"id":1108,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"17618:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1109,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"17630:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1110,"name":"support","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"17639:7:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1111,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"17648:6:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1112,"name":"_defaultParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"17656:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes_memory_ptr_$","typeString":"function () view returns (bytes memory)"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17656:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1107,"name":"_castVote","nodeType":"Identifier","overloadedDeclarations":[1117,1196],"referencedDeclaration":1196,"src":"17608:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint8_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,address,uint8,string memory,bytes memory) returns (uint256)"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17608:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1106,"id":1115,"nodeType":"Return","src":"17601:72:0"}]},"documentation":{"id":1094,"nodeType":"StructuredDocumentation","src":"17122:298:0","text":" @dev Internal vote casting mechanism: Check that the vote is pending, that it has not been cast yet, retrieve\n voting weight using {IGovernor-getVotes} and call the {_countVote} internal function. Uses the _defaultParams().\n Emits a {IGovernor-VoteCast} event."},"id":1117,"implemented":true,"kind":"function","modifiers":[],"name":"_castVote","nameLocation":"17434:9:0","nodeType":"FunctionDefinition","parameters":{"id":1103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1096,"mutability":"mutable","name":"proposalId","nameLocation":"17461:10:0","nodeType":"VariableDeclaration","scope":1117,"src":"17453:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1095,"name":"uint256","nodeType":"ElementaryTypeName","src":"17453:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1098,"mutability":"mutable","name":"account","nameLocation":"17489:7:0","nodeType":"VariableDeclaration","scope":1117,"src":"17481:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1097,"name":"address","nodeType":"ElementaryTypeName","src":"17481:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1100,"mutability":"mutable","name":"support","nameLocation":"17512:7:0","nodeType":"VariableDeclaration","scope":1117,"src":"17506:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1099,"name":"uint8","nodeType":"ElementaryTypeName","src":"17506:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1102,"mutability":"mutable","name":"reason","nameLocation":"17543:6:0","nodeType":"VariableDeclaration","scope":1117,"src":"17529:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1101,"name":"string","nodeType":"ElementaryTypeName","src":"17529:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17443:112:0"},"returnParameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1117,"src":"17582:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1104,"name":"uint256","nodeType":"ElementaryTypeName","src":"17582:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17581:9:0"},"scope":1307,"src":"17425:255:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1195,"nodeType":"Block","src":"18157:574:0","statements":[{"assignments":[1135],"declarations":[{"constant":false,"id":1135,"mutability":"mutable","name":"proposal","nameLocation":"18188:8:0","nodeType":"VariableDeclaration","scope":1195,"src":"18167:29:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$57_storage_ptr","typeString":"struct Governor.ProposalCore"},"typeName":{"id":1134,"nodeType":"UserDefinedTypeName","pathNode":{"id":1133,"name":"ProposalCore","nameLocations":["18167:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"18167:12:0"},"referencedDeclaration":57,"src":"18167:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$57_storage_ptr","typeString":"struct Governor.ProposalCore"}},"visibility":"internal"}],"id":1139,"initialValue":{"baseExpression":{"id":1136,"name":"_proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"18199:10:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProposalCore_$57_storage_$","typeString":"mapping(uint256 => struct Governor.ProposalCore storage ref)"}},"id":1138,"indexExpression":{"id":1137,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"18210:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18199:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$57_storage","typeString":"struct Governor.ProposalCore storage ref"}},"nodeType":"VariableDeclarationStatement","src":"18167:54:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_ProposalState_$1322","typeString":"enum IGovernor.ProposalState"},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1142,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"18245:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1141,"name":"state","nodeType":"Identifier","overloadedDeclarations":[325],"referencedDeclaration":325,"src":"18239:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_enum$_ProposalState_$1322_$","typeString":"function (uint256) view returns (enum IGovernor.ProposalState)"}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18239:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1322","typeString":"enum IGovernor.ProposalState"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1144,"name":"ProposalState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"18260:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ProposalState_$1322_$","typeString":"type(enum IGovernor.ProposalState)"}},"id":1145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18274:6:0","memberName":"Active","nodeType":"MemberAccess","referencedDeclaration":1315,"src":"18260:20:0","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1322","typeString":"enum IGovernor.ProposalState"}},"src":"18239:41:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476f7665726e6f723a20766f7465206e6f742063757272656e746c7920616374697665","id":1147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18282:37:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b1e239298a1362f9b5245bd4e9393de28380a12326aa31532e03fe3f1061d80","typeString":"literal_string \"Governor: vote not currently active\""},"value":"Governor: vote not currently active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5b1e239298a1362f9b5245bd4e9393de28380a12326aa31532e03fe3f1061d80","typeString":"literal_string \"Governor: vote not currently active\""}],"id":1140,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18231:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18231:89:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1149,"nodeType":"ExpressionStatement","src":"18231:89:0"},{"assignments":[1151],"declarations":[{"constant":false,"id":1151,"mutability":"mutable","name":"weight","nameLocation":"18339:6:0","nodeType":"VariableDeclaration","scope":1195,"src":"18331:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1150,"name":"uint256","nodeType":"ElementaryTypeName","src":"18331:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1160,"initialValue":{"arguments":[{"id":1153,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"18358:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":1154,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"18367:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalCore_$57_storage_ptr","typeString":"struct Governor.ProposalCore storage pointer"}},"id":1155,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18376:9:0","memberName":"voteStart","nodeType":"MemberAccess","referencedDeclaration":49,"src":"18367:18:0","typeDescriptions":{"typeIdentifier":"t_struct$_BlockNumber_$4399_storage","typeString":"struct Timers.BlockNumber storage ref"}},"id":1156,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18386:11:0","memberName":"getDeadline","nodeType":"MemberAccess","referencedDeclaration":4411,"src":"18367:30:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_BlockNumber_$4399_memory_ptr_$returns$_t_uint64_$bound_to$_t_struct$_BlockNumber_$4399_memory_ptr_$","typeString":"function (struct Timers.BlockNumber memory) pure returns (uint64)"}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18367:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1158,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"18401:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1152,"name":"_getVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"18348:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,uint256,bytes memory) view returns (uint256)"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18348:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18331:77:0"},{"expression":{"arguments":[{"id":1162,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"18429:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1163,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"18441:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1164,"name":"support","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"18450:7:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1165,"name":"weight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"18459:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1166,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"18467:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1161,"name":"_countVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"18418:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint8_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,address,uint8,uint256,bytes memory)"}},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18418:56:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1168,"nodeType":"ExpressionStatement","src":"18418:56:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1169,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"18489:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18496:6:0","memberName":"length","nodeType":"MemberAccess","src":"18489:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18506:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18489:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1191,"nodeType":"Block","src":"18599:102:0","statements":[{"eventCall":{"arguments":[{"id":1183,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"18637:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1184,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"18646:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1185,"name":"support","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"18658:7:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1186,"name":"weight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"18667:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1187,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"18675:6:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1188,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"18683:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1182,"name":"VoteCastWithParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"18618:18:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint8_$_t_uint256_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint8,uint256,string memory,bytes memory)"}},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18618:72:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1190,"nodeType":"EmitStatement","src":"18613:77:0"}]},"id":1192,"nodeType":"IfStatement","src":"18485:216:0","trueBody":{"id":1181,"nodeType":"Block","src":"18509:84:0","statements":[{"eventCall":{"arguments":[{"id":1174,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"18537:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1175,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"18546:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1176,"name":"support","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"18558:7:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1177,"name":"weight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"18567:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1178,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"18575:6:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1173,"name":"VoteCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"18528:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint8_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint8,uint256,string memory)"}},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18528:54:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1180,"nodeType":"EmitStatement","src":"18523:59:0"}]}},{"expression":{"id":1193,"name":"weight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"18718:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1132,"id":1194,"nodeType":"Return","src":"18711:13:0"}]},"documentation":{"id":1118,"nodeType":"StructuredDocumentation","src":"17686:271:0","text":" @dev Internal vote casting mechanism: Check that the vote is pending, that it has not been cast yet, retrieve\n voting weight using {IGovernor-getVotes} and call the {_countVote} internal function.\n Emits a {IGovernor-VoteCast} event."},"id":1196,"implemented":true,"kind":"function","modifiers":[],"name":"_castVote","nameLocation":"17971:9:0","nodeType":"FunctionDefinition","parameters":{"id":1129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1120,"mutability":"mutable","name":"proposalId","nameLocation":"17998:10:0","nodeType":"VariableDeclaration","scope":1196,"src":"17990:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1119,"name":"uint256","nodeType":"ElementaryTypeName","src":"17990:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1122,"mutability":"mutable","name":"account","nameLocation":"18026:7:0","nodeType":"VariableDeclaration","scope":1196,"src":"18018:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1121,"name":"address","nodeType":"ElementaryTypeName","src":"18018:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1124,"mutability":"mutable","name":"support","nameLocation":"18049:7:0","nodeType":"VariableDeclaration","scope":1196,"src":"18043:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1123,"name":"uint8","nodeType":"ElementaryTypeName","src":"18043:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1126,"mutability":"mutable","name":"reason","nameLocation":"18080:6:0","nodeType":"VariableDeclaration","scope":1196,"src":"18066:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1125,"name":"string","nodeType":"ElementaryTypeName","src":"18066:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1128,"mutability":"mutable","name":"params","nameLocation":"18109:6:0","nodeType":"VariableDeclaration","scope":1196,"src":"18096:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1127,"name":"bytes","nodeType":"ElementaryTypeName","src":"18096:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17980:141:0"},"returnParameters":{"id":1132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1131,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1196,"src":"18148:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1130,"name":"uint256","nodeType":"ElementaryTypeName","src":"18148:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18147:9:0"},"scope":1307,"src":"17962:769:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1227,"nodeType":"Block","src":"19319:189:0","statements":[{"assignments":[1209,1211],"declarations":[{"constant":false,"id":1209,"mutability":"mutable","name":"success","nameLocation":"19335:7:0","nodeType":"VariableDeclaration","scope":1227,"src":"19330:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1208,"name":"bool","nodeType":"ElementaryTypeName","src":"19330:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1211,"mutability":"mutable","name":"returndata","nameLocation":"19357:10:0","nodeType":"VariableDeclaration","scope":1227,"src":"19344:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1210,"name":"bytes","nodeType":"ElementaryTypeName","src":"19344:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1218,"initialValue":{"arguments":[{"id":1216,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"19397:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1212,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"19371:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19378:4:0","memberName":"call","nodeType":"MemberAccess","src":"19371:11:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1214,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"19390:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"19371:25:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19371:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"19329:73:0"},{"expression":{"arguments":[{"id":1222,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"19437:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1223,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"19446:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"476f7665726e6f723a2072656c617920726576657274656420776974686f7574206d657373616765","id":1224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19458:42:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_188c83882c79ccd2b8efe669664a276c8f2b924bc8cf22525168ceaa78c2598f","typeString":"literal_string \"Governor: relay reverted without message\""},"value":"Governor: relay reverted without message"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_188c83882c79ccd2b8efe669664a276c8f2b924bc8cf22525168ceaa78c2598f","typeString":"literal_string \"Governor: relay reverted without message\""}],"expression":{"id":1219,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"19412:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2720_$","typeString":"type(library Address)"}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19420:16:0","memberName":"verifyCallResult","nodeType":"MemberAccess","referencedDeclaration":2699,"src":"19412:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19412:89:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1226,"nodeType":"ExpressionStatement","src":"19412:89:0"}]},"documentation":{"id":1197,"nodeType":"StructuredDocumentation","src":"18737:440:0","text":" @dev Relays a transaction or function call to an arbitrary target. In cases where the governance executor\n is some contract other than the governor itself, like when using a timelock, this function can be invoked\n in a governance proposal to recover tokens or Ether that was sent to the governor contract by mistake.\n Note that if the executor is simply the governor itself, use of `relay` is redundant."},"functionSelector":"c28bc2fa","id":1228,"implemented":true,"kind":"function","modifiers":[{"id":1206,"kind":"modifierInvocation","modifierName":{"id":1205,"name":"onlyGovernance","nameLocations":["19304:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":104,"src":"19304:14:0"},"nodeType":"ModifierInvocation","src":"19304:14:0"}],"name":"relay","nameLocation":"19191:5:0","nodeType":"FunctionDefinition","parameters":{"id":1204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1199,"mutability":"mutable","name":"target","nameLocation":"19214:6:0","nodeType":"VariableDeclaration","scope":1228,"src":"19206:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1198,"name":"address","nodeType":"ElementaryTypeName","src":"19206:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1201,"mutability":"mutable","name":"value","nameLocation":"19238:5:0","nodeType":"VariableDeclaration","scope":1228,"src":"19230:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1200,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1203,"mutability":"mutable","name":"data","nameLocation":"19268:4:0","nodeType":"VariableDeclaration","scope":1228,"src":"19253:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1202,"name":"bytes","nodeType":"ElementaryTypeName","src":"19253:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19196:82:0"},"returnParameters":{"id":1207,"nodeType":"ParameterList","parameters":[],"src":"19319:0:0"},"scope":1307,"src":"19182:326:0","stateMutability":"payable","virtual":true,"visibility":"external"},{"body":{"id":1239,"nodeType":"Block","src":"19757:37:0","statements":[{"expression":{"arguments":[{"id":1236,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"19782:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Governor_$1307","typeString":"contract Governor"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Governor_$1307","typeString":"contract Governor"}],"id":1235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19774:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1234,"name":"address","nodeType":"ElementaryTypeName","src":"19774:7:0","typeDescriptions":{}}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19774:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1233,"id":1238,"nodeType":"Return","src":"19767:20:0"}]},"documentation":{"id":1229,"nodeType":"StructuredDocumentation","src":"19514:177:0","text":" @dev Address through which the governor executes action. Will be overloaded by module that execute actions\n through another contract such as a timelock."},"id":1240,"implemented":true,"kind":"function","modifiers":[],"name":"_executor","nameLocation":"19705:9:0","nodeType":"FunctionDefinition","parameters":{"id":1230,"nodeType":"ParameterList","parameters":[],"src":"19714:2:0"},"returnParameters":{"id":1233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1240,"src":"19748:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1231,"name":"address","nodeType":"ElementaryTypeName","src":"19748:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19747:9:0"},"scope":1307,"src":"19696:98:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2389],"body":{"id":1259,"nodeType":"Block","src":"20014:54:0","statements":[{"expression":{"expression":{"expression":{"id":1255,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"20031:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Governor_$1307","typeString":"contract Governor"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20036:16:0","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1260,"src":"20031:21:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20053:8:0","memberName":"selector","nodeType":"MemberAccess","src":"20031:30:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":1254,"id":1258,"nodeType":"Return","src":"20024:37:0"}]},"documentation":{"id":1241,"nodeType":"StructuredDocumentation","src":"19800:63:0","text":" @dev See {IERC721Receiver-onERC721Received}."},"functionSelector":"150b7a02","id":1260,"implemented":true,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"19877:16:0","nodeType":"FunctionDefinition","overrides":{"id":1251,"nodeType":"OverrideSpecifier","overrides":[],"src":"19988:8:0"},"parameters":{"id":1250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1260,"src":"19903:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1242,"name":"address","nodeType":"ElementaryTypeName","src":"19903:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1260,"src":"19920:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1244,"name":"address","nodeType":"ElementaryTypeName","src":"19920:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1260,"src":"19937:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1246,"name":"uint256","nodeType":"ElementaryTypeName","src":"19937:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1260,"src":"19954:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1248,"name":"bytes","nodeType":"ElementaryTypeName","src":"19954:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19893:79:0"},"returnParameters":{"id":1254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1260,"src":"20006:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1252,"name":"bytes4","nodeType":"ElementaryTypeName","src":"20006:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"20005:8:0"},"scope":1307,"src":"19868:200:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2353],"body":{"id":1281,"nodeType":"Block","src":"20308:55:0","statements":[{"expression":{"expression":{"expression":{"id":1277,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"20325:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Governor_$1307","typeString":"contract Governor"}},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20330:17:0","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1282,"src":"20325:22:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":1279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20348:8:0","memberName":"selector","nodeType":"MemberAccess","src":"20325:31:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":1276,"id":1280,"nodeType":"Return","src":"20318:38:0"}]},"documentation":{"id":1261,"nodeType":"StructuredDocumentation","src":"20074:65:0","text":" @dev See {IERC1155Receiver-onERC1155Received}."},"functionSelector":"f23a6e61","id":1282,"implemented":true,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"20153:17:0","nodeType":"FunctionDefinition","overrides":{"id":1273,"nodeType":"OverrideSpecifier","overrides":[],"src":"20282:8:0"},"parameters":{"id":1272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1282,"src":"20180:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1262,"name":"address","nodeType":"ElementaryTypeName","src":"20180:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1282,"src":"20197:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1264,"name":"address","nodeType":"ElementaryTypeName","src":"20197:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1282,"src":"20214:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1266,"name":"uint256","nodeType":"ElementaryTypeName","src":"20214:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1282,"src":"20231:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1268,"name":"uint256","nodeType":"ElementaryTypeName","src":"20231:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1282,"src":"20248:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1270,"name":"bytes","nodeType":"ElementaryTypeName","src":"20248:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20170:96:0"},"returnParameters":{"id":1276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1282,"src":"20300:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1274,"name":"bytes4","nodeType":"ElementaryTypeName","src":"20300:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"20299:8:0"},"scope":1307,"src":"20144:219:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2371],"body":{"id":1305,"nodeType":"Block","src":"20631:60:0","statements":[{"expression":{"expression":{"expression":{"id":1301,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"20648:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Governor_$1307","typeString":"contract Governor"}},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20653:22:0","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1306,"src":"20648:27:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20676:8:0","memberName":"selector","nodeType":"MemberAccess","src":"20648:36:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":1300,"id":1304,"nodeType":"Return","src":"20641:43:0"}]},"documentation":{"id":1283,"nodeType":"StructuredDocumentation","src":"20369:70:0","text":" @dev See {IERC1155Receiver-onERC1155BatchReceived}."},"functionSelector":"bc197c81","id":1306,"implemented":true,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"20453:22:0","nodeType":"FunctionDefinition","overrides":{"id":1297,"nodeType":"OverrideSpecifier","overrides":[],"src":"20605:8:0"},"parameters":{"id":1296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1306,"src":"20485:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1284,"name":"address","nodeType":"ElementaryTypeName","src":"20485:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1306,"src":"20502:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1286,"name":"address","nodeType":"ElementaryTypeName","src":"20502:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1306,"src":"20519:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1288,"name":"uint256","nodeType":"ElementaryTypeName","src":"20519:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1289,"nodeType":"ArrayTypeName","src":"20519:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1306,"src":"20545:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1291,"name":"uint256","nodeType":"ElementaryTypeName","src":"20545:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1292,"nodeType":"ArrayTypeName","src":"20545:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1306,"src":"20571:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1294,"name":"bytes","nodeType":"ElementaryTypeName","src":"20571:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20475:114:0"},"returnParameters":{"id":1300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1306,"src":"20623:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1298,"name":"bytes4","nodeType":"ElementaryTypeName","src":"20623:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"20622:8:0"},"scope":1307,"src":"20444:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1308,"src":"998:19695:0","usedErrors":[7466]}],"src":"107:20587:0"},"id":0},"@openzeppelin/contracts/governance/IGovernor.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/IGovernor.sol","exportedSymbols":{"ERC165":[5041],"IERC165":[5053],"IGovernor":[1604]},"id":1605,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1309,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":1310,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1605,"sourceUnit":5042,"src":"133:43:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1312,"name":"IERC165","nameLocations":["289:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":5053,"src":"289:7:1"},"id":1313,"nodeType":"InheritanceSpecifier","src":"289:7:1"}],"canonicalName":"IGovernor","contractDependencies":[],"contractKind":"contract","documentation":{"id":1311,"nodeType":"StructuredDocumentation","src":"178:79:1","text":" @dev Interface of the {Governor} core.\n _Available since v4.3._"},"fullyImplemented":false,"id":1604,"linearizedBaseContracts":[1604,5053],"name":"IGovernor","nameLocation":"276:9:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IGovernor.ProposalState","id":1322,"members":[{"id":1314,"name":"Pending","nameLocation":"332:7:1","nodeType":"EnumValue","src":"332:7:1"},{"id":1315,"name":"Active","nameLocation":"349:6:1","nodeType":"EnumValue","src":"349:6:1"},{"id":1316,"name":"Canceled","nameLocation":"365:8:1","nodeType":"EnumValue","src":"365:8:1"},{"id":1317,"name":"Defeated","nameLocation":"383:8:1","nodeType":"EnumValue","src":"383:8:1"},{"id":1318,"name":"Succeeded","nameLocation":"401:9:1","nodeType":"EnumValue","src":"401:9:1"},{"id":1319,"name":"Queued","nameLocation":"420:6:1","nodeType":"EnumValue","src":"420:6:1"},{"id":1320,"name":"Expired","nameLocation":"436:7:1","nodeType":"EnumValue","src":"436:7:1"},{"id":1321,"name":"Executed","nameLocation":"453:8:1","nodeType":"EnumValue","src":"453:8:1"}],"name":"ProposalState","nameLocation":"308:13:1","nodeType":"EnumDefinition","src":"303:164:1"},{"anonymous":false,"documentation":{"id":1323,"nodeType":"StructuredDocumentation","src":"473:59:1","text":" @dev Emitted when a proposal is created."},"eventSelector":"7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e0","id":1347,"name":"ProposalCreated","nameLocation":"543:15:1","nodeType":"EventDefinition","parameters":{"id":1346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1325,"indexed":false,"mutability":"mutable","name":"proposalId","nameLocation":"576:10:1","nodeType":"VariableDeclaration","scope":1347,"src":"568:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1324,"name":"uint256","nodeType":"ElementaryTypeName","src":"568:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1327,"indexed":false,"mutability":"mutable","name":"proposer","nameLocation":"604:8:1","nodeType":"VariableDeclaration","scope":1347,"src":"596:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1326,"name":"address","nodeType":"ElementaryTypeName","src":"596:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1330,"indexed":false,"mutability":"mutable","name":"targets","nameLocation":"632:7:1","nodeType":"VariableDeclaration","scope":1347,"src":"622:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1328,"name":"address","nodeType":"ElementaryTypeName","src":"622:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1329,"nodeType":"ArrayTypeName","src":"622:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1333,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"659:6:1","nodeType":"VariableDeclaration","scope":1347,"src":"649:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1331,"name":"uint256","nodeType":"ElementaryTypeName","src":"649:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1332,"nodeType":"ArrayTypeName","src":"649:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1336,"indexed":false,"mutability":"mutable","name":"signatures","nameLocation":"684:10:1","nodeType":"VariableDeclaration","scope":1347,"src":"675:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1334,"name":"string","nodeType":"ElementaryTypeName","src":"675:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1335,"nodeType":"ArrayTypeName","src":"675:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":1339,"indexed":false,"mutability":"mutable","name":"calldatas","nameLocation":"712:9:1","nodeType":"VariableDeclaration","scope":1347,"src":"704:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1337,"name":"bytes","nodeType":"ElementaryTypeName","src":"704:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1338,"nodeType":"ArrayTypeName","src":"704:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":1341,"indexed":false,"mutability":"mutable","name":"startBlock","nameLocation":"739:10:1","nodeType":"VariableDeclaration","scope":1347,"src":"731:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1340,"name":"uint256","nodeType":"ElementaryTypeName","src":"731:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1343,"indexed":false,"mutability":"mutable","name":"endBlock","nameLocation":"767:8:1","nodeType":"VariableDeclaration","scope":1347,"src":"759:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1342,"name":"uint256","nodeType":"ElementaryTypeName","src":"759:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1345,"indexed":false,"mutability":"mutable","name":"description","nameLocation":"792:11:1","nodeType":"VariableDeclaration","scope":1347,"src":"785:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1344,"name":"string","nodeType":"ElementaryTypeName","src":"785:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"558:251:1"},"src":"537:273:1"},{"anonymous":false,"documentation":{"id":1348,"nodeType":"StructuredDocumentation","src":"816:60:1","text":" @dev Emitted when a proposal is canceled."},"eventSelector":"789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c","id":1352,"name":"ProposalCanceled","nameLocation":"887:16:1","nodeType":"EventDefinition","parameters":{"id":1351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"indexed":false,"mutability":"mutable","name":"proposalId","nameLocation":"912:10:1","nodeType":"VariableDeclaration","scope":1352,"src":"904:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1349,"name":"uint256","nodeType":"ElementaryTypeName","src":"904:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"903:20:1"},"src":"881:43:1"},{"anonymous":false,"documentation":{"id":1353,"nodeType":"StructuredDocumentation","src":"930:60:1","text":" @dev Emitted when a proposal is executed."},"eventSelector":"712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f","id":1357,"name":"ProposalExecuted","nameLocation":"1001:16:1","nodeType":"EventDefinition","parameters":{"id":1356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1355,"indexed":false,"mutability":"mutable","name":"proposalId","nameLocation":"1026:10:1","nodeType":"VariableDeclaration","scope":1357,"src":"1018:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1354,"name":"uint256","nodeType":"ElementaryTypeName","src":"1018:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1017:20:1"},"src":"995:43:1"},{"anonymous":false,"documentation":{"id":1358,"nodeType":"StructuredDocumentation","src":"1044:187:1","text":" @dev Emitted when a vote is cast without params.\n Note: `support` values should be seen as buckets. Their interpretation depends on the voting module used."},"eventSelector":"b8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda4","id":1370,"name":"VoteCast","nameLocation":"1242:8:1","nodeType":"EventDefinition","parameters":{"id":1369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1360,"indexed":true,"mutability":"mutable","name":"voter","nameLocation":"1267:5:1","nodeType":"VariableDeclaration","scope":1370,"src":"1251:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1359,"name":"address","nodeType":"ElementaryTypeName","src":"1251:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1362,"indexed":false,"mutability":"mutable","name":"proposalId","nameLocation":"1282:10:1","nodeType":"VariableDeclaration","scope":1370,"src":"1274:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1361,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1364,"indexed":false,"mutability":"mutable","name":"support","nameLocation":"1300:7:1","nodeType":"VariableDeclaration","scope":1370,"src":"1294:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1363,"name":"uint8","nodeType":"ElementaryTypeName","src":"1294:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1366,"indexed":false,"mutability":"mutable","name":"weight","nameLocation":"1317:6:1","nodeType":"VariableDeclaration","scope":1370,"src":"1309:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1365,"name":"uint256","nodeType":"ElementaryTypeName","src":"1309:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1368,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"1332:6:1","nodeType":"VariableDeclaration","scope":1370,"src":"1325:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1367,"name":"string","nodeType":"ElementaryTypeName","src":"1325:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1250:89:1"},"src":"1236:104:1"},{"anonymous":false,"documentation":{"id":1371,"nodeType":"StructuredDocumentation","src":"1346:297:1","text":" @dev Emitted when a vote is cast with params.\n Note: `support` values should be seen as buckets. Their interpretation depends on the voting module used.\n `params` are additional encoded parameters. Their intepepretation also depends on the voting module used."},"eventSelector":"e2babfbac5889a709b63bb7f598b324e08bc5a4fb9ec647fb3cbc9ec07eb8712","id":1385,"name":"VoteCastWithParams","nameLocation":"1654:18:1","nodeType":"EventDefinition","parameters":{"id":1384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1373,"indexed":true,"mutability":"mutable","name":"voter","nameLocation":"1698:5:1","nodeType":"VariableDeclaration","scope":1385,"src":"1682:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1372,"name":"address","nodeType":"ElementaryTypeName","src":"1682:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1375,"indexed":false,"mutability":"mutable","name":"proposalId","nameLocation":"1721:10:1","nodeType":"VariableDeclaration","scope":1385,"src":"1713:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1374,"name":"uint256","nodeType":"ElementaryTypeName","src":"1713:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1377,"indexed":false,"mutability":"mutable","name":"support","nameLocation":"1747:7:1","nodeType":"VariableDeclaration","scope":1385,"src":"1741:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1376,"name":"uint8","nodeType":"ElementaryTypeName","src":"1741:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1379,"indexed":false,"mutability":"mutable","name":"weight","nameLocation":"1772:6:1","nodeType":"VariableDeclaration","scope":1385,"src":"1764:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1378,"name":"uint256","nodeType":"ElementaryTypeName","src":"1764:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1381,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"1795:6:1","nodeType":"VariableDeclaration","scope":1385,"src":"1788:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1380,"name":"string","nodeType":"ElementaryTypeName","src":"1788:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1383,"indexed":false,"mutability":"mutable","name":"params","nameLocation":"1817:6:1","nodeType":"VariableDeclaration","scope":1385,"src":"1811:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1382,"name":"bytes","nodeType":"ElementaryTypeName","src":"1811:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1672:157:1"},"src":"1648:182:1"},{"documentation":{"id":1386,"nodeType":"StructuredDocumentation","src":"1836:128:1","text":" @notice module:core\n @dev Name of the governor instance (used in building the ERC712 domain separator)."},"functionSelector":"06fdde03","id":1391,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"1978:4:1","nodeType":"FunctionDefinition","parameters":{"id":1387,"nodeType":"ParameterList","parameters":[],"src":"1982:2:1"},"returnParameters":{"id":1390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1389,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1391,"src":"2014:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1388,"name":"string","nodeType":"ElementaryTypeName","src":"2014:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2013:15:1"},"scope":1604,"src":"1969:60:1","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":1392,"nodeType":"StructuredDocumentation","src":"2035:144:1","text":" @notice module:core\n @dev Version of the governor instance (used in building the ERC712 domain separator). Default: \"1\""},"functionSelector":"54fd4d50","id":1397,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"2193:7:1","nodeType":"FunctionDefinition","parameters":{"id":1393,"nodeType":"ParameterList","parameters":[],"src":"2200:2:1"},"returnParameters":{"id":1396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1397,"src":"2232:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1394,"name":"string","nodeType":"ElementaryTypeName","src":"2232:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2231:15:1"},"scope":1604,"src":"2184:63:1","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":1398,"nodeType":"StructuredDocumentation","src":"2253:1315:1","text":" @notice module:voting\n @dev A description of the possible `support` values for {castVote} and the way these votes are counted, meant to\n be consumed by UIs to show correct vote options and interpret the results. The string is a URL-encoded sequence of\n key-value pairs that each describe one aspect, for example `support=bravo&quorum=for,abstain`.\n There are 2 standard keys: `support` and `quorum`.\n - `support=bravo` refers to the vote options 0 = Against, 1 = For, 2 = Abstain, as in `GovernorBravo`.\n - `quorum=bravo` means that only For votes are counted towards quorum.\n - `quorum=for,abstain` means that both For and Abstain votes are counted towards quorum.\n If a counting module makes use of encoded `params`, it should  include this under a `params` key with a unique\n name that describes the behavior. For example:\n - `params=fractional` might refer to a scheme where votes are divided fractionally between for/against/abstain.\n - `params=erc721` might refer to a scheme where specific NFTs are delegated to vote.\n NOTE: The string can be decoded by the standard\n https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams[`URLSearchParams`]\n JavaScript class."},"functionSelector":"dd4e2ba5","id":1403,"implemented":false,"kind":"function","modifiers":[],"name":"COUNTING_MODE","nameLocation":"3635:13:1","nodeType":"FunctionDefinition","parameters":{"id":1399,"nodeType":"ParameterList","parameters":[],"src":"3648:2:1"},"returnParameters":{"id":1402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1403,"src":"3680:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1400,"name":"string","nodeType":"ElementaryTypeName","src":"3680:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3679:15:1"},"scope":1604,"src":"3626:69:1","stateMutability":"pure","virtual":true,"visibility":"public"},{"documentation":{"id":1404,"nodeType":"StructuredDocumentation","src":"3701:129:1","text":" @notice module:core\n @dev Hashing function used to (re)build the proposal id from the proposal details.."},"functionSelector":"c59057e4","id":1420,"implemented":false,"kind":"function","modifiers":[],"name":"hashProposal","nameLocation":"3844:12:1","nodeType":"FunctionDefinition","parameters":{"id":1416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1407,"mutability":"mutable","name":"targets","nameLocation":"3883:7:1","nodeType":"VariableDeclaration","scope":1420,"src":"3866:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1405,"name":"address","nodeType":"ElementaryTypeName","src":"3866:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1406,"nodeType":"ArrayTypeName","src":"3866:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1410,"mutability":"mutable","name":"values","nameLocation":"3917:6:1","nodeType":"VariableDeclaration","scope":1420,"src":"3900:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1408,"name":"uint256","nodeType":"ElementaryTypeName","src":"3900:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1409,"nodeType":"ArrayTypeName","src":"3900:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1413,"mutability":"mutable","name":"calldatas","nameLocation":"3948:9:1","nodeType":"VariableDeclaration","scope":1420,"src":"3933:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1411,"name":"bytes","nodeType":"ElementaryTypeName","src":"3933:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1412,"nodeType":"ArrayTypeName","src":"3933:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":1415,"mutability":"mutable","name":"descriptionHash","nameLocation":"3975:15:1","nodeType":"VariableDeclaration","scope":1420,"src":"3967:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1414,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3967:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3856:140:1"},"returnParameters":{"id":1419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1420,"src":"4026:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1417,"name":"uint256","nodeType":"ElementaryTypeName","src":"4026:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4025:9:1"},"scope":1604,"src":"3835:200:1","stateMutability":"pure","virtual":true,"visibility":"public"},{"documentation":{"id":1421,"nodeType":"StructuredDocumentation","src":"4041:111:1","text":" @notice module:core\n @dev Current state of a proposal, following Compound's convention"},"functionSelector":"3e4f49e6","id":1429,"implemented":false,"kind":"function","modifiers":[],"name":"state","nameLocation":"4166:5:1","nodeType":"FunctionDefinition","parameters":{"id":1424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1423,"mutability":"mutable","name":"proposalId","nameLocation":"4180:10:1","nodeType":"VariableDeclaration","scope":1429,"src":"4172:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1422,"name":"uint256","nodeType":"ElementaryTypeName","src":"4172:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4171:20:1"},"returnParameters":{"id":1428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1427,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1429,"src":"4221:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1322","typeString":"enum IGovernor.ProposalState"},"typeName":{"id":1426,"nodeType":"UserDefinedTypeName","pathNode":{"id":1425,"name":"ProposalState","nameLocations":["4221:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":1322,"src":"4221:13:1"},"referencedDeclaration":1322,"src":"4221:13:1","typeDescriptions":{"typeIdentifier":"t_enum$_ProposalState_$1322","typeString":"enum IGovernor.ProposalState"}},"visibility":"internal"}],"src":"4220:15:1"},"scope":1604,"src":"4157:79:1","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":1430,"nodeType":"StructuredDocumentation","src":"4242:305:1","text":" @notice module:core\n @dev Block number used to retrieve user's votes and quorum. As per Compound's Comp and OpenZeppelin's\n ERC20Votes, the snapshot is performed at the end of this block. Hence, voting for this proposal starts at the\n beginning of the following block."},"functionSelector":"2d63f693","id":1437,"implemented":false,"kind":"function","modifiers":[],"name":"proposalSnapshot","nameLocation":"4561:16:1","nodeType":"FunctionDefinition","parameters":{"id":1433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1432,"mutability":"mutable","name":"proposalId","nameLocation":"4586:10:1","nodeType":"VariableDeclaration","scope":1437,"src":"4578:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1431,"name":"uint256","nodeType":"ElementaryTypeName","src":"4578:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4577:20:1"},"returnParameters":{"id":1436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1437,"src":"4627:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1434,"name":"uint256","nodeType":"ElementaryTypeName","src":"4627:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4626:9:1"},"scope":1604,"src":"4552:84:1","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":1438,"nodeType":"StructuredDocumentation","src":"4642:182:1","text":" @notice module:core\n @dev Block number at which votes close. Votes close at the end of this block, so it is possible to cast a vote\n during this block."},"functionSelector":"c01f9e37","id":1445,"implemented":false,"kind":"function","modifiers":[],"name":"proposalDeadline","nameLocation":"4838:16:1","nodeType":"FunctionDefinition","parameters":{"id":1441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1440,"mutability":"mutable","name":"proposalId","nameLocation":"4863:10:1","nodeType":"VariableDeclaration","scope":1445,"src":"4855:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1439,"name":"uint256","nodeType":"ElementaryTypeName","src":"4855:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4854:20:1"},"returnParameters":{"id":1444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1443,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1445,"src":"4904:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1442,"name":"uint256","nodeType":"ElementaryTypeName","src":"4904:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4903:9:1"},"scope":1604,"src":"4829:84:1","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":1446,"nodeType":"StructuredDocumentation","src":"4919:268:1","text":" @notice module:user-config\n @dev Delay, in number of block, between the proposal is created and the vote starts. This can be increassed to\n leave time for users to buy voting power, or delegate it, before the voting of a proposal starts."},"functionSelector":"3932abb1","id":1451,"implemented":false,"kind":"function","modifiers":[],"name":"votingDelay","nameLocation":"5201:11:1","nodeType":"FunctionDefinition","parameters":{"id":1447,"nodeType":"ParameterList","parameters":[],"src":"5212:2:1"},"returnParameters":{"id":1450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1451,"src":"5244:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1448,"name":"uint256","nodeType":"ElementaryTypeName","src":"5244:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5243:9:1"},"scope":1604,"src":"5192:61:1","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":1452,"nodeType":"StructuredDocumentation","src":"5259:288:1","text":" @notice module:user-config\n @dev Delay, in number of blocks, between the vote start and vote ends.\n NOTE: The {votingDelay} can delay the start of the vote. This must be considered when setting the voting\n duration compared to the voting delay."},"functionSelector":"02a251a3","id":1457,"implemented":false,"kind":"function","modifiers":[],"name":"votingPeriod","nameLocation":"5561:12:1","nodeType":"FunctionDefinition","parameters":{"id":1453,"nodeType":"ParameterList","parameters":[],"src":"5573:2:1"},"returnParameters":{"id":1456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1457,"src":"5605:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1454,"name":"uint256","nodeType":"ElementaryTypeName","src":"5605:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5604:9:1"},"scope":1604,"src":"5552:62:1","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":1458,"nodeType":"StructuredDocumentation","src":"5620:356:1","text":" @notice module:user-config\n @dev Minimum number of cast voted required for a proposal to be successful.\n Note: The `blockNumber` parameter corresponds to the snapshot used for counting vote. This allows to scale the\n quorum depending on values such as the totalSupply of a token at this block (see {ERC20Votes})."},"functionSelector":"f8ce560a","id":1465,"implemented":false,"kind":"function","modifiers":[],"name":"quorum","nameLocation":"5990:6:1","nodeType":"FunctionDefinition","parameters":{"id":1461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1460,"mutability":"mutable","name":"blockNumber","nameLocation":"6005:11:1","nodeType":"VariableDeclaration","scope":1465,"src":"5997:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1459,"name":"uint256","nodeType":"ElementaryTypeName","src":"5997:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5996:21:1"},"returnParameters":{"id":1464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1465,"src":"6047:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1462,"name":"uint256","nodeType":"ElementaryTypeName","src":"6047:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6046:9:1"},"scope":1604,"src":"5981:75:1","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":1466,"nodeType":"StructuredDocumentation","src":"6062:276:1","text":" @notice module:reputation\n @dev Voting power of an `account` at a specific `blockNumber`.\n Note: this can be implemented in a number of ways, for example by reading the delegated balance from one (or\n multiple), {ERC20Votes} tokens."},"functionSelector":"eb9019d4","id":1475,"implemented":false,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"6352:8:1","nodeType":"FunctionDefinition","parameters":{"id":1471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1468,"mutability":"mutable","name":"account","nameLocation":"6369:7:1","nodeType":"VariableDeclaration","scope":1475,"src":"6361:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1467,"name":"address","nodeType":"ElementaryTypeName","src":"6361:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1470,"mutability":"mutable","name":"blockNumber","nameLocation":"6386:11:1","nodeType":"VariableDeclaration","scope":1475,"src":"6378:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1469,"name":"uint256","nodeType":"ElementaryTypeName","src":"6378:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6360:38:1"},"returnParameters":{"id":1474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1475,"src":"6428:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1472,"name":"uint256","nodeType":"ElementaryTypeName","src":"6428:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6427:9:1"},"scope":1604,"src":"6343:94:1","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":1476,"nodeType":"StructuredDocumentation","src":"6443:150:1","text":" @notice module:reputation\n @dev Voting power of an `account` at a specific `blockNumber` given additional encoded parameters."},"functionSelector":"9a802a6d","id":1487,"implemented":false,"kind":"function","modifiers":[],"name":"getVotesWithParams","nameLocation":"6607:18:1","nodeType":"FunctionDefinition","parameters":{"id":1483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1478,"mutability":"mutable","name":"account","nameLocation":"6643:7:1","nodeType":"VariableDeclaration","scope":1487,"src":"6635:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1477,"name":"address","nodeType":"ElementaryTypeName","src":"6635:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1480,"mutability":"mutable","name":"blockNumber","nameLocation":"6668:11:1","nodeType":"VariableDeclaration","scope":1487,"src":"6660:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1479,"name":"uint256","nodeType":"ElementaryTypeName","src":"6660:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1482,"mutability":"mutable","name":"params","nameLocation":"6702:6:1","nodeType":"VariableDeclaration","scope":1487,"src":"6689:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1481,"name":"bytes","nodeType":"ElementaryTypeName","src":"6689:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6625:89:1"},"returnParameters":{"id":1486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1487,"src":"6744:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1484,"name":"uint256","nodeType":"ElementaryTypeName","src":"6744:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6743:9:1"},"scope":1604,"src":"6598:155:1","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":1488,"nodeType":"StructuredDocumentation","src":"6759:111:1","text":" @notice module:voting\n @dev Returns whether `account` has cast a vote on `proposalId`."},"functionSelector":"43859632","id":1497,"implemented":false,"kind":"function","modifiers":[],"name":"hasVoted","nameLocation":"6884:8:1","nodeType":"FunctionDefinition","parameters":{"id":1493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1490,"mutability":"mutable","name":"proposalId","nameLocation":"6901:10:1","nodeType":"VariableDeclaration","scope":1497,"src":"6893:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1489,"name":"uint256","nodeType":"ElementaryTypeName","src":"6893:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1492,"mutability":"mutable","name":"account","nameLocation":"6921:7:1","nodeType":"VariableDeclaration","scope":1497,"src":"6913:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1491,"name":"address","nodeType":"ElementaryTypeName","src":"6913:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6892:37:1"},"returnParameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1497,"src":"6959:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1494,"name":"bool","nodeType":"ElementaryTypeName","src":"6959:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6958:6:1"},"scope":1604,"src":"6875:90:1","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":1498,"nodeType":"StructuredDocumentation","src":"6971:238:1","text":" @dev Create a new proposal. Vote start {IGovernor-votingDelay} blocks after the proposal is created and ends\n {IGovernor-votingPeriod} blocks after the voting starts.\n Emits a {ProposalCreated} event."},"functionSelector":"7d5e81e2","id":1514,"implemented":false,"kind":"function","modifiers":[],"name":"propose","nameLocation":"7223:7:1","nodeType":"FunctionDefinition","parameters":{"id":1510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1501,"mutability":"mutable","name":"targets","nameLocation":"7257:7:1","nodeType":"VariableDeclaration","scope":1514,"src":"7240:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1499,"name":"address","nodeType":"ElementaryTypeName","src":"7240:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1500,"nodeType":"ArrayTypeName","src":"7240:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1504,"mutability":"mutable","name":"values","nameLocation":"7291:6:1","nodeType":"VariableDeclaration","scope":1514,"src":"7274:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1502,"name":"uint256","nodeType":"ElementaryTypeName","src":"7274:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1503,"nodeType":"ArrayTypeName","src":"7274:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1507,"mutability":"mutable","name":"calldatas","nameLocation":"7322:9:1","nodeType":"VariableDeclaration","scope":1514,"src":"7307:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1505,"name":"bytes","nodeType":"ElementaryTypeName","src":"7307:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1506,"nodeType":"ArrayTypeName","src":"7307:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":1509,"mutability":"mutable","name":"description","nameLocation":"7355:11:1","nodeType":"VariableDeclaration","scope":1514,"src":"7341:25:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1508,"name":"string","nodeType":"ElementaryTypeName","src":"7341:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7230:142:1"},"returnParameters":{"id":1513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1512,"mutability":"mutable","name":"proposalId","nameLocation":"7405:10:1","nodeType":"VariableDeclaration","scope":1514,"src":"7397:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1511,"name":"uint256","nodeType":"ElementaryTypeName","src":"7397:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7396:20:1"},"scope":1604,"src":"7214:203:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"documentation":{"id":1515,"nodeType":"StructuredDocumentation","src":"7423:329:1","text":" @dev Execute a successful proposal. This requires the quorum to be reached, the vote to be successful, and the\n deadline to be reached.\n Emits a {ProposalExecuted} event.\n Note: some module can modify the requirements for execution, for example by adding an additional timelock."},"functionSelector":"2656227d","id":1531,"implemented":false,"kind":"function","modifiers":[],"name":"execute","nameLocation":"7766:7:1","nodeType":"FunctionDefinition","parameters":{"id":1527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1518,"mutability":"mutable","name":"targets","nameLocation":"7800:7:1","nodeType":"VariableDeclaration","scope":1531,"src":"7783:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1516,"name":"address","nodeType":"ElementaryTypeName","src":"7783:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1517,"nodeType":"ArrayTypeName","src":"7783:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1521,"mutability":"mutable","name":"values","nameLocation":"7834:6:1","nodeType":"VariableDeclaration","scope":1531,"src":"7817:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1519,"name":"uint256","nodeType":"ElementaryTypeName","src":"7817:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1520,"nodeType":"ArrayTypeName","src":"7817:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1524,"mutability":"mutable","name":"calldatas","nameLocation":"7865:9:1","nodeType":"VariableDeclaration","scope":1531,"src":"7850:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1522,"name":"bytes","nodeType":"ElementaryTypeName","src":"7850:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1523,"nodeType":"ArrayTypeName","src":"7850:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":1526,"mutability":"mutable","name":"descriptionHash","nameLocation":"7892:15:1","nodeType":"VariableDeclaration","scope":1531,"src":"7884:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1525,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7884:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7773:140:1"},"returnParameters":{"id":1530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1529,"mutability":"mutable","name":"proposalId","nameLocation":"7954:10:1","nodeType":"VariableDeclaration","scope":1531,"src":"7946:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1528,"name":"uint256","nodeType":"ElementaryTypeName","src":"7946:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7945:20:1"},"scope":1604,"src":"7757:209:1","stateMutability":"payable","virtual":true,"visibility":"public"},{"documentation":{"id":1532,"nodeType":"StructuredDocumentation","src":"7972:75:1","text":" @dev Cast a vote\n Emits a {VoteCast} event."},"functionSelector":"56781388","id":1541,"implemented":false,"kind":"function","modifiers":[],"name":"castVote","nameLocation":"8061:8:1","nodeType":"FunctionDefinition","parameters":{"id":1537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1534,"mutability":"mutable","name":"proposalId","nameLocation":"8078:10:1","nodeType":"VariableDeclaration","scope":1541,"src":"8070:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1533,"name":"uint256","nodeType":"ElementaryTypeName","src":"8070:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1536,"mutability":"mutable","name":"support","nameLocation":"8096:7:1","nodeType":"VariableDeclaration","scope":1541,"src":"8090:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1535,"name":"uint8","nodeType":"ElementaryTypeName","src":"8090:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"8069:35:1"},"returnParameters":{"id":1540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1539,"mutability":"mutable","name":"balance","nameLocation":"8137:7:1","nodeType":"VariableDeclaration","scope":1541,"src":"8129:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1538,"name":"uint256","nodeType":"ElementaryTypeName","src":"8129:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8128:17:1"},"scope":1604,"src":"8052:94:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"documentation":{"id":1542,"nodeType":"StructuredDocumentation","src":"8152:89:1","text":" @dev Cast a vote with a reason\n Emits a {VoteCast} event."},"functionSelector":"7b3c71d3","id":1553,"implemented":false,"kind":"function","modifiers":[],"name":"castVoteWithReason","nameLocation":"8255:18:1","nodeType":"FunctionDefinition","parameters":{"id":1549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1544,"mutability":"mutable","name":"proposalId","nameLocation":"8291:10:1","nodeType":"VariableDeclaration","scope":1553,"src":"8283:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1543,"name":"uint256","nodeType":"ElementaryTypeName","src":"8283:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1546,"mutability":"mutable","name":"support","nameLocation":"8317:7:1","nodeType":"VariableDeclaration","scope":1553,"src":"8311:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1545,"name":"uint8","nodeType":"ElementaryTypeName","src":"8311:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1548,"mutability":"mutable","name":"reason","nameLocation":"8350:6:1","nodeType":"VariableDeclaration","scope":1553,"src":"8334:22:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":1547,"name":"string","nodeType":"ElementaryTypeName","src":"8334:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8273:89:1"},"returnParameters":{"id":1552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1551,"mutability":"mutable","name":"balance","nameLocation":"8395:7:1","nodeType":"VariableDeclaration","scope":1553,"src":"8387:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1550,"name":"uint256","nodeType":"ElementaryTypeName","src":"8387:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8386:17:1"},"scope":1604,"src":"8246:158:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"documentation":{"id":1554,"nodeType":"StructuredDocumentation","src":"8410:181:1","text":" @dev Cast a vote with a reason and additional encoded parameters\n Emits a {VoteCast} or {VoteCastWithParams} event depending on the length of params."},"functionSelector":"5f398a14","id":1567,"implemented":false,"kind":"function","modifiers":[],"name":"castVoteWithReasonAndParams","nameLocation":"8605:27:1","nodeType":"FunctionDefinition","parameters":{"id":1563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1556,"mutability":"mutable","name":"proposalId","nameLocation":"8650:10:1","nodeType":"VariableDeclaration","scope":1567,"src":"8642:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1555,"name":"uint256","nodeType":"ElementaryTypeName","src":"8642:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1558,"mutability":"mutable","name":"support","nameLocation":"8676:7:1","nodeType":"VariableDeclaration","scope":1567,"src":"8670:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1557,"name":"uint8","nodeType":"ElementaryTypeName","src":"8670:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1560,"mutability":"mutable","name":"reason","nameLocation":"8709:6:1","nodeType":"VariableDeclaration","scope":1567,"src":"8693:22:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":1559,"name":"string","nodeType":"ElementaryTypeName","src":"8693:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1562,"mutability":"mutable","name":"params","nameLocation":"8738:6:1","nodeType":"VariableDeclaration","scope":1567,"src":"8725:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1561,"name":"bytes","nodeType":"ElementaryTypeName","src":"8725:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8632:118:1"},"returnParameters":{"id":1566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1565,"mutability":"mutable","name":"balance","nameLocation":"8783:7:1","nodeType":"VariableDeclaration","scope":1567,"src":"8775:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1564,"name":"uint256","nodeType":"ElementaryTypeName","src":"8775:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8774:17:1"},"scope":1604,"src":"8596:196:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"documentation":{"id":1568,"nodeType":"StructuredDocumentation","src":"8798:117:1","text":" @dev Cast a vote using the user's cryptographic signature.\n Emits a {VoteCast} event."},"functionSelector":"3bccf4fd","id":1583,"implemented":false,"kind":"function","modifiers":[],"name":"castVoteBySig","nameLocation":"8929:13:1","nodeType":"FunctionDefinition","parameters":{"id":1579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1570,"mutability":"mutable","name":"proposalId","nameLocation":"8960:10:1","nodeType":"VariableDeclaration","scope":1583,"src":"8952:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1569,"name":"uint256","nodeType":"ElementaryTypeName","src":"8952:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1572,"mutability":"mutable","name":"support","nameLocation":"8986:7:1","nodeType":"VariableDeclaration","scope":1583,"src":"8980:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1571,"name":"uint8","nodeType":"ElementaryTypeName","src":"8980:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1574,"mutability":"mutable","name":"v","nameLocation":"9009:1:1","nodeType":"VariableDeclaration","scope":1583,"src":"9003:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1573,"name":"uint8","nodeType":"ElementaryTypeName","src":"9003:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1576,"mutability":"mutable","name":"r","nameLocation":"9028:1:1","nodeType":"VariableDeclaration","scope":1583,"src":"9020:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1575,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9020:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1578,"mutability":"mutable","name":"s","nameLocation":"9047:1:1","nodeType":"VariableDeclaration","scope":1583,"src":"9039:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1577,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9039:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8942:112:1"},"returnParameters":{"id":1582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1581,"mutability":"mutable","name":"balance","nameLocation":"9087:7:1","nodeType":"VariableDeclaration","scope":1583,"src":"9079:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1580,"name":"uint256","nodeType":"ElementaryTypeName","src":"9079:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9078:17:1"},"scope":1604,"src":"8920:176:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"documentation":{"id":1584,"nodeType":"StructuredDocumentation","src":"9102:223:1","text":" @dev Cast a vote with a reason and additional encoded parameters using the user's cryptographic signature.\n Emits a {VoteCast} or {VoteCastWithParams} event depending on the length of params."},"functionSelector":"03420181","id":1603,"implemented":false,"kind":"function","modifiers":[],"name":"castVoteWithReasonAndParamsBySig","nameLocation":"9339:32:1","nodeType":"FunctionDefinition","parameters":{"id":1599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1586,"mutability":"mutable","name":"proposalId","nameLocation":"9389:10:1","nodeType":"VariableDeclaration","scope":1603,"src":"9381:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1585,"name":"uint256","nodeType":"ElementaryTypeName","src":"9381:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1588,"mutability":"mutable","name":"support","nameLocation":"9415:7:1","nodeType":"VariableDeclaration","scope":1603,"src":"9409:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1587,"name":"uint8","nodeType":"ElementaryTypeName","src":"9409:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1590,"mutability":"mutable","name":"reason","nameLocation":"9448:6:1","nodeType":"VariableDeclaration","scope":1603,"src":"9432:22:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":1589,"name":"string","nodeType":"ElementaryTypeName","src":"9432:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1592,"mutability":"mutable","name":"params","nameLocation":"9477:6:1","nodeType":"VariableDeclaration","scope":1603,"src":"9464:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1591,"name":"bytes","nodeType":"ElementaryTypeName","src":"9464:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1594,"mutability":"mutable","name":"v","nameLocation":"9499:1:1","nodeType":"VariableDeclaration","scope":1603,"src":"9493:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1593,"name":"uint8","nodeType":"ElementaryTypeName","src":"9493:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1596,"mutability":"mutable","name":"r","nameLocation":"9518:1:1","nodeType":"VariableDeclaration","scope":1603,"src":"9510:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1595,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9510:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1598,"mutability":"mutable","name":"s","nameLocation":"9537:1:1","nodeType":"VariableDeclaration","scope":1603,"src":"9529:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9529:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9371:173:1"},"returnParameters":{"id":1602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1601,"mutability":"mutable","name":"balance","nameLocation":"9577:7:1","nodeType":"VariableDeclaration","scope":1603,"src":"9569:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1600,"name":"uint256","nodeType":"ElementaryTypeName","src":"9569:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9568:17:1"},"scope":1604,"src":"9330:256:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1605,"src":"258:9330:1","usedErrors":[]}],"src":"108:9481:1"},"id":1},"@openzeppelin/contracts/governance/extensions/GovernorCountingSimple.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/extensions/GovernorCountingSimple.sol","exportedSymbols":{"Address":[2720],"Context":[4113],"DoubleEndedQueue":[7800],"ECDSA":[4863],"EIP712":[5017],"ERC165":[5041],"Governor":[1307],"GovernorCountingSimple":[1830],"IERC1155Receiver":[2372],"IERC165":[5053],"IERC721Receiver":[2390],"IGovernor":[1604],"Math":[5918],"SafeCast":[7459],"Strings":[4288],"Timers":[4502]},"id":1831,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1606,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"132:23:2"},{"absolutePath":"@openzeppelin/contracts/governance/Governor.sol","file":"../Governor.sol","id":1607,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1831,"sourceUnit":1308,"src":"157:25:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1609,"name":"Governor","nameLocations":["336:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":1307,"src":"336:8:2"},"id":1610,"nodeType":"InheritanceSpecifier","src":"336:8:2"}],"canonicalName":"GovernorCountingSimple","contractDependencies":[],"contractKind":"contract","documentation":{"id":1608,"nodeType":"StructuredDocumentation","src":"184:107:2","text":" @dev Extension of {Governor} for simple, 3 options, vote counting.\n _Available since v4.3._"},"fullyImplemented":false,"id":1830,"linearizedBaseContracts":[1830,1307,2372,2390,1604,5017,5041,5053,4113],"name":"GovernorCountingSimple","nameLocation":"310:22:2","nodeType":"ContractDefinition","nodes":[{"canonicalName":"GovernorCountingSimple.VoteType","id":1614,"members":[{"id":1611,"name":"Against","nameLocation":"458:7:2","nodeType":"EnumValue","src":"458:7:2"},{"id":1612,"name":"For","nameLocation":"475:3:2","nodeType":"EnumValue","src":"475:3:2"},{"id":1613,"name":"Abstain","nameLocation":"488:7:2","nodeType":"EnumValue","src":"488:7:2"}],"name":"VoteType","nameLocation":"439:8:2","nodeType":"EnumDefinition","src":"434:67:2"},{"canonicalName":"GovernorCountingSimple.ProposalVote","id":1625,"members":[{"constant":false,"id":1616,"mutability":"mutable","name":"againstVotes","nameLocation":"545:12:2","nodeType":"VariableDeclaration","scope":1625,"src":"537:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1615,"name":"uint256","nodeType":"ElementaryTypeName","src":"537:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1618,"mutability":"mutable","name":"forVotes","nameLocation":"575:8:2","nodeType":"VariableDeclaration","scope":1625,"src":"567:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1617,"name":"uint256","nodeType":"ElementaryTypeName","src":"567:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1620,"mutability":"mutable","name":"abstainVotes","nameLocation":"601:12:2","nodeType":"VariableDeclaration","scope":1625,"src":"593:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1619,"name":"uint256","nodeType":"ElementaryTypeName","src":"593:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1624,"mutability":"mutable","name":"hasVoted","nameLocation":"648:8:2","nodeType":"VariableDeclaration","scope":1625,"src":"623:33:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":1623,"keyType":{"id":1621,"name":"address","nodeType":"ElementaryTypeName","src":"631:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"623:24:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":1622,"name":"bool","nodeType":"ElementaryTypeName","src":"642:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"}],"name":"ProposalVote","nameLocation":"514:12:2","nodeType":"StructDefinition","scope":1830,"src":"507:156:2","visibility":"public"},{"constant":false,"id":1630,"mutability":"mutable","name":"_proposalVotes","nameLocation":"710:14:2","nodeType":"VariableDeclaration","scope":1830,"src":"669:55:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProposalVote_$1625_storage_$","typeString":"mapping(uint256 => struct GovernorCountingSimple.ProposalVote)"},"typeName":{"id":1629,"keyType":{"id":1626,"name":"uint256","nodeType":"ElementaryTypeName","src":"677:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"669:32:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProposalVote_$1625_storage_$","typeString":"mapping(uint256 => struct GovernorCountingSimple.ProposalVote)"},"valueType":{"id":1628,"nodeType":"UserDefinedTypeName","pathNode":{"id":1627,"name":"ProposalVote","nameLocations":["688:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":1625,"src":"688:12:2"},"referencedDeclaration":1625,"src":"688:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$1625_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote"}}},"visibility":"private"},{"baseFunctions":[1403],"body":{"id":1639,"nodeType":"Block","src":"921:58:2","statements":[{"expression":{"hexValue":"737570706f72743d627261766f2671756f72756d3d666f722c6162737461696e","id":1637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"938:34:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_a3816e28b29b48b8e7bf93291116c21473ef28186248d173042d1986430466e1","typeString":"literal_string \"support=bravo&quorum=for,abstain\""},"value":"support=bravo&quorum=for,abstain"},"functionReturnParameters":1636,"id":1638,"nodeType":"Return","src":"931:41:2"}]},"documentation":{"id":1631,"nodeType":"StructuredDocumentation","src":"731:54:2","text":" @dev See {IGovernor-COUNTING_MODE}."},"functionSelector":"dd4e2ba5","id":1640,"implemented":true,"kind":"function","modifiers":[],"name":"COUNTING_MODE","nameLocation":"852:13:2","nodeType":"FunctionDefinition","overrides":{"id":1633,"nodeType":"OverrideSpecifier","overrides":[],"src":"888:8:2"},"parameters":{"id":1632,"nodeType":"ParameterList","parameters":[],"src":"865:2:2"},"returnParameters":{"id":1636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1640,"src":"906:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1634,"name":"string","nodeType":"ElementaryTypeName","src":"906:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"905:15:2"},"scope":1830,"src":"843:136:2","stateMutability":"pure","virtual":true,"visibility":"public"},{"baseFunctions":[1497],"body":{"id":1658,"nodeType":"Block","src":"1138:68:2","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":1651,"name":"_proposalVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"1155:14:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProposalVote_$1625_storage_$","typeString":"mapping(uint256 => struct GovernorCountingSimple.ProposalVote storage ref)"}},"id":1653,"indexExpression":{"id":1652,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"1170:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1155:26:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$1625_storage","typeString":"struct GovernorCountingSimple.ProposalVote storage ref"}},"id":1654,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1182:8:2","memberName":"hasVoted","nodeType":"MemberAccess","referencedDeclaration":1624,"src":"1155:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1656,"indexExpression":{"id":1655,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"1191:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1155:44:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1650,"id":1657,"nodeType":"Return","src":"1148:51:2"}]},"documentation":{"id":1641,"nodeType":"StructuredDocumentation","src":"985:49:2","text":" @dev See {IGovernor-hasVoted}."},"functionSelector":"43859632","id":1659,"implemented":true,"kind":"function","modifiers":[],"name":"hasVoted","nameLocation":"1048:8:2","nodeType":"FunctionDefinition","overrides":{"id":1647,"nodeType":"OverrideSpecifier","overrides":[],"src":"1114:8:2"},"parameters":{"id":1646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1643,"mutability":"mutable","name":"proposalId","nameLocation":"1065:10:2","nodeType":"VariableDeclaration","scope":1659,"src":"1057:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1642,"name":"uint256","nodeType":"ElementaryTypeName","src":"1057:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1645,"mutability":"mutable","name":"account","nameLocation":"1085:7:2","nodeType":"VariableDeclaration","scope":1659,"src":"1077:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1644,"name":"address","nodeType":"ElementaryTypeName","src":"1077:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1056:37:2"},"returnParameters":{"id":1650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1659,"src":"1132:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1648,"name":"bool","nodeType":"ElementaryTypeName","src":"1132:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1131:6:2"},"scope":1830,"src":"1039:167:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1686,"nodeType":"Block","src":"1494:173:2","statements":[{"assignments":[1673],"declarations":[{"constant":false,"id":1673,"mutability":"mutable","name":"proposalVote","nameLocation":"1525:12:2","nodeType":"VariableDeclaration","scope":1686,"src":"1504:33:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$1625_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote"},"typeName":{"id":1672,"nodeType":"UserDefinedTypeName","pathNode":{"id":1671,"name":"ProposalVote","nameLocations":["1504:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":1625,"src":"1504:12:2"},"referencedDeclaration":1625,"src":"1504:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$1625_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote"}},"visibility":"internal"}],"id":1677,"initialValue":{"baseExpression":{"id":1674,"name":"_proposalVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"1540:14:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProposalVote_$1625_storage_$","typeString":"mapping(uint256 => struct GovernorCountingSimple.ProposalVote storage ref)"}},"id":1676,"indexExpression":{"id":1675,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"1555:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1540:26:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$1625_storage","typeString":"struct GovernorCountingSimple.ProposalVote storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1504:62:2"},{"expression":{"components":[{"expression":{"id":1678,"name":"proposalVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"1584:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$1625_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote storage pointer"}},"id":1679,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1597:12:2","memberName":"againstVotes","nodeType":"MemberAccess","referencedDeclaration":1616,"src":"1584:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1680,"name":"proposalVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"1611:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$1625_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote storage pointer"}},"id":1681,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1624:8:2","memberName":"forVotes","nodeType":"MemberAccess","referencedDeclaration":1618,"src":"1611:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1682,"name":"proposalVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"1634:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$1625_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote storage pointer"}},"id":1683,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1647:12:2","memberName":"abstainVotes","nodeType":"MemberAccess","referencedDeclaration":1620,"src":"1634:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1684,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1583:77:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256)"}},"functionReturnParameters":1670,"id":1685,"nodeType":"Return","src":"1576:84:2"}]},"documentation":{"id":1660,"nodeType":"StructuredDocumentation","src":"1212:61:2","text":" @dev Accessor to the internal vote counts."},"functionSelector":"544ffc9c","id":1687,"implemented":true,"kind":"function","modifiers":[],"name":"proposalVotes","nameLocation":"1287:13:2","nodeType":"FunctionDefinition","parameters":{"id":1663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1662,"mutability":"mutable","name":"proposalId","nameLocation":"1309:10:2","nodeType":"VariableDeclaration","scope":1687,"src":"1301:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1661,"name":"uint256","nodeType":"ElementaryTypeName","src":"1301:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1300:20:2"},"returnParameters":{"id":1670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1665,"mutability":"mutable","name":"againstVotes","nameLocation":"1403:12:2","nodeType":"VariableDeclaration","scope":1687,"src":"1395:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1664,"name":"uint256","nodeType":"ElementaryTypeName","src":"1395:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1667,"mutability":"mutable","name":"forVotes","nameLocation":"1437:8:2","nodeType":"VariableDeclaration","scope":1687,"src":"1429:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1666,"name":"uint256","nodeType":"ElementaryTypeName","src":"1429:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1669,"mutability":"mutable","name":"abstainVotes","nameLocation":"1467:12:2","nodeType":"VariableDeclaration","scope":1687,"src":"1459:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1668,"name":"uint256","nodeType":"ElementaryTypeName","src":"1459:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1381:108:2"},"scope":1830,"src":"1278:389:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[376],"body":{"id":1715,"nodeType":"Block","src":"1822:186:2","statements":[{"assignments":[1698],"declarations":[{"constant":false,"id":1698,"mutability":"mutable","name":"proposalVote","nameLocation":"1853:12:2","nodeType":"VariableDeclaration","scope":1715,"src":"1832:33:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$1625_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote"},"typeName":{"id":1697,"nodeType":"UserDefinedTypeName","pathNode":{"id":1696,"name":"ProposalVote","nameLocations":["1832:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":1625,"src":"1832:12:2"},"referencedDeclaration":1625,"src":"1832:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$1625_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote"}},"visibility":"internal"}],"id":1702,"initialValue":{"baseExpression":{"id":1699,"name":"_proposalVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"1868:14:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProposalVote_$1625_storage_$","typeString":"mapping(uint256 => struct GovernorCountingSimple.ProposalVote storage ref)"}},"id":1701,"indexExpression":{"id":1700,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"1883:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1868:26:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$1625_storage","typeString":"struct GovernorCountingSimple.ProposalVote storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1832:62:2"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1705,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"1936:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1704,"name":"proposalSnapshot","nodeType":"Identifier","overloadedDeclarations":[342],"referencedDeclaration":342,"src":"1919:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1919:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1703,"name":"quorum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"1912:6:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1912:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1708,"name":"proposalVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"1952:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$1625_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote storage pointer"}},"id":1709,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1965:8:2","memberName":"forVotes","nodeType":"MemberAccess","referencedDeclaration":1618,"src":"1952:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1710,"name":"proposalVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"1976:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$1625_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote storage pointer"}},"id":1711,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1989:12:2","memberName":"abstainVotes","nodeType":"MemberAccess","referencedDeclaration":1620,"src":"1976:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1952:49:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1912:89:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1695,"id":1714,"nodeType":"Return","src":"1905:96:2"}]},"documentation":{"id":1688,"nodeType":"StructuredDocumentation","src":"1673:54:2","text":" @dev See {Governor-_quorumReached}."},"id":1716,"implemented":true,"kind":"function","modifiers":[],"name":"_quorumReached","nameLocation":"1741:14:2","nodeType":"FunctionDefinition","overrides":{"id":1692,"nodeType":"OverrideSpecifier","overrides":[],"src":"1798:8:2"},"parameters":{"id":1691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1690,"mutability":"mutable","name":"proposalId","nameLocation":"1764:10:2","nodeType":"VariableDeclaration","scope":1716,"src":"1756:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1689,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1755:20:2"},"returnParameters":{"id":1695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1716,"src":"1816:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1693,"name":"bool","nodeType":"ElementaryTypeName","src":"1816:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1815:6:2"},"scope":1830,"src":"1732:276:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[384],"body":{"id":1738,"nodeType":"Block","src":"2232:146:2","statements":[{"assignments":[1727],"declarations":[{"constant":false,"id":1727,"mutability":"mutable","name":"proposalVote","nameLocation":"2263:12:2","nodeType":"VariableDeclaration","scope":1738,"src":"2242:33:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$1625_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote"},"typeName":{"id":1726,"nodeType":"UserDefinedTypeName","pathNode":{"id":1725,"name":"ProposalVote","nameLocations":["2242:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":1625,"src":"2242:12:2"},"referencedDeclaration":1625,"src":"2242:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$1625_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote"}},"visibility":"internal"}],"id":1731,"initialValue":{"baseExpression":{"id":1728,"name":"_proposalVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"2278:14:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProposalVote_$1625_storage_$","typeString":"mapping(uint256 => struct GovernorCountingSimple.ProposalVote storage ref)"}},"id":1730,"indexExpression":{"id":1729,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"2293:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2278:26:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$1625_storage","typeString":"struct GovernorCountingSimple.ProposalVote storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2242:62:2"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1732,"name":"proposalVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"2322:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$1625_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote storage pointer"}},"id":1733,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2335:8:2","memberName":"forVotes","nodeType":"MemberAccess","referencedDeclaration":1618,"src":"2322:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1734,"name":"proposalVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"2346:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$1625_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote storage pointer"}},"id":1735,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2359:12:2","memberName":"againstVotes","nodeType":"MemberAccess","referencedDeclaration":1616,"src":"2346:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2322:49:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1724,"id":1737,"nodeType":"Return","src":"2315:56:2"}]},"documentation":{"id":1717,"nodeType":"StructuredDocumentation","src":"2014:123:2","text":" @dev See {Governor-_voteSucceeded}. In this module, the forVotes must be strictly over the againstVotes."},"id":1739,"implemented":true,"kind":"function","modifiers":[],"name":"_voteSucceeded","nameLocation":"2151:14:2","nodeType":"FunctionDefinition","overrides":{"id":1721,"nodeType":"OverrideSpecifier","overrides":[],"src":"2208:8:2"},"parameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"mutability":"mutable","name":"proposalId","nameLocation":"2174:10:2","nodeType":"VariableDeclaration","scope":1739,"src":"2166:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1718,"name":"uint256","nodeType":"ElementaryTypeName","src":"2166:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2165:20:2"},"returnParameters":{"id":1724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1739,"src":"2226:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1722,"name":"bool","nodeType":"ElementaryTypeName","src":"2226:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2225:6:2"},"scope":1830,"src":"2142:236:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[410],"body":{"id":1828,"nodeType":"Block","src":"2702:628:2","statements":[{"assignments":[1756],"declarations":[{"constant":false,"id":1756,"mutability":"mutable","name":"proposalVote","nameLocation":"2733:12:2","nodeType":"VariableDeclaration","scope":1828,"src":"2712:33:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$1625_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote"},"typeName":{"id":1755,"nodeType":"UserDefinedTypeName","pathNode":{"id":1754,"name":"ProposalVote","nameLocations":["2712:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":1625,"src":"2712:12:2"},"referencedDeclaration":1625,"src":"2712:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$1625_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote"}},"visibility":"internal"}],"id":1760,"initialValue":{"baseExpression":{"id":1757,"name":"_proposalVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"2748:14:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProposalVote_$1625_storage_$","typeString":"mapping(uint256 => struct GovernorCountingSimple.ProposalVote storage ref)"}},"id":1759,"indexExpression":{"id":1758,"name":"proposalId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"2763:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2748:26:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$1625_storage","typeString":"struct GovernorCountingSimple.ProposalVote storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2712:62:2"},{"expression":{"arguments":[{"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2793:31:2","subExpression":{"baseExpression":{"expression":{"id":1762,"name":"proposalVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"2794:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$1625_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote storage pointer"}},"id":1763,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2807:8:2","memberName":"hasVoted","nodeType":"MemberAccess","referencedDeclaration":1624,"src":"2794:21:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1765,"indexExpression":{"id":1764,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"2816:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2794:30:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476f7665726e6f72566f74696e6753696d706c653a20766f746520616c72656164792063617374","id":1767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2826:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_52977fe78dd360b196702e8b1aa8e7d06cd560911da4c4d483548d7b2d1a38d8","typeString":"literal_string \"GovernorVotingSimple: vote already cast\""},"value":"GovernorVotingSimple: vote already cast"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_52977fe78dd360b196702e8b1aa8e7d06cd560911da4c4d483548d7b2d1a38d8","typeString":"literal_string \"GovernorVotingSimple: vote already cast\""}],"id":1761,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2785:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2785:83:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1769,"nodeType":"ExpressionStatement","src":"2785:83:2"},{"expression":{"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1770,"name":"proposalVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"2878:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$1625_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote storage pointer"}},"id":1773,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2891:8:2","memberName":"hasVoted","nodeType":"MemberAccess","referencedDeclaration":1624,"src":"2878:21:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1774,"indexExpression":{"id":1772,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"2900:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2878:30:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2911:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2878:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1777,"nodeType":"ExpressionStatement","src":"2878:37:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1778,"name":"support","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"2930:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"expression":{"id":1781,"name":"VoteType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"2947:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_VoteType_$1614_$","typeString":"type(enum GovernorCountingSimple.VoteType)"}},"id":1782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2956:7:2","memberName":"Against","nodeType":"MemberAccess","referencedDeclaration":1611,"src":"2947:16:2","typeDescriptions":{"typeIdentifier":"t_enum$_VoteType_$1614","typeString":"enum GovernorCountingSimple.VoteType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_VoteType_$1614","typeString":"enum GovernorCountingSimple.VoteType"}],"id":1780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2941:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1779,"name":"uint8","nodeType":"ElementaryTypeName","src":"2941:5:2","typeDescriptions":{}}},"id":1783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2941:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2930:34:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1792,"name":"support","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"3036:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"expression":{"id":1795,"name":"VoteType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"3053:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_VoteType_$1614_$","typeString":"type(enum GovernorCountingSimple.VoteType)"}},"id":1796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3062:3:2","memberName":"For","nodeType":"MemberAccess","referencedDeclaration":1612,"src":"3053:12:2","typeDescriptions":{"typeIdentifier":"t_enum$_VoteType_$1614","typeString":"enum GovernorCountingSimple.VoteType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_VoteType_$1614","typeString":"enum GovernorCountingSimple.VoteType"}],"id":1794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3047:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1793,"name":"uint8","nodeType":"ElementaryTypeName","src":"3047:5:2","typeDescriptions":{}}},"id":1797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3036:30:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1806,"name":"support","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"3134:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"expression":{"id":1809,"name":"VoteType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"3151:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_VoteType_$1614_$","typeString":"type(enum GovernorCountingSimple.VoteType)"}},"id":1810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3160:7:2","memberName":"Abstain","nodeType":"MemberAccess","referencedDeclaration":1613,"src":"3151:16:2","typeDescriptions":{"typeIdentifier":"t_enum$_VoteType_$1614","typeString":"enum GovernorCountingSimple.VoteType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_VoteType_$1614","typeString":"enum GovernorCountingSimple.VoteType"}],"id":1808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3145:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1807,"name":"uint8","nodeType":"ElementaryTypeName","src":"3145:5:2","typeDescriptions":{}}},"id":1811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3145:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3134:34:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1824,"nodeType":"Block","src":"3236:88:2","statements":[{"expression":{"arguments":[{"hexValue":"476f7665726e6f72566f74696e6753696d706c653a20696e76616c69642076616c756520666f7220656e756d20566f746554797065","id":1821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3257:55:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c16dd4ca2a7081ef35bfb3860532c95d6b1aacddadf6f22f1058fc06b5718887","typeString":"literal_string \"GovernorVotingSimple: invalid value for enum VoteType\""},"value":"GovernorVotingSimple: invalid value for enum VoteType"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c16dd4ca2a7081ef35bfb3860532c95d6b1aacddadf6f22f1058fc06b5718887","typeString":"literal_string \"GovernorVotingSimple: invalid value for enum VoteType\""}],"id":1820,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3250:6:2","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3250:63:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1823,"nodeType":"ExpressionStatement","src":"3250:63:2"}]},"id":1825,"nodeType":"IfStatement","src":"3130:194:2","trueBody":{"id":1819,"nodeType":"Block","src":"3170:60:2","statements":[{"expression":{"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1813,"name":"proposalVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"3184:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$1625_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote storage pointer"}},"id":1815,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3197:12:2","memberName":"abstainVotes","nodeType":"MemberAccess","referencedDeclaration":1620,"src":"3184:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1816,"name":"weight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"3213:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3184:35:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1818,"nodeType":"ExpressionStatement","src":"3184:35:2"}]}},"id":1826,"nodeType":"IfStatement","src":"3032:292:2","trueBody":{"id":1805,"nodeType":"Block","src":"3068:56:2","statements":[{"expression":{"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1799,"name":"proposalVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"3082:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$1625_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote storage pointer"}},"id":1801,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3095:8:2","memberName":"forVotes","nodeType":"MemberAccess","referencedDeclaration":1618,"src":"3082:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1802,"name":"weight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"3107:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3082:31:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1804,"nodeType":"ExpressionStatement","src":"3082:31:2"}]}},"id":1827,"nodeType":"IfStatement","src":"2926:398:2","trueBody":{"id":1791,"nodeType":"Block","src":"2966:60:2","statements":[{"expression":{"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1785,"name":"proposalVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"2980:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ProposalVote_$1625_storage_ptr","typeString":"struct GovernorCountingSimple.ProposalVote storage pointer"}},"id":1787,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2993:12:2","memberName":"againstVotes","nodeType":"MemberAccess","referencedDeclaration":1616,"src":"2980:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1788,"name":"weight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"3009:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2980:35:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1790,"nodeType":"ExpressionStatement","src":"2980:35:2"}]}}]},"documentation":{"id":1740,"nodeType":"StructuredDocumentation","src":"2384:129:2","text":" @dev See {Governor-_countVote}. In this module, the support follows the `VoteType` enum (from Governor Bravo)."},"id":1829,"implemented":true,"kind":"function","modifiers":[],"name":"_countVote","nameLocation":"2527:10:2","nodeType":"FunctionDefinition","overrides":{"id":1752,"nodeType":"OverrideSpecifier","overrides":[],"src":"2693:8:2"},"parameters":{"id":1751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1742,"mutability":"mutable","name":"proposalId","nameLocation":"2555:10:2","nodeType":"VariableDeclaration","scope":1829,"src":"2547:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1741,"name":"uint256","nodeType":"ElementaryTypeName","src":"2547:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1744,"mutability":"mutable","name":"account","nameLocation":"2583:7:2","nodeType":"VariableDeclaration","scope":1829,"src":"2575:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1743,"name":"address","nodeType":"ElementaryTypeName","src":"2575:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1746,"mutability":"mutable","name":"support","nameLocation":"2606:7:2","nodeType":"VariableDeclaration","scope":1829,"src":"2600:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1745,"name":"uint8","nodeType":"ElementaryTypeName","src":"2600:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1748,"mutability":"mutable","name":"weight","nameLocation":"2631:6:2","nodeType":"VariableDeclaration","scope":1829,"src":"2623:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1747,"name":"uint256","nodeType":"ElementaryTypeName","src":"2623:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1829,"src":"2647:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1749,"name":"bytes","nodeType":"ElementaryTypeName","src":"2647:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2537:138:2"},"returnParameters":{"id":1753,"nodeType":"ParameterList","parameters":[],"src":"2702:0:2"},"scope":1830,"src":"2518:812:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1831,"src":"292:3040:2","usedErrors":[7466]}],"src":"132:3201:2"},"id":2},"@openzeppelin/contracts/governance/extensions/GovernorSettings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/extensions/GovernorSettings.sol","exportedSymbols":{"Address":[2720],"Context":[4113],"DoubleEndedQueue":[7800],"ECDSA":[4863],"EIP712":[5017],"ERC165":[5041],"Governor":[1307],"GovernorSettings":[2008],"IERC1155Receiver":[2372],"IERC165":[5053],"IERC721Receiver":[2390],"IGovernor":[1604],"Math":[5918],"SafeCast":[7459],"Strings":[4288],"Timers":[4502]},"id":2009,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1832,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"111:23:3"},{"absolutePath":"@openzeppelin/contracts/governance/Governor.sol","file":"../Governor.sol","id":1833,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2009,"sourceUnit":1308,"src":"136:25:3","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1835,"name":"Governor","nameLocations":["314:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":1307,"src":"314:8:3"},"id":1836,"nodeType":"InheritanceSpecifier","src":"314:8:3"}],"canonicalName":"GovernorSettings","contractDependencies":[],"contractKind":"contract","documentation":{"id":1834,"nodeType":"StructuredDocumentation","src":"163:112:3","text":" @dev Extension of {Governor} for settings updatable through governance.\n _Available since v4.4._"},"fullyImplemented":false,"id":2008,"linearizedBaseContracts":[2008,1307,2372,2390,1604,5017,5041,5053,4113],"name":"GovernorSettings","nameLocation":"294:16:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1838,"mutability":"mutable","name":"_votingDelay","nameLocation":"345:12:3","nodeType":"VariableDeclaration","scope":2008,"src":"329:28:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1837,"name":"uint256","nodeType":"ElementaryTypeName","src":"329:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1840,"mutability":"mutable","name":"_votingPeriod","nameLocation":"379:13:3","nodeType":"VariableDeclaration","scope":2008,"src":"363:29:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1839,"name":"uint256","nodeType":"ElementaryTypeName","src":"363:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1842,"mutability":"mutable","name":"_proposalThreshold","nameLocation":"414:18:3","nodeType":"VariableDeclaration","scope":2008,"src":"398:34:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1841,"name":"uint256","nodeType":"ElementaryTypeName","src":"398:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"anonymous":false,"eventSelector":"c565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a93","id":1848,"name":"VotingDelaySet","nameLocation":"445:14:3","nodeType":"EventDefinition","parameters":{"id":1847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1844,"indexed":false,"mutability":"mutable","name":"oldVotingDelay","nameLocation":"468:14:3","nodeType":"VariableDeclaration","scope":1848,"src":"460:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1843,"name":"uint256","nodeType":"ElementaryTypeName","src":"460:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1846,"indexed":false,"mutability":"mutable","name":"newVotingDelay","nameLocation":"492:14:3","nodeType":"VariableDeclaration","scope":1848,"src":"484:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1845,"name":"uint256","nodeType":"ElementaryTypeName","src":"484:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"459:48:3"},"src":"439:69:3"},{"anonymous":false,"eventSelector":"7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e8828","id":1854,"name":"VotingPeriodSet","nameLocation":"519:15:3","nodeType":"EventDefinition","parameters":{"id":1853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1850,"indexed":false,"mutability":"mutable","name":"oldVotingPeriod","nameLocation":"543:15:3","nodeType":"VariableDeclaration","scope":1854,"src":"535:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1849,"name":"uint256","nodeType":"ElementaryTypeName","src":"535:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1852,"indexed":false,"mutability":"mutable","name":"newVotingPeriod","nameLocation":"568:15:3","nodeType":"VariableDeclaration","scope":1854,"src":"560:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1851,"name":"uint256","nodeType":"ElementaryTypeName","src":"560:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"534:50:3"},"src":"513:72:3"},{"anonymous":false,"eventSelector":"ccb45da8d5717e6c4544694297c4ba5cf151d455c9bb0ed4fc7a38411bc05461","id":1860,"name":"ProposalThresholdSet","nameLocation":"596:20:3","nodeType":"EventDefinition","parameters":{"id":1859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1856,"indexed":false,"mutability":"mutable","name":"oldProposalThreshold","nameLocation":"625:20:3","nodeType":"VariableDeclaration","scope":1860,"src":"617:28:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1855,"name":"uint256","nodeType":"ElementaryTypeName","src":"617:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1858,"indexed":false,"mutability":"mutable","name":"newProposalThreshold","nameLocation":"655:20:3","nodeType":"VariableDeclaration","scope":1860,"src":"647:28:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1857,"name":"uint256","nodeType":"ElementaryTypeName","src":"647:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"616:60:3"},"src":"590:87:3"},{"body":{"id":1882,"nodeType":"Block","src":"882:156:3","statements":[{"expression":{"arguments":[{"id":1871,"name":"initialVotingDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"908:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1870,"name":"_setVotingDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"892:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"892:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1873,"nodeType":"ExpressionStatement","src":"892:35:3"},{"expression":{"arguments":[{"id":1875,"name":"initialVotingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"954:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1874,"name":"_setVotingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"937:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"937:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1877,"nodeType":"ExpressionStatement","src":"937:37:3"},{"expression":{"arguments":[{"id":1879,"name":"initialProposalThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"1006:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1878,"name":"_setProposalThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"984:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"984:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1881,"nodeType":"ExpressionStatement","src":"984:47:3"}]},"documentation":{"id":1861,"nodeType":"StructuredDocumentation","src":"683:61:3","text":" @dev Initialize the governance parameters."},"id":1883,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1863,"mutability":"mutable","name":"initialVotingDelay","nameLocation":"778:18:3","nodeType":"VariableDeclaration","scope":1883,"src":"770:26:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1862,"name":"uint256","nodeType":"ElementaryTypeName","src":"770:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1865,"mutability":"mutable","name":"initialVotingPeriod","nameLocation":"814:19:3","nodeType":"VariableDeclaration","scope":1883,"src":"806:27:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1864,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1867,"mutability":"mutable","name":"initialProposalThreshold","nameLocation":"851:24:3","nodeType":"VariableDeclaration","scope":1883,"src":"843:32:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1866,"name":"uint256","nodeType":"ElementaryTypeName","src":"843:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"760:121:3"},"returnParameters":{"id":1869,"nodeType":"ParameterList","parameters":[],"src":"882:0:3"},"scope":2008,"src":"749:289:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1451],"body":{"id":1892,"nodeType":"Block","src":"1171:36:3","statements":[{"expression":{"id":1890,"name":"_votingDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"1188:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1889,"id":1891,"nodeType":"Return","src":"1181:19:3"}]},"documentation":{"id":1884,"nodeType":"StructuredDocumentation","src":"1044:52:3","text":" @dev See {IGovernor-votingDelay}."},"functionSelector":"3932abb1","id":1893,"implemented":true,"kind":"function","modifiers":[],"name":"votingDelay","nameLocation":"1110:11:3","nodeType":"FunctionDefinition","overrides":{"id":1886,"nodeType":"OverrideSpecifier","overrides":[],"src":"1144:8:3"},"parameters":{"id":1885,"nodeType":"ParameterList","parameters":[],"src":"1121:2:3"},"returnParameters":{"id":1889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1893,"src":"1162:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1887,"name":"uint256","nodeType":"ElementaryTypeName","src":"1162:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1161:9:3"},"scope":2008,"src":"1101:106:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1457],"body":{"id":1902,"nodeType":"Block","src":"1342:37:3","statements":[{"expression":{"id":1900,"name":"_votingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"1359:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1899,"id":1901,"nodeType":"Return","src":"1352:20:3"}]},"documentation":{"id":1894,"nodeType":"StructuredDocumentation","src":"1213:53:3","text":" @dev See {IGovernor-votingPeriod}."},"functionSelector":"02a251a3","id":1903,"implemented":true,"kind":"function","modifiers":[],"name":"votingPeriod","nameLocation":"1280:12:3","nodeType":"FunctionDefinition","overrides":{"id":1896,"nodeType":"OverrideSpecifier","overrides":[],"src":"1315:8:3"},"parameters":{"id":1895,"nodeType":"ParameterList","parameters":[],"src":"1292:2:3"},"returnParameters":{"id":1899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1898,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1903,"src":"1333:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1897,"name":"uint256","nodeType":"ElementaryTypeName","src":"1333:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1332:9:3"},"scope":2008,"src":"1271:108:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[368],"body":{"id":1912,"nodeType":"Block","src":"1523:42:3","statements":[{"expression":{"id":1910,"name":"_proposalThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"1540:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1909,"id":1911,"nodeType":"Return","src":"1533:25:3"}]},"documentation":{"id":1904,"nodeType":"StructuredDocumentation","src":"1385:57:3","text":" @dev See {Governor-proposalThreshold}."},"functionSelector":"b58131b0","id":1913,"implemented":true,"kind":"function","modifiers":[],"name":"proposalThreshold","nameLocation":"1456:17:3","nodeType":"FunctionDefinition","overrides":{"id":1906,"nodeType":"OverrideSpecifier","overrides":[],"src":"1496:8:3"},"parameters":{"id":1905,"nodeType":"ParameterList","parameters":[],"src":"1473:2:3"},"returnParameters":{"id":1909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1913,"src":"1514:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1907,"name":"uint256","nodeType":"ElementaryTypeName","src":"1514:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1513:9:3"},"scope":2008,"src":"1447:118:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1925,"nodeType":"Block","src":"1816:48:3","statements":[{"expression":{"arguments":[{"id":1922,"name":"newVotingDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"1842:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1921,"name":"_setVotingDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"1826:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1924,"nodeType":"ExpressionStatement","src":"1826:31:3"}]},"documentation":{"id":1914,"nodeType":"StructuredDocumentation","src":"1571:162:3","text":" @dev Update the voting delay. This operation can only be performed through a governance proposal.\n Emits a {VotingDelaySet} event."},"functionSelector":"70b0f660","id":1926,"implemented":true,"kind":"function","modifiers":[{"id":1919,"kind":"modifierInvocation","modifierName":{"id":1918,"name":"onlyGovernance","nameLocations":["1801:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":104,"src":"1801:14:3"},"nodeType":"ModifierInvocation","src":"1801:14:3"}],"name":"setVotingDelay","nameLocation":"1747:14:3","nodeType":"FunctionDefinition","parameters":{"id":1917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1916,"mutability":"mutable","name":"newVotingDelay","nameLocation":"1770:14:3","nodeType":"VariableDeclaration","scope":1926,"src":"1762:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1915,"name":"uint256","nodeType":"ElementaryTypeName","src":"1762:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1761:24:3"},"returnParameters":{"id":1920,"nodeType":"ParameterList","parameters":[],"src":"1816:0:3"},"scope":2008,"src":"1738:126:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1938,"nodeType":"Block","src":"2119:50:3","statements":[{"expression":{"arguments":[{"id":1935,"name":"newVotingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"2146:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1934,"name":"_setVotingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"2129:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2129:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1937,"nodeType":"ExpressionStatement","src":"2129:33:3"}]},"documentation":{"id":1927,"nodeType":"StructuredDocumentation","src":"1870:164:3","text":" @dev Update the voting period. This operation can only be performed through a governance proposal.\n Emits a {VotingPeriodSet} event."},"functionSelector":"ea0217cf","id":1939,"implemented":true,"kind":"function","modifiers":[{"id":1932,"kind":"modifierInvocation","modifierName":{"id":1931,"name":"onlyGovernance","nameLocations":["2104:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":104,"src":"2104:14:3"},"nodeType":"ModifierInvocation","src":"2104:14:3"}],"name":"setVotingPeriod","nameLocation":"2048:15:3","nodeType":"FunctionDefinition","parameters":{"id":1930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1929,"mutability":"mutable","name":"newVotingPeriod","nameLocation":"2072:15:3","nodeType":"VariableDeclaration","scope":1939,"src":"2064:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1928,"name":"uint256","nodeType":"ElementaryTypeName","src":"2064:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2063:25:3"},"returnParameters":{"id":1933,"nodeType":"ParameterList","parameters":[],"src":"2119:0:3"},"scope":2008,"src":"2039:130:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1951,"nodeType":"Block","src":"2444:60:3","statements":[{"expression":{"arguments":[{"id":1948,"name":"newProposalThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"2476:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1947,"name":"_setProposalThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"2454:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2454:43:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1950,"nodeType":"ExpressionStatement","src":"2454:43:3"}]},"documentation":{"id":1940,"nodeType":"StructuredDocumentation","src":"2175:174:3","text":" @dev Update the proposal threshold. This operation can only be performed through a governance proposal.\n Emits a {ProposalThresholdSet} event."},"functionSelector":"ece40cc1","id":1952,"implemented":true,"kind":"function","modifiers":[{"id":1945,"kind":"modifierInvocation","modifierName":{"id":1944,"name":"onlyGovernance","nameLocations":["2429:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":104,"src":"2429:14:3"},"nodeType":"ModifierInvocation","src":"2429:14:3"}],"name":"setProposalThreshold","nameLocation":"2363:20:3","nodeType":"FunctionDefinition","parameters":{"id":1943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1942,"mutability":"mutable","name":"newProposalThreshold","nameLocation":"2392:20:3","nodeType":"VariableDeclaration","scope":1952,"src":"2384:28:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1941,"name":"uint256","nodeType":"ElementaryTypeName","src":"2384:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2383:30:3"},"returnParameters":{"id":1946,"nodeType":"ParameterList","parameters":[],"src":"2444:0:3"},"scope":2008,"src":"2354:150:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1967,"nodeType":"Block","src":"2688:105:3","statements":[{"eventCall":{"arguments":[{"id":1959,"name":"_votingDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"2718:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1960,"name":"newVotingDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"2732:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1958,"name":"VotingDelaySet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"2703:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2703:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1962,"nodeType":"EmitStatement","src":"2698:49:3"},{"expression":{"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1963,"name":"_votingDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"2757:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1964,"name":"newVotingDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"2772:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2757:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1966,"nodeType":"ExpressionStatement","src":"2757:29:3"}]},"documentation":{"id":1953,"nodeType":"StructuredDocumentation","src":"2510:107:3","text":" @dev Internal setter for the voting delay.\n Emits a {VotingDelaySet} event."},"id":1968,"implemented":true,"kind":"function","modifiers":[],"name":"_setVotingDelay","nameLocation":"2631:15:3","nodeType":"FunctionDefinition","parameters":{"id":1956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1955,"mutability":"mutable","name":"newVotingDelay","nameLocation":"2655:14:3","nodeType":"VariableDeclaration","scope":1968,"src":"2647:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1954,"name":"uint256","nodeType":"ElementaryTypeName","src":"2647:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2646:24:3"},"returnParameters":{"id":1957,"nodeType":"ParameterList","parameters":[],"src":"2688:0:3"},"scope":2008,"src":"2622:171:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1990,"nodeType":"Block","src":"2981:248:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1975,"name":"newVotingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"3056:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3074:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3056:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476f7665726e6f7253657474696e67733a20766f74696e6720706572696f6420746f6f206c6f77","id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3077:41:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_3f314603cb191f371d117be724372820f824fc7fbb608c5408b31620bafe9a83","typeString":"literal_string \"GovernorSettings: voting period too low\""},"value":"GovernorSettings: voting period too low"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3f314603cb191f371d117be724372820f824fc7fbb608c5408b31620bafe9a83","typeString":"literal_string \"GovernorSettings: voting period too low\""}],"id":1974,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3048:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3048:71:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1980,"nodeType":"ExpressionStatement","src":"3048:71:3"},{"eventCall":{"arguments":[{"id":1982,"name":"_votingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"3150:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1983,"name":"newVotingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"3165:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1981,"name":"VotingPeriodSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"3134:15:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3134:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1985,"nodeType":"EmitStatement","src":"3129:52:3"},{"expression":{"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1986,"name":"_votingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"3191:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1987,"name":"newVotingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"3207:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3191:31:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1989,"nodeType":"ExpressionStatement","src":"3191:31:3"}]},"documentation":{"id":1969,"nodeType":"StructuredDocumentation","src":"2799:109:3","text":" @dev Internal setter for the voting period.\n Emits a {VotingPeriodSet} event."},"id":1991,"implemented":true,"kind":"function","modifiers":[],"name":"_setVotingPeriod","nameLocation":"2922:16:3","nodeType":"FunctionDefinition","parameters":{"id":1972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1971,"mutability":"mutable","name":"newVotingPeriod","nameLocation":"2947:15:3","nodeType":"VariableDeclaration","scope":1991,"src":"2939:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1970,"name":"uint256","nodeType":"ElementaryTypeName","src":"2939:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2938:25:3"},"returnParameters":{"id":1973,"nodeType":"ParameterList","parameters":[],"src":"2981:0:3"},"scope":2008,"src":"2913:316:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2006,"nodeType":"Block","src":"3437:135:3","statements":[{"eventCall":{"arguments":[{"id":1998,"name":"_proposalThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"3473:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1999,"name":"newProposalThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"3493:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1997,"name":"ProposalThresholdSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"3452:20:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3452:62:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2001,"nodeType":"EmitStatement","src":"3447:67:3"},{"expression":{"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2002,"name":"_proposalThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"3524:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2003,"name":"newProposalThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"3545:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3524:41:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2005,"nodeType":"ExpressionStatement","src":"3524:41:3"}]},"documentation":{"id":1992,"nodeType":"StructuredDocumentation","src":"3235:119:3","text":" @dev Internal setter for the proposal threshold.\n Emits a {ProposalThresholdSet} event."},"id":2007,"implemented":true,"kind":"function","modifiers":[],"name":"_setProposalThreshold","nameLocation":"3368:21:3","nodeType":"FunctionDefinition","parameters":{"id":1995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1994,"mutability":"mutable","name":"newProposalThreshold","nameLocation":"3398:20:3","nodeType":"VariableDeclaration","scope":2007,"src":"3390:28:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1993,"name":"uint256","nodeType":"ElementaryTypeName","src":"3390:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3389:30:3"},"returnParameters":{"id":1996,"nodeType":"ParameterList","parameters":[],"src":"3437:0:3"},"scope":2008,"src":"3359:213:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2009,"src":"276:3298:3","usedErrors":[7466]}],"src":"111:3464:3"},"id":3},"@openzeppelin/contracts/governance/extensions/GovernorVotes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/extensions/GovernorVotes.sol","exportedSymbols":{"Address":[2720],"Context":[4113],"DoubleEndedQueue":[7800],"ECDSA":[4863],"EIP712":[5017],"ERC165":[5041],"Governor":[1307],"GovernorVotes":[2050],"IERC1155Receiver":[2372],"IERC165":[5053],"IERC721Receiver":[2390],"IGovernor":[1604],"IVotes":[2331],"Math":[5918],"SafeCast":[7459],"Strings":[4288],"Timers":[4502]},"id":2051,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2010,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:4"},{"absolutePath":"@openzeppelin/contracts/governance/Governor.sol","file":"../Governor.sol","id":2011,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2051,"sourceUnit":1308,"src":"148:25:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","file":"../utils/IVotes.sol","id":2012,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2051,"sourceUnit":2332,"src":"174:29:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2014,"name":"Governor","nameLocations":["405:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":1307,"src":"405:8:4"},"id":2015,"nodeType":"InheritanceSpecifier","src":"405:8:4"}],"canonicalName":"GovernorVotes","contractDependencies":[],"contractKind":"contract","documentation":{"id":2013,"nodeType":"StructuredDocumentation","src":"205:164:4","text":" @dev Extension of {Governor} for voting weight extraction from an {ERC20Votes} token, or since v4.5 an {ERC721Votes} token.\n _Available since v4.3._"},"fullyImplemented":false,"id":2050,"linearizedBaseContracts":[2050,1307,2372,2390,1604,5017,5041,5053,4113],"name":"GovernorVotes","nameLocation":"388:13:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"fc0c546a","id":2018,"mutability":"immutable","name":"token","nameLocation":"444:5:4","nodeType":"VariableDeclaration","scope":2050,"src":"420:29:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVotes_$2331","typeString":"contract IVotes"},"typeName":{"id":2017,"nodeType":"UserDefinedTypeName","pathNode":{"id":2016,"name":"IVotes","nameLocations":["420:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":2331,"src":"420:6:4"},"referencedDeclaration":2331,"src":"420:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IVotes_$2331","typeString":"contract IVotes"}},"visibility":"public"},{"body":{"id":2028,"nodeType":"Block","src":"489:37:4","statements":[{"expression":{"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2024,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"499:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IVotes_$2331","typeString":"contract IVotes"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2025,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"507:12:4","typeDescriptions":{"typeIdentifier":"t_contract$_IVotes_$2331","typeString":"contract IVotes"}},"src":"499:20:4","typeDescriptions":{"typeIdentifier":"t_contract$_IVotes_$2331","typeString":"contract IVotes"}},"id":2027,"nodeType":"ExpressionStatement","src":"499:20:4"}]},"id":2029,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2021,"mutability":"mutable","name":"tokenAddress","nameLocation":"475:12:4","nodeType":"VariableDeclaration","scope":2029,"src":"468:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVotes_$2331","typeString":"contract IVotes"},"typeName":{"id":2020,"nodeType":"UserDefinedTypeName","pathNode":{"id":2019,"name":"IVotes","nameLocations":["468:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":2331,"src":"468:6:4"},"referencedDeclaration":2331,"src":"468:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IVotes_$2331","typeString":"contract IVotes"}},"visibility":"internal"}],"src":"467:21:4"},"returnParameters":{"id":2023,"nodeType":"ParameterList","parameters":[],"src":"489:0:4"},"scope":2050,"src":"456:70:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[396],"body":{"id":2048,"nodeType":"Block","src":"812:64:4","statements":[{"expression":{"arguments":[{"id":2044,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"848:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2045,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"857:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2042,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"829:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IVotes_$2331","typeString":"contract IVotes"}},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"835:12:4","memberName":"getPastVotes","nodeType":"MemberAccess","referencedDeclaration":2292,"src":"829:18:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view external returns (uint256)"}},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"829:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2041,"id":2047,"nodeType":"Return","src":"822:47:4"}]},"documentation":{"id":2030,"nodeType":"StructuredDocumentation","src":"532:114:4","text":" Read the voting weight from the token's built in snapshot mechanism (see {Governor-_getVotes})."},"id":2049,"implemented":true,"kind":"function","modifiers":[],"name":"_getVotes","nameLocation":"660:9:4","nodeType":"FunctionDefinition","overrides":{"id":2038,"nodeType":"OverrideSpecifier","overrides":[],"src":"785:8:4"},"parameters":{"id":2037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2032,"mutability":"mutable","name":"account","nameLocation":"687:7:4","nodeType":"VariableDeclaration","scope":2049,"src":"679:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2031,"name":"address","nodeType":"ElementaryTypeName","src":"679:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2034,"mutability":"mutable","name":"blockNumber","nameLocation":"712:11:4","nodeType":"VariableDeclaration","scope":2049,"src":"704:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2033,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2036,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2049,"src":"733:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2035,"name":"bytes","nodeType":"ElementaryTypeName","src":"733:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"669:93:4"},"returnParameters":{"id":2041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2040,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2049,"src":"803:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2039,"name":"uint256","nodeType":"ElementaryTypeName","src":"803:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"802:9:4"},"scope":2050,"src":"651:225:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2051,"src":"370:508:4","usedErrors":[7466]}],"src":"123:756:4"},"id":4},"@openzeppelin/contracts/governance/extensions/GovernorVotesQuorumFraction.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/extensions/GovernorVotesQuorumFraction.sol","exportedSymbols":{"Address":[2720],"Checkpoints":[4091],"Context":[4113],"DoubleEndedQueue":[7800],"ECDSA":[4863],"EIP712":[5017],"ERC165":[5041],"Governor":[1307],"GovernorVotes":[2050],"GovernorVotesQuorumFraction":[2253],"IERC1155Receiver":[2372],"IERC165":[5053],"IERC721Receiver":[2390],"IGovernor":[1604],"IVotes":[2331],"Math":[5918],"SafeCast":[7459],"Strings":[4288],"Timers":[4502]},"id":2254,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2052,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"137:23:5"},{"absolutePath":"@openzeppelin/contracts/governance/extensions/GovernorVotes.sol","file":"./GovernorVotes.sol","id":2053,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2254,"sourceUnit":2051,"src":"162:29:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Checkpoints.sol","file":"../../utils/Checkpoints.sol","id":2054,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2254,"sourceUnit":4092,"src":"192:37:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../../utils/math/SafeCast.sol","id":2055,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2254,"sourceUnit":7460,"src":"230:39:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2057,"name":"GovernorVotes","nameLocations":["507:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":2050,"src":"507:13:5"},"id":2058,"nodeType":"InheritanceSpecifier","src":"507:13:5"}],"canonicalName":"GovernorVotesQuorumFraction","contractDependencies":[],"contractKind":"contract","documentation":{"id":2056,"nodeType":"StructuredDocumentation","src":"271:186:5","text":" @dev Extension of {Governor} for voting weight extraction from an {ERC20Votes} token and a quorum expressed as a\n fraction of the total supply.\n _Available since v4.3._"},"fullyImplemented":false,"id":2253,"linearizedBaseContracts":[2253,2050,1307,2372,2390,1604,5017,5041,5053,4113],"name":"GovernorVotesQuorumFraction","nameLocation":"476:27:5","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2062,"libraryName":{"id":2059,"name":"Checkpoints","nameLocations":["533:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":4091,"src":"533:11:5"},"nodeType":"UsingForDirective","src":"527:42:5","typeName":{"id":2061,"nodeType":"UserDefinedTypeName","pathNode":{"id":2060,"name":"Checkpoints.History","nameLocations":["549:11:5","561:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":2730,"src":"549:19:5"},"referencedDeclaration":2730,"src":"549:19:5","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage_ptr","typeString":"struct Checkpoints.History"}}},{"constant":false,"id":2064,"mutability":"mutable","name":"_quorumNumerator","nameLocation":"591:16:5","nodeType":"VariableDeclaration","scope":2253,"src":"575:32:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2063,"name":"uint256","nodeType":"ElementaryTypeName","src":"575:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2067,"mutability":"mutable","name":"_quorumNumeratorHistory","nameLocation":"655:23:5","nodeType":"VariableDeclaration","scope":2253,"src":"627:51:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage","typeString":"struct Checkpoints.History"},"typeName":{"id":2066,"nodeType":"UserDefinedTypeName","pathNode":{"id":2065,"name":"Checkpoints.History","nameLocations":["627:11:5","639:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":2730,"src":"627:19:5"},"referencedDeclaration":2730,"src":"627:19:5","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"private"},{"anonymous":false,"eventSelector":"0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b4633997","id":2073,"name":"QuorumNumeratorUpdated","nameLocation":"691:22:5","nodeType":"EventDefinition","parameters":{"id":2072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2069,"indexed":false,"mutability":"mutable","name":"oldQuorumNumerator","nameLocation":"722:18:5","nodeType":"VariableDeclaration","scope":2073,"src":"714:26:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2068,"name":"uint256","nodeType":"ElementaryTypeName","src":"714:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2071,"indexed":false,"mutability":"mutable","name":"newQuorumNumerator","nameLocation":"750:18:5","nodeType":"VariableDeclaration","scope":2073,"src":"742:26:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2070,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"713:56:5"},"src":"685:85:5"},{"body":{"id":2083,"nodeType":"Block","src":"1199:61:5","statements":[{"expression":{"arguments":[{"id":2080,"name":"quorumNumeratorValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"1232:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2079,"name":"_updateQuorumNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"1209:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1209:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2082,"nodeType":"ExpressionStatement","src":"1209:44:5"}]},"documentation":{"id":2074,"nodeType":"StructuredDocumentation","src":"776:376:5","text":" @dev Initialize quorum as a fraction of the token's total supply.\n The fraction is specified as `numerator / denominator`. By default the denominator is 100, so quorum is\n specified as a percent: a numerator of 10 corresponds to quorum being 10% of total supply. The denominator can be\n customized by overriding {quorumDenominator}."},"id":2084,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2076,"mutability":"mutable","name":"quorumNumeratorValue","nameLocation":"1177:20:5","nodeType":"VariableDeclaration","scope":2084,"src":"1169:28:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2075,"name":"uint256","nodeType":"ElementaryTypeName","src":"1169:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1168:30:5"},"returnParameters":{"id":2078,"nodeType":"ParameterList","parameters":[],"src":"1199:0:5"},"scope":2253,"src":"1157:103:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2101,"nodeType":"Block","src":"1422:126:5","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2090,"name":"_quorumNumeratorHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"1439:23:5","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage","typeString":"struct Checkpoints.History storage ref"}},"id":2091,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1463:12:5","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":2729,"src":"1439:36:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1476:6:5","memberName":"length","nodeType":"MemberAccess","src":"1439:43:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1486:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1439:48:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2096,"name":"_quorumNumeratorHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"1509:23:5","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage","typeString":"struct Checkpoints.History storage ref"}},"id":2097,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1533:6:5","memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":2984,"src":"1509:30:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_History_$2730_storage_ptr_$returns$_t_uint224_$bound_to$_t_struct$_History_$2730_storage_ptr_$","typeString":"function (struct Checkpoints.History storage pointer) view returns (uint224)"}},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1509:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1439:102:5","trueExpression":{"id":2095,"name":"_quorumNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"1490:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2089,"id":2100,"nodeType":"Return","src":"1432:109:5"}]},"documentation":{"id":2085,"nodeType":"StructuredDocumentation","src":"1266:86:5","text":" @dev Returns the current quorum numerator. See {quorumDenominator}."},"functionSelector":"a7713a70","id":2102,"implemented":true,"kind":"function","modifiers":[],"name":"quorumNumerator","nameLocation":"1366:15:5","nodeType":"FunctionDefinition","parameters":{"id":2086,"nodeType":"ParameterList","parameters":[],"src":"1381:2:5"},"returnParameters":{"id":2089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2102,"src":"1413:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2087,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1412:9:5"},"scope":2253,"src":"1357:191:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2149,"nodeType":"Block","src":"1748:565:5","statements":[{"assignments":[2111],"declarations":[{"constant":false,"id":2111,"mutability":"mutable","name":"length","nameLocation":"1822:6:5","nodeType":"VariableDeclaration","scope":2149,"src":"1814:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2110,"name":"uint256","nodeType":"ElementaryTypeName","src":"1814:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2115,"initialValue":{"expression":{"expression":{"id":2112,"name":"_quorumNumeratorHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"1831:23:5","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage","typeString":"struct Checkpoints.History storage ref"}},"id":2113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1855:12:5","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":2729,"src":"1831:36:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1868:6:5","memberName":"length","nodeType":"MemberAccess","src":"1831:43:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1814:60:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2116,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2111,"src":"1888:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1898:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1888:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2122,"nodeType":"IfStatement","src":"1884:65:5","trueBody":{"id":2121,"nodeType":"Block","src":"1901:48:5","statements":[{"expression":{"id":2119,"name":"_quorumNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"1922:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2109,"id":2120,"nodeType":"Return","src":"1915:23:5"}]}},{"assignments":[2127],"declarations":[{"constant":false,"id":2127,"mutability":"mutable","name":"latest","nameLocation":"2047:6:5","nodeType":"VariableDeclaration","scope":2149,"src":"2017:36:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2735_memory_ptr","typeString":"struct Checkpoints.Checkpoint"},"typeName":{"id":2126,"nodeType":"UserDefinedTypeName","pathNode":{"id":2125,"name":"Checkpoints.Checkpoint","nameLocations":["2017:11:5","2029:10:5"],"nodeType":"IdentifierPath","referencedDeclaration":2735,"src":"2017:22:5"},"referencedDeclaration":2735,"src":"2017:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2735_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"visibility":"internal"}],"id":2134,"initialValue":{"baseExpression":{"expression":{"id":2128,"name":"_quorumNumeratorHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"2056:23:5","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage","typeString":"struct Checkpoints.History storage ref"}},"id":2129,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2080:12:5","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":2729,"src":"2056:36:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},"id":2133,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2130,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2111,"src":"2093:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2102:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2093:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2056:48:5","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2735_storage","typeString":"struct Checkpoints.Checkpoint storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2017:87:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2135,"name":"latest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"2118:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2735_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}},"id":2136,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2125:12:5","memberName":"_blockNumber","nodeType":"MemberAccess","referencedDeclaration":2732,"src":"2118:19:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2137,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"2141:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2118:34:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2143,"nodeType":"IfStatement","src":"2114:85:5","trueBody":{"id":2142,"nodeType":"Block","src":"2154:45:5","statements":[{"expression":{"expression":{"id":2139,"name":"latest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"2175:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2735_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}},"id":2140,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2182:6:5","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2734,"src":"2175:13:5","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":2109,"id":2141,"nodeType":"Return","src":"2168:20:5"}]}},{"expression":{"arguments":[{"id":2146,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"2294:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2144,"name":"_quorumNumeratorHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"2259:23:5","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage","typeString":"struct Checkpoints.History storage ref"}},"id":2145,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2283:10:5","memberName":"getAtBlock","nodeType":"MemberAccess","referencedDeclaration":2792,"src":"2259:34:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_History_$2730_storage_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_History_$2730_storage_ptr_$","typeString":"function (struct Checkpoints.History storage pointer,uint256) view returns (uint256)"}},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2259:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2109,"id":2148,"nodeType":"Return","src":"2252:54:5"}]},"documentation":{"id":2103,"nodeType":"StructuredDocumentation","src":"1554:105:5","text":" @dev Returns the quorum numerator at a specific block number. See {quorumDenominator}."},"functionSelector":"60c4247f","id":2150,"implemented":true,"kind":"function","modifiers":[],"name":"quorumNumerator","nameLocation":"1673:15:5","nodeType":"FunctionDefinition","parameters":{"id":2106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2105,"mutability":"mutable","name":"blockNumber","nameLocation":"1697:11:5","nodeType":"VariableDeclaration","scope":2150,"src":"1689:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2104,"name":"uint256","nodeType":"ElementaryTypeName","src":"1689:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1688:21:5"},"returnParameters":{"id":2109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2150,"src":"1739:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2107,"name":"uint256","nodeType":"ElementaryTypeName","src":"1739:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1738:9:5"},"scope":2253,"src":"1664:649:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2158,"nodeType":"Block","src":"2486:27:5","statements":[{"expression":{"hexValue":"313030","id":2156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2503:3:5","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"functionReturnParameters":2155,"id":2157,"nodeType":"Return","src":"2496:10:5"}]},"documentation":{"id":2151,"nodeType":"StructuredDocumentation","src":"2319:95:5","text":" @dev Returns the quorum denominator. Defaults to 100, but may be overridden."},"functionSelector":"97c3d334","id":2159,"implemented":true,"kind":"function","modifiers":[],"name":"quorumDenominator","nameLocation":"2428:17:5","nodeType":"FunctionDefinition","parameters":{"id":2152,"nodeType":"ParameterList","parameters":[],"src":"2445:2:5"},"returnParameters":{"id":2155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2159,"src":"2477:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2153,"name":"uint256","nodeType":"ElementaryTypeName","src":"2477:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2476:9:5"},"scope":2253,"src":"2419:94:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1465],"body":{"id":2181,"nodeType":"Block","src":"2735:116:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2170,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"2778:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2168,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"2753:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IVotes_$2331","typeString":"contract IVotes"}},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2759:18:5","memberName":"getPastTotalSupply","nodeType":"MemberAccess","referencedDeclaration":2300,"src":"2753:24:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2753:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2173,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"2809:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2172,"name":"quorumNumerator","nodeType":"Identifier","overloadedDeclarations":[2102,2150],"referencedDeclaration":2150,"src":"2793:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2793:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2753:68:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2176,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2752:70:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2177,"name":"quorumDenominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"2825:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2825:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2752:92:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2167,"id":2180,"nodeType":"Return","src":"2745:99:5"}]},"documentation":{"id":2160,"nodeType":"StructuredDocumentation","src":"2519:127:5","text":" @dev Returns the quorum for a block number, in terms of number of votes: `supply * numerator / denominator`."},"functionSelector":"f8ce560a","id":2182,"implemented":true,"kind":"function","modifiers":[],"name":"quorum","nameLocation":"2660:6:5","nodeType":"FunctionDefinition","overrides":{"id":2164,"nodeType":"OverrideSpecifier","overrides":[],"src":"2708:8:5"},"parameters":{"id":2163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2162,"mutability":"mutable","name":"blockNumber","nameLocation":"2675:11:5","nodeType":"VariableDeclaration","scope":2182,"src":"2667:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2161,"name":"uint256","nodeType":"ElementaryTypeName","src":"2667:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2666:21:5"},"returnParameters":{"id":2167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2182,"src":"2726:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2165,"name":"uint256","nodeType":"ElementaryTypeName","src":"2726:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2725:9:5"},"scope":2253,"src":"2651:200:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2194,"nodeType":"Block","src":"3218:59:5","statements":[{"expression":{"arguments":[{"id":2191,"name":"newQuorumNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"3251:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2190,"name":"_updateQuorumNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"3228:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3228:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2193,"nodeType":"ExpressionStatement","src":"3228:42:5"}]},"documentation":{"id":2183,"nodeType":"StructuredDocumentation","src":"2857:265:5","text":" @dev Changes the quorum numerator.\n Emits a {QuorumNumeratorUpdated} event.\n Requirements:\n - Must be called through a governance proposal.\n - New numerator must be smaller or equal to the denominator."},"functionSelector":"06f3f9e6","id":2195,"implemented":true,"kind":"function","modifiers":[{"id":2188,"kind":"modifierInvocation","modifierName":{"id":2187,"name":"onlyGovernance","nameLocations":["3203:14:5"],"nodeType":"IdentifierPath","referencedDeclaration":104,"src":"3203:14:5"},"nodeType":"ModifierInvocation","src":"3203:14:5"}],"name":"updateQuorumNumerator","nameLocation":"3136:21:5","nodeType":"FunctionDefinition","parameters":{"id":2186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2185,"mutability":"mutable","name":"newQuorumNumerator","nameLocation":"3166:18:5","nodeType":"VariableDeclaration","scope":2195,"src":"3158:26:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2184,"name":"uint256","nodeType":"ElementaryTypeName","src":"3158:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3157:28:5"},"returnParameters":{"id":2189,"nodeType":"ParameterList","parameters":[],"src":"3218:0:5"},"scope":2253,"src":"3127:150:5","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"body":{"id":2251,"nodeType":"Block","src":"3575:810:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2202,"name":"newQuorumNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"3606:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2203,"name":"quorumDenominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"3628:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3628:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3606:41:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e61746f72","id":2206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3661:69:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_0687f8064c09ccf183090b5092c4485c730072a161487645a7e37b56cef356bb","typeString":"literal_string \"GovernorVotesQuorumFraction: quorumNumerator over quorumDenominator\""},"value":"GovernorVotesQuorumFraction: quorumNumerator over quorumDenominator"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0687f8064c09ccf183090b5092c4485c730072a161487645a7e37b56cef356bb","typeString":"literal_string \"GovernorVotesQuorumFraction: quorumNumerator over quorumDenominator\""}],"id":2201,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3585:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:155:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2208,"nodeType":"ExpressionStatement","src":"3585:155:5"},{"assignments":[2210],"declarations":[{"constant":false,"id":2210,"mutability":"mutable","name":"oldQuorumNumerator","nameLocation":"3759:18:5","nodeType":"VariableDeclaration","scope":2251,"src":"3751:26:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2209,"name":"uint256","nodeType":"ElementaryTypeName","src":"3751:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2213,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2211,"name":"quorumNumerator","nodeType":"Identifier","overloadedDeclarations":[2102,2150],"referencedDeclaration":2102,"src":"3780:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3780:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3751:46:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2214,"name":"oldQuorumNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"3931:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3953:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3931:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2217,"name":"_quorumNumeratorHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"3958:23:5","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage","typeString":"struct Checkpoints.History storage ref"}},"id":2218,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3982:12:5","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":2729,"src":"3958:36:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3995:6:5","memberName":"length","nodeType":"MemberAccess","src":"3958:43:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4005:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3958:48:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3931:75:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2239,"nodeType":"IfStatement","src":"3927:268:5","trueBody":{"id":2238,"nodeType":"Block","src":"4008:187:5","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4119:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"arguments":[{"id":2233,"name":"oldQuorumNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"4149:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2231,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7459,"src":"4130:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7459_$","typeString":"type(library SafeCast)"}},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4139:9:5","memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":6021,"src":"4130:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4130:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"expression":{"id":2228,"name":"Checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"4081:11:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Checkpoints_$4091_$","typeString":"type(library Checkpoints)"}},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4093:10:5","memberName":"Checkpoint","nodeType":"MemberAccess","referencedDeclaration":2735,"src":"4081:22:5","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint_$2735_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint storage pointer)"}},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4105:12:5","4122:6:5"],"names":["_blockNumber","_value"],"nodeType":"FunctionCall","src":"4081:89:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2735_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint_$2735_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}],"expression":{"expression":{"id":2223,"name":"_quorumNumeratorHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"4022:23:5","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage","typeString":"struct Checkpoints.History storage ref"}},"id":2226,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4046:12:5","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":2729,"src":"4022:36:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4059:4:5","memberName":"push","nodeType":"MemberAccess","src":"4022:41:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint_$2735_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,struct Checkpoints.Checkpoint storage ref)"}},"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4022:162:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2237,"nodeType":"ExpressionStatement","src":"4022:162:5"}]}},{"expression":{"arguments":[{"id":2243,"name":"newQuorumNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"4281:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2240,"name":"_quorumNumeratorHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"4252:23:5","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage","typeString":"struct Checkpoints.History storage ref"}},"id":2242,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4276:4:5","memberName":"push","nodeType":"MemberAccess","referencedDeclaration":2920,"src":"4252:28:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_History_$2730_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$bound_to$_t_struct$_History_$2730_storage_ptr_$","typeString":"function (struct Checkpoints.History storage pointer,uint256) returns (uint256,uint256)"}},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4252:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":2245,"nodeType":"ExpressionStatement","src":"4252:48:5"},{"eventCall":{"arguments":[{"id":2247,"name":"oldQuorumNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"4339:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2248,"name":"newQuorumNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"4359:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2246,"name":"QuorumNumeratorUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"4316:22:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4316:62:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2250,"nodeType":"EmitStatement","src":"4311:67:5"}]},"documentation":{"id":2196,"nodeType":"StructuredDocumentation","src":"3283:210:5","text":" @dev Changes the quorum numerator.\n Emits a {QuorumNumeratorUpdated} event.\n Requirements:\n - New numerator must be smaller or equal to the denominator."},"id":2252,"implemented":true,"kind":"function","modifiers":[],"name":"_updateQuorumNumerator","nameLocation":"3507:22:5","nodeType":"FunctionDefinition","parameters":{"id":2199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2198,"mutability":"mutable","name":"newQuorumNumerator","nameLocation":"3538:18:5","nodeType":"VariableDeclaration","scope":2252,"src":"3530:26:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2197,"name":"uint256","nodeType":"ElementaryTypeName","src":"3530:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3529:28:5"},"returnParameters":{"id":2200,"nodeType":"ParameterList","parameters":[],"src":"3575:0:5"},"scope":2253,"src":"3498:887:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2254,"src":"458:3929:5","usedErrors":[7466]}],"src":"137:4251:5"},"id":5},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","exportedSymbols":{"IVotes":[2331]},"id":2332,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2255,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IVotes","contractDependencies":[],"contractKind":"interface","documentation":{"id":2256,"nodeType":"StructuredDocumentation","src":"135:132:6","text":" @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n _Available since v4.5._"},"fullyImplemented":false,"id":2331,"linearizedBaseContracts":[2331],"name":"IVotes","nameLocation":"278:6:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2257,"nodeType":"StructuredDocumentation","src":"291:71:6","text":" @dev Emitted when an account changes their delegate."},"eventSelector":"3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f","id":2265,"name":"DelegateChanged","nameLocation":"373:15:6","nodeType":"EventDefinition","parameters":{"id":2264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2259,"indexed":true,"mutability":"mutable","name":"delegator","nameLocation":"405:9:6","nodeType":"VariableDeclaration","scope":2265,"src":"389:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2258,"name":"address","nodeType":"ElementaryTypeName","src":"389:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2261,"indexed":true,"mutability":"mutable","name":"fromDelegate","nameLocation":"432:12:6","nodeType":"VariableDeclaration","scope":2265,"src":"416:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2260,"name":"address","nodeType":"ElementaryTypeName","src":"416:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2263,"indexed":true,"mutability":"mutable","name":"toDelegate","nameLocation":"462:10:6","nodeType":"VariableDeclaration","scope":2265,"src":"446:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2262,"name":"address","nodeType":"ElementaryTypeName","src":"446:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"388:85:6"},"src":"367:107:6"},{"anonymous":false,"documentation":{"id":2266,"nodeType":"StructuredDocumentation","src":"480:124:6","text":" @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes."},"eventSelector":"dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724","id":2274,"name":"DelegateVotesChanged","nameLocation":"615:20:6","nodeType":"EventDefinition","parameters":{"id":2273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2268,"indexed":true,"mutability":"mutable","name":"delegate","nameLocation":"652:8:6","nodeType":"VariableDeclaration","scope":2274,"src":"636:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2267,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2270,"indexed":false,"mutability":"mutable","name":"previousBalance","nameLocation":"670:15:6","nodeType":"VariableDeclaration","scope":2274,"src":"662:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2269,"name":"uint256","nodeType":"ElementaryTypeName","src":"662:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2272,"indexed":false,"mutability":"mutable","name":"newBalance","nameLocation":"695:10:6","nodeType":"VariableDeclaration","scope":2274,"src":"687:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2271,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:71:6"},"src":"609:98:6"},{"documentation":{"id":2275,"nodeType":"StructuredDocumentation","src":"713:79:6","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":2282,"implemented":false,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"806:8:6","nodeType":"FunctionDefinition","parameters":{"id":2278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2277,"mutability":"mutable","name":"account","nameLocation":"823:7:6","nodeType":"VariableDeclaration","scope":2282,"src":"815:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2276,"name":"address","nodeType":"ElementaryTypeName","src":"815:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"814:17:6"},"returnParameters":{"id":2281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2282,"src":"855:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2279,"name":"uint256","nodeType":"ElementaryTypeName","src":"855:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"854:9:6"},"scope":2331,"src":"797:67:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2283,"nodeType":"StructuredDocumentation","src":"870:114:6","text":" @dev Returns the amount of votes that `account` had at the end of a past block (`blockNumber`)."},"functionSelector":"3a46b1a8","id":2292,"implemented":false,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"998:12:6","nodeType":"FunctionDefinition","parameters":{"id":2288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2285,"mutability":"mutable","name":"account","nameLocation":"1019:7:6","nodeType":"VariableDeclaration","scope":2292,"src":"1011:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2284,"name":"address","nodeType":"ElementaryTypeName","src":"1011:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2287,"mutability":"mutable","name":"blockNumber","nameLocation":"1036:11:6","nodeType":"VariableDeclaration","scope":2292,"src":"1028:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2286,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:38:6"},"returnParameters":{"id":2291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2292,"src":"1072:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2289,"name":"uint256","nodeType":"ElementaryTypeName","src":"1072:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1071:9:6"},"scope":2331,"src":"989:92:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2293,"nodeType":"StructuredDocumentation","src":"1087:365:6","text":" @dev Returns the total supply of votes available at the end of a past block (`blockNumber`).\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote."},"functionSelector":"8e539e8c","id":2300,"implemented":false,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"1466:18:6","nodeType":"FunctionDefinition","parameters":{"id":2296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2295,"mutability":"mutable","name":"blockNumber","nameLocation":"1493:11:6","nodeType":"VariableDeclaration","scope":2300,"src":"1485:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2294,"name":"uint256","nodeType":"ElementaryTypeName","src":"1485:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1484:21:6"},"returnParameters":{"id":2299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2300,"src":"1529:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2297,"name":"uint256","nodeType":"ElementaryTypeName","src":"1529:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1528:9:6"},"scope":2331,"src":"1457:81:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2301,"nodeType":"StructuredDocumentation","src":"1544:71:6","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":2308,"implemented":false,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"1629:9:6","nodeType":"FunctionDefinition","parameters":{"id":2304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2303,"mutability":"mutable","name":"account","nameLocation":"1647:7:6","nodeType":"VariableDeclaration","scope":2308,"src":"1639:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2302,"name":"address","nodeType":"ElementaryTypeName","src":"1639:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1638:17:6"},"returnParameters":{"id":2307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2306,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2308,"src":"1679:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2305,"name":"address","nodeType":"ElementaryTypeName","src":"1679:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1678:9:6"},"scope":2331,"src":"1620:68:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2309,"nodeType":"StructuredDocumentation","src":"1694:71:6","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":2314,"implemented":false,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"1779:8:6","nodeType":"FunctionDefinition","parameters":{"id":2312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2311,"mutability":"mutable","name":"delegatee","nameLocation":"1796:9:6","nodeType":"VariableDeclaration","scope":2314,"src":"1788:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2310,"name":"address","nodeType":"ElementaryTypeName","src":"1788:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1787:19:6"},"returnParameters":{"id":2313,"nodeType":"ParameterList","parameters":[],"src":"1815:0:6"},"scope":2331,"src":"1770:46:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2315,"nodeType":"StructuredDocumentation","src":"1822:67:6","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":2330,"implemented":false,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"1903:13:6","nodeType":"FunctionDefinition","parameters":{"id":2328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2317,"mutability":"mutable","name":"delegatee","nameLocation":"1934:9:6","nodeType":"VariableDeclaration","scope":2330,"src":"1926:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2316,"name":"address","nodeType":"ElementaryTypeName","src":"1926:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2319,"mutability":"mutable","name":"nonce","nameLocation":"1961:5:6","nodeType":"VariableDeclaration","scope":2330,"src":"1953:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2318,"name":"uint256","nodeType":"ElementaryTypeName","src":"1953:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2321,"mutability":"mutable","name":"expiry","nameLocation":"1984:6:6","nodeType":"VariableDeclaration","scope":2330,"src":"1976:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2320,"name":"uint256","nodeType":"ElementaryTypeName","src":"1976:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2323,"mutability":"mutable","name":"v","nameLocation":"2006:1:6","nodeType":"VariableDeclaration","scope":2330,"src":"2000:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2322,"name":"uint8","nodeType":"ElementaryTypeName","src":"2000:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2325,"mutability":"mutable","name":"r","nameLocation":"2025:1:6","nodeType":"VariableDeclaration","scope":2330,"src":"2017:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2324,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2017:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2327,"mutability":"mutable","name":"s","nameLocation":"2044:1:6","nodeType":"VariableDeclaration","scope":2330,"src":"2036:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2326,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2036:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1916:135:6"},"returnParameters":{"id":2329,"nodeType":"ParameterList","parameters":[],"src":"2060:0:6"},"scope":2331,"src":"1894:167:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2332,"src":"268:1795:6","usedErrors":[]}],"src":"110:1954:6"},"id":6},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[2372],"IERC165":[5053]},"id":2373,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2333,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:7"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2334,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2373,"sourceUnit":5054,"src":"143:47:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2336,"name":"IERC165","nameLocations":["262:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":5053,"src":"262:7:7"},"id":2337,"nodeType":"InheritanceSpecifier","src":"262:7:7"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":2335,"nodeType":"StructuredDocumentation","src":"192:39:7","text":" @dev _Available since v3.1._"},"fullyImplemented":false,"id":2372,"linearizedBaseContracts":[2372,5053],"name":"IERC1155Receiver","nameLocation":"242:16:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2338,"nodeType":"StructuredDocumentation","src":"276:826:7","text":" @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":2353,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1116:17:7","nodeType":"FunctionDefinition","parameters":{"id":2349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2340,"mutability":"mutable","name":"operator","nameLocation":"1151:8:7","nodeType":"VariableDeclaration","scope":2353,"src":"1143:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2339,"name":"address","nodeType":"ElementaryTypeName","src":"1143:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2342,"mutability":"mutable","name":"from","nameLocation":"1177:4:7","nodeType":"VariableDeclaration","scope":2353,"src":"1169:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2341,"name":"address","nodeType":"ElementaryTypeName","src":"1169:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2344,"mutability":"mutable","name":"id","nameLocation":"1199:2:7","nodeType":"VariableDeclaration","scope":2353,"src":"1191:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2343,"name":"uint256","nodeType":"ElementaryTypeName","src":"1191:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2346,"mutability":"mutable","name":"value","nameLocation":"1219:5:7","nodeType":"VariableDeclaration","scope":2353,"src":"1211:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2345,"name":"uint256","nodeType":"ElementaryTypeName","src":"1211:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2348,"mutability":"mutable","name":"data","nameLocation":"1249:4:7","nodeType":"VariableDeclaration","scope":2353,"src":"1234:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2347,"name":"bytes","nodeType":"ElementaryTypeName","src":"1234:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1133:126:7"},"returnParameters":{"id":2352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2353,"src":"1278:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2350,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1278:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1277:8:7"},"scope":2372,"src":"1107:179:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2354,"nodeType":"StructuredDocumentation","src":"1292:994:7","text":" @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":2371,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2300:22:7","nodeType":"FunctionDefinition","parameters":{"id":2367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2356,"mutability":"mutable","name":"operator","nameLocation":"2340:8:7","nodeType":"VariableDeclaration","scope":2371,"src":"2332:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2355,"name":"address","nodeType":"ElementaryTypeName","src":"2332:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2358,"mutability":"mutable","name":"from","nameLocation":"2366:4:7","nodeType":"VariableDeclaration","scope":2371,"src":"2358:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2357,"name":"address","nodeType":"ElementaryTypeName","src":"2358:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2361,"mutability":"mutable","name":"ids","nameLocation":"2399:3:7","nodeType":"VariableDeclaration","scope":2371,"src":"2380:22:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2359,"name":"uint256","nodeType":"ElementaryTypeName","src":"2380:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2360,"nodeType":"ArrayTypeName","src":"2380:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2364,"mutability":"mutable","name":"values","nameLocation":"2431:6:7","nodeType":"VariableDeclaration","scope":2371,"src":"2412:25:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2362,"name":"uint256","nodeType":"ElementaryTypeName","src":"2412:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2363,"nodeType":"ArrayTypeName","src":"2412:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2366,"mutability":"mutable","name":"data","nameLocation":"2462:4:7","nodeType":"VariableDeclaration","scope":2371,"src":"2447:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2365,"name":"bytes","nodeType":"ElementaryTypeName","src":"2447:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2322:150:7"},"returnParameters":{"id":2370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2371,"src":"2491:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2368,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2491:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2490:8:7"},"scope":2372,"src":"2291:208:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2373,"src":"232:2269:7","usedErrors":[]}],"src":"118:2384:7"},"id":7},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[2390]},"id":2391,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2374,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":2375,"nodeType":"StructuredDocumentation","src":"141:152:8","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":2390,"linearizedBaseContracts":[2390],"name":"IERC721Receiver","nameLocation":"304:15:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2376,"nodeType":"StructuredDocumentation","src":"326:493:8","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":2389,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:8","nodeType":"FunctionDefinition","parameters":{"id":2385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2378,"mutability":"mutable","name":"operator","nameLocation":"867:8:8","nodeType":"VariableDeclaration","scope":2389,"src":"859:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2377,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2380,"mutability":"mutable","name":"from","nameLocation":"893:4:8","nodeType":"VariableDeclaration","scope":2389,"src":"885:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2379,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2382,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:8","nodeType":"VariableDeclaration","scope":2389,"src":"907:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2381,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2384,"mutability":"mutable","name":"data","nameLocation":"947:4:8","nodeType":"VariableDeclaration","scope":2389,"src":"932:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2383,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:8"},"returnParameters":{"id":2388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2389,"src":"976:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2386,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:8"},"scope":2390,"src":"824:160:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2391,"src":"294:692:8","usedErrors":[]}],"src":"116:871:8"},"id":8},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2720]},"id":2721,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2392,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":2393,"nodeType":"StructuredDocumentation","src":"126:67:9","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2720,"linearizedBaseContracts":[2720],"name":"Address","nameLocation":"202:7:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":2407,"nodeType":"Block","src":"1241:254:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2401,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"1465:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1473:4:9","memberName":"code","nodeType":"MemberAccess","src":"1465:12:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1478:6:9","memberName":"length","nodeType":"MemberAccess","src":"1465:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2400,"id":2406,"nodeType":"Return","src":"1458:30:9"}]},"documentation":{"id":2394,"nodeType":"StructuredDocumentation","src":"216:954:9","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":2408,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:9","nodeType":"FunctionDefinition","parameters":{"id":2397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2396,"mutability":"mutable","name":"account","nameLocation":"1203:7:9","nodeType":"VariableDeclaration","scope":2408,"src":"1195:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2395,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:9"},"returnParameters":{"id":2400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2399,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2408,"src":"1235:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2398,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:9"},"scope":2720,"src":"1175:320:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2441,"nodeType":"Block","src":"2483:241:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2419,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2720","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2720","typeString":"library Address"}],"id":2418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2417,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:9","typeDescriptions":{}}},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2501:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2515:7:9","memberName":"balance","nodeType":"MemberAccess","src":"2501:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2422,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"2526:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":2424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":2416,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2493:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2426,"nodeType":"ExpressionStatement","src":"2493:73:9"},{"assignments":[2428,null],"declarations":[{"constant":false,"id":2428,"mutability":"mutable","name":"success","nameLocation":"2583:7:9","nodeType":"VariableDeclaration","scope":2441,"src":"2578:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2427,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2435,"initialValue":{"arguments":[{"hexValue":"","id":2433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2429,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"2596:9:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2606:4:9","memberName":"call","nodeType":"MemberAccess","src":"2596:14:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2431,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"2618:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2596:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:9"},{"expression":{"arguments":[{"id":2437,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"2647:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":2438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":2436,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:78:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2440,"nodeType":"ExpressionStatement","src":"2639:78:9"}]},"documentation":{"id":2409,"nodeType":"StructuredDocumentation","src":"1501:906:9","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2442,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:9","nodeType":"FunctionDefinition","parameters":{"id":2414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2411,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:9","nodeType":"VariableDeclaration","scope":2442,"src":"2431:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2410,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2413,"mutability":"mutable","name":"amount","nameLocation":"2466:6:9","nodeType":"VariableDeclaration","scope":2442,"src":"2458:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2412,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:9"},"returnParameters":{"id":2415,"nodeType":"ParameterList","parameters":[],"src":"2483:0:9"},"scope":2720,"src":"2412:312:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2459,"nodeType":"Block","src":"3555:96:9","statements":[{"expression":{"arguments":[{"id":2453,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"3594:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2454,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"3602:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3608:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":2456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3611:32:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":2452,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2500,2544],"referencedDeclaration":2544,"src":"3572:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:72:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2451,"id":2458,"nodeType":"Return","src":"3565:79:9"}]},"documentation":{"id":2443,"nodeType":"StructuredDocumentation","src":"2730:731:9","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":2460,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:9","nodeType":"FunctionDefinition","parameters":{"id":2448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2445,"mutability":"mutable","name":"target","nameLocation":"3496:6:9","nodeType":"VariableDeclaration","scope":2460,"src":"3488:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2444,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2447,"mutability":"mutable","name":"data","nameLocation":"3517:4:9","nodeType":"VariableDeclaration","scope":2460,"src":"3504:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2446,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:9"},"returnParameters":{"id":2451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2450,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2460,"src":"3541:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2449,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:9"},"scope":2720,"src":"3466:185:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2479,"nodeType":"Block","src":"4020:76:9","statements":[{"expression":{"arguments":[{"id":2473,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"4059:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2474,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"4067:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2476,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"4076:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2472,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2500,2544],"referencedDeclaration":2544,"src":"4037:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4037:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2471,"id":2478,"nodeType":"Return","src":"4030:59:9"}]},"documentation":{"id":2461,"nodeType":"StructuredDocumentation","src":"3657:211:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2480,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3882:12:9","nodeType":"FunctionDefinition","parameters":{"id":2468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2463,"mutability":"mutable","name":"target","nameLocation":"3912:6:9","nodeType":"VariableDeclaration","scope":2480,"src":"3904:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2462,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2465,"mutability":"mutable","name":"data","nameLocation":"3941:4:9","nodeType":"VariableDeclaration","scope":2480,"src":"3928:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2464,"name":"bytes","nodeType":"ElementaryTypeName","src":"3928:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2467,"mutability":"mutable","name":"errorMessage","nameLocation":"3969:12:9","nodeType":"VariableDeclaration","scope":2480,"src":"3955:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2466,"name":"string","nodeType":"ElementaryTypeName","src":"3955:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3894:93:9"},"returnParameters":{"id":2471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2480,"src":"4006:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2469,"name":"bytes","nodeType":"ElementaryTypeName","src":"4006:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4005:14:9"},"scope":2720,"src":"3873:223:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2499,"nodeType":"Block","src":"4601:111:9","statements":[{"expression":{"arguments":[{"id":2493,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"4640:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2494,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"4648:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"4654:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":2496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4661:43:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":2492,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2500,2544],"referencedDeclaration":2544,"src":"4618:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4618:87:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2491,"id":2498,"nodeType":"Return","src":"4611:94:9"}]},"documentation":{"id":2481,"nodeType":"StructuredDocumentation","src":"4102:351:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":2500,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4467:21:9","nodeType":"FunctionDefinition","parameters":{"id":2488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2483,"mutability":"mutable","name":"target","nameLocation":"4506:6:9","nodeType":"VariableDeclaration","scope":2500,"src":"4498:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2482,"name":"address","nodeType":"ElementaryTypeName","src":"4498:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2485,"mutability":"mutable","name":"data","nameLocation":"4535:4:9","nodeType":"VariableDeclaration","scope":2500,"src":"4522:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2484,"name":"bytes","nodeType":"ElementaryTypeName","src":"4522:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2487,"mutability":"mutable","name":"value","nameLocation":"4557:5:9","nodeType":"VariableDeclaration","scope":2500,"src":"4549:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2486,"name":"uint256","nodeType":"ElementaryTypeName","src":"4549:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4488:80:9"},"returnParameters":{"id":2491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2490,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2500,"src":"4587:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2489,"name":"bytes","nodeType":"ElementaryTypeName","src":"4587:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4586:14:9"},"scope":2720,"src":"4458:254:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2543,"nodeType":"Block","src":"5139:267:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2517,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5165:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2720","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2720","typeString":"library Address"}],"id":2516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5157:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2515,"name":"address","nodeType":"ElementaryTypeName","src":"5157:7:9","typeDescriptions":{}}},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5157:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5171:7:9","memberName":"balance","nodeType":"MemberAccess","src":"5157:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"5182:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":2522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5189:40:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":2514,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5149:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5149:81:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2524,"nodeType":"ExpressionStatement","src":"5149:81:9"},{"assignments":[2526,2528],"declarations":[{"constant":false,"id":2526,"mutability":"mutable","name":"success","nameLocation":"5246:7:9","nodeType":"VariableDeclaration","scope":2543,"src":"5241:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2525,"name":"bool","nodeType":"ElementaryTypeName","src":"5241:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2528,"mutability":"mutable","name":"returndata","nameLocation":"5268:10:9","nodeType":"VariableDeclaration","scope":2543,"src":"5255:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2527,"name":"bytes","nodeType":"ElementaryTypeName","src":"5255:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2535,"initialValue":{"arguments":[{"id":2533,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"5308:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2529,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"5282:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5289:4:9","memberName":"call","nodeType":"MemberAccess","src":"5282:11:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"5301:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5282:25:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5282:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5240:73:9"},{"expression":{"arguments":[{"id":2537,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"5357:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2538,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"5365:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2539,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"5374:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2540,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"5386:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2536,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"5330:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5330:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2513,"id":2542,"nodeType":"Return","src":"5323:76:9"}]},"documentation":{"id":2501,"nodeType":"StructuredDocumentation","src":"4718:237:9","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2544,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4969:21:9","nodeType":"FunctionDefinition","parameters":{"id":2510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2503,"mutability":"mutable","name":"target","nameLocation":"5008:6:9","nodeType":"VariableDeclaration","scope":2544,"src":"5000:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2502,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2505,"mutability":"mutable","name":"data","nameLocation":"5037:4:9","nodeType":"VariableDeclaration","scope":2544,"src":"5024:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2504,"name":"bytes","nodeType":"ElementaryTypeName","src":"5024:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2507,"mutability":"mutable","name":"value","nameLocation":"5059:5:9","nodeType":"VariableDeclaration","scope":2544,"src":"5051:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2506,"name":"uint256","nodeType":"ElementaryTypeName","src":"5051:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2509,"mutability":"mutable","name":"errorMessage","nameLocation":"5088:12:9","nodeType":"VariableDeclaration","scope":2544,"src":"5074:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2508,"name":"string","nodeType":"ElementaryTypeName","src":"5074:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4990:116:9"},"returnParameters":{"id":2513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2544,"src":"5125:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2511,"name":"bytes","nodeType":"ElementaryTypeName","src":"5125:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5124:14:9"},"scope":2720,"src":"4960:446:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2560,"nodeType":"Block","src":"5683:97:9","statements":[{"expression":{"arguments":[{"id":2555,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"5719:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2556,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"5727:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":2557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5733:39:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":2554,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[2561,2590],"referencedDeclaration":2590,"src":"5700:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5700:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2553,"id":2559,"nodeType":"Return","src":"5693:80:9"}]},"documentation":{"id":2545,"nodeType":"StructuredDocumentation","src":"5412:166:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2561,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5592:18:9","nodeType":"FunctionDefinition","parameters":{"id":2550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2547,"mutability":"mutable","name":"target","nameLocation":"5619:6:9","nodeType":"VariableDeclaration","scope":2561,"src":"5611:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2546,"name":"address","nodeType":"ElementaryTypeName","src":"5611:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2549,"mutability":"mutable","name":"data","nameLocation":"5640:4:9","nodeType":"VariableDeclaration","scope":2561,"src":"5627:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2548,"name":"bytes","nodeType":"ElementaryTypeName","src":"5627:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5610:35:9"},"returnParameters":{"id":2553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2561,"src":"5669:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2551,"name":"bytes","nodeType":"ElementaryTypeName","src":"5669:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5668:14:9"},"scope":2720,"src":"5583:197:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2589,"nodeType":"Block","src":"6122:168:9","statements":[{"assignments":[2574,2576],"declarations":[{"constant":false,"id":2574,"mutability":"mutable","name":"success","nameLocation":"6138:7:9","nodeType":"VariableDeclaration","scope":2589,"src":"6133:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2573,"name":"bool","nodeType":"ElementaryTypeName","src":"6133:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2576,"mutability":"mutable","name":"returndata","nameLocation":"6160:10:9","nodeType":"VariableDeclaration","scope":2589,"src":"6147:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2575,"name":"bytes","nodeType":"ElementaryTypeName","src":"6147:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2581,"initialValue":{"arguments":[{"id":2579,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"6192:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2577,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"6174:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6181:10:9","memberName":"staticcall","nodeType":"MemberAccess","src":"6174:17:9","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6132:65:9"},{"expression":{"arguments":[{"id":2583,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"6241:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2584,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"6249:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2585,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"6258:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2586,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"6270:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2582,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"6214:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6214:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2572,"id":2588,"nodeType":"Return","src":"6207:76:9"}]},"documentation":{"id":2562,"nodeType":"StructuredDocumentation","src":"5786:173:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2590,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5973:18:9","nodeType":"FunctionDefinition","parameters":{"id":2569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2564,"mutability":"mutable","name":"target","nameLocation":"6009:6:9","nodeType":"VariableDeclaration","scope":2590,"src":"6001:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2563,"name":"address","nodeType":"ElementaryTypeName","src":"6001:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2566,"mutability":"mutable","name":"data","nameLocation":"6038:4:9","nodeType":"VariableDeclaration","scope":2590,"src":"6025:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2565,"name":"bytes","nodeType":"ElementaryTypeName","src":"6025:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2568,"mutability":"mutable","name":"errorMessage","nameLocation":"6066:12:9","nodeType":"VariableDeclaration","scope":2590,"src":"6052:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2567,"name":"string","nodeType":"ElementaryTypeName","src":"6052:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5991:93:9"},"returnParameters":{"id":2572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2590,"src":"6108:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2570,"name":"bytes","nodeType":"ElementaryTypeName","src":"6108:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:14:9"},"scope":2720,"src":"5964:326:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2606,"nodeType":"Block","src":"6566:101:9","statements":[{"expression":{"arguments":[{"id":2601,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"6604:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2602,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"6612:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":2603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6618:41:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":2600,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[2607,2636],"referencedDeclaration":2636,"src":"6583:20:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6583:77:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2599,"id":2605,"nodeType":"Return","src":"6576:84:9"}]},"documentation":{"id":2591,"nodeType":"StructuredDocumentation","src":"6296:168:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2607,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6478:20:9","nodeType":"FunctionDefinition","parameters":{"id":2596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2593,"mutability":"mutable","name":"target","nameLocation":"6507:6:9","nodeType":"VariableDeclaration","scope":2607,"src":"6499:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2592,"name":"address","nodeType":"ElementaryTypeName","src":"6499:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2595,"mutability":"mutable","name":"data","nameLocation":"6528:4:9","nodeType":"VariableDeclaration","scope":2607,"src":"6515:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2594,"name":"bytes","nodeType":"ElementaryTypeName","src":"6515:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6498:35:9"},"returnParameters":{"id":2599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2607,"src":"6552:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2597,"name":"bytes","nodeType":"ElementaryTypeName","src":"6552:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6551:14:9"},"scope":2720,"src":"6469:198:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2635,"nodeType":"Block","src":"7008:170:9","statements":[{"assignments":[2620,2622],"declarations":[{"constant":false,"id":2620,"mutability":"mutable","name":"success","nameLocation":"7024:7:9","nodeType":"VariableDeclaration","scope":2635,"src":"7019:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2619,"name":"bool","nodeType":"ElementaryTypeName","src":"7019:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2622,"mutability":"mutable","name":"returndata","nameLocation":"7046:10:9","nodeType":"VariableDeclaration","scope":2635,"src":"7033:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2621,"name":"bytes","nodeType":"ElementaryTypeName","src":"7033:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2627,"initialValue":{"arguments":[{"id":2625,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"7080:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2623,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"7060:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7067:12:9","memberName":"delegatecall","nodeType":"MemberAccess","src":"7060:19:9","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7060:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7018:67:9"},{"expression":{"arguments":[{"id":2629,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"7129:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2630,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"7137:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2631,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"7146:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2632,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"7158:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2628,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"7102:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7102:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2618,"id":2634,"nodeType":"Return","src":"7095:76:9"}]},"documentation":{"id":2608,"nodeType":"StructuredDocumentation","src":"6673:175:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2636,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6862:20:9","nodeType":"FunctionDefinition","parameters":{"id":2615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2610,"mutability":"mutable","name":"target","nameLocation":"6900:6:9","nodeType":"VariableDeclaration","scope":2636,"src":"6892:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2609,"name":"address","nodeType":"ElementaryTypeName","src":"6892:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2612,"mutability":"mutable","name":"data","nameLocation":"6929:4:9","nodeType":"VariableDeclaration","scope":2636,"src":"6916:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2611,"name":"bytes","nodeType":"ElementaryTypeName","src":"6916:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2614,"mutability":"mutable","name":"errorMessage","nameLocation":"6957:12:9","nodeType":"VariableDeclaration","scope":2636,"src":"6943:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2613,"name":"string","nodeType":"ElementaryTypeName","src":"6943:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6882:93:9"},"returnParameters":{"id":2618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2617,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2636,"src":"6994:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2616,"name":"bytes","nodeType":"ElementaryTypeName","src":"6994:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6993:14:9"},"scope":2720,"src":"6853:325:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2674,"nodeType":"Block","src":"7660:434:9","statements":[{"condition":{"id":2650,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"7674:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2672,"nodeType":"Block","src":"8030:58:9","statements":[{"expression":{"arguments":[{"id":2668,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"8052:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2669,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"8064:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2667,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"8044:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8044:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2671,"nodeType":"ExpressionStatement","src":"8044:33:9"}]},"id":2673,"nodeType":"IfStatement","src":"7670:418:9","trueBody":{"id":2666,"nodeType":"Block","src":"7683:341:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2651,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"7701:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7712:6:9","memberName":"length","nodeType":"MemberAccess","src":"7701:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7722:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7701:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2663,"nodeType":"IfStatement","src":"7697:286:9","trueBody":{"id":2662,"nodeType":"Block","src":"7725:258:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":2657,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"7927:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2656,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"7916:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7916:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":2659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7936:31:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":2655,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7908:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7908:60:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2661,"nodeType":"ExpressionStatement","src":"7908:60:9"}]}},{"expression":{"id":2664,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"8003:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2649,"id":2665,"nodeType":"Return","src":"7996:17:9"}]}}]},"documentation":{"id":2637,"nodeType":"StructuredDocumentation","src":"7184:277:9","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":2675,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7475:26:9","nodeType":"FunctionDefinition","parameters":{"id":2646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2639,"mutability":"mutable","name":"target","nameLocation":"7519:6:9","nodeType":"VariableDeclaration","scope":2675,"src":"7511:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2638,"name":"address","nodeType":"ElementaryTypeName","src":"7511:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2641,"mutability":"mutable","name":"success","nameLocation":"7540:7:9","nodeType":"VariableDeclaration","scope":2675,"src":"7535:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2640,"name":"bool","nodeType":"ElementaryTypeName","src":"7535:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2643,"mutability":"mutable","name":"returndata","nameLocation":"7570:10:9","nodeType":"VariableDeclaration","scope":2675,"src":"7557:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2642,"name":"bytes","nodeType":"ElementaryTypeName","src":"7557:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2645,"mutability":"mutable","name":"errorMessage","nameLocation":"7604:12:9","nodeType":"VariableDeclaration","scope":2675,"src":"7590:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2644,"name":"string","nodeType":"ElementaryTypeName","src":"7590:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7501:121:9"},"returnParameters":{"id":2649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2675,"src":"7646:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2647,"name":"bytes","nodeType":"ElementaryTypeName","src":"7646:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7645:14:9"},"scope":2720,"src":"7466:628:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2698,"nodeType":"Block","src":"8475:135:9","statements":[{"condition":{"id":2687,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"8489:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2696,"nodeType":"Block","src":"8546:58:9","statements":[{"expression":{"arguments":[{"id":2692,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"8568:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2693,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"8580:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2691,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"8560:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2695,"nodeType":"ExpressionStatement","src":"8560:33:9"}]},"id":2697,"nodeType":"IfStatement","src":"8485:119:9","trueBody":{"id":2690,"nodeType":"Block","src":"8498:42:9","statements":[{"expression":{"id":2688,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"8519:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2686,"id":2689,"nodeType":"Return","src":"8512:17:9"}]}}]},"documentation":{"id":2676,"nodeType":"StructuredDocumentation","src":"8100:210:9","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":2699,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8324:16:9","nodeType":"FunctionDefinition","parameters":{"id":2683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2678,"mutability":"mutable","name":"success","nameLocation":"8355:7:9","nodeType":"VariableDeclaration","scope":2699,"src":"8350:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2677,"name":"bool","nodeType":"ElementaryTypeName","src":"8350:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2680,"mutability":"mutable","name":"returndata","nameLocation":"8385:10:9","nodeType":"VariableDeclaration","scope":2699,"src":"8372:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2679,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2682,"mutability":"mutable","name":"errorMessage","nameLocation":"8419:12:9","nodeType":"VariableDeclaration","scope":2699,"src":"8405:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2681,"name":"string","nodeType":"ElementaryTypeName","src":"8405:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8340:97:9"},"returnParameters":{"id":2686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2699,"src":"8461:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2684,"name":"bytes","nodeType":"ElementaryTypeName","src":"8461:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8460:14:9"},"scope":2720,"src":"8315:295:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2718,"nodeType":"Block","src":"8699:457:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2706,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"8775:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8786:6:9","memberName":"length","nodeType":"MemberAccess","src":"8775:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8795:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8775:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2716,"nodeType":"Block","src":"9105:45:9","statements":[{"expression":{"arguments":[{"id":2713,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"9126:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2712,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9119:6:9","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9119:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2715,"nodeType":"ExpressionStatement","src":"9119:20:9"}]},"id":2717,"nodeType":"IfStatement","src":"8771:379:9","trueBody":{"id":2711,"nodeType":"Block","src":"8798:301:9","statements":[{"AST":{"nodeType":"YulBlock","src":"8956:133:9","statements":[{"nodeType":"YulVariableDeclaration","src":"8974:40:9","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9003:10:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8997:5:9"},"nodeType":"YulFunctionCall","src":"8997:17:9"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8978:15:9","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9042:2:9","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9046:10:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9038:3:9"},"nodeType":"YulFunctionCall","src":"9038:19:9"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9059:15:9"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9031:6:9"},"nodeType":"YulFunctionCall","src":"9031:44:9"},"nodeType":"YulExpressionStatement","src":"9031:44:9"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2701,"isOffset":false,"isSlot":false,"src":"9003:10:9","valueSize":1},{"declaration":2701,"isOffset":false,"isSlot":false,"src":"9046:10:9","valueSize":1}],"id":2710,"nodeType":"InlineAssembly","src":"8947:142:9"}]}}]},"id":2719,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8625:7:9","nodeType":"FunctionDefinition","parameters":{"id":2704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2701,"mutability":"mutable","name":"returndata","nameLocation":"8646:10:9","nodeType":"VariableDeclaration","scope":2719,"src":"8633:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2700,"name":"bytes","nodeType":"ElementaryTypeName","src":"8633:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2703,"mutability":"mutable","name":"errorMessage","nameLocation":"8672:12:9","nodeType":"VariableDeclaration","scope":2719,"src":"8658:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2702,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8632:53:9"},"returnParameters":{"id":2705,"nodeType":"ParameterList","parameters":[],"src":"8699:0:9"},"scope":2720,"src":"8616:540:9","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2721,"src":"194:8964:9","usedErrors":[]}],"src":"101:9058:9"},"id":9},"@openzeppelin/contracts/utils/Checkpoints.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Checkpoints.sol","exportedSymbols":{"Checkpoints":[4091],"Math":[5918],"SafeCast":[7459]},"id":4092,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2722,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"193:23:10"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2723,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4092,"sourceUnit":5919,"src":"218:25:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":2724,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4092,"sourceUnit":7460,"src":"244:29:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Checkpoints","contractDependencies":[],"contractKind":"library","documentation":{"id":2725,"nodeType":"StructuredDocumentation","src":"275:432:10","text":" @dev This library defines the `History` struct, for checkpointing values as they change at different points in\n time, and later looking up past values by block number. See {Votes} as an example.\n To create a history of checkpoints define a variable type `Checkpoints.History` in your contract, and store a new\n checkpoint for the current transaction block using the {push} function.\n _Available since v4.5._"},"fullyImplemented":true,"id":4091,"linearizedBaseContracts":[4091],"name":"Checkpoints","nameLocation":"716:11:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Checkpoints.History","id":2730,"members":[{"constant":false,"id":2729,"mutability":"mutable","name":"_checkpoints","nameLocation":"772:12:10","nodeType":"VariableDeclaration","scope":2730,"src":"759:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"},"typeName":{"baseType":{"id":2727,"nodeType":"UserDefinedTypeName","pathNode":{"id":2726,"name":"Checkpoint","nameLocations":["759:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":2735,"src":"759:10:10"},"referencedDeclaration":2735,"src":"759:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2735_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"id":2728,"nodeType":"ArrayTypeName","src":"759:12:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"}},"visibility":"internal"}],"name":"History","nameLocation":"741:7:10","nodeType":"StructDefinition","scope":4091,"src":"734:57:10","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint","id":2735,"members":[{"constant":false,"id":2732,"mutability":"mutable","name":"_blockNumber","nameLocation":"832:12:10","nodeType":"VariableDeclaration","scope":2735,"src":"825:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2731,"name":"uint32","nodeType":"ElementaryTypeName","src":"825:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2734,"mutability":"mutable","name":"_value","nameLocation":"862:6:10","nodeType":"VariableDeclaration","scope":2735,"src":"854:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":2733,"name":"uint224","nodeType":"ElementaryTypeName","src":"854:7:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"name":"Checkpoint","nameLocation":"804:10:10","nodeType":"StructDefinition","scope":4091,"src":"797:78:10","visibility":"public"},{"body":{"id":2791,"nodeType":"Block","src":"1317:344:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2747,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"1335:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2748,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1349:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1355:6:10","memberName":"number","nodeType":"MemberAccess","src":"1349:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1335:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436865636b706f696e74733a20626c6f636b206e6f7420796574206d696e6564","id":2751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1363:34:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be","typeString":"literal_string \"Checkpoints: block not yet mined\""},"value":"Checkpoints: block not yet mined"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be","typeString":"literal_string \"Checkpoints: block not yet mined\""}],"id":2746,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1327:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1327:71:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2753,"nodeType":"ExpressionStatement","src":"1327:71:10"},{"assignments":[2755],"declarations":[{"constant":false,"id":2755,"mutability":"mutable","name":"key","nameLocation":"1415:3:10","nodeType":"VariableDeclaration","scope":2791,"src":"1408:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2754,"name":"uint32","nodeType":"ElementaryTypeName","src":"1408:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":2760,"initialValue":{"arguments":[{"id":2758,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"1439:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2756,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7459,"src":"1421:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7459_$","typeString":"type(library SafeCast)"}},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1430:8:10","memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":6621,"src":"1421:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1421:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"1408:43:10"},{"assignments":[2762],"declarations":[{"constant":false,"id":2762,"mutability":"mutable","name":"len","nameLocation":"1470:3:10","nodeType":"VariableDeclaration","scope":2791,"src":"1462:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2761,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2766,"initialValue":{"expression":{"expression":{"id":2763,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"1476:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":2764,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1481:12:10","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":2729,"src":"1476:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1494:6:10","memberName":"length","nodeType":"MemberAccess","src":"1476:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1462:38:10"},{"assignments":[2768],"declarations":[{"constant":false,"id":2768,"mutability":"mutable","name":"pos","nameLocation":"1518:3:10","nodeType":"VariableDeclaration","scope":2791,"src":"1510:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2767,"name":"uint256","nodeType":"ElementaryTypeName","src":"1510:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2776,"initialValue":{"arguments":[{"expression":{"id":2770,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"1543:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":2771,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1548:12:10","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":2729,"src":"1543:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"id":2772,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"1562:3:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":2773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1567:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2774,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"1570:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2769,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[3189,3606,4023],"referencedDeclaration":3189,"src":"1524:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1524:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1510:64:10"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2777,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"1591:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1598:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1591:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":2782,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"1620:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":2783,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1625:12:10","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":2729,"src":"1620:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2784,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"1639:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1639:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2781,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3256,3673,4090],"referencedDeclaration":3256,"src":"1606:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$2735_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1606:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2735_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"id":2788,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1648:6:10","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2734,"src":"1606:48:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1591:63:10","trueExpression":{"hexValue":"30","id":2780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1602:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":2745,"id":2790,"nodeType":"Return","src":"1584:70:10"}]},"documentation":{"id":2736,"nodeType":"StructuredDocumentation","src":"881:336:10","text":" @dev Returns the value at a given block number. If a checkpoint is not available at that block, the closest one\n before it is returned, or zero otherwise. Because the number returned corresponds to that at the end of the\n block, the requested block number must be in the past, excluding the current block."},"id":2792,"implemented":true,"kind":"function","modifiers":[],"name":"getAtBlock","nameLocation":"1231:10:10","nodeType":"FunctionDefinition","parameters":{"id":2742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2739,"mutability":"mutable","name":"self","nameLocation":"1258:4:10","nodeType":"VariableDeclaration","scope":2792,"src":"1242:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage_ptr","typeString":"struct Checkpoints.History"},"typeName":{"id":2738,"nodeType":"UserDefinedTypeName","pathNode":{"id":2737,"name":"History","nameLocations":["1242:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2730,"src":"1242:7:10"},"referencedDeclaration":2730,"src":"1242:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"internal"},{"constant":false,"id":2741,"mutability":"mutable","name":"blockNumber","nameLocation":"1272:11:10","nodeType":"VariableDeclaration","scope":2792,"src":"1264:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2740,"name":"uint256","nodeType":"ElementaryTypeName","src":"1264:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1241:43:10"},"returnParameters":{"id":2745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2792,"src":"1308:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2743,"name":"uint256","nodeType":"ElementaryTypeName","src":"1308:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1307:9:10"},"scope":4091,"src":"1222:439:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2891,"nodeType":"Block","src":"2167:655:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2804,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"2185:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2805,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2199:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2205:6:10","memberName":"number","nodeType":"MemberAccess","src":"2199:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2185:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436865636b706f696e74733a20626c6f636b206e6f7420796574206d696e6564","id":2808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2213:34:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be","typeString":"literal_string \"Checkpoints: block not yet mined\""},"value":"Checkpoints: block not yet mined"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be","typeString":"literal_string \"Checkpoints: block not yet mined\""}],"id":2803,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2177:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2177:71:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2810,"nodeType":"ExpressionStatement","src":"2177:71:10"},{"assignments":[2812],"declarations":[{"constant":false,"id":2812,"mutability":"mutable","name":"key","nameLocation":"2265:3:10","nodeType":"VariableDeclaration","scope":2891,"src":"2258:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2811,"name":"uint32","nodeType":"ElementaryTypeName","src":"2258:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":2817,"initialValue":{"arguments":[{"id":2815,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"2289:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2813,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7459,"src":"2271:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7459_$","typeString":"type(library SafeCast)"}},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2280:8:10","memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":6621,"src":"2271:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2271:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"2258:43:10"},{"assignments":[2819],"declarations":[{"constant":false,"id":2819,"mutability":"mutable","name":"len","nameLocation":"2320:3:10","nodeType":"VariableDeclaration","scope":2891,"src":"2312:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2818,"name":"uint256","nodeType":"ElementaryTypeName","src":"2312:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2823,"initialValue":{"expression":{"expression":{"id":2820,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"2326:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":2821,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2331:12:10","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":2729,"src":"2326:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2344:6:10","memberName":"length","nodeType":"MemberAccess","src":"2326:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2312:38:10"},{"assignments":[2825],"declarations":[{"constant":false,"id":2825,"mutability":"mutable","name":"low","nameLocation":"2369:3:10","nodeType":"VariableDeclaration","scope":2891,"src":"2361:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2824,"name":"uint256","nodeType":"ElementaryTypeName","src":"2361:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2827,"initialValue":{"hexValue":"30","id":2826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2375:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2361:15:10"},{"assignments":[2829],"declarations":[{"constant":false,"id":2829,"mutability":"mutable","name":"high","nameLocation":"2394:4:10","nodeType":"VariableDeclaration","scope":2891,"src":"2386:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2828,"name":"uint256","nodeType":"ElementaryTypeName","src":"2386:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2831,"initialValue":{"id":2830,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"2401:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2386:18:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2832,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"2419:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":2833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2425:1:10","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"2419:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2866,"nodeType":"IfStatement","src":"2415:242:10","trueBody":{"id":2865,"nodeType":"Block","src":"2428:229:10","statements":[{"assignments":[2836],"declarations":[{"constant":false,"id":2836,"mutability":"mutable","name":"mid","nameLocation":"2450:3:10","nodeType":"VariableDeclaration","scope":2865,"src":"2442:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2835,"name":"uint256","nodeType":"ElementaryTypeName","src":"2442:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2843,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2837,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"2456:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":2840,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"2472:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2838,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5918,"src":"2462:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5918_$","typeString":"type(library Math)"}},"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2467:4:10","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":5422,"src":"2462:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2462:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2456:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2442:34:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2844,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"2494:3:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":2846,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"2514:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":2847,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2519:12:10","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":2729,"src":"2514:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"id":2848,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"2533:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2845,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3256,3673,4090],"referencedDeclaration":3256,"src":"2500:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$2735_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2735_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"id":2850,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2538:12:10","memberName":"_blockNumber","nodeType":"MemberAccess","referencedDeclaration":2732,"src":"2500:50:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2494:56:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2863,"nodeType":"Block","src":"2601:46:10","statements":[{"expression":{"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2857,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"2619:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2858,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"2625:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2631:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2625:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2619:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2862,"nodeType":"ExpressionStatement","src":"2619:13:10"}]},"id":2864,"nodeType":"IfStatement","src":"2490:157:10","trueBody":{"id":2856,"nodeType":"Block","src":"2552:43:10","statements":[{"expression":{"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2852,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"2570:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2853,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"2577:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2570:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2855,"nodeType":"ExpressionStatement","src":"2570:10:10"}]}}]}},{"assignments":[2868],"declarations":[{"constant":false,"id":2868,"mutability":"mutable","name":"pos","nameLocation":"2675:3:10","nodeType":"VariableDeclaration","scope":2891,"src":"2667:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2867,"name":"uint256","nodeType":"ElementaryTypeName","src":"2667:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2876,"initialValue":{"arguments":[{"expression":{"id":2870,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"2700:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":2871,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2705:12:10","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":2729,"src":"2700:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"id":2872,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"2719:3:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2873,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"2724:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2874,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"2729:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2869,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[3189,3606,4023],"referencedDeclaration":3189,"src":"2681:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2681:53:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2667:67:10"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2877,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"2752:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2759:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2752:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":2882,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"2781:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":2883,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2786:12:10","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":2729,"src":"2781:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2884,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"2800:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2800:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2881,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3256,3673,4090],"referencedDeclaration":3256,"src":"2767:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$2735_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2767:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2735_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"id":2888,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2809:6:10","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2734,"src":"2767:48:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2752:63:10","trueExpression":{"hexValue":"30","id":2880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2763:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":2802,"id":2890,"nodeType":"Return","src":"2745:70:10"}]},"documentation":{"id":2793,"nodeType":"StructuredDocumentation","src":"1667:386:10","text":" @dev Returns the value at a given block number. If a checkpoint is not available at that block, the closest one\n before it is returned, or zero otherwise. Similar to {upperLookup} but optimized for the case when the searched\n checkpoint is probably \"recent\", defined as being among the last sqrt(N) checkpoints where N is the number of\n checkpoints."},"id":2892,"implemented":true,"kind":"function","modifiers":[],"name":"getAtProbablyRecentBlock","nameLocation":"2067:24:10","nodeType":"FunctionDefinition","parameters":{"id":2799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2796,"mutability":"mutable","name":"self","nameLocation":"2108:4:10","nodeType":"VariableDeclaration","scope":2892,"src":"2092:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage_ptr","typeString":"struct Checkpoints.History"},"typeName":{"id":2795,"nodeType":"UserDefinedTypeName","pathNode":{"id":2794,"name":"History","nameLocations":["2092:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2730,"src":"2092:7:10"},"referencedDeclaration":2730,"src":"2092:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"internal"},{"constant":false,"id":2798,"mutability":"mutable","name":"blockNumber","nameLocation":"2122:11:10","nodeType":"VariableDeclaration","scope":2892,"src":"2114:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2797,"name":"uint256","nodeType":"ElementaryTypeName","src":"2114:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2091:43:10"},"returnParameters":{"id":2802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2801,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2892,"src":"2158:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2800,"name":"uint256","nodeType":"ElementaryTypeName","src":"2158:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2157:9:10"},"scope":4091,"src":"2058:764:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2919,"nodeType":"Block","src":"3087:110:10","statements":[{"expression":{"arguments":[{"expression":{"id":2906,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"3112:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":2907,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3117:12:10","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":2729,"src":"3112:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"arguments":[{"expression":{"id":2910,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3149:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3155:6:10","memberName":"number","nodeType":"MemberAccess","src":"3149:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2908,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7459,"src":"3131:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7459_$","typeString":"type(library SafeCast)"}},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3140:8:10","memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":6621,"src":"3131:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3131:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"arguments":[{"id":2915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"3183:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2913,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7459,"src":"3164:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7459_$","typeString":"type(library SafeCast)"}},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3173:9:10","memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":6021,"src":"3164:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3164:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":2905,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[3137,3554,3971],"referencedDeclaration":3137,"src":"3104:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint224_$returns$_t_uint224_$_t_uint224_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint32,uint224) returns (uint224,uint224)"}},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3104:86:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":2904,"id":2918,"nodeType":"Return","src":"3097:93:10"}]},"documentation":{"id":2893,"nodeType":"StructuredDocumentation","src":"2828:167:10","text":" @dev Pushes a value onto a History so that it is stored as the checkpoint for the current block.\n Returns previous value and new value."},"id":2920,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"3009:4:10","nodeType":"FunctionDefinition","parameters":{"id":2899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2896,"mutability":"mutable","name":"self","nameLocation":"3030:4:10","nodeType":"VariableDeclaration","scope":2920,"src":"3014:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage_ptr","typeString":"struct Checkpoints.History"},"typeName":{"id":2895,"nodeType":"UserDefinedTypeName","pathNode":{"id":2894,"name":"History","nameLocations":["3014:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2730,"src":"3014:7:10"},"referencedDeclaration":2730,"src":"3014:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"internal"},{"constant":false,"id":2898,"mutability":"mutable","name":"value","nameLocation":"3044:5:10","nodeType":"VariableDeclaration","scope":2920,"src":"3036:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2897,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3013:37:10"},"returnParameters":{"id":2904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2901,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2920,"src":"3069:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2900,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2920,"src":"3078:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2902,"name":"uint256","nodeType":"ElementaryTypeName","src":"3078:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3068:18:10"},"scope":4091,"src":"3000:197:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2953,"nodeType":"Block","src":"3600:59:10","statements":[{"expression":{"arguments":[{"id":2944,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"3622:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},{"arguments":[{"arguments":[{"id":2947,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"3638:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_History_$2730_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}],"id":2946,"name":"latest","nodeType":"Identifier","overloadedDeclarations":[2984,3401,3818],"referencedDeclaration":2984,"src":"3631:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_History_$2730_storage_ptr_$returns$_t_uint224_$","typeString":"function (struct Checkpoints.History storage pointer) view returns (uint224)"}},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3631:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},{"id":2949,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"3645:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint224","typeString":"uint224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2945,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"3628:2:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3628:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_History_$2730_storage_ptr","typeString":"struct Checkpoints.History storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2943,"name":"push","nodeType":"Identifier","overloadedDeclarations":[2920,2954,3289,3706],"referencedDeclaration":2920,"src":"3617:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_History_$2730_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct Checkpoints.History storage pointer,uint256) returns (uint256,uint256)"}},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3617:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":2942,"id":2952,"nodeType":"Return","src":"3610:42:10"}]},"documentation":{"id":2921,"nodeType":"StructuredDocumentation","src":"3203:221:10","text":" @dev Pushes a value onto a History, by updating the latest value using binary operation `op`. The new value will\n be set to `op(latest, delta)`.\n Returns previous value and new value."},"id":2954,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"3438:4:10","nodeType":"FunctionDefinition","parameters":{"id":2937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2924,"mutability":"mutable","name":"self","nameLocation":"3468:4:10","nodeType":"VariableDeclaration","scope":2954,"src":"3452:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage_ptr","typeString":"struct Checkpoints.History"},"typeName":{"id":2923,"nodeType":"UserDefinedTypeName","pathNode":{"id":2922,"name":"History","nameLocations":["3452:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2730,"src":"3452:7:10"},"referencedDeclaration":2730,"src":"3452:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"internal"},{"constant":false,"id":2934,"mutability":"mutable","name":"op","nameLocation":"3532:2:10","nodeType":"VariableDeclaration","scope":2954,"src":"3482:52:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"typeName":{"id":2933,"nodeType":"FunctionTypeName","parameterTypes":{"id":2929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2933,"src":"3491:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2925,"name":"uint256","nodeType":"ElementaryTypeName","src":"3491:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2933,"src":"3500:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2927,"name":"uint256","nodeType":"ElementaryTypeName","src":"3500:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3490:18:10"},"returnParameterTypes":{"id":2932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2933,"src":"3523:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2930,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3522:9:10"},"src":"3482:52:10","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"visibility":"internal"},"visibility":"internal"},{"constant":false,"id":2936,"mutability":"mutable","name":"delta","nameLocation":"3552:5:10","nodeType":"VariableDeclaration","scope":2954,"src":"3544:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2935,"name":"uint256","nodeType":"ElementaryTypeName","src":"3544:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3442:121:10"},"returnParameters":{"id":2942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2954,"src":"3582:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2938,"name":"uint256","nodeType":"ElementaryTypeName","src":"3582:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2954,"src":"3591:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2940,"name":"uint256","nodeType":"ElementaryTypeName","src":"3591:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3581:18:10"},"scope":4091,"src":"3429:230:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2983,"nodeType":"Block","src":"3849:135:10","statements":[{"assignments":[2964],"declarations":[{"constant":false,"id":2964,"mutability":"mutable","name":"pos","nameLocation":"3867:3:10","nodeType":"VariableDeclaration","scope":2983,"src":"3859:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2963,"name":"uint256","nodeType":"ElementaryTypeName","src":"3859:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2968,"initialValue":{"expression":{"expression":{"id":2965,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"3873:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":2966,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3878:12:10","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":2729,"src":"3873:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3891:6:10","memberName":"length","nodeType":"MemberAccess","src":"3873:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3859:38:10"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2969,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"3914:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3921:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3914:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":2974,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"3943:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":2975,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3948:12:10","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":2729,"src":"3943:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2976,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"3962:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3968:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3962:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2973,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3256,3673,4090],"referencedDeclaration":3256,"src":"3929:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$2735_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3929:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2735_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"id":2980,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3971:6:10","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2734,"src":"3929:48:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3914:63:10","trueExpression":{"hexValue":"30","id":2972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3925:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":2962,"id":2982,"nodeType":"Return","src":"3907:70:10"}]},"documentation":{"id":2955,"nodeType":"StructuredDocumentation","src":"3665:109:10","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":2984,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"3788:6:10","nodeType":"FunctionDefinition","parameters":{"id":2959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2958,"mutability":"mutable","name":"self","nameLocation":"3811:4:10","nodeType":"VariableDeclaration","scope":2984,"src":"3795:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage_ptr","typeString":"struct Checkpoints.History"},"typeName":{"id":2957,"nodeType":"UserDefinedTypeName","pathNode":{"id":2956,"name":"History","nameLocations":["3795:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2730,"src":"3795:7:10"},"referencedDeclaration":2730,"src":"3795:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"internal"}],"src":"3794:22:10"},"returnParameters":{"id":2962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2961,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2984,"src":"3840:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":2960,"name":"uint224","nodeType":"ElementaryTypeName","src":"3840:7:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3839:9:10"},"scope":4091,"src":"3779:205:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3032,"nodeType":"Block","src":"4358:279:10","statements":[{"assignments":[2998],"declarations":[{"constant":false,"id":2998,"mutability":"mutable","name":"pos","nameLocation":"4376:3:10","nodeType":"VariableDeclaration","scope":3032,"src":"4368:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2997,"name":"uint256","nodeType":"ElementaryTypeName","src":"4368:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3002,"initialValue":{"expression":{"expression":{"id":2999,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"4382:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3000,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4387:12:10","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":2729,"src":"4382:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4400:6:10","memberName":"length","nodeType":"MemberAccess","src":"4382:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4368:38:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3003,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"4420:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4427:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4420:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3030,"nodeType":"Block","src":"4481:150:10","statements":[{"assignments":[3014],"declarations":[{"constant":false,"id":3014,"mutability":"mutable","name":"ckpt","nameLocation":"4513:4:10","nodeType":"VariableDeclaration","scope":3030,"src":"4495:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2735_memory_ptr","typeString":"struct Checkpoints.Checkpoint"},"typeName":{"id":3013,"nodeType":"UserDefinedTypeName","pathNode":{"id":3012,"name":"Checkpoint","nameLocations":["4495:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":2735,"src":"4495:10:10"},"referencedDeclaration":2735,"src":"4495:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2735_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"visibility":"internal"}],"id":3022,"initialValue":{"arguments":[{"expression":{"id":3016,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"4534:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3017,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4539:12:10","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":2729,"src":"4534:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3018,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"4553:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4559:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4553:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3015,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3256,3673,4090],"referencedDeclaration":3256,"src":"4520:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$2735_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4520:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2735_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4495:66:10"},{"expression":{"components":[{"hexValue":"74727565","id":3023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4583:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":3024,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"4589:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2735_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}},"id":3025,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4594:12:10","memberName":"_blockNumber","nodeType":"MemberAccess","referencedDeclaration":2732,"src":"4589:17:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":3026,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"4608:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2735_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}},"id":3027,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4613:6:10","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2734,"src":"4608:11:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":3028,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4582:38:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint32_$_t_uint224_$","typeString":"tuple(bool,uint32,uint224)"}},"functionReturnParameters":2996,"id":3029,"nodeType":"Return","src":"4575:45:10"}]},"id":3031,"nodeType":"IfStatement","src":"4416:215:10","trueBody":{"id":3011,"nodeType":"Block","src":"4430:45:10","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":3006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4452:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4459:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":3008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4462:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3009,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4451:13:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":2996,"id":3010,"nodeType":"Return","src":"4444:20:10"}]}}]},"documentation":{"id":2985,"nodeType":"StructuredDocumentation","src":"3990:168:10","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":3033,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"4172:16:10","nodeType":"FunctionDefinition","parameters":{"id":2989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2988,"mutability":"mutable","name":"self","nameLocation":"4205:4:10","nodeType":"VariableDeclaration","scope":3033,"src":"4189:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage_ptr","typeString":"struct Checkpoints.History"},"typeName":{"id":2987,"nodeType":"UserDefinedTypeName","pathNode":{"id":2986,"name":"History","nameLocations":["4189:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2730,"src":"4189:7:10"},"referencedDeclaration":2730,"src":"4189:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"internal"}],"src":"4188:22:10"},"returnParameters":{"id":2996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2991,"mutability":"mutable","name":"exists","nameLocation":"4276:6:10","nodeType":"VariableDeclaration","scope":3033,"src":"4271:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2990,"name":"bool","nodeType":"ElementaryTypeName","src":"4271:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2993,"mutability":"mutable","name":"_blockNumber","nameLocation":"4303:12:10","nodeType":"VariableDeclaration","scope":3033,"src":"4296:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2992,"name":"uint32","nodeType":"ElementaryTypeName","src":"4296:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2995,"mutability":"mutable","name":"_value","nameLocation":"4337:6:10","nodeType":"VariableDeclaration","scope":3033,"src":"4329:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":2994,"name":"uint224","nodeType":"ElementaryTypeName","src":"4329:7:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"4257:96:10"},"scope":4091,"src":"4163:474:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3046,"nodeType":"Block","src":"4775:48:10","statements":[{"expression":{"expression":{"expression":{"id":3042,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"4792:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage_ptr","typeString":"struct Checkpoints.History storage pointer"}},"id":3043,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4797:12:10","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":2729,"src":"4792:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint storage ref[] storage ref"}},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4810:6:10","memberName":"length","nodeType":"MemberAccess","src":"4792:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3041,"id":3045,"nodeType":"Return","src":"4785:31:10"}]},"documentation":{"id":3034,"nodeType":"StructuredDocumentation","src":"4643:57:10","text":" @dev Returns the number of checkpoint."},"id":3047,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"4714:6:10","nodeType":"FunctionDefinition","parameters":{"id":3038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3037,"mutability":"mutable","name":"self","nameLocation":"4737:4:10","nodeType":"VariableDeclaration","scope":3047,"src":"4721:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage_ptr","typeString":"struct Checkpoints.History"},"typeName":{"id":3036,"nodeType":"UserDefinedTypeName","pathNode":{"id":3035,"name":"History","nameLocations":["4721:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2730,"src":"4721:7:10"},"referencedDeclaration":2730,"src":"4721:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_History_$2730_storage_ptr","typeString":"struct Checkpoints.History"}},"visibility":"internal"}],"src":"4720:22:10"},"returnParameters":{"id":3041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3040,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3047,"src":"4766:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3039,"name":"uint256","nodeType":"ElementaryTypeName","src":"4766:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4765:9:10"},"scope":4091,"src":"4705:118:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3136,"nodeType":"Block","src":"5135:743:10","statements":[{"assignments":[3064],"declarations":[{"constant":false,"id":3064,"mutability":"mutable","name":"pos","nameLocation":"5153:3:10","nodeType":"VariableDeclaration","scope":3136,"src":"5145:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3063,"name":"uint256","nodeType":"ElementaryTypeName","src":"5145:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3067,"initialValue":{"expression":{"id":3065,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"5159:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"}},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5164:6:10","memberName":"length","nodeType":"MemberAccess","src":"5159:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5145:25:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3068,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"5185:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5191:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5185:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3134,"nodeType":"Block","src":"5759:113:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":3125,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"5809:3:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"5822:5:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":3124,"name":"Checkpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"5783:10:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint_$2735_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint storage pointer)"}},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5795:12:10","5814:6:10"],"names":["_blockNumber","_value"],"nodeType":"FunctionCall","src":"5783:46:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2735_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint_$2735_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}],"expression":{"id":3121,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"5773:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"}},"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5778:4:10","memberName":"push","nodeType":"MemberAccess","src":"5773:9:10","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint_$2735_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,struct Checkpoints.Checkpoint storage ref)"}},"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5773:57:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3129,"nodeType":"ExpressionStatement","src":"5773:57:10"},{"expression":{"components":[{"hexValue":"30","id":3130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5852:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"5855:5:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":3132,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5851:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint224_$","typeString":"tuple(int_const 0,uint224)"}},"functionReturnParameters":3062,"id":3133,"nodeType":"Return","src":"5844:17:10"}]},"id":3135,"nodeType":"IfStatement","src":"5181:691:10","trueBody":{"id":3120,"nodeType":"Block","src":"5194:559:10","statements":[{"assignments":[3073],"declarations":[{"constant":false,"id":3073,"mutability":"mutable","name":"last","nameLocation":"5278:4:10","nodeType":"VariableDeclaration","scope":3120,"src":"5260:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2735_memory_ptr","typeString":"struct Checkpoints.Checkpoint"},"typeName":{"id":3072,"nodeType":"UserDefinedTypeName","pathNode":{"id":3071,"name":"Checkpoint","nameLocations":["5260:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":2735,"src":"5260:10:10"},"referencedDeclaration":2735,"src":"5260:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2735_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"visibility":"internal"}],"id":3080,"initialValue":{"arguments":[{"id":3075,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"5299:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3076,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"5305:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5311:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5305:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3074,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3256,3673,4090],"referencedDeclaration":3256,"src":"5285:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$2735_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5285:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2735_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5260:53:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3082,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"5388:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2735_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}},"id":3083,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5393:12:10","memberName":"_blockNumber","nodeType":"MemberAccess","referencedDeclaration":2732,"src":"5388:17:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3084,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"5409:3:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"5388:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436865636b706f696e743a20696e76616c6964206b6579","id":3086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5414:25:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df","typeString":"literal_string \"Checkpoint: invalid key\""},"value":"Checkpoint: invalid key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df","typeString":"literal_string \"Checkpoint: invalid key\""}],"id":3081,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5380:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5380:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3088,"nodeType":"ExpressionStatement","src":"5380:60:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3089,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"5504:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2735_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}},"id":3090,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5509:12:10","memberName":"_blockNumber","nodeType":"MemberAccess","referencedDeclaration":2732,"src":"5504:17:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3091,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"5525:3:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"5504:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3113,"nodeType":"Block","src":"5612:90:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":3108,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"5666:3:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"5679:5:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":3107,"name":"Checkpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"5640:10:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint_$2735_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint storage pointer)"}},"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5652:12:10","5671:6:10"],"names":["_blockNumber","_value"],"nodeType":"FunctionCall","src":"5640:46:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2735_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint_$2735_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}],"expression":{"id":3104,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"5630:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"}},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5635:4:10","memberName":"push","nodeType":"MemberAccess","src":"5630:9:10","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint_$2735_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,struct Checkpoints.Checkpoint storage ref)"}},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5630:57:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3112,"nodeType":"ExpressionStatement","src":"5630:57:10"}]},"id":3114,"nodeType":"IfStatement","src":"5500:202:10","trueBody":{"id":3103,"nodeType":"Block","src":"5530:76:10","statements":[{"expression":{"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":3094,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"5562:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3095,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"5568:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5574:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5568:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3093,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3256,3673,4090],"referencedDeclaration":3256,"src":"5548:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$2735_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5548:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2735_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"id":3099,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5577:6:10","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2734,"src":"5548:35:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"5586:5:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"5548:43:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":3102,"nodeType":"ExpressionStatement","src":"5548:43:10"}]}},{"expression":{"components":[{"expression":{"id":3115,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"5723:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2735_memory_ptr","typeString":"struct Checkpoints.Checkpoint memory"}},"id":3116,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5728:6:10","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2734,"src":"5723:11:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},{"id":3117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"5736:5:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":3118,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5722:20:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":3062,"id":3119,"nodeType":"Return","src":"5715:27:10"}]}}]},"documentation":{"id":3048,"nodeType":"StructuredDocumentation","src":"4829:165:10","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":3137,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"5008:7:10","nodeType":"FunctionDefinition","parameters":{"id":3057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3052,"mutability":"mutable","name":"self","nameLocation":"5046:4:10","nodeType":"VariableDeclaration","scope":3137,"src":"5025:25:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"},"typeName":{"baseType":{"id":3050,"nodeType":"UserDefinedTypeName","pathNode":{"id":3049,"name":"Checkpoint","nameLocations":["5025:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":2735,"src":"5025:10:10"},"referencedDeclaration":2735,"src":"5025:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2735_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"id":3051,"nodeType":"ArrayTypeName","src":"5025:12:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":3054,"mutability":"mutable","name":"key","nameLocation":"5067:3:10","nodeType":"VariableDeclaration","scope":3137,"src":"5060:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3053,"name":"uint32","nodeType":"ElementaryTypeName","src":"5060:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3056,"mutability":"mutable","name":"value","nameLocation":"5088:5:10","nodeType":"VariableDeclaration","scope":3137,"src":"5080:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3055,"name":"uint224","nodeType":"ElementaryTypeName","src":"5080:7:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"5015:84:10"},"returnParameters":{"id":3062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3137,"src":"5117:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3058,"name":"uint224","nodeType":"ElementaryTypeName","src":"5117:7:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":3061,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3137,"src":"5126:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3060,"name":"uint224","nodeType":"ElementaryTypeName","src":"5126:7:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"5116:18:10"},"scope":4091,"src":"4999:879:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3188,"nodeType":"Block","src":"6372:275:10","statements":[{"body":{"id":3184,"nodeType":"Block","src":"6401:219:10","statements":[{"assignments":[3157],"declarations":[{"constant":false,"id":3157,"mutability":"mutable","name":"mid","nameLocation":"6423:3:10","nodeType":"VariableDeclaration","scope":3184,"src":"6415:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3156,"name":"uint256","nodeType":"ElementaryTypeName","src":"6415:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3163,"initialValue":{"arguments":[{"id":3160,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"6442:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3161,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"6447:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3158,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5918,"src":"6429:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5918_$","typeString":"type(library Math)"}},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6434:7:10","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5119,"src":"6429:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6429:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6415:37:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3165,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"6484:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"}},{"id":3166,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"6490:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3164,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3256,3673,4090],"referencedDeclaration":3256,"src":"6470:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$2735_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6470:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2735_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"id":3168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6495:12:10","memberName":"_blockNumber","nodeType":"MemberAccess","referencedDeclaration":2732,"src":"6470:37:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3169,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"6510:3:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"6470:43:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3182,"nodeType":"Block","src":"6564:46:10","statements":[{"expression":{"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3176,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"6582:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3177,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"6588:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6594:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6588:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6582:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3181,"nodeType":"ExpressionStatement","src":"6582:13:10"}]},"id":3183,"nodeType":"IfStatement","src":"6466:144:10","trueBody":{"id":3175,"nodeType":"Block","src":"6515:43:10","statements":[{"expression":{"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3171,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"6533:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3172,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"6540:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6533:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3174,"nodeType":"ExpressionStatement","src":"6533:10:10"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3153,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"6389:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3154,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"6395:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6389:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3185,"nodeType":"WhileStatement","src":"6382:238:10"},{"expression":{"id":3186,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"6636:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3152,"id":3187,"nodeType":"Return","src":"6629:11:10"}]},"documentation":{"id":3138,"nodeType":"StructuredDocumentation","src":"5884:320:10","text":" @dev Return the index of the oldest checkpoint whose key is greater than the search key, or `high` if there is none.\n `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":3189,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"6218:18:10","nodeType":"FunctionDefinition","parameters":{"id":3149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3142,"mutability":"mutable","name":"self","nameLocation":"6267:4:10","nodeType":"VariableDeclaration","scope":3189,"src":"6246:25:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"},"typeName":{"baseType":{"id":3140,"nodeType":"UserDefinedTypeName","pathNode":{"id":3139,"name":"Checkpoint","nameLocations":["6246:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":2735,"src":"6246:10:10"},"referencedDeclaration":2735,"src":"6246:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2735_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"id":3141,"nodeType":"ArrayTypeName","src":"6246:12:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":3144,"mutability":"mutable","name":"key","nameLocation":"6288:3:10","nodeType":"VariableDeclaration","scope":3189,"src":"6281:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3143,"name":"uint32","nodeType":"ElementaryTypeName","src":"6281:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3146,"mutability":"mutable","name":"low","nameLocation":"6309:3:10","nodeType":"VariableDeclaration","scope":3189,"src":"6301:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3145,"name":"uint256","nodeType":"ElementaryTypeName","src":"6301:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3148,"mutability":"mutable","name":"high","nameLocation":"6330:4:10","nodeType":"VariableDeclaration","scope":3189,"src":"6322:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3147,"name":"uint256","nodeType":"ElementaryTypeName","src":"6322:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6236:104:10"},"returnParameters":{"id":3152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3189,"src":"6363:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3150,"name":"uint256","nodeType":"ElementaryTypeName","src":"6363:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6362:9:10"},"scope":4091,"src":"6209:438:10","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3240,"nodeType":"Block","src":"7150:275:10","statements":[{"body":{"id":3236,"nodeType":"Block","src":"7179:219:10","statements":[{"assignments":[3209],"declarations":[{"constant":false,"id":3209,"mutability":"mutable","name":"mid","nameLocation":"7201:3:10","nodeType":"VariableDeclaration","scope":3236,"src":"7193:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3208,"name":"uint256","nodeType":"ElementaryTypeName","src":"7193:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3215,"initialValue":{"arguments":[{"id":3212,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"7220:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3213,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"7225:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3210,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5918,"src":"7207:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5918_$","typeString":"type(library Math)"}},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7212:7:10","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5119,"src":"7207:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7207:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7193:37:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3217,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"7262:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"}},{"id":3218,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"7268:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3216,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3256,3673,4090],"referencedDeclaration":3256,"src":"7248:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$2735_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint storage pointer)"}},"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7248:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2735_storage_ptr","typeString":"struct Checkpoints.Checkpoint storage pointer"}},"id":3220,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7273:12:10","memberName":"_blockNumber","nodeType":"MemberAccess","referencedDeclaration":2732,"src":"7248:37:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3221,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"7288:3:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"7248:43:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3234,"nodeType":"Block","src":"7345:43:10","statements":[{"expression":{"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3230,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"7363:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3231,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"7370:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7363:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3233,"nodeType":"ExpressionStatement","src":"7363:10:10"}]},"id":3235,"nodeType":"IfStatement","src":"7244:144:10","trueBody":{"id":3229,"nodeType":"Block","src":"7293:46:10","statements":[{"expression":{"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3223,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"7311:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3224,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"7317:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7323:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7317:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7311:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3228,"nodeType":"ExpressionStatement","src":"7311:13:10"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3205,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"7167:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3206,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"7173:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7167:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3237,"nodeType":"WhileStatement","src":"7160:238:10"},{"expression":{"id":3238,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"7414:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3204,"id":3239,"nodeType":"Return","src":"7407:11:10"}]},"documentation":{"id":3190,"nodeType":"StructuredDocumentation","src":"6653:329:10","text":" @dev Return the index of the oldest checkpoint whose key is greater or equal than the search key, or `high` if there is none.\n `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":3241,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"6996:18:10","nodeType":"FunctionDefinition","parameters":{"id":3201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3194,"mutability":"mutable","name":"self","nameLocation":"7045:4:10","nodeType":"VariableDeclaration","scope":3241,"src":"7024:25:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"},"typeName":{"baseType":{"id":3192,"nodeType":"UserDefinedTypeName","pathNode":{"id":3191,"name":"Checkpoint","nameLocations":["7024:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":2735,"src":"7024:10:10"},"referencedDeclaration":2735,"src":"7024:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2735_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"id":3193,"nodeType":"ArrayTypeName","src":"7024:12:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":3196,"mutability":"mutable","name":"key","nameLocation":"7066:3:10","nodeType":"VariableDeclaration","scope":3241,"src":"7059:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3195,"name":"uint32","nodeType":"ElementaryTypeName","src":"7059:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3198,"mutability":"mutable","name":"low","nameLocation":"7087:3:10","nodeType":"VariableDeclaration","scope":3241,"src":"7079:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3197,"name":"uint256","nodeType":"ElementaryTypeName","src":"7079:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3200,"mutability":"mutable","name":"high","nameLocation":"7108:4:10","nodeType":"VariableDeclaration","scope":3241,"src":"7100:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3199,"name":"uint256","nodeType":"ElementaryTypeName","src":"7100:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7014:104:10"},"returnParameters":{"id":3204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3203,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3241,"src":"7141:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3202,"name":"uint256","nodeType":"ElementaryTypeName","src":"7141:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7140:9:10"},"scope":4091,"src":"6987:438:10","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3255,"nodeType":"Block","src":"7680:125:10","statements":[{"AST":{"nodeType":"YulBlock","src":"7699:100:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7720:1:10","type":"","value":"0"},{"name":"self.slot","nodeType":"YulIdentifier","src":"7723:9:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7713:6:10"},"nodeType":"YulFunctionCall","src":"7713:20:10"},"nodeType":"YulExpressionStatement","src":"7713:20:10"},{"nodeType":"YulAssignment","src":"7746:43:10","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7775:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7778:4:10","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7765:9:10"},"nodeType":"YulFunctionCall","src":"7765:18:10"},{"name":"pos","nodeType":"YulIdentifier","src":"7785:3:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7761:3:10"},"nodeType":"YulFunctionCall","src":"7761:28:10"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"7746:11:10"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3248,"isOffset":false,"isSlot":false,"src":"7785:3:10","valueSize":1},{"declaration":3252,"isOffset":false,"isSlot":true,"src":"7746:11:10","suffix":"slot","valueSize":1},{"declaration":3246,"isOffset":false,"isSlot":true,"src":"7723:9:10","suffix":"slot","valueSize":1}],"id":3254,"nodeType":"InlineAssembly","src":"7690:109:10"}]},"documentation":{"id":3242,"nodeType":"StructuredDocumentation","src":"7431:132:10","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":3256,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"7577:13:10","nodeType":"FunctionDefinition","parameters":{"id":3249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3246,"mutability":"mutable","name":"self","nameLocation":"7612:4:10","nodeType":"VariableDeclaration","scope":3256,"src":"7591:25:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"},"typeName":{"baseType":{"id":3244,"nodeType":"UserDefinedTypeName","pathNode":{"id":3243,"name":"Checkpoint","nameLocations":["7591:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":2735,"src":"7591:10:10"},"referencedDeclaration":2735,"src":"7591:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2735_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"id":3245,"nodeType":"ArrayTypeName","src":"7591:12:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$2735_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":3248,"mutability":"mutable","name":"pos","nameLocation":"7626:3:10","nodeType":"VariableDeclaration","scope":3256,"src":"7618:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3247,"name":"uint256","nodeType":"ElementaryTypeName","src":"7618:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7590:40:10"},"returnParameters":{"id":3253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3252,"mutability":"mutable","name":"result","nameLocation":"7672:6:10","nodeType":"VariableDeclaration","scope":3256,"src":"7653:25:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2735_storage_ptr","typeString":"struct Checkpoints.Checkpoint"},"typeName":{"id":3251,"nodeType":"UserDefinedTypeName","pathNode":{"id":3250,"name":"Checkpoint","nameLocations":["7653:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":2735,"src":"7653:10:10"},"referencedDeclaration":2735,"src":"7653:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$2735_storage_ptr","typeString":"struct Checkpoints.Checkpoint"}},"visibility":"internal"}],"src":"7652:27:10"},"scope":4091,"src":"7568:237:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"canonicalName":"Checkpoints.Trace224","id":3261,"members":[{"constant":false,"id":3260,"mutability":"mutable","name":"_checkpoints","nameLocation":"7853:12:10","nodeType":"VariableDeclaration","scope":3261,"src":"7837:28:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":3258,"nodeType":"UserDefinedTypeName","pathNode":{"id":3257,"name":"Checkpoint224","nameLocations":["7837:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":3266,"src":"7837:13:10"},"referencedDeclaration":3266,"src":"7837:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3266_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":3259,"nodeType":"ArrayTypeName","src":"7837:15:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"}],"name":"Trace224","nameLocation":"7818:8:10","nodeType":"StructDefinition","scope":4091,"src":"7811:61:10","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint224","id":3266,"members":[{"constant":false,"id":3263,"mutability":"mutable","name":"_key","nameLocation":"7916:4:10","nodeType":"VariableDeclaration","scope":3266,"src":"7909:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3262,"name":"uint32","nodeType":"ElementaryTypeName","src":"7909:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3265,"mutability":"mutable","name":"_value","nameLocation":"7938:6:10","nodeType":"VariableDeclaration","scope":3266,"src":"7930:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3264,"name":"uint224","nodeType":"ElementaryTypeName","src":"7930:7:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"name":"Checkpoint224","nameLocation":"7885:13:10","nodeType":"StructDefinition","scope":4091,"src":"7878:73:10","visibility":"public"},{"body":{"id":3288,"nodeType":"Block","src":"8254:62:10","statements":[{"expression":{"arguments":[{"expression":{"id":3282,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"8279:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3261_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3283,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8284:12:10","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3260,"src":"8279:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":3284,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"8298:3:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"8303:5:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":3281,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[3137,3554,3971],"referencedDeclaration":3554,"src":"8271:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint224_$returns$_t_uint224_$_t_uint224_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint224) returns (uint224,uint224)"}},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8271:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":3280,"id":3287,"nodeType":"Return","src":"8264:45:10"}]},"documentation":{"id":3267,"nodeType":"StructuredDocumentation","src":"7957:162:10","text":" @dev Pushes a (`key`, `value`) pair into a Trace224 so that it is stored as the checkpoint.\n Returns previous value and new value."},"id":3289,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"8133:4:10","nodeType":"FunctionDefinition","parameters":{"id":3275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3270,"mutability":"mutable","name":"self","nameLocation":"8164:4:10","nodeType":"VariableDeclaration","scope":3289,"src":"8147:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3261_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":3269,"nodeType":"UserDefinedTypeName","pathNode":{"id":3268,"name":"Trace224","nameLocations":["8147:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":3261,"src":"8147:8:10"},"referencedDeclaration":3261,"src":"8147:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3261_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":3272,"mutability":"mutable","name":"key","nameLocation":"8185:3:10","nodeType":"VariableDeclaration","scope":3289,"src":"8178:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3271,"name":"uint32","nodeType":"ElementaryTypeName","src":"8178:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3274,"mutability":"mutable","name":"value","nameLocation":"8206:5:10","nodeType":"VariableDeclaration","scope":3289,"src":"8198:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3273,"name":"uint224","nodeType":"ElementaryTypeName","src":"8198:7:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"8137:80:10"},"returnParameters":{"id":3280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3289,"src":"8236:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3276,"name":"uint224","nodeType":"ElementaryTypeName","src":"8236:7:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":3279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3289,"src":"8245:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3278,"name":"uint224","nodeType":"ElementaryTypeName","src":"8245:7:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"8235:18:10"},"scope":4091,"src":"8124:192:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3328,"nodeType":"Block","src":"8554:207:10","statements":[{"assignments":[3301],"declarations":[{"constant":false,"id":3301,"mutability":"mutable","name":"len","nameLocation":"8572:3:10","nodeType":"VariableDeclaration","scope":3328,"src":"8564:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3300,"name":"uint256","nodeType":"ElementaryTypeName","src":"8564:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3305,"initialValue":{"expression":{"expression":{"id":3302,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"8578:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3261_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3303,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8583:12:10","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3260,"src":"8578:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:10","memberName":"length","nodeType":"MemberAccess","src":"8578:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8564:38:10"},{"assignments":[3307],"declarations":[{"constant":false,"id":3307,"mutability":"mutable","name":"pos","nameLocation":"8620:3:10","nodeType":"VariableDeclaration","scope":3328,"src":"8612:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3306,"name":"uint256","nodeType":"ElementaryTypeName","src":"8612:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3315,"initialValue":{"arguments":[{"expression":{"id":3309,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"8645:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3261_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3310,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8650:12:10","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3260,"src":"8645:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":3311,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"8664:3:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":3312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8669:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3313,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"8672:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3308,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[3241,3658,4075],"referencedDeclaration":3658,"src":"8626:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8626:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8612:64:10"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3316,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"8693:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3317,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"8700:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8693:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":3321,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"8724:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3261_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3322,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8729:12:10","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3260,"src":"8724:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":3323,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"8743:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3320,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3256,3673,4090],"referencedDeclaration":3673,"src":"8710:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$3266_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8710:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3266_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":3325,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8748:6:10","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3265,"src":"8710:44:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8693:61:10","trueExpression":{"hexValue":"30","id":3319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8706:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":3299,"id":3327,"nodeType":"Return","src":"8686:68:10"}]},"documentation":{"id":3290,"nodeType":"StructuredDocumentation","src":"8322:139:10","text":" @dev Returns the value in the oldest checkpoint with key greater or equal than the search key, or zero if there is none."},"id":3329,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"8475:11:10","nodeType":"FunctionDefinition","parameters":{"id":3296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3293,"mutability":"mutable","name":"self","nameLocation":"8504:4:10","nodeType":"VariableDeclaration","scope":3329,"src":"8487:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3261_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":3292,"nodeType":"UserDefinedTypeName","pathNode":{"id":3291,"name":"Trace224","nameLocations":["8487:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":3261,"src":"8487:8:10"},"referencedDeclaration":3261,"src":"8487:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3261_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":3295,"mutability":"mutable","name":"key","nameLocation":"8517:3:10","nodeType":"VariableDeclaration","scope":3329,"src":"8510:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3294,"name":"uint32","nodeType":"ElementaryTypeName","src":"8510:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"8486:35:10"},"returnParameters":{"id":3299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3329,"src":"8545:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3297,"name":"uint224","nodeType":"ElementaryTypeName","src":"8545:7:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"8544:9:10"},"scope":4091,"src":"8466:295:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3370,"nodeType":"Block","src":"8976:209:10","statements":[{"assignments":[3341],"declarations":[{"constant":false,"id":3341,"mutability":"mutable","name":"len","nameLocation":"8994:3:10","nodeType":"VariableDeclaration","scope":3370,"src":"8986:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3340,"name":"uint256","nodeType":"ElementaryTypeName","src":"8986:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3345,"initialValue":{"expression":{"expression":{"id":3342,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"9000:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3261_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3343,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9005:12:10","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3260,"src":"9000:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9018:6:10","memberName":"length","nodeType":"MemberAccess","src":"9000:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8986:38:10"},{"assignments":[3347],"declarations":[{"constant":false,"id":3347,"mutability":"mutable","name":"pos","nameLocation":"9042:3:10","nodeType":"VariableDeclaration","scope":3370,"src":"9034:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3346,"name":"uint256","nodeType":"ElementaryTypeName","src":"9034:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3355,"initialValue":{"arguments":[{"expression":{"id":3349,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"9067:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3261_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3350,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9072:12:10","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3260,"src":"9067:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":3351,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3335,"src":"9086:3:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":3352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9091:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3353,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"9094:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3348,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[3189,3606,4023],"referencedDeclaration":3606,"src":"9048:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9048:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9034:64:10"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3356,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3347,"src":"9115:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9122:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9115:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":3361,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"9144:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3261_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3362,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9149:12:10","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3260,"src":"9144:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3363,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3347,"src":"9163:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9169:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9163:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3360,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3256,3673,4090],"referencedDeclaration":3673,"src":"9130:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$3266_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9130:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3266_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":3367,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9172:6:10","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3265,"src":"9130:48:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9115:63:10","trueExpression":{"hexValue":"30","id":3359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9126:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":3339,"id":3369,"nodeType":"Return","src":"9108:70:10"}]},"documentation":{"id":3330,"nodeType":"StructuredDocumentation","src":"8767:116:10","text":" @dev Returns the value in the most recent checkpoint with key lower or equal than the search key."},"id":3371,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"8897:11:10","nodeType":"FunctionDefinition","parameters":{"id":3336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3333,"mutability":"mutable","name":"self","nameLocation":"8926:4:10","nodeType":"VariableDeclaration","scope":3371,"src":"8909:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3261_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":3332,"nodeType":"UserDefinedTypeName","pathNode":{"id":3331,"name":"Trace224","nameLocations":["8909:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":3261,"src":"8909:8:10"},"referencedDeclaration":3261,"src":"8909:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3261_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":3335,"mutability":"mutable","name":"key","nameLocation":"8939:3:10","nodeType":"VariableDeclaration","scope":3371,"src":"8932:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3334,"name":"uint32","nodeType":"ElementaryTypeName","src":"8932:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"8908:35:10"},"returnParameters":{"id":3339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3338,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3371,"src":"8967:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3337,"name":"uint224","nodeType":"ElementaryTypeName","src":"8967:7:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"8966:9:10"},"scope":4091,"src":"8888:297:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3400,"nodeType":"Block","src":"9376:135:10","statements":[{"assignments":[3381],"declarations":[{"constant":false,"id":3381,"mutability":"mutable","name":"pos","nameLocation":"9394:3:10","nodeType":"VariableDeclaration","scope":3400,"src":"9386:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3380,"name":"uint256","nodeType":"ElementaryTypeName","src":"9386:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3385,"initialValue":{"expression":{"expression":{"id":3382,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"9400:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3261_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3383,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9405:12:10","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3260,"src":"9400:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":3384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9418:6:10","memberName":"length","nodeType":"MemberAccess","src":"9400:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9386:38:10"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3386,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"9441:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9448:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9441:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":3391,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"9470:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3261_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3392,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9475:12:10","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3260,"src":"9470:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3393,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"9489:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9495:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9489:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3390,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3256,3673,4090],"referencedDeclaration":3673,"src":"9456:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$3266_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":3396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9456:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3266_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":3397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9498:6:10","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3265,"src":"9456:48:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9441:63:10","trueExpression":{"hexValue":"30","id":3389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9452:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":3379,"id":3399,"nodeType":"Return","src":"9434:70:10"}]},"documentation":{"id":3372,"nodeType":"StructuredDocumentation","src":"9191:109:10","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":3401,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"9314:6:10","nodeType":"FunctionDefinition","parameters":{"id":3376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3375,"mutability":"mutable","name":"self","nameLocation":"9338:4:10","nodeType":"VariableDeclaration","scope":3401,"src":"9321:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3261_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":3374,"nodeType":"UserDefinedTypeName","pathNode":{"id":3373,"name":"Trace224","nameLocations":["9321:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":3261,"src":"9321:8:10"},"referencedDeclaration":3261,"src":"9321:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3261_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"9320:23:10"},"returnParameters":{"id":3379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3401,"src":"9367:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3377,"name":"uint224","nodeType":"ElementaryTypeName","src":"9367:7:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"9366:9:10"},"scope":4091,"src":"9305:206:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3449,"nodeType":"Block","src":"9878:274:10","statements":[{"assignments":[3415],"declarations":[{"constant":false,"id":3415,"mutability":"mutable","name":"pos","nameLocation":"9896:3:10","nodeType":"VariableDeclaration","scope":3449,"src":"9888:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3414,"name":"uint256","nodeType":"ElementaryTypeName","src":"9888:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3419,"initialValue":{"expression":{"expression":{"id":3416,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"9902:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3261_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3417,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9907:12:10","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3260,"src":"9902:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9920:6:10","memberName":"length","nodeType":"MemberAccess","src":"9902:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9888:38:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3420,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"9940:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9947:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9940:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3447,"nodeType":"Block","src":"10001:145:10","statements":[{"assignments":[3431],"declarations":[{"constant":false,"id":3431,"mutability":"mutable","name":"ckpt","nameLocation":"10036:4:10","nodeType":"VariableDeclaration","scope":3447,"src":"10015:25:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3266_memory_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":3430,"nodeType":"UserDefinedTypeName","pathNode":{"id":3429,"name":"Checkpoint224","nameLocations":["10015:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":3266,"src":"10015:13:10"},"referencedDeclaration":3266,"src":"10015:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3266_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"id":3439,"initialValue":{"arguments":[{"expression":{"id":3433,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"10057:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3261_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3434,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10062:12:10","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3260,"src":"10057:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3435,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"10076:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10082:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10076:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3432,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3256,3673,4090],"referencedDeclaration":3673,"src":"10043:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$3266_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":3438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10043:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3266_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"10015:69:10"},{"expression":{"components":[{"hexValue":"74727565","id":3440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10106:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":3441,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"10112:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3266_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":3442,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10117:4:10","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":3263,"src":"10112:9:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":3443,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"10123:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3266_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":3444,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10128:6:10","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3265,"src":"10123:11:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":3445,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10105:30:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint32_$_t_uint224_$","typeString":"tuple(bool,uint32,uint224)"}},"functionReturnParameters":3413,"id":3446,"nodeType":"Return","src":"10098:37:10"}]},"id":3448,"nodeType":"IfStatement","src":"9936:210:10","trueBody":{"id":3428,"nodeType":"Block","src":"9950:45:10","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":3423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9972:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9979:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":3425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9982:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3426,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9971:13:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":3413,"id":3427,"nodeType":"Return","src":"9964:20:10"}]}}]},"documentation":{"id":3402,"nodeType":"StructuredDocumentation","src":"9517:168:10","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":3450,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"9699:16:10","nodeType":"FunctionDefinition","parameters":{"id":3406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3405,"mutability":"mutable","name":"self","nameLocation":"9733:4:10","nodeType":"VariableDeclaration","scope":3450,"src":"9716:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3261_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":3404,"nodeType":"UserDefinedTypeName","pathNode":{"id":3403,"name":"Trace224","nameLocations":["9716:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":3261,"src":"9716:8:10"},"referencedDeclaration":3261,"src":"9716:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3261_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"9715:23:10"},"returnParameters":{"id":3413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3408,"mutability":"mutable","name":"exists","nameLocation":"9804:6:10","nodeType":"VariableDeclaration","scope":3450,"src":"9799:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3407,"name":"bool","nodeType":"ElementaryTypeName","src":"9799:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3410,"mutability":"mutable","name":"_key","nameLocation":"9831:4:10","nodeType":"VariableDeclaration","scope":3450,"src":"9824:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3409,"name":"uint32","nodeType":"ElementaryTypeName","src":"9824:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3412,"mutability":"mutable","name":"_value","nameLocation":"9857:6:10","nodeType":"VariableDeclaration","scope":3450,"src":"9849:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3411,"name":"uint224","nodeType":"ElementaryTypeName","src":"9849:7:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"9785:88:10"},"scope":4091,"src":"9690:462:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3463,"nodeType":"Block","src":"10291:48:10","statements":[{"expression":{"expression":{"expression":{"id":3459,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"10308:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3261_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":3460,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10313:12:10","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3260,"src":"10308:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10326:6:10","memberName":"length","nodeType":"MemberAccess","src":"10308:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3458,"id":3462,"nodeType":"Return","src":"10301:31:10"}]},"documentation":{"id":3451,"nodeType":"StructuredDocumentation","src":"10158:57:10","text":" @dev Returns the number of checkpoint."},"id":3464,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"10229:6:10","nodeType":"FunctionDefinition","parameters":{"id":3455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3454,"mutability":"mutable","name":"self","nameLocation":"10253:4:10","nodeType":"VariableDeclaration","scope":3464,"src":"10236:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3261_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":3453,"nodeType":"UserDefinedTypeName","pathNode":{"id":3452,"name":"Trace224","nameLocations":["10236:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":3261,"src":"10236:8:10"},"referencedDeclaration":3261,"src":"10236:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$3261_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"10235:23:10"},"returnParameters":{"id":3458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3464,"src":"10282:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3456,"name":"uint256","nodeType":"ElementaryTypeName","src":"10282:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10281:9:10"},"scope":4091,"src":"10220:119:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3553,"nodeType":"Block","src":"10654:720:10","statements":[{"assignments":[3481],"declarations":[{"constant":false,"id":3481,"mutability":"mutable","name":"pos","nameLocation":"10672:3:10","nodeType":"VariableDeclaration","scope":3553,"src":"10664:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3480,"name":"uint256","nodeType":"ElementaryTypeName","src":"10664:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3484,"initialValue":{"expression":{"id":3482,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"10678:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10683:6:10","memberName":"length","nodeType":"MemberAccess","src":"10678:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10664:25:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3485,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"10704:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10710:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10704:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3551,"nodeType":"Block","src":"11260:108:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":3542,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"11305:3:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"11318:5:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":3541,"name":"Checkpoint224","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"11284:13:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint224_$3266_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint224 storage pointer)"}},"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["11299:4:10","11310:6:10"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"11284:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3266_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint224_$3266_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}],"expression":{"id":3538,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"11274:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11279:4:10","memberName":"push","nodeType":"MemberAccess","src":"11274:9:10","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint224_$3266_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,struct Checkpoints.Checkpoint224 storage ref)"}},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11274:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3546,"nodeType":"ExpressionStatement","src":"11274:52:10"},{"expression":{"components":[{"hexValue":"30","id":3547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11348:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"11351:5:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":3549,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11347:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint224_$","typeString":"tuple(int_const 0,uint224)"}},"functionReturnParameters":3479,"id":3550,"nodeType":"Return","src":"11340:17:10"}]},"id":3552,"nodeType":"IfStatement","src":"10700:668:10","trueBody":{"id":3537,"nodeType":"Block","src":"10713:541:10","statements":[{"assignments":[3490],"declarations":[{"constant":false,"id":3490,"mutability":"mutable","name":"last","nameLocation":"10800:4:10","nodeType":"VariableDeclaration","scope":3537,"src":"10779:25:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3266_memory_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":3489,"nodeType":"UserDefinedTypeName","pathNode":{"id":3488,"name":"Checkpoint224","nameLocations":["10779:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":3266,"src":"10779:13:10"},"referencedDeclaration":3266,"src":"10779:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3266_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"id":3497,"initialValue":{"arguments":[{"id":3492,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"10821:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3493,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"10827:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10833:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10827:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3491,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3256,3673,4090],"referencedDeclaration":3673,"src":"10807:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$3266_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10807:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3266_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"10779:56:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3499,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"10910:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3266_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":3500,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10915:4:10","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":3263,"src":"10910:9:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3501,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"10923:3:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"10910:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436865636b706f696e743a20696e76616c6964206b6579","id":3503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10928:25:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df","typeString":"literal_string \"Checkpoint: invalid key\""},"value":"Checkpoint: invalid key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df","typeString":"literal_string \"Checkpoint: invalid key\""}],"id":3498,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10902:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10902:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3505,"nodeType":"ExpressionStatement","src":"10902:52:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3506,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"11018:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3266_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":3507,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11023:4:10","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":3263,"src":"11018:9:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3508,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"11031:3:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"11018:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3530,"nodeType":"Block","src":"11118:85:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":3525,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"11167:3:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"11180:5:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":3524,"name":"Checkpoint224","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"11146:13:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint224_$3266_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint224 storage pointer)"}},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["11161:4:10","11172:6:10"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"11146:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3266_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint224_$3266_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}],"expression":{"id":3521,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"11136:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11141:4:10","memberName":"push","nodeType":"MemberAccess","src":"11136:9:10","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint224_$3266_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,struct Checkpoints.Checkpoint224 storage ref)"}},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11136:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3529,"nodeType":"ExpressionStatement","src":"11136:52:10"}]},"id":3531,"nodeType":"IfStatement","src":"11014:189:10","trueBody":{"id":3520,"nodeType":"Block","src":"11036:76:10","statements":[{"expression":{"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":3511,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"11068:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3512,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"11074:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11080:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11074:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3510,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3256,3673,4090],"referencedDeclaration":3673,"src":"11054:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$3266_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11054:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3266_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":3516,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11083:6:10","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3265,"src":"11054:35:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3517,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"11092:5:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"11054:43:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":3519,"nodeType":"ExpressionStatement","src":"11054:43:10"}]}},{"expression":{"components":[{"expression":{"id":3532,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"11224:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3266_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":3533,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11229:6:10","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3265,"src":"11224:11:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},{"id":3534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"11237:5:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":3535,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11223:20:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":3479,"id":3536,"nodeType":"Return","src":"11216:27:10"}]}}]},"documentation":{"id":3465,"nodeType":"StructuredDocumentation","src":"10345:165:10","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":3554,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"10524:7:10","nodeType":"FunctionDefinition","parameters":{"id":3474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3469,"mutability":"mutable","name":"self","nameLocation":"10565:4:10","nodeType":"VariableDeclaration","scope":3554,"src":"10541:28:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":3467,"nodeType":"UserDefinedTypeName","pathNode":{"id":3466,"name":"Checkpoint224","nameLocations":["10541:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":3266,"src":"10541:13:10"},"referencedDeclaration":3266,"src":"10541:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3266_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":3468,"nodeType":"ArrayTypeName","src":"10541:15:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":3471,"mutability":"mutable","name":"key","nameLocation":"10586:3:10","nodeType":"VariableDeclaration","scope":3554,"src":"10579:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3470,"name":"uint32","nodeType":"ElementaryTypeName","src":"10579:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3473,"mutability":"mutable","name":"value","nameLocation":"10607:5:10","nodeType":"VariableDeclaration","scope":3554,"src":"10599:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3472,"name":"uint224","nodeType":"ElementaryTypeName","src":"10599:7:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"10531:87:10"},"returnParameters":{"id":3479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3554,"src":"10636:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3475,"name":"uint224","nodeType":"ElementaryTypeName","src":"10636:7:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":3478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3554,"src":"10645:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3477,"name":"uint224","nodeType":"ElementaryTypeName","src":"10645:7:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"10635:18:10"},"scope":4091,"src":"10515:859:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3605,"nodeType":"Block","src":"11871:267:10","statements":[{"body":{"id":3601,"nodeType":"Block","src":"11900:211:10","statements":[{"assignments":[3574],"declarations":[{"constant":false,"id":3574,"mutability":"mutable","name":"mid","nameLocation":"11922:3:10","nodeType":"VariableDeclaration","scope":3601,"src":"11914:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3573,"name":"uint256","nodeType":"ElementaryTypeName","src":"11914:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3580,"initialValue":{"arguments":[{"id":3577,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"11941:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3578,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"11946:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3575,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5918,"src":"11928:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5918_$","typeString":"type(library Math)"}},"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11933:7:10","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5119,"src":"11928:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11928:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11914:37:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3582,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"11983:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"id":3583,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"11989:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3581,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3256,3673,4090],"referencedDeclaration":3673,"src":"11969:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$3266_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11969:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3266_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":3585,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11994:4:10","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":3263,"src":"11969:29:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3586,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3561,"src":"12001:3:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"11969:35:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3599,"nodeType":"Block","src":"12055:46:10","statements":[{"expression":{"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3593,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"12073:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3594,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"12079:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12085:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12079:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12073:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3598,"nodeType":"ExpressionStatement","src":"12073:13:10"}]},"id":3600,"nodeType":"IfStatement","src":"11965:136:10","trueBody":{"id":3592,"nodeType":"Block","src":"12006:43:10","statements":[{"expression":{"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3588,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"12024:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3589,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"12031:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12024:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3591,"nodeType":"ExpressionStatement","src":"12024:10:10"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3570,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"11888:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3571,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"11894:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11888:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3602,"nodeType":"WhileStatement","src":"11881:230:10"},{"expression":{"id":3603,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"12127:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3569,"id":3604,"nodeType":"Return","src":"12120:11:10"}]},"documentation":{"id":3555,"nodeType":"StructuredDocumentation","src":"11380:320:10","text":" @dev Return the index of the oldest checkpoint whose key is greater than the search key, or `high` if there is none.\n `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":3606,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"11714:18:10","nodeType":"FunctionDefinition","parameters":{"id":3566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3559,"mutability":"mutable","name":"self","nameLocation":"11766:4:10","nodeType":"VariableDeclaration","scope":3606,"src":"11742:28:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":3557,"nodeType":"UserDefinedTypeName","pathNode":{"id":3556,"name":"Checkpoint224","nameLocations":["11742:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":3266,"src":"11742:13:10"},"referencedDeclaration":3266,"src":"11742:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3266_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":3558,"nodeType":"ArrayTypeName","src":"11742:15:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":3561,"mutability":"mutable","name":"key","nameLocation":"11787:3:10","nodeType":"VariableDeclaration","scope":3606,"src":"11780:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3560,"name":"uint32","nodeType":"ElementaryTypeName","src":"11780:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3563,"mutability":"mutable","name":"low","nameLocation":"11808:3:10","nodeType":"VariableDeclaration","scope":3606,"src":"11800:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3562,"name":"uint256","nodeType":"ElementaryTypeName","src":"11800:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3565,"mutability":"mutable","name":"high","nameLocation":"11829:4:10","nodeType":"VariableDeclaration","scope":3606,"src":"11821:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3564,"name":"uint256","nodeType":"ElementaryTypeName","src":"11821:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11732:107:10"},"returnParameters":{"id":3569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3606,"src":"11862:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3567,"name":"uint256","nodeType":"ElementaryTypeName","src":"11862:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11861:9:10"},"scope":4091,"src":"11705:433:10","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3657,"nodeType":"Block","src":"12644:267:10","statements":[{"body":{"id":3653,"nodeType":"Block","src":"12673:211:10","statements":[{"assignments":[3626],"declarations":[{"constant":false,"id":3626,"mutability":"mutable","name":"mid","nameLocation":"12695:3:10","nodeType":"VariableDeclaration","scope":3653,"src":"12687:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3625,"name":"uint256","nodeType":"ElementaryTypeName","src":"12687:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3632,"initialValue":{"arguments":[{"id":3629,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"12714:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3630,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3617,"src":"12719:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3627,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5918,"src":"12701:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5918_$","typeString":"type(library Math)"}},"id":3628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12706:7:10","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5119,"src":"12701:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12701:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12687:37:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3634,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3611,"src":"12756:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"id":3635,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"12762:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3633,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3256,3673,4090],"referencedDeclaration":3673,"src":"12742:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$3266_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":3636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12742:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3266_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":3637,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12767:4:10","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":3263,"src":"12742:29:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3638,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"12774:3:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"12742:35:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3651,"nodeType":"Block","src":"12831:43:10","statements":[{"expression":{"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3647,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3617,"src":"12849:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3648,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"12856:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12849:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3650,"nodeType":"ExpressionStatement","src":"12849:10:10"}]},"id":3652,"nodeType":"IfStatement","src":"12738:136:10","trueBody":{"id":3646,"nodeType":"Block","src":"12779:46:10","statements":[{"expression":{"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3640,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"12797:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3641,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"12803:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12809:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12803:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12797:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3645,"nodeType":"ExpressionStatement","src":"12797:13:10"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3622,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"12661:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3623,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3617,"src":"12667:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12661:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3654,"nodeType":"WhileStatement","src":"12654:230:10"},{"expression":{"id":3655,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3617,"src":"12900:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3621,"id":3656,"nodeType":"Return","src":"12893:11:10"}]},"documentation":{"id":3607,"nodeType":"StructuredDocumentation","src":"12144:329:10","text":" @dev Return the index of the oldest checkpoint whose key is greater or equal than the search key, or `high` if there is none.\n `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":3658,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"12487:18:10","nodeType":"FunctionDefinition","parameters":{"id":3618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3611,"mutability":"mutable","name":"self","nameLocation":"12539:4:10","nodeType":"VariableDeclaration","scope":3658,"src":"12515:28:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":3609,"nodeType":"UserDefinedTypeName","pathNode":{"id":3608,"name":"Checkpoint224","nameLocations":["12515:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":3266,"src":"12515:13:10"},"referencedDeclaration":3266,"src":"12515:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3266_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":3610,"nodeType":"ArrayTypeName","src":"12515:15:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":3613,"mutability":"mutable","name":"key","nameLocation":"12560:3:10","nodeType":"VariableDeclaration","scope":3658,"src":"12553:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3612,"name":"uint32","nodeType":"ElementaryTypeName","src":"12553:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3615,"mutability":"mutable","name":"low","nameLocation":"12581:3:10","nodeType":"VariableDeclaration","scope":3658,"src":"12573:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3614,"name":"uint256","nodeType":"ElementaryTypeName","src":"12573:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3617,"mutability":"mutable","name":"high","nameLocation":"12602:4:10","nodeType":"VariableDeclaration","scope":3658,"src":"12594:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3616,"name":"uint256","nodeType":"ElementaryTypeName","src":"12594:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12505:107:10"},"returnParameters":{"id":3621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3658,"src":"12635:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3619,"name":"uint256","nodeType":"ElementaryTypeName","src":"12635:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12634:9:10"},"scope":4091,"src":"12478:433:10","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3672,"nodeType":"Block","src":"13200:125:10","statements":[{"AST":{"nodeType":"YulBlock","src":"13219:100:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13240:1:10","type":"","value":"0"},{"name":"self.slot","nodeType":"YulIdentifier","src":"13243:9:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13233:6:10"},"nodeType":"YulFunctionCall","src":"13233:20:10"},"nodeType":"YulExpressionStatement","src":"13233:20:10"},{"nodeType":"YulAssignment","src":"13266:43:10","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13295:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13298:4:10","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"13285:9:10"},"nodeType":"YulFunctionCall","src":"13285:18:10"},{"name":"pos","nodeType":"YulIdentifier","src":"13305:3:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13281:3:10"},"nodeType":"YulFunctionCall","src":"13281:28:10"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"13266:11:10"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3665,"isOffset":false,"isSlot":false,"src":"13305:3:10","valueSize":1},{"declaration":3669,"isOffset":false,"isSlot":true,"src":"13266:11:10","suffix":"slot","valueSize":1},{"declaration":3663,"isOffset":false,"isSlot":true,"src":"13243:9:10","suffix":"slot","valueSize":1}],"id":3671,"nodeType":"InlineAssembly","src":"13210:109:10"}]},"documentation":{"id":3659,"nodeType":"StructuredDocumentation","src":"12917:132:10","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":3673,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"13063:13:10","nodeType":"FunctionDefinition","parameters":{"id":3666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3663,"mutability":"mutable","name":"self","nameLocation":"13101:4:10","nodeType":"VariableDeclaration","scope":3673,"src":"13077:28:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":3661,"nodeType":"UserDefinedTypeName","pathNode":{"id":3660,"name":"Checkpoint224","nameLocations":["13077:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":3266,"src":"13077:13:10"},"referencedDeclaration":3266,"src":"13077:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3266_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":3662,"nodeType":"ArrayTypeName","src":"13077:15:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$3266_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":3665,"mutability":"mutable","name":"pos","nameLocation":"13115:3:10","nodeType":"VariableDeclaration","scope":3673,"src":"13107:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3664,"name":"uint256","nodeType":"ElementaryTypeName","src":"13107:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13076:43:10"},"returnParameters":{"id":3670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3669,"mutability":"mutable","name":"result","nameLocation":"13188:6:10","nodeType":"VariableDeclaration","scope":3673,"src":"13166:28:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3266_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":3668,"nodeType":"UserDefinedTypeName","pathNode":{"id":3667,"name":"Checkpoint224","nameLocations":["13166:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":3266,"src":"13166:13:10"},"referencedDeclaration":3266,"src":"13166:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$3266_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"src":"13165:30:10"},"scope":4091,"src":"13054:271:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"canonicalName":"Checkpoints.Trace160","id":3678,"members":[{"constant":false,"id":3677,"mutability":"mutable","name":"_checkpoints","nameLocation":"13373:12:10","nodeType":"VariableDeclaration","scope":3678,"src":"13357:28:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":3675,"nodeType":"UserDefinedTypeName","pathNode":{"id":3674,"name":"Checkpoint160","nameLocations":["13357:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":3683,"src":"13357:13:10"},"referencedDeclaration":3683,"src":"13357:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3683_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":3676,"nodeType":"ArrayTypeName","src":"13357:15:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"}],"name":"Trace160","nameLocation":"13338:8:10","nodeType":"StructDefinition","scope":4091,"src":"13331:61:10","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint160","id":3683,"members":[{"constant":false,"id":3680,"mutability":"mutable","name":"_key","nameLocation":"13436:4:10","nodeType":"VariableDeclaration","scope":3683,"src":"13429:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3679,"name":"uint96","nodeType":"ElementaryTypeName","src":"13429:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":3682,"mutability":"mutable","name":"_value","nameLocation":"13458:6:10","nodeType":"VariableDeclaration","scope":3683,"src":"13450:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3681,"name":"uint160","nodeType":"ElementaryTypeName","src":"13450:7:10","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"Checkpoint160","nameLocation":"13405:13:10","nodeType":"StructDefinition","scope":4091,"src":"13398:73:10","visibility":"public"},{"body":{"id":3705,"nodeType":"Block","src":"13774:62:10","statements":[{"expression":{"arguments":[{"expression":{"id":3699,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"13799:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3678_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":3700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13804:12:10","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3677,"src":"13799:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":3701,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3689,"src":"13818:3:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":3702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"13823:5:10","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3698,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[3137,3554,3971],"referencedDeclaration":3971,"src":"13791:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint160_$returns$_t_uint160_$_t_uint160_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint160) returns (uint160,uint160)"}},"id":3703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13791:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint160_$","typeString":"tuple(uint160,uint160)"}},"functionReturnParameters":3697,"id":3704,"nodeType":"Return","src":"13784:45:10"}]},"documentation":{"id":3684,"nodeType":"StructuredDocumentation","src":"13477:162:10","text":" @dev Pushes a (`key`, `value`) pair into a Trace160 so that it is stored as the checkpoint.\n Returns previous value and new value."},"id":3706,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"13653:4:10","nodeType":"FunctionDefinition","parameters":{"id":3692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3687,"mutability":"mutable","name":"self","nameLocation":"13684:4:10","nodeType":"VariableDeclaration","scope":3706,"src":"13667:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3678_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":3686,"nodeType":"UserDefinedTypeName","pathNode":{"id":3685,"name":"Trace160","nameLocations":["13667:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":3678,"src":"13667:8:10"},"referencedDeclaration":3678,"src":"13667:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3678_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":3689,"mutability":"mutable","name":"key","nameLocation":"13705:3:10","nodeType":"VariableDeclaration","scope":3706,"src":"13698:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3688,"name":"uint96","nodeType":"ElementaryTypeName","src":"13698:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":3691,"mutability":"mutable","name":"value","nameLocation":"13726:5:10","nodeType":"VariableDeclaration","scope":3706,"src":"13718:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3690,"name":"uint160","nodeType":"ElementaryTypeName","src":"13718:7:10","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"13657:80:10"},"returnParameters":{"id":3697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3706,"src":"13756:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3693,"name":"uint160","nodeType":"ElementaryTypeName","src":"13756:7:10","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":3696,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3706,"src":"13765:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3695,"name":"uint160","nodeType":"ElementaryTypeName","src":"13765:7:10","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"13755:18:10"},"scope":4091,"src":"13644:192:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3745,"nodeType":"Block","src":"14074:207:10","statements":[{"assignments":[3718],"declarations":[{"constant":false,"id":3718,"mutability":"mutable","name":"len","nameLocation":"14092:3:10","nodeType":"VariableDeclaration","scope":3745,"src":"14084:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3717,"name":"uint256","nodeType":"ElementaryTypeName","src":"14084:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3722,"initialValue":{"expression":{"expression":{"id":3719,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"14098:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3678_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":3720,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14103:12:10","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3677,"src":"14098:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14116:6:10","memberName":"length","nodeType":"MemberAccess","src":"14098:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14084:38:10"},{"assignments":[3724],"declarations":[{"constant":false,"id":3724,"mutability":"mutable","name":"pos","nameLocation":"14140:3:10","nodeType":"VariableDeclaration","scope":3745,"src":"14132:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3723,"name":"uint256","nodeType":"ElementaryTypeName","src":"14132:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3732,"initialValue":{"arguments":[{"expression":{"id":3726,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"14165:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3678_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":3727,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14170:12:10","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3677,"src":"14165:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":3728,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"14184:3:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":3729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14189:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3730,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"14192:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3725,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[3241,3658,4075],"referencedDeclaration":4075,"src":"14146:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14146:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14132:64:10"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3733,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"14213:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3734,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"14220:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14213:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":3738,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"14244:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3678_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":3739,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14249:12:10","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3677,"src":"14244:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":3740,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"14263:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3737,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3256,3673,4090],"referencedDeclaration":4090,"src":"14230:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$3683_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14230:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3683_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":3742,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14268:6:10","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3682,"src":"14230:44:10","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14213:61:10","trueExpression":{"hexValue":"30","id":3736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14226:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":3716,"id":3744,"nodeType":"Return","src":"14206:68:10"}]},"documentation":{"id":3707,"nodeType":"StructuredDocumentation","src":"13842:139:10","text":" @dev Returns the value in the oldest checkpoint with key greater or equal than the search key, or zero if there is none."},"id":3746,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"13995:11:10","nodeType":"FunctionDefinition","parameters":{"id":3713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3710,"mutability":"mutable","name":"self","nameLocation":"14024:4:10","nodeType":"VariableDeclaration","scope":3746,"src":"14007:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3678_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":3709,"nodeType":"UserDefinedTypeName","pathNode":{"id":3708,"name":"Trace160","nameLocations":["14007:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":3678,"src":"14007:8:10"},"referencedDeclaration":3678,"src":"14007:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3678_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":3712,"mutability":"mutable","name":"key","nameLocation":"14037:3:10","nodeType":"VariableDeclaration","scope":3746,"src":"14030:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3711,"name":"uint96","nodeType":"ElementaryTypeName","src":"14030:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"14006:35:10"},"returnParameters":{"id":3716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3746,"src":"14065:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3714,"name":"uint160","nodeType":"ElementaryTypeName","src":"14065:7:10","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"14064:9:10"},"scope":4091,"src":"13986:295:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3787,"nodeType":"Block","src":"14496:209:10","statements":[{"assignments":[3758],"declarations":[{"constant":false,"id":3758,"mutability":"mutable","name":"len","nameLocation":"14514:3:10","nodeType":"VariableDeclaration","scope":3787,"src":"14506:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3757,"name":"uint256","nodeType":"ElementaryTypeName","src":"14506:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3762,"initialValue":{"expression":{"expression":{"id":3759,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"14520:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3678_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":3760,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14525:12:10","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3677,"src":"14520:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14538:6:10","memberName":"length","nodeType":"MemberAccess","src":"14520:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14506:38:10"},{"assignments":[3764],"declarations":[{"constant":false,"id":3764,"mutability":"mutable","name":"pos","nameLocation":"14562:3:10","nodeType":"VariableDeclaration","scope":3787,"src":"14554:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3763,"name":"uint256","nodeType":"ElementaryTypeName","src":"14554:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3772,"initialValue":{"arguments":[{"expression":{"id":3766,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"14587:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3678_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":3767,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14592:12:10","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3677,"src":"14587:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":3768,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"14606:3:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":3769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14611:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3770,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"14614:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3765,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[3189,3606,4023],"referencedDeclaration":4023,"src":"14568:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14568:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14554:64:10"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3773,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"14635:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14642:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14635:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":3778,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"14664:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3678_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":3779,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14669:12:10","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3677,"src":"14664:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3780,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"14683:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14689:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14683:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3777,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3256,3673,4090],"referencedDeclaration":4090,"src":"14650:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$3683_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14650:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3683_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":3784,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14692:6:10","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3682,"src":"14650:48:10","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14635:63:10","trueExpression":{"hexValue":"30","id":3776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14646:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":3756,"id":3786,"nodeType":"Return","src":"14628:70:10"}]},"documentation":{"id":3747,"nodeType":"StructuredDocumentation","src":"14287:116:10","text":" @dev Returns the value in the most recent checkpoint with key lower or equal than the search key."},"id":3788,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"14417:11:10","nodeType":"FunctionDefinition","parameters":{"id":3753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3750,"mutability":"mutable","name":"self","nameLocation":"14446:4:10","nodeType":"VariableDeclaration","scope":3788,"src":"14429:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3678_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":3749,"nodeType":"UserDefinedTypeName","pathNode":{"id":3748,"name":"Trace160","nameLocations":["14429:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":3678,"src":"14429:8:10"},"referencedDeclaration":3678,"src":"14429:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3678_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":3752,"mutability":"mutable","name":"key","nameLocation":"14459:3:10","nodeType":"VariableDeclaration","scope":3788,"src":"14452:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3751,"name":"uint96","nodeType":"ElementaryTypeName","src":"14452:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"14428:35:10"},"returnParameters":{"id":3756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3755,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3788,"src":"14487:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3754,"name":"uint160","nodeType":"ElementaryTypeName","src":"14487:7:10","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"14486:9:10"},"scope":4091,"src":"14408:297:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3817,"nodeType":"Block","src":"14896:135:10","statements":[{"assignments":[3798],"declarations":[{"constant":false,"id":3798,"mutability":"mutable","name":"pos","nameLocation":"14914:3:10","nodeType":"VariableDeclaration","scope":3817,"src":"14906:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3797,"name":"uint256","nodeType":"ElementaryTypeName","src":"14906:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3802,"initialValue":{"expression":{"expression":{"id":3799,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"14920:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3678_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":3800,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14925:12:10","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3677,"src":"14920:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14938:6:10","memberName":"length","nodeType":"MemberAccess","src":"14920:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14906:38:10"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3803,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"14961:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14968:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14961:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":3808,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"14990:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3678_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":3809,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14995:12:10","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3677,"src":"14990:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3810,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"15009:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15015:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15009:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3807,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3256,3673,4090],"referencedDeclaration":4090,"src":"14976:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$3683_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14976:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3683_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":3814,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15018:6:10","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3682,"src":"14976:48:10","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14961:63:10","trueExpression":{"hexValue":"30","id":3806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14972:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":3796,"id":3816,"nodeType":"Return","src":"14954:70:10"}]},"documentation":{"id":3789,"nodeType":"StructuredDocumentation","src":"14711:109:10","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":3818,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"14834:6:10","nodeType":"FunctionDefinition","parameters":{"id":3793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3792,"mutability":"mutable","name":"self","nameLocation":"14858:4:10","nodeType":"VariableDeclaration","scope":3818,"src":"14841:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3678_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":3791,"nodeType":"UserDefinedTypeName","pathNode":{"id":3790,"name":"Trace160","nameLocations":["14841:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":3678,"src":"14841:8:10"},"referencedDeclaration":3678,"src":"14841:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3678_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"14840:23:10"},"returnParameters":{"id":3796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3818,"src":"14887:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3794,"name":"uint160","nodeType":"ElementaryTypeName","src":"14887:7:10","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"14886:9:10"},"scope":4091,"src":"14825:206:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3866,"nodeType":"Block","src":"15398:274:10","statements":[{"assignments":[3832],"declarations":[{"constant":false,"id":3832,"mutability":"mutable","name":"pos","nameLocation":"15416:3:10","nodeType":"VariableDeclaration","scope":3866,"src":"15408:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3831,"name":"uint256","nodeType":"ElementaryTypeName","src":"15408:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3836,"initialValue":{"expression":{"expression":{"id":3833,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"15422:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3678_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":3834,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15427:12:10","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3677,"src":"15422:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15440:6:10","memberName":"length","nodeType":"MemberAccess","src":"15422:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15408:38:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3837,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"15460:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15467:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15460:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3864,"nodeType":"Block","src":"15521:145:10","statements":[{"assignments":[3848],"declarations":[{"constant":false,"id":3848,"mutability":"mutable","name":"ckpt","nameLocation":"15556:4:10","nodeType":"VariableDeclaration","scope":3864,"src":"15535:25:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3683_memory_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":3847,"nodeType":"UserDefinedTypeName","pathNode":{"id":3846,"name":"Checkpoint160","nameLocations":["15535:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":3683,"src":"15535:13:10"},"referencedDeclaration":3683,"src":"15535:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3683_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"id":3856,"initialValue":{"arguments":[{"expression":{"id":3850,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"15577:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3678_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":3851,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15582:12:10","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3677,"src":"15577:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3852,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"15596:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15602:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15596:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3849,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3256,3673,4090],"referencedDeclaration":4090,"src":"15563:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$3683_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":3855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15563:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3683_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"15535:69:10"},{"expression":{"components":[{"hexValue":"74727565","id":3857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15626:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":3858,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"15632:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3683_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":3859,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15637:4:10","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":3680,"src":"15632:9:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"expression":{"id":3860,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"15643:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3683_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":3861,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15648:6:10","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3682,"src":"15643:11:10","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":3862,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15625:30:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint96_$_t_uint160_$","typeString":"tuple(bool,uint96,uint160)"}},"functionReturnParameters":3830,"id":3863,"nodeType":"Return","src":"15618:37:10"}]},"id":3865,"nodeType":"IfStatement","src":"15456:210:10","trueBody":{"id":3845,"nodeType":"Block","src":"15470:45:10","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":3840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15492:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15499:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":3842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15502:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3843,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15491:13:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":3830,"id":3844,"nodeType":"Return","src":"15484:20:10"}]}}]},"documentation":{"id":3819,"nodeType":"StructuredDocumentation","src":"15037:168:10","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":3867,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"15219:16:10","nodeType":"FunctionDefinition","parameters":{"id":3823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3822,"mutability":"mutable","name":"self","nameLocation":"15253:4:10","nodeType":"VariableDeclaration","scope":3867,"src":"15236:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3678_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":3821,"nodeType":"UserDefinedTypeName","pathNode":{"id":3820,"name":"Trace160","nameLocations":["15236:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":3678,"src":"15236:8:10"},"referencedDeclaration":3678,"src":"15236:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3678_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"15235:23:10"},"returnParameters":{"id":3830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3825,"mutability":"mutable","name":"exists","nameLocation":"15324:6:10","nodeType":"VariableDeclaration","scope":3867,"src":"15319:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3824,"name":"bool","nodeType":"ElementaryTypeName","src":"15319:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3827,"mutability":"mutable","name":"_key","nameLocation":"15351:4:10","nodeType":"VariableDeclaration","scope":3867,"src":"15344:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3826,"name":"uint96","nodeType":"ElementaryTypeName","src":"15344:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":3829,"mutability":"mutable","name":"_value","nameLocation":"15377:6:10","nodeType":"VariableDeclaration","scope":3867,"src":"15369:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3828,"name":"uint160","nodeType":"ElementaryTypeName","src":"15369:7:10","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15305:88:10"},"scope":4091,"src":"15210:462:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3880,"nodeType":"Block","src":"15811:48:10","statements":[{"expression":{"expression":{"expression":{"id":3876,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"15828:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3678_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":3877,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15833:12:10","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":3677,"src":"15828:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15846:6:10","memberName":"length","nodeType":"MemberAccess","src":"15828:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3875,"id":3879,"nodeType":"Return","src":"15821:31:10"}]},"documentation":{"id":3868,"nodeType":"StructuredDocumentation","src":"15678:57:10","text":" @dev Returns the number of checkpoint."},"id":3881,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"15749:6:10","nodeType":"FunctionDefinition","parameters":{"id":3872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3871,"mutability":"mutable","name":"self","nameLocation":"15773:4:10","nodeType":"VariableDeclaration","scope":3881,"src":"15756:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3678_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":3870,"nodeType":"UserDefinedTypeName","pathNode":{"id":3869,"name":"Trace160","nameLocations":["15756:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":3678,"src":"15756:8:10"},"referencedDeclaration":3678,"src":"15756:8:10","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$3678_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"15755:23:10"},"returnParameters":{"id":3875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3881,"src":"15802:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3873,"name":"uint256","nodeType":"ElementaryTypeName","src":"15802:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15801:9:10"},"scope":4091,"src":"15740:119:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3970,"nodeType":"Block","src":"16174:720:10","statements":[{"assignments":[3898],"declarations":[{"constant":false,"id":3898,"mutability":"mutable","name":"pos","nameLocation":"16192:3:10","nodeType":"VariableDeclaration","scope":3970,"src":"16184:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3897,"name":"uint256","nodeType":"ElementaryTypeName","src":"16184:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3901,"initialValue":{"expression":{"id":3899,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"16198:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":3900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16203:6:10","memberName":"length","nodeType":"MemberAccess","src":"16198:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16184:25:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3902,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3898,"src":"16224:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16230:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16224:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3968,"nodeType":"Block","src":"16780:108:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":3959,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"16825:3:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":3960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"16838:5:10","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3958,"name":"Checkpoint160","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"16804:13:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint160_$3683_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint160 storage pointer)"}},"id":3961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["16819:4:10","16830:6:10"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"16804:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3683_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint160_$3683_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}],"expression":{"id":3955,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"16794:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16799:4:10","memberName":"push","nodeType":"MemberAccess","src":"16794:9:10","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint160_$3683_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,struct Checkpoints.Checkpoint160 storage ref)"}},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16794:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3963,"nodeType":"ExpressionStatement","src":"16794:52:10"},{"expression":{"components":[{"hexValue":"30","id":3964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16868:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"16871:5:10","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":3966,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16867:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint160_$","typeString":"tuple(int_const 0,uint160)"}},"functionReturnParameters":3896,"id":3967,"nodeType":"Return","src":"16860:17:10"}]},"id":3969,"nodeType":"IfStatement","src":"16220:668:10","trueBody":{"id":3954,"nodeType":"Block","src":"16233:541:10","statements":[{"assignments":[3907],"declarations":[{"constant":false,"id":3907,"mutability":"mutable","name":"last","nameLocation":"16320:4:10","nodeType":"VariableDeclaration","scope":3954,"src":"16299:25:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3683_memory_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":3906,"nodeType":"UserDefinedTypeName","pathNode":{"id":3905,"name":"Checkpoint160","nameLocations":["16299:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":3683,"src":"16299:13:10"},"referencedDeclaration":3683,"src":"16299:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3683_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"id":3914,"initialValue":{"arguments":[{"id":3909,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"16341:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3910,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3898,"src":"16347:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16353:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16347:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3908,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3256,3673,4090],"referencedDeclaration":4090,"src":"16327:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$3683_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16327:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3683_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"16299:56:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3916,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"16430:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3683_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":3917,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16435:4:10","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":3680,"src":"16430:9:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3918,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"16443:3:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"16430:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436865636b706f696e743a20696e76616c6964206b6579","id":3920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16448:25:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df","typeString":"literal_string \"Checkpoint: invalid key\""},"value":"Checkpoint: invalid key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df","typeString":"literal_string \"Checkpoint: invalid key\""}],"id":3915,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16422:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16422:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3922,"nodeType":"ExpressionStatement","src":"16422:52:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3923,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"16538:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3683_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":3924,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16543:4:10","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":3680,"src":"16538:9:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3925,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"16551:3:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"16538:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3947,"nodeType":"Block","src":"16638:85:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":3942,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"16687:3:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":3943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"16700:5:10","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3941,"name":"Checkpoint160","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"16666:13:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint160_$3683_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint160 storage pointer)"}},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["16681:4:10","16692:6:10"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"16666:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3683_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint160_$3683_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}],"expression":{"id":3938,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"16656:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16661:4:10","memberName":"push","nodeType":"MemberAccess","src":"16656:9:10","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint160_$3683_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,struct Checkpoints.Checkpoint160 storage ref)"}},"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16656:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3946,"nodeType":"ExpressionStatement","src":"16656:52:10"}]},"id":3948,"nodeType":"IfStatement","src":"16534:189:10","trueBody":{"id":3937,"nodeType":"Block","src":"16556:76:10","statements":[{"expression":{"id":3935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":3928,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"16588:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3929,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3898,"src":"16594:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16600:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16594:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3927,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3256,3673,4090],"referencedDeclaration":4090,"src":"16574:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$3683_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16574:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3683_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":3933,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16603:6:10","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3682,"src":"16574:35:10","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"16612:5:10","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"16574:43:10","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":3936,"nodeType":"ExpressionStatement","src":"16574:43:10"}]}},{"expression":{"components":[{"expression":{"id":3949,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"16744:4:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3683_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":3950,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16749:6:10","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3682,"src":"16744:11:10","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":3951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"16757:5:10","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":3952,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16743:20:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint160_$","typeString":"tuple(uint160,uint160)"}},"functionReturnParameters":3896,"id":3953,"nodeType":"Return","src":"16736:27:10"}]}}]},"documentation":{"id":3882,"nodeType":"StructuredDocumentation","src":"15865:165:10","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":3971,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"16044:7:10","nodeType":"FunctionDefinition","parameters":{"id":3891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3886,"mutability":"mutable","name":"self","nameLocation":"16085:4:10","nodeType":"VariableDeclaration","scope":3971,"src":"16061:28:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":3884,"nodeType":"UserDefinedTypeName","pathNode":{"id":3883,"name":"Checkpoint160","nameLocations":["16061:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":3683,"src":"16061:13:10"},"referencedDeclaration":3683,"src":"16061:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3683_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":3885,"nodeType":"ArrayTypeName","src":"16061:15:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":3888,"mutability":"mutable","name":"key","nameLocation":"16106:3:10","nodeType":"VariableDeclaration","scope":3971,"src":"16099:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3887,"name":"uint96","nodeType":"ElementaryTypeName","src":"16099:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":3890,"mutability":"mutable","name":"value","nameLocation":"16127:5:10","nodeType":"VariableDeclaration","scope":3971,"src":"16119:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3889,"name":"uint160","nodeType":"ElementaryTypeName","src":"16119:7:10","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"16051:87:10"},"returnParameters":{"id":3896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3971,"src":"16156:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3892,"name":"uint160","nodeType":"ElementaryTypeName","src":"16156:7:10","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":3895,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3971,"src":"16165:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3894,"name":"uint160","nodeType":"ElementaryTypeName","src":"16165:7:10","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"16155:18:10"},"scope":4091,"src":"16035:859:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4022,"nodeType":"Block","src":"17391:267:10","statements":[{"body":{"id":4018,"nodeType":"Block","src":"17420:211:10","statements":[{"assignments":[3991],"declarations":[{"constant":false,"id":3991,"mutability":"mutable","name":"mid","nameLocation":"17442:3:10","nodeType":"VariableDeclaration","scope":4018,"src":"17434:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3990,"name":"uint256","nodeType":"ElementaryTypeName","src":"17434:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3997,"initialValue":{"arguments":[{"id":3994,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"17461:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3995,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"17466:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3992,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5918,"src":"17448:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5918_$","typeString":"type(library Math)"}},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17453:7:10","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5119,"src":"17448:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17448:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17434:37:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":4004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3999,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"17503:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"id":4000,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3991,"src":"17509:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3998,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3256,3673,4090],"referencedDeclaration":4090,"src":"17489:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$3683_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17489:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3683_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":4002,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17514:4:10","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":3680,"src":"17489:29:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4003,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"17521:3:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"17489:35:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4016,"nodeType":"Block","src":"17575:46:10","statements":[{"expression":{"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4010,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"17593:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4011,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3991,"src":"17599:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17605:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17599:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17593:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4015,"nodeType":"ExpressionStatement","src":"17593:13:10"}]},"id":4017,"nodeType":"IfStatement","src":"17485:136:10","trueBody":{"id":4009,"nodeType":"Block","src":"17526:43:10","statements":[{"expression":{"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4005,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"17544:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4006,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3991,"src":"17551:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17544:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4008,"nodeType":"ExpressionStatement","src":"17544:10:10"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3987,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"17408:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3988,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"17414:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17408:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4019,"nodeType":"WhileStatement","src":"17401:230:10"},{"expression":{"id":4020,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"17647:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3986,"id":4021,"nodeType":"Return","src":"17640:11:10"}]},"documentation":{"id":3972,"nodeType":"StructuredDocumentation","src":"16900:320:10","text":" @dev Return the index of the oldest checkpoint whose key is greater than the search key, or `high` if there is none.\n `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":4023,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"17234:18:10","nodeType":"FunctionDefinition","parameters":{"id":3983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3976,"mutability":"mutable","name":"self","nameLocation":"17286:4:10","nodeType":"VariableDeclaration","scope":4023,"src":"17262:28:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":3974,"nodeType":"UserDefinedTypeName","pathNode":{"id":3973,"name":"Checkpoint160","nameLocations":["17262:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":3683,"src":"17262:13:10"},"referencedDeclaration":3683,"src":"17262:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3683_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":3975,"nodeType":"ArrayTypeName","src":"17262:15:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":3978,"mutability":"mutable","name":"key","nameLocation":"17307:3:10","nodeType":"VariableDeclaration","scope":4023,"src":"17300:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3977,"name":"uint96","nodeType":"ElementaryTypeName","src":"17300:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":3980,"mutability":"mutable","name":"low","nameLocation":"17328:3:10","nodeType":"VariableDeclaration","scope":4023,"src":"17320:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3979,"name":"uint256","nodeType":"ElementaryTypeName","src":"17320:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3982,"mutability":"mutable","name":"high","nameLocation":"17349:4:10","nodeType":"VariableDeclaration","scope":4023,"src":"17341:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3981,"name":"uint256","nodeType":"ElementaryTypeName","src":"17341:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17252:107:10"},"returnParameters":{"id":3986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4023,"src":"17382:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3984,"name":"uint256","nodeType":"ElementaryTypeName","src":"17382:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17381:9:10"},"scope":4091,"src":"17225:433:10","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4074,"nodeType":"Block","src":"18164:267:10","statements":[{"body":{"id":4070,"nodeType":"Block","src":"18193:211:10","statements":[{"assignments":[4043],"declarations":[{"constant":false,"id":4043,"mutability":"mutable","name":"mid","nameLocation":"18215:3:10","nodeType":"VariableDeclaration","scope":4070,"src":"18207:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4042,"name":"uint256","nodeType":"ElementaryTypeName","src":"18207:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4049,"initialValue":{"arguments":[{"id":4046,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"18234:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4047,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4034,"src":"18239:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4044,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5918,"src":"18221:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5918_$","typeString":"type(library Math)"}},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18226:7:10","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5119,"src":"18221:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18221:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18207:37:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4051,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4028,"src":"18276:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"id":4052,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4043,"src":"18282:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4050,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3256,3673,4090],"referencedDeclaration":4090,"src":"18262:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$3683_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18262:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3683_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":4054,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18287:4:10","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":3680,"src":"18262:29:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4055,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"18294:3:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"18262:35:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4068,"nodeType":"Block","src":"18351:43:10","statements":[{"expression":{"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4064,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4034,"src":"18369:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4065,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4043,"src":"18376:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18369:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4067,"nodeType":"ExpressionStatement","src":"18369:10:10"}]},"id":4069,"nodeType":"IfStatement","src":"18258:136:10","trueBody":{"id":4063,"nodeType":"Block","src":"18299:46:10","statements":[{"expression":{"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4057,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"18317:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4058,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4043,"src":"18323:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18329:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18323:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18317:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4062,"nodeType":"ExpressionStatement","src":"18317:13:10"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4039,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"18181:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4040,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4034,"src":"18187:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18181:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4071,"nodeType":"WhileStatement","src":"18174:230:10"},{"expression":{"id":4072,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4034,"src":"18420:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4038,"id":4073,"nodeType":"Return","src":"18413:11:10"}]},"documentation":{"id":4024,"nodeType":"StructuredDocumentation","src":"17664:329:10","text":" @dev Return the index of the oldest checkpoint whose key is greater or equal than the search key, or `high` if there is none.\n `low` and `high` define a section where to do the search, with inclusive `low` and exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":4075,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"18007:18:10","nodeType":"FunctionDefinition","parameters":{"id":4035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4028,"mutability":"mutable","name":"self","nameLocation":"18059:4:10","nodeType":"VariableDeclaration","scope":4075,"src":"18035:28:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":4026,"nodeType":"UserDefinedTypeName","pathNode":{"id":4025,"name":"Checkpoint160","nameLocations":["18035:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":3683,"src":"18035:13:10"},"referencedDeclaration":3683,"src":"18035:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3683_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":4027,"nodeType":"ArrayTypeName","src":"18035:15:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":4030,"mutability":"mutable","name":"key","nameLocation":"18080:3:10","nodeType":"VariableDeclaration","scope":4075,"src":"18073:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4029,"name":"uint96","nodeType":"ElementaryTypeName","src":"18073:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":4032,"mutability":"mutable","name":"low","nameLocation":"18101:3:10","nodeType":"VariableDeclaration","scope":4075,"src":"18093:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4031,"name":"uint256","nodeType":"ElementaryTypeName","src":"18093:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4034,"mutability":"mutable","name":"high","nameLocation":"18122:4:10","nodeType":"VariableDeclaration","scope":4075,"src":"18114:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4033,"name":"uint256","nodeType":"ElementaryTypeName","src":"18114:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18025:107:10"},"returnParameters":{"id":4038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4075,"src":"18155:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4036,"name":"uint256","nodeType":"ElementaryTypeName","src":"18155:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18154:9:10"},"scope":4091,"src":"17998:433:10","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4089,"nodeType":"Block","src":"18720:125:10","statements":[{"AST":{"nodeType":"YulBlock","src":"18739:100:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18760:1:10","type":"","value":"0"},{"name":"self.slot","nodeType":"YulIdentifier","src":"18763:9:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18753:6:10"},"nodeType":"YulFunctionCall","src":"18753:20:10"},"nodeType":"YulExpressionStatement","src":"18753:20:10"},{"nodeType":"YulAssignment","src":"18786:43:10","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18815:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18818:4:10","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"18805:9:10"},"nodeType":"YulFunctionCall","src":"18805:18:10"},{"name":"pos","nodeType":"YulIdentifier","src":"18825:3:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18801:3:10"},"nodeType":"YulFunctionCall","src":"18801:28:10"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"18786:11:10"}]}]},"evmVersion":"london","externalReferences":[{"declaration":4082,"isOffset":false,"isSlot":false,"src":"18825:3:10","valueSize":1},{"declaration":4086,"isOffset":false,"isSlot":true,"src":"18786:11:10","suffix":"slot","valueSize":1},{"declaration":4080,"isOffset":false,"isSlot":true,"src":"18763:9:10","suffix":"slot","valueSize":1}],"id":4088,"nodeType":"InlineAssembly","src":"18730:109:10"}]},"documentation":{"id":4076,"nodeType":"StructuredDocumentation","src":"18437:132:10","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":4090,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"18583:13:10","nodeType":"FunctionDefinition","parameters":{"id":4083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4080,"mutability":"mutable","name":"self","nameLocation":"18621:4:10","nodeType":"VariableDeclaration","scope":4090,"src":"18597:28:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":4078,"nodeType":"UserDefinedTypeName","pathNode":{"id":4077,"name":"Checkpoint160","nameLocations":["18597:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":3683,"src":"18597:13:10"},"referencedDeclaration":3683,"src":"18597:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3683_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":4079,"nodeType":"ArrayTypeName","src":"18597:15:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$3683_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":4082,"mutability":"mutable","name":"pos","nameLocation":"18635:3:10","nodeType":"VariableDeclaration","scope":4090,"src":"18627:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4081,"name":"uint256","nodeType":"ElementaryTypeName","src":"18627:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18596:43:10"},"returnParameters":{"id":4087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4086,"mutability":"mutable","name":"result","nameLocation":"18708:6:10","nodeType":"VariableDeclaration","scope":4090,"src":"18686:28:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3683_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":4085,"nodeType":"UserDefinedTypeName","pathNode":{"id":4084,"name":"Checkpoint160","nameLocations":["18686:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":3683,"src":"18686:13:10"},"referencedDeclaration":3683,"src":"18686:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$3683_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"src":"18685:30:10"},"scope":4091,"src":"18574:271:10","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4092,"src":"708:18139:10","usedErrors":[]}],"src":"193:18655:10"},"id":10},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[4113]},"id":4114,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4093,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:11"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":4094,"nodeType":"StructuredDocumentation","src":"111:496:11","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":4113,"linearizedBaseContracts":[4113],"name":"Context","nameLocation":"626:7:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":4102,"nodeType":"Block","src":"702:34:11","statements":[{"expression":{"expression":{"id":4099,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:11","memberName":"sender","nodeType":"MemberAccess","src":"719:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4098,"id":4101,"nodeType":"Return","src":"712:17:11"}]},"id":4103,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:11","nodeType":"FunctionDefinition","parameters":{"id":4095,"nodeType":"ParameterList","parameters":[],"src":"659:2:11"},"returnParameters":{"id":4098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4097,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4103,"src":"693:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4096,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:11"},"scope":4113,"src":"640:96:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":4111,"nodeType":"Block","src":"809:32:11","statements":[{"expression":{"expression":{"id":4108,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:11","memberName":"data","nodeType":"MemberAccess","src":"826:8:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":4107,"id":4110,"nodeType":"Return","src":"819:15:11"}]},"id":4112,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:11","nodeType":"FunctionDefinition","parameters":{"id":4104,"nodeType":"ParameterList","parameters":[],"src":"759:2:11"},"returnParameters":{"id":4107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4112,"src":"793:14:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4105,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:11"},"scope":4113,"src":"742:99:11","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":4114,"src":"608:235:11","usedErrors":[]}],"src":"86:758:11"},"id":11},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5918],"Strings":[4288]},"id":4289,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4115,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:12"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":4116,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4289,"sourceUnit":5919,"src":"126:25:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":4117,"nodeType":"StructuredDocumentation","src":"153:34:12","text":" @dev String operations."},"fullyImplemented":true,"id":4288,"linearizedBaseContracts":[4288],"name":"Strings","nameLocation":"196:7:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":4120,"mutability":"constant","name":"_SYMBOLS","nameLocation":"235:8:12","nodeType":"VariableDeclaration","scope":4288,"src":"210:54:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":4118,"name":"bytes16","nodeType":"ElementaryTypeName","src":"210:7:12","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":4119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"246:18:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":4123,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"293:15:12","nodeType":"VariableDeclaration","scope":4288,"src":"270:43:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4121,"name":"uint8","nodeType":"ElementaryTypeName","src":"270:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":4122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"311:2:12","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":4170,"nodeType":"Block","src":"486:625:12","statements":[{"id":4169,"nodeType":"UncheckedBlock","src":"496:609:12","statements":[{"assignments":[4132],"declarations":[{"constant":false,"id":4132,"mutability":"mutable","name":"length","nameLocation":"528:6:12","nodeType":"VariableDeclaration","scope":4169,"src":"520:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4131,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4139,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4126,"src":"548:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4133,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5918,"src":"537:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5918_$","typeString":"type(library Math)"}},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"542:5:12","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5755,"src":"537:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"537:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"537:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"520:38:12"},{"assignments":[4141],"declarations":[{"constant":false,"id":4141,"mutability":"mutable","name":"buffer","nameLocation":"586:6:12","nodeType":"VariableDeclaration","scope":4169,"src":"572:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4140,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":4146,"initialValue":{"arguments":[{"id":4144,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4132,"src":"606:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"595:10:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":4142,"name":"string","nodeType":"ElementaryTypeName","src":"599:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"595:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"572:41:12"},{"assignments":[4148],"declarations":[{"constant":false,"id":4148,"mutability":"mutable","name":"ptr","nameLocation":"635:3:12","nodeType":"VariableDeclaration","scope":4169,"src":"627:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4147,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4149,"nodeType":"VariableDeclarationStatement","src":"627:11:12"},{"AST":{"nodeType":"YulBlock","src":"708:67:12","statements":[{"nodeType":"YulAssignment","src":"726:35:12","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"737:6:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"749:2:12","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"753:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"745:3:12"},"nodeType":"YulFunctionCall","src":"745:15:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"733:3:12"},"nodeType":"YulFunctionCall","src":"733:28:12"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"726:3:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":4141,"isOffset":false,"isSlot":false,"src":"737:6:12","valueSize":1},{"declaration":4132,"isOffset":false,"isSlot":false,"src":"753:6:12","valueSize":1},{"declaration":4148,"isOffset":false,"isSlot":false,"src":"726:3:12","valueSize":1}],"id":4150,"nodeType":"InlineAssembly","src":"699:76:12"},{"body":{"id":4165,"nodeType":"Block","src":"801:267:12","statements":[{"expression":{"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"819:5:12","subExpression":{"id":4152,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"819:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4154,"nodeType":"ExpressionStatement","src":"819:5:12"},{"AST":{"nodeType":"YulBlock","src":"902:84:12","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"932:3:12"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"946:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"953:2:12","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"942:3:12"},"nodeType":"YulFunctionCall","src":"942:14:12"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"958:8:12"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"937:4:12"},"nodeType":"YulFunctionCall","src":"937:30:12"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"924:7:12"},"nodeType":"YulFunctionCall","src":"924:44:12"},"nodeType":"YulExpressionStatement","src":"924:44:12"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":4120,"isOffset":false,"isSlot":false,"src":"958:8:12","valueSize":1},{"declaration":4148,"isOffset":false,"isSlot":false,"src":"932:3:12","valueSize":1},{"declaration":4126,"isOffset":false,"isSlot":false,"src":"946:5:12","valueSize":1}],"id":4155,"nodeType":"InlineAssembly","src":"893:93:12"},{"expression":{"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4126,"src":"1003:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":4157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1012:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1003:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4159,"nodeType":"ExpressionStatement","src":"1003:11:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4126,"src":"1036:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1036:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4164,"nodeType":"IfStatement","src":"1032:21:12","trueBody":{"id":4163,"nodeType":"Break","src":"1048:5:12"}}]},"condition":{"hexValue":"74727565","id":4151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"795:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":4166,"nodeType":"WhileStatement","src":"788:280:12"},{"expression":{"id":4167,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"1088:6:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4130,"id":4168,"nodeType":"Return","src":"1081:13:12"}]}]},"documentation":{"id":4124,"nodeType":"StructuredDocumentation","src":"320:90:12","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":4171,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"424:8:12","nodeType":"FunctionDefinition","parameters":{"id":4127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4126,"mutability":"mutable","name":"value","nameLocation":"441:5:12","nodeType":"VariableDeclaration","scope":4171,"src":"433:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4125,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"432:15:12"},"returnParameters":{"id":4130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4171,"src":"471:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4128,"name":"string","nodeType":"ElementaryTypeName","src":"471:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"470:15:12"},"scope":4288,"src":"415:696:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4190,"nodeType":"Block","src":"1290:100:12","statements":[{"id":4189,"nodeType":"UncheckedBlock","src":"1300:84:12","statements":[{"expression":{"arguments":[{"id":4180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4174,"src":"1343:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4174,"src":"1362:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4181,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5918,"src":"1350:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5918_$","typeString":"type(library Math)"}},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1355:6:12","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5878,"src":"1350:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1350:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1350:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4179,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4191,4267,4287],"referencedDeclaration":4267,"src":"1331:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1331:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4178,"id":4188,"nodeType":"Return","src":"1324:49:12"}]}]},"documentation":{"id":4172,"nodeType":"StructuredDocumentation","src":"1117:94:12","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":4191,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1225:11:12","nodeType":"FunctionDefinition","parameters":{"id":4175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4174,"mutability":"mutable","name":"value","nameLocation":"1245:5:12","nodeType":"VariableDeclaration","scope":4191,"src":"1237:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4173,"name":"uint256","nodeType":"ElementaryTypeName","src":"1237:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1236:15:12"},"returnParameters":{"id":4178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4191,"src":"1275:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4176,"name":"string","nodeType":"ElementaryTypeName","src":"1275:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1274:15:12"},"scope":4288,"src":"1216:174:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4266,"nodeType":"Block","src":"1603:347:12","statements":[{"assignments":[4202],"declarations":[{"constant":false,"id":4202,"mutability":"mutable","name":"buffer","nameLocation":"1626:6:12","nodeType":"VariableDeclaration","scope":4266,"src":"1613:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4201,"name":"bytes","nodeType":"ElementaryTypeName","src":"1613:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4211,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4206,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4196,"src":"1649:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1645:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":4208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1658:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1645:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1635:9:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4203,"name":"bytes","nodeType":"ElementaryTypeName","src":"1639:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1635:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1613:47:12"},{"expression":{"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4212,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"1670:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4214,"indexExpression":{"hexValue":"30","id":4213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1670:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1682:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1670:15:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4217,"nodeType":"ExpressionStatement","src":"1670:15:12"},{"expression":{"id":4222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4218,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"1695:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4220,"indexExpression":{"hexValue":"31","id":4219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1702:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1695:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":4221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1707:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1695:15:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4223,"nodeType":"ExpressionStatement","src":"1695:15:12"},{"body":{"id":4252,"nodeType":"Block","src":"1765:83:12","statements":[{"expression":{"id":4246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4238,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"1779:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4240,"indexExpression":{"id":4239,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"1786:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1779:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4241,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4120,"src":"1791:8:12","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":4245,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"1800:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":4243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:3:12","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1800:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1791:21:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1779:33:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4247,"nodeType":"ExpressionStatement","src":"1779:33:12"},{"expression":{"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"1826:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1836:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1826:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4251,"nodeType":"ExpressionStatement","src":"1826:11:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4232,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"1753:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1757:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1753:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4253,"initializationExpression":{"assignments":[4225],"declarations":[{"constant":false,"id":4225,"mutability":"mutable","name":"i","nameLocation":"1733:1:12","nodeType":"VariableDeclaration","scope":4253,"src":"1725:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4224,"name":"uint256","nodeType":"ElementaryTypeName","src":"1725:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4231,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1737:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4227,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4196,"src":"1741:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1737:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1750:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1737:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1725:26:12"},"loopExpression":{"expression":{"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1760:3:12","subExpression":{"id":4235,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"1762:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4237,"nodeType":"ExpressionStatement","src":"1760:3:12"},"nodeType":"ForStatement","src":"1720:128:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"1865:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":4258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1877:34:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":4254,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1857:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1857:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4260,"nodeType":"ExpressionStatement","src":"1857:55:12"},{"expression":{"arguments":[{"id":4263,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"1936:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1929:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4261,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:12","typeDescriptions":{}}},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4200,"id":4265,"nodeType":"Return","src":"1922:21:12"}]},"documentation":{"id":4192,"nodeType":"StructuredDocumentation","src":"1396:112:12","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":4267,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1522:11:12","nodeType":"FunctionDefinition","parameters":{"id":4197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4194,"mutability":"mutable","name":"value","nameLocation":"1542:5:12","nodeType":"VariableDeclaration","scope":4267,"src":"1534:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4193,"name":"uint256","nodeType":"ElementaryTypeName","src":"1534:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4196,"mutability":"mutable","name":"length","nameLocation":"1557:6:12","nodeType":"VariableDeclaration","scope":4267,"src":"1549:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4195,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1533:31:12"},"returnParameters":{"id":4200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4267,"src":"1588:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4198,"name":"string","nodeType":"ElementaryTypeName","src":"1588:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1587:15:12"},"scope":4288,"src":"1513:437:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4286,"nodeType":"Block","src":"2175:76:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":4280,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"2220:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2212:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4278,"name":"uint160","nodeType":"ElementaryTypeName","src":"2212:7:12","typeDescriptions":{}}},"id":4281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2212:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2204:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4276,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:12","typeDescriptions":{}}},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2204:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4283,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"2228:15:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4275,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4191,4267,4287],"referencedDeclaration":4267,"src":"2192:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2192:52:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4274,"id":4285,"nodeType":"Return","src":"2185:59:12"}]},"documentation":{"id":4268,"nodeType":"StructuredDocumentation","src":"1956:141:12","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":4287,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2111:11:12","nodeType":"FunctionDefinition","parameters":{"id":4271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4270,"mutability":"mutable","name":"addr","nameLocation":"2131:4:12","nodeType":"VariableDeclaration","scope":4287,"src":"2123:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4269,"name":"address","nodeType":"ElementaryTypeName","src":"2123:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2122:14:12"},"returnParameters":{"id":4274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4287,"src":"2160:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4272,"name":"string","nodeType":"ElementaryTypeName","src":"2160:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2159:15:12"},"scope":4288,"src":"2102:149:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4289,"src":"188:2065:12","usedErrors":[]}],"src":"101:2153:12"},"id":12},"@openzeppelin/contracts/utils/Timers.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Timers.sol","exportedSymbols":{"Timers":[4502]},"id":4503,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4290,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"85:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"Timers","contractDependencies":[],"contractKind":"library","documentation":{"id":4291,"nodeType":"StructuredDocumentation","src":"110:57:13","text":" @dev Tooling for timepoints, timers and delays"},"fullyImplemented":true,"id":4502,"linearizedBaseContracts":[4502],"name":"Timers","nameLocation":"176:6:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Timers.Timestamp","id":4294,"members":[{"constant":false,"id":4293,"mutability":"mutable","name":"_deadline","nameLocation":"223:9:13","nodeType":"VariableDeclaration","scope":4294,"src":"216:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4292,"name":"uint64","nodeType":"ElementaryTypeName","src":"216:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"Timestamp","nameLocation":"196:9:13","nodeType":"StructDefinition","scope":4502,"src":"189:50:13","visibility":"public"},{"body":{"id":4305,"nodeType":"Block","src":"321:39:13","statements":[{"expression":{"expression":{"id":4302,"name":"timer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"338:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_Timestamp_$4294_memory_ptr","typeString":"struct Timers.Timestamp memory"}},"id":4303,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"344:9:13","memberName":"_deadline","nodeType":"MemberAccess","referencedDeclaration":4293,"src":"338:15:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":4301,"id":4304,"nodeType":"Return","src":"331:22:13"}]},"id":4306,"implemented":true,"kind":"function","modifiers":[],"name":"getDeadline","nameLocation":"254:11:13","nodeType":"FunctionDefinition","parameters":{"id":4298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4297,"mutability":"mutable","name":"timer","nameLocation":"283:5:13","nodeType":"VariableDeclaration","scope":4306,"src":"266:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Timestamp_$4294_memory_ptr","typeString":"struct Timers.Timestamp"},"typeName":{"id":4296,"nodeType":"UserDefinedTypeName","pathNode":{"id":4295,"name":"Timestamp","nameLocations":["266:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":4294,"src":"266:9:13"},"referencedDeclaration":4294,"src":"266:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_Timestamp_$4294_storage_ptr","typeString":"struct Timers.Timestamp"}},"visibility":"internal"}],"src":"265:24:13"},"returnParameters":{"id":4301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4306,"src":"313:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4299,"name":"uint64","nodeType":"ElementaryTypeName","src":"313:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"312:8:13"},"scope":4502,"src":"245:115:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4320,"nodeType":"Block","src":"439:44:13","statements":[{"expression":{"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4314,"name":"timer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"449:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_Timestamp_$4294_storage_ptr","typeString":"struct Timers.Timestamp storage pointer"}},"id":4316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"455:9:13","memberName":"_deadline","nodeType":"MemberAccess","referencedDeclaration":4293,"src":"449:15:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4317,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"467:9:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"449:27:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4319,"nodeType":"ExpressionStatement","src":"449:27:13"}]},"id":4321,"implemented":true,"kind":"function","modifiers":[],"name":"setDeadline","nameLocation":"375:11:13","nodeType":"FunctionDefinition","parameters":{"id":4312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4309,"mutability":"mutable","name":"timer","nameLocation":"405:5:13","nodeType":"VariableDeclaration","scope":4321,"src":"387:23:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Timestamp_$4294_storage_ptr","typeString":"struct Timers.Timestamp"},"typeName":{"id":4308,"nodeType":"UserDefinedTypeName","pathNode":{"id":4307,"name":"Timestamp","nameLocations":["387:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":4294,"src":"387:9:13"},"referencedDeclaration":4294,"src":"387:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_Timestamp_$4294_storage_ptr","typeString":"struct Timers.Timestamp"}},"visibility":"internal"},{"constant":false,"id":4311,"mutability":"mutable","name":"timestamp","nameLocation":"419:9:13","nodeType":"VariableDeclaration","scope":4321,"src":"412:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4310,"name":"uint64","nodeType":"ElementaryTypeName","src":"412:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"386:43:13"},"returnParameters":{"id":4313,"nodeType":"ParameterList","parameters":[],"src":"439:0:13"},"scope":4502,"src":"366:117:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4333,"nodeType":"Block","src":"538:36:13","statements":[{"expression":{"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4327,"name":"timer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"548:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_Timestamp_$4294_storage_ptr","typeString":"struct Timers.Timestamp storage pointer"}},"id":4329,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"554:9:13","memberName":"_deadline","nodeType":"MemberAccess","referencedDeclaration":4293,"src":"548:15:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"566:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"548:19:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4332,"nodeType":"ExpressionStatement","src":"548:19:13"}]},"id":4334,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"498:5:13","nodeType":"FunctionDefinition","parameters":{"id":4325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4324,"mutability":"mutable","name":"timer","nameLocation":"522:5:13","nodeType":"VariableDeclaration","scope":4334,"src":"504:23:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Timestamp_$4294_storage_ptr","typeString":"struct Timers.Timestamp"},"typeName":{"id":4323,"nodeType":"UserDefinedTypeName","pathNode":{"id":4322,"name":"Timestamp","nameLocations":["504:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":4294,"src":"504:9:13"},"referencedDeclaration":4294,"src":"504:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_Timestamp_$4294_storage_ptr","typeString":"struct Timers.Timestamp"}},"visibility":"internal"}],"src":"503:25:13"},"returnParameters":{"id":4326,"nodeType":"ParameterList","parameters":[],"src":"538:0:13"},"scope":4502,"src":"489:85:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4347,"nodeType":"Block","src":"650:44:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4342,"name":"timer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"667:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_Timestamp_$4294_memory_ptr","typeString":"struct Timers.Timestamp memory"}},"id":4343,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"673:9:13","memberName":"_deadline","nodeType":"MemberAccess","referencedDeclaration":4293,"src":"667:15:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"686:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"667:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4341,"id":4346,"nodeType":"Return","src":"660:27:13"}]},"id":4348,"implemented":true,"kind":"function","modifiers":[],"name":"isUnset","nameLocation":"589:7:13","nodeType":"FunctionDefinition","parameters":{"id":4338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4337,"mutability":"mutable","name":"timer","nameLocation":"614:5:13","nodeType":"VariableDeclaration","scope":4348,"src":"597:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Timestamp_$4294_memory_ptr","typeString":"struct Timers.Timestamp"},"typeName":{"id":4336,"nodeType":"UserDefinedTypeName","pathNode":{"id":4335,"name":"Timestamp","nameLocations":["597:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":4294,"src":"597:9:13"},"referencedDeclaration":4294,"src":"597:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_Timestamp_$4294_storage_ptr","typeString":"struct Timers.Timestamp"}},"visibility":"internal"}],"src":"596:24:13"},"returnParameters":{"id":4341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4348,"src":"644:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4339,"name":"bool","nodeType":"ElementaryTypeName","src":"644:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"643:6:13"},"scope":4502,"src":"580:114:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4361,"nodeType":"Block","src":"772:43:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4356,"name":"timer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"789:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_Timestamp_$4294_memory_ptr","typeString":"struct Timers.Timestamp memory"}},"id":4357,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"795:9:13","memberName":"_deadline","nodeType":"MemberAccess","referencedDeclaration":4293,"src":"789:15:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"807:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"789:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4355,"id":4360,"nodeType":"Return","src":"782:26:13"}]},"id":4362,"implemented":true,"kind":"function","modifiers":[],"name":"isStarted","nameLocation":"709:9:13","nodeType":"FunctionDefinition","parameters":{"id":4352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4351,"mutability":"mutable","name":"timer","nameLocation":"736:5:13","nodeType":"VariableDeclaration","scope":4362,"src":"719:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Timestamp_$4294_memory_ptr","typeString":"struct Timers.Timestamp"},"typeName":{"id":4350,"nodeType":"UserDefinedTypeName","pathNode":{"id":4349,"name":"Timestamp","nameLocations":["719:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":4294,"src":"719:9:13"},"referencedDeclaration":4294,"src":"719:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_Timestamp_$4294_storage_ptr","typeString":"struct Timers.Timestamp"}},"visibility":"internal"}],"src":"718:24:13"},"returnParameters":{"id":4355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4362,"src":"766:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4353,"name":"bool","nodeType":"ElementaryTypeName","src":"766:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"765:6:13"},"scope":4502,"src":"700:115:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4376,"nodeType":"Block","src":"893:57:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4370,"name":"timer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"910:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_Timestamp_$4294_memory_ptr","typeString":"struct Timers.Timestamp memory"}},"id":4371,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"916:9:13","memberName":"_deadline","nodeType":"MemberAccess","referencedDeclaration":4293,"src":"910:15:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":4372,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"928:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"934:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"928:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"910:33:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4369,"id":4375,"nodeType":"Return","src":"903:40:13"}]},"id":4377,"implemented":true,"kind":"function","modifiers":[],"name":"isPending","nameLocation":"830:9:13","nodeType":"FunctionDefinition","parameters":{"id":4366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4365,"mutability":"mutable","name":"timer","nameLocation":"857:5:13","nodeType":"VariableDeclaration","scope":4377,"src":"840:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Timestamp_$4294_memory_ptr","typeString":"struct Timers.Timestamp"},"typeName":{"id":4364,"nodeType":"UserDefinedTypeName","pathNode":{"id":4363,"name":"Timestamp","nameLocations":["840:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":4294,"src":"840:9:13"},"referencedDeclaration":4294,"src":"840:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_Timestamp_$4294_storage_ptr","typeString":"struct Timers.Timestamp"}},"visibility":"internal"}],"src":"839:24:13"},"returnParameters":{"id":4369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4377,"src":"887:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4367,"name":"bool","nodeType":"ElementaryTypeName","src":"887:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"886:6:13"},"scope":4502,"src":"821:129:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4395,"nodeType":"Block","src":"1028:78:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4386,"name":"timer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4380,"src":"1055:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_Timestamp_$4294_memory_ptr","typeString":"struct Timers.Timestamp memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Timestamp_$4294_memory_ptr","typeString":"struct Timers.Timestamp memory"}],"id":4385,"name":"isStarted","nodeType":"Identifier","overloadedDeclarations":[4362,4467],"referencedDeclaration":4362,"src":"1045:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Timestamp_$4294_memory_ptr_$returns$_t_bool_$","typeString":"function (struct Timers.Timestamp memory) pure returns (bool)"}},"id":4387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1045:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4388,"name":"timer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4380,"src":"1065:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_Timestamp_$4294_memory_ptr","typeString":"struct Timers.Timestamp memory"}},"id":4389,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1071:9:13","memberName":"_deadline","nodeType":"MemberAccess","referencedDeclaration":4293,"src":"1065:15:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":4390,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1084:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1090:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"1084:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1065:34:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1045:54:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4384,"id":4394,"nodeType":"Return","src":"1038:61:13"}]},"id":4396,"implemented":true,"kind":"function","modifiers":[],"name":"isExpired","nameLocation":"965:9:13","nodeType":"FunctionDefinition","parameters":{"id":4381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4380,"mutability":"mutable","name":"timer","nameLocation":"992:5:13","nodeType":"VariableDeclaration","scope":4396,"src":"975:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Timestamp_$4294_memory_ptr","typeString":"struct Timers.Timestamp"},"typeName":{"id":4379,"nodeType":"UserDefinedTypeName","pathNode":{"id":4378,"name":"Timestamp","nameLocations":["975:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":4294,"src":"975:9:13"},"referencedDeclaration":4294,"src":"975:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_Timestamp_$4294_storage_ptr","typeString":"struct Timers.Timestamp"}},"visibility":"internal"}],"src":"974:24:13"},"returnParameters":{"id":4384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4396,"src":"1022:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4382,"name":"bool","nodeType":"ElementaryTypeName","src":"1022:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1021:6:13"},"scope":4502,"src":"956:150:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"Timers.BlockNumber","id":4399,"members":[{"constant":false,"id":4398,"mutability":"mutable","name":"_deadline","nameLocation":"1148:9:13","nodeType":"VariableDeclaration","scope":4399,"src":"1141:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4397,"name":"uint64","nodeType":"ElementaryTypeName","src":"1141:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"BlockNumber","nameLocation":"1119:11:13","nodeType":"StructDefinition","scope":4502,"src":"1112:52:13","visibility":"public"},{"body":{"id":4410,"nodeType":"Block","src":"1248:39:13","statements":[{"expression":{"expression":{"id":4407,"name":"timer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"1265:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_BlockNumber_$4399_memory_ptr","typeString":"struct Timers.BlockNumber memory"}},"id":4408,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1271:9:13","memberName":"_deadline","nodeType":"MemberAccess","referencedDeclaration":4398,"src":"1265:15:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":4406,"id":4409,"nodeType":"Return","src":"1258:22:13"}]},"id":4411,"implemented":true,"kind":"function","modifiers":[],"name":"getDeadline","nameLocation":"1179:11:13","nodeType":"FunctionDefinition","parameters":{"id":4403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4402,"mutability":"mutable","name":"timer","nameLocation":"1210:5:13","nodeType":"VariableDeclaration","scope":4411,"src":"1191:24:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BlockNumber_$4399_memory_ptr","typeString":"struct Timers.BlockNumber"},"typeName":{"id":4401,"nodeType":"UserDefinedTypeName","pathNode":{"id":4400,"name":"BlockNumber","nameLocations":["1191:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":4399,"src":"1191:11:13"},"referencedDeclaration":4399,"src":"1191:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_BlockNumber_$4399_storage_ptr","typeString":"struct Timers.BlockNumber"}},"visibility":"internal"}],"src":"1190:26:13"},"returnParameters":{"id":4406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4411,"src":"1240:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4404,"name":"uint64","nodeType":"ElementaryTypeName","src":"1240:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1239:8:13"},"scope":4502,"src":"1170:117:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4425,"nodeType":"Block","src":"1368:44:13","statements":[{"expression":{"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4419,"name":"timer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"1378:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_BlockNumber_$4399_storage_ptr","typeString":"struct Timers.BlockNumber storage pointer"}},"id":4421,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1384:9:13","memberName":"_deadline","nodeType":"MemberAccess","referencedDeclaration":4398,"src":"1378:15:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4422,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"1396:9:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"1378:27:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4424,"nodeType":"ExpressionStatement","src":"1378:27:13"}]},"id":4426,"implemented":true,"kind":"function","modifiers":[],"name":"setDeadline","nameLocation":"1302:11:13","nodeType":"FunctionDefinition","parameters":{"id":4417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4414,"mutability":"mutable","name":"timer","nameLocation":"1334:5:13","nodeType":"VariableDeclaration","scope":4426,"src":"1314:25:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BlockNumber_$4399_storage_ptr","typeString":"struct Timers.BlockNumber"},"typeName":{"id":4413,"nodeType":"UserDefinedTypeName","pathNode":{"id":4412,"name":"BlockNumber","nameLocations":["1314:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":4399,"src":"1314:11:13"},"referencedDeclaration":4399,"src":"1314:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_BlockNumber_$4399_storage_ptr","typeString":"struct Timers.BlockNumber"}},"visibility":"internal"},{"constant":false,"id":4416,"mutability":"mutable","name":"timestamp","nameLocation":"1348:9:13","nodeType":"VariableDeclaration","scope":4426,"src":"1341:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4415,"name":"uint64","nodeType":"ElementaryTypeName","src":"1341:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1313:45:13"},"returnParameters":{"id":4418,"nodeType":"ParameterList","parameters":[],"src":"1368:0:13"},"scope":4502,"src":"1293:119:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4438,"nodeType":"Block","src":"1469:36:13","statements":[{"expression":{"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4432,"name":"timer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4429,"src":"1479:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_BlockNumber_$4399_storage_ptr","typeString":"struct Timers.BlockNumber storage pointer"}},"id":4434,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1485:9:13","memberName":"_deadline","nodeType":"MemberAccess","referencedDeclaration":4398,"src":"1479:15:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1497:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1479:19:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4437,"nodeType":"ExpressionStatement","src":"1479:19:13"}]},"id":4439,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1427:5:13","nodeType":"FunctionDefinition","parameters":{"id":4430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4429,"mutability":"mutable","name":"timer","nameLocation":"1453:5:13","nodeType":"VariableDeclaration","scope":4439,"src":"1433:25:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BlockNumber_$4399_storage_ptr","typeString":"struct Timers.BlockNumber"},"typeName":{"id":4428,"nodeType":"UserDefinedTypeName","pathNode":{"id":4427,"name":"BlockNumber","nameLocations":["1433:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":4399,"src":"1433:11:13"},"referencedDeclaration":4399,"src":"1433:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_BlockNumber_$4399_storage_ptr","typeString":"struct Timers.BlockNumber"}},"visibility":"internal"}],"src":"1432:27:13"},"returnParameters":{"id":4431,"nodeType":"ParameterList","parameters":[],"src":"1469:0:13"},"scope":4502,"src":"1418:87:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4452,"nodeType":"Block","src":"1583:44:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":4450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4447,"name":"timer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"1600:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_BlockNumber_$4399_memory_ptr","typeString":"struct Timers.BlockNumber memory"}},"id":4448,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1606:9:13","memberName":"_deadline","nodeType":"MemberAccess","referencedDeclaration":4398,"src":"1600:15:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1619:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1600:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4446,"id":4451,"nodeType":"Return","src":"1593:27:13"}]},"id":4453,"implemented":true,"kind":"function","modifiers":[],"name":"isUnset","nameLocation":"1520:7:13","nodeType":"FunctionDefinition","parameters":{"id":4443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4442,"mutability":"mutable","name":"timer","nameLocation":"1547:5:13","nodeType":"VariableDeclaration","scope":4453,"src":"1528:24:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BlockNumber_$4399_memory_ptr","typeString":"struct Timers.BlockNumber"},"typeName":{"id":4441,"nodeType":"UserDefinedTypeName","pathNode":{"id":4440,"name":"BlockNumber","nameLocations":["1528:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":4399,"src":"1528:11:13"},"referencedDeclaration":4399,"src":"1528:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_BlockNumber_$4399_storage_ptr","typeString":"struct Timers.BlockNumber"}},"visibility":"internal"}],"src":"1527:26:13"},"returnParameters":{"id":4446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4453,"src":"1577:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4444,"name":"bool","nodeType":"ElementaryTypeName","src":"1577:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1576:6:13"},"scope":4502,"src":"1511:116:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4466,"nodeType":"Block","src":"1707:43:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4461,"name":"timer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4456,"src":"1724:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_BlockNumber_$4399_memory_ptr","typeString":"struct Timers.BlockNumber memory"}},"id":4462,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1730:9:13","memberName":"_deadline","nodeType":"MemberAccess","referencedDeclaration":4398,"src":"1724:15:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1742:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1724:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4460,"id":4465,"nodeType":"Return","src":"1717:26:13"}]},"id":4467,"implemented":true,"kind":"function","modifiers":[],"name":"isStarted","nameLocation":"1642:9:13","nodeType":"FunctionDefinition","parameters":{"id":4457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4456,"mutability":"mutable","name":"timer","nameLocation":"1671:5:13","nodeType":"VariableDeclaration","scope":4467,"src":"1652:24:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BlockNumber_$4399_memory_ptr","typeString":"struct Timers.BlockNumber"},"typeName":{"id":4455,"nodeType":"UserDefinedTypeName","pathNode":{"id":4454,"name":"BlockNumber","nameLocations":["1652:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":4399,"src":"1652:11:13"},"referencedDeclaration":4399,"src":"1652:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_BlockNumber_$4399_storage_ptr","typeString":"struct Timers.BlockNumber"}},"visibility":"internal"}],"src":"1651:26:13"},"returnParameters":{"id":4460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4467,"src":"1701:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4458,"name":"bool","nodeType":"ElementaryTypeName","src":"1701:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1700:6:13"},"scope":4502,"src":"1633:117:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4481,"nodeType":"Block","src":"1830:54:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4475,"name":"timer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"1847:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_BlockNumber_$4399_memory_ptr","typeString":"struct Timers.BlockNumber memory"}},"id":4476,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1853:9:13","memberName":"_deadline","nodeType":"MemberAccess","referencedDeclaration":4398,"src":"1847:15:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":4477,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1865:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1871:6:13","memberName":"number","nodeType":"MemberAccess","src":"1865:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1847:30:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4474,"id":4480,"nodeType":"Return","src":"1840:37:13"}]},"id":4482,"implemented":true,"kind":"function","modifiers":[],"name":"isPending","nameLocation":"1765:9:13","nodeType":"FunctionDefinition","parameters":{"id":4471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4470,"mutability":"mutable","name":"timer","nameLocation":"1794:5:13","nodeType":"VariableDeclaration","scope":4482,"src":"1775:24:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BlockNumber_$4399_memory_ptr","typeString":"struct Timers.BlockNumber"},"typeName":{"id":4469,"nodeType":"UserDefinedTypeName","pathNode":{"id":4468,"name":"BlockNumber","nameLocations":["1775:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":4399,"src":"1775:11:13"},"referencedDeclaration":4399,"src":"1775:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_BlockNumber_$4399_storage_ptr","typeString":"struct Timers.BlockNumber"}},"visibility":"internal"}],"src":"1774:26:13"},"returnParameters":{"id":4474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4482,"src":"1824:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4472,"name":"bool","nodeType":"ElementaryTypeName","src":"1824:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1823:6:13"},"scope":4502,"src":"1756:128:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4500,"nodeType":"Block","src":"1964:75:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4491,"name":"timer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"1991:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_BlockNumber_$4399_memory_ptr","typeString":"struct Timers.BlockNumber memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_BlockNumber_$4399_memory_ptr","typeString":"struct Timers.BlockNumber memory"}],"id":4490,"name":"isStarted","nodeType":"Identifier","overloadedDeclarations":[4362,4467],"referencedDeclaration":4467,"src":"1981:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_BlockNumber_$4399_memory_ptr_$returns$_t_bool_$","typeString":"function (struct Timers.BlockNumber memory) pure returns (bool)"}},"id":4492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1981:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4493,"name":"timer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"2001:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_BlockNumber_$4399_memory_ptr","typeString":"struct Timers.BlockNumber memory"}},"id":4494,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2007:9:13","memberName":"_deadline","nodeType":"MemberAccess","referencedDeclaration":4398,"src":"2001:15:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":4495,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2020:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2026:6:13","memberName":"number","nodeType":"MemberAccess","src":"2020:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2001:31:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1981:51:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4489,"id":4499,"nodeType":"Return","src":"1974:58:13"}]},"id":4501,"implemented":true,"kind":"function","modifiers":[],"name":"isExpired","nameLocation":"1899:9:13","nodeType":"FunctionDefinition","parameters":{"id":4486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4485,"mutability":"mutable","name":"timer","nameLocation":"1928:5:13","nodeType":"VariableDeclaration","scope":4501,"src":"1909:24:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BlockNumber_$4399_memory_ptr","typeString":"struct Timers.BlockNumber"},"typeName":{"id":4484,"nodeType":"UserDefinedTypeName","pathNode":{"id":4483,"name":"BlockNumber","nameLocations":["1909:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":4399,"src":"1909:11:13"},"referencedDeclaration":4399,"src":"1909:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_BlockNumber_$4399_storage_ptr","typeString":"struct Timers.BlockNumber"}},"visibility":"internal"}],"src":"1908:26:13"},"returnParameters":{"id":4489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4501,"src":"1958:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4487,"name":"bool","nodeType":"ElementaryTypeName","src":"1958:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1957:6:13"},"scope":4502,"src":"1890:149:13","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4503,"src":"168:1873:13","usedErrors":[]}],"src":"85:1957:13"},"id":13},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[4863],"Math":[5918],"Strings":[4288]},"id":4864,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4504,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:14"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":4505,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4864,"sourceUnit":4289,"src":"137:24:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":4506,"nodeType":"StructuredDocumentation","src":"163:205:14","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":4863,"linearizedBaseContracts":[4863],"name":"ECDSA","nameLocation":"377:5:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":4512,"members":[{"id":4507,"name":"NoError","nameLocation":"417:7:14","nodeType":"EnumValue","src":"417:7:14"},{"id":4508,"name":"InvalidSignature","nameLocation":"434:16:14","nodeType":"EnumValue","src":"434:16:14"},{"id":4509,"name":"InvalidSignatureLength","nameLocation":"460:22:14","nodeType":"EnumValue","src":"460:22:14"},{"id":4510,"name":"InvalidSignatureS","nameLocation":"492:17:14","nodeType":"EnumValue","src":"492:17:14"},{"id":4511,"name":"InvalidSignatureV","nameLocation":"519:17:14","nodeType":"EnumValue","src":"519:17:14"}],"name":"RecoverError","nameLocation":"394:12:14","nodeType":"EnumDefinition","src":"389:175:14"},{"body":{"id":4555,"nodeType":"Block","src":"624:457:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4512","typeString":"enum ECDSA.RecoverError"},"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4518,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4515,"src":"638:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4512","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4519,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"647:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4512_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"660:7:14","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":4507,"src":"647:20:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4512","typeString":"enum ECDSA.RecoverError"}},"src":"638:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4512","typeString":"enum ECDSA.RecoverError"},"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4524,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4515,"src":"734:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4512","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4525,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"743:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4512_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"756:16:14","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":4508,"src":"743:29:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4512","typeString":"enum ECDSA.RecoverError"}},"src":"734:38:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4512","typeString":"enum ECDSA.RecoverError"},"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4533,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4515,"src":"843:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4512","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4534,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"852:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4512_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"865:22:14","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":4509,"src":"852:35:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4512","typeString":"enum ECDSA.RecoverError"}},"src":"843:44:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4512","typeString":"enum ECDSA.RecoverError"},"id":4545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4542,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4515,"src":"965:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4512","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4543,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"974:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4512_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"987:17:14","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":4510,"src":"974:30:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4512","typeString":"enum ECDSA.RecoverError"}},"src":"965:39:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4551,"nodeType":"IfStatement","src":"961:114:14","trueBody":{"id":4550,"nodeType":"Block","src":"1006:69:14","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":4547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1027:36:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":4546,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1020:6:14","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1020:44:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4549,"nodeType":"ExpressionStatement","src":"1020:44:14"}]}},"id":4552,"nodeType":"IfStatement","src":"839:236:14","trueBody":{"id":4541,"nodeType":"Block","src":"889:66:14","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":4538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"910:33:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":4537,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"903:6:14","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"903:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4540,"nodeType":"ExpressionStatement","src":"903:41:14"}]}},"id":4553,"nodeType":"IfStatement","src":"730:345:14","trueBody":{"id":4532,"nodeType":"Block","src":"774:59:14","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":4529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"795:26:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":4528,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"788:6:14","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"788:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4531,"nodeType":"ExpressionStatement","src":"788:34:14"}]}},"id":4554,"nodeType":"IfStatement","src":"634:441:14","trueBody":{"id":4523,"nodeType":"Block","src":"669:55:14","statements":[{"functionReturnParameters":4517,"id":4522,"nodeType":"Return","src":"683:7:14"}]}}]},"id":4556,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"579:11:14","nodeType":"FunctionDefinition","parameters":{"id":4516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4515,"mutability":"mutable","name":"error","nameLocation":"604:5:14","nodeType":"VariableDeclaration","scope":4556,"src":"591:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4512","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4514,"nodeType":"UserDefinedTypeName","pathNode":{"id":4513,"name":"RecoverError","nameLocations":["591:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":4512,"src":"591:12:14"},"referencedDeclaration":4512,"src":"591:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4512","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"590:20:14"},"returnParameters":{"id":4517,"nodeType":"ParameterList","parameters":[],"src":"624:0:14"},"scope":4863,"src":"570:511:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4601,"nodeType":"Block","src":"2249:626:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4569,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4561,"src":"2263:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2273:6:14","memberName":"length","nodeType":"MemberAccess","src":"2263:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":4571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2283:2:14","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2263:22:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4599,"nodeType":"Block","src":"2788:81:14","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2818:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2810:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4591,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:14","typeDescriptions":{}}},"id":4594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2810:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4595,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"2822:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4512_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:22:14","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":4509,"src":"2822:35:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4512","typeString":"enum ECDSA.RecoverError"}}],"id":4597,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2809:49:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4512_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":4568,"id":4598,"nodeType":"Return","src":"2802:56:14"}]},"id":4600,"nodeType":"IfStatement","src":"2259:610:14","trueBody":{"id":4590,"nodeType":"Block","src":"2287:495:14","statements":[{"assignments":[4574],"declarations":[{"constant":false,"id":4574,"mutability":"mutable","name":"r","nameLocation":"2309:1:14","nodeType":"VariableDeclaration","scope":4590,"src":"2301:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4573,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2301:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4575,"nodeType":"VariableDeclarationStatement","src":"2301:9:14"},{"assignments":[4577],"declarations":[{"constant":false,"id":4577,"mutability":"mutable","name":"s","nameLocation":"2332:1:14","nodeType":"VariableDeclaration","scope":4590,"src":"2324:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4576,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4578,"nodeType":"VariableDeclarationStatement","src":"2324:9:14"},{"assignments":[4580],"declarations":[{"constant":false,"id":4580,"mutability":"mutable","name":"v","nameLocation":"2353:1:14","nodeType":"VariableDeclaration","scope":4590,"src":"2347:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4579,"name":"uint8","nodeType":"ElementaryTypeName","src":"2347:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4581,"nodeType":"VariableDeclarationStatement","src":"2347:7:14"},{"AST":{"nodeType":"YulBlock","src":"2555:171:14","statements":[{"nodeType":"YulAssignment","src":"2573:32:14","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2588:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2599:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:14"},"nodeType":"YulFunctionCall","src":"2584:20:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2578:5:14"},"nodeType":"YulFunctionCall","src":"2578:27:14"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2573:1:14"}]},{"nodeType":"YulAssignment","src":"2622:32:14","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2637:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2648:4:14","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2633:3:14"},"nodeType":"YulFunctionCall","src":"2633:20:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2627:5:14"},"nodeType":"YulFunctionCall","src":"2627:27:14"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2622:1:14"}]},{"nodeType":"YulAssignment","src":"2671:41:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2681:1:14","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2694:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2705:4:14","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2690:3:14"},"nodeType":"YulFunctionCall","src":"2690:20:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2684:5:14"},"nodeType":"YulFunctionCall","src":"2684:27:14"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2676:4:14"},"nodeType":"YulFunctionCall","src":"2676:36:14"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2671:1:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":4574,"isOffset":false,"isSlot":false,"src":"2573:1:14","valueSize":1},{"declaration":4577,"isOffset":false,"isSlot":false,"src":"2622:1:14","valueSize":1},{"declaration":4561,"isOffset":false,"isSlot":false,"src":"2588:9:14","valueSize":1},{"declaration":4561,"isOffset":false,"isSlot":false,"src":"2637:9:14","valueSize":1},{"declaration":4561,"isOffset":false,"isSlot":false,"src":"2694:9:14","valueSize":1},{"declaration":4580,"isOffset":false,"isSlot":false,"src":"2671:1:14","valueSize":1}],"id":4582,"nodeType":"InlineAssembly","src":"2546:180:14"},{"expression":{"arguments":[{"id":4584,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"2757:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4585,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"2763:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4586,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"2766:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4587,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"2769:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4583,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4602,4676,4770],"referencedDeclaration":4770,"src":"2746:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4512_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2746:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4512_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":4568,"id":4589,"nodeType":"Return","src":"2739:32:14"}]}}]},"documentation":{"id":4557,"nodeType":"StructuredDocumentation","src":"1087:1053:14","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":4602,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2154:10:14","nodeType":"FunctionDefinition","parameters":{"id":4562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4559,"mutability":"mutable","name":"hash","nameLocation":"2173:4:14","nodeType":"VariableDeclaration","scope":4602,"src":"2165:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4558,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2165:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4561,"mutability":"mutable","name":"signature","nameLocation":"2192:9:14","nodeType":"VariableDeclaration","scope":4602,"src":"2179:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4560,"name":"bytes","nodeType":"ElementaryTypeName","src":"2179:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2164:38:14"},"returnParameters":{"id":4568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4602,"src":"2226:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4563,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4602,"src":"2235:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4512","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4566,"nodeType":"UserDefinedTypeName","pathNode":{"id":4565,"name":"RecoverError","nameLocations":["2235:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":4512,"src":"2235:12:14"},"referencedDeclaration":4512,"src":"2235:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4512","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2225:23:14"},"scope":4863,"src":"2145:730:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4628,"nodeType":"Block","src":"3748:140:14","statements":[{"assignments":[4613,4616],"declarations":[{"constant":false,"id":4613,"mutability":"mutable","name":"recovered","nameLocation":"3767:9:14","nodeType":"VariableDeclaration","scope":4628,"src":"3759:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4612,"name":"address","nodeType":"ElementaryTypeName","src":"3759:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4616,"mutability":"mutable","name":"error","nameLocation":"3791:5:14","nodeType":"VariableDeclaration","scope":4628,"src":"3778:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4512","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4615,"nodeType":"UserDefinedTypeName","pathNode":{"id":4614,"name":"RecoverError","nameLocations":["3778:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":4512,"src":"3778:12:14"},"referencedDeclaration":4512,"src":"3778:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4512","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":4621,"initialValue":{"arguments":[{"id":4618,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4605,"src":"3811:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4619,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"3817:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4617,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4602,4676,4770],"referencedDeclaration":4602,"src":"3800:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$4512_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3800:27:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4512_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3758:69:14"},{"expression":{"arguments":[{"id":4623,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"3849:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4512","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4512","typeString":"enum ECDSA.RecoverError"}],"id":4622,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"3837:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4512_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3837:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4625,"nodeType":"ExpressionStatement","src":"3837:18:14"},{"expression":{"id":4626,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"3872:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4611,"id":4627,"nodeType":"Return","src":"3865:16:14"}]},"documentation":{"id":4603,"nodeType":"StructuredDocumentation","src":"2881:775:14","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":4629,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3670:7:14","nodeType":"FunctionDefinition","parameters":{"id":4608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4605,"mutability":"mutable","name":"hash","nameLocation":"3686:4:14","nodeType":"VariableDeclaration","scope":4629,"src":"3678:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4604,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3678:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4607,"mutability":"mutable","name":"signature","nameLocation":"3705:9:14","nodeType":"VariableDeclaration","scope":4629,"src":"3692:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4606,"name":"bytes","nodeType":"ElementaryTypeName","src":"3692:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3677:38:14"},"returnParameters":{"id":4611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4629,"src":"3739:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4609,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3738:9:14"},"scope":4863,"src":"3661:227:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4675,"nodeType":"Block","src":"4275:203:14","statements":[{"assignments":[4645],"declarations":[{"constant":false,"id":4645,"mutability":"mutable","name":"s","nameLocation":"4293:1:14","nodeType":"VariableDeclaration","scope":4675,"src":"4285:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4644,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4285:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4652,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4646,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"4297:2:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":4649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4310:66:14","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":4648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4302:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4647,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4302:7:14","typeDescriptions":{}}},"id":4650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:75:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4297:80:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4285:92:14"},{"assignments":[4654],"declarations":[{"constant":false,"id":4654,"mutability":"mutable","name":"v","nameLocation":"4393:1:14","nodeType":"VariableDeclaration","scope":4675,"src":"4387:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4653,"name":"uint8","nodeType":"ElementaryTypeName","src":"4387:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4667,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4659,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"4412:2:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4404:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4657,"name":"uint256","nodeType":"ElementaryTypeName","src":"4404:7:14","typeDescriptions":{}}},"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4404:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":4661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4419:3:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4404:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4663,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4403:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":4664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4426:2:14","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4403:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4397:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4655,"name":"uint8","nodeType":"ElementaryTypeName","src":"4397:5:14","typeDescriptions":{}}},"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4397:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4387:42:14"},{"expression":{"arguments":[{"id":4669,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"4457:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4670,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"4463:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4671,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4634,"src":"4466:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4672,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4645,"src":"4469:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4668,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4602,4676,4770],"referencedDeclaration":4770,"src":"4446:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4512_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4446:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4512_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":4643,"id":4674,"nodeType":"Return","src":"4439:32:14"}]},"documentation":{"id":4630,"nodeType":"StructuredDocumentation","src":"3894:243:14","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":4676,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4151:10:14","nodeType":"FunctionDefinition","parameters":{"id":4637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4632,"mutability":"mutable","name":"hash","nameLocation":"4179:4:14","nodeType":"VariableDeclaration","scope":4676,"src":"4171:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4631,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4171:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4634,"mutability":"mutable","name":"r","nameLocation":"4201:1:14","nodeType":"VariableDeclaration","scope":4676,"src":"4193:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4633,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4636,"mutability":"mutable","name":"vs","nameLocation":"4220:2:14","nodeType":"VariableDeclaration","scope":4676,"src":"4212:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4635,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4212:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4161:67:14"},"returnParameters":{"id":4643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4676,"src":"4252:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4638,"name":"address","nodeType":"ElementaryTypeName","src":"4252:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4642,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4676,"src":"4261:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4512","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4641,"nodeType":"UserDefinedTypeName","pathNode":{"id":4640,"name":"RecoverError","nameLocations":["4261:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":4512,"src":"4261:12:14"},"referencedDeclaration":4512,"src":"4261:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4512","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4251:23:14"},"scope":4863,"src":"4142:336:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4705,"nodeType":"Block","src":"4759:136:14","statements":[{"assignments":[4689,4692],"declarations":[{"constant":false,"id":4689,"mutability":"mutable","name":"recovered","nameLocation":"4778:9:14","nodeType":"VariableDeclaration","scope":4705,"src":"4770:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4688,"name":"address","nodeType":"ElementaryTypeName","src":"4770:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4692,"mutability":"mutable","name":"error","nameLocation":"4802:5:14","nodeType":"VariableDeclaration","scope":4705,"src":"4789:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4512","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4691,"nodeType":"UserDefinedTypeName","pathNode":{"id":4690,"name":"RecoverError","nameLocations":["4789:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":4512,"src":"4789:12:14"},"referencedDeclaration":4512,"src":"4789:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4512","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":4698,"initialValue":{"arguments":[{"id":4694,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4679,"src":"4822:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4695,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4681,"src":"4828:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4696,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"4831:2:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4693,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4602,4676,4770],"referencedDeclaration":4676,"src":"4811:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4512_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":4697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4512_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4769:65:14"},{"expression":{"arguments":[{"id":4700,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"4856:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4512","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4512","typeString":"enum ECDSA.RecoverError"}],"id":4699,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"4844:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4512_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4844:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4702,"nodeType":"ExpressionStatement","src":"4844:18:14"},{"expression":{"id":4703,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4689,"src":"4879:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4687,"id":4704,"nodeType":"Return","src":"4872:16:14"}]},"documentation":{"id":4677,"nodeType":"StructuredDocumentation","src":"4484:154:14","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":4706,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4652:7:14","nodeType":"FunctionDefinition","parameters":{"id":4684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4679,"mutability":"mutable","name":"hash","nameLocation":"4677:4:14","nodeType":"VariableDeclaration","scope":4706,"src":"4669:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4678,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4669:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4681,"mutability":"mutable","name":"r","nameLocation":"4699:1:14","nodeType":"VariableDeclaration","scope":4706,"src":"4691:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4680,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4691:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4683,"mutability":"mutable","name":"vs","nameLocation":"4718:2:14","nodeType":"VariableDeclaration","scope":4706,"src":"4710:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4682,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4710:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4659:67:14"},"returnParameters":{"id":4687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4706,"src":"4750:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4685,"name":"address","nodeType":"ElementaryTypeName","src":"4750:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4749:9:14"},"scope":4863,"src":"4643:252:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4769,"nodeType":"Block","src":"5218:1345:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4725,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"6114:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6106:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4723,"name":"uint256","nodeType":"ElementaryTypeName","src":"6106:7:14","typeDescriptions":{}}},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6106:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":4727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6119:66:14","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6106:79:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4738,"nodeType":"IfStatement","src":"6102:161:14","trueBody":{"id":4737,"nodeType":"Block","src":"6187:76:14","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6217:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6209:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4729,"name":"address","nodeType":"ElementaryTypeName","src":"6209:7:14","typeDescriptions":{}}},"id":4732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6209:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4733,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"6221:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4512_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6234:17:14","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":4510,"src":"6221:30:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4512","typeString":"enum ECDSA.RecoverError"}}],"id":4735,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6208:44:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4512_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":4722,"id":4736,"nodeType":"Return","src":"6201:51:14"}]}},{"assignments":[4740],"declarations":[{"constant":false,"id":4740,"mutability":"mutable","name":"signer","nameLocation":"6365:6:14","nodeType":"VariableDeclaration","scope":4769,"src":"6357:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4739,"name":"address","nodeType":"ElementaryTypeName","src":"6357:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4747,"initialValue":{"arguments":[{"id":4742,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4709,"src":"6384:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4743,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4711,"src":"6390:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4744,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4713,"src":"6393:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4745,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"6396:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4741,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6374:9:14","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":4746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6357:41:14"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4748,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4740,"src":"6412:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6430:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6422:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4749,"name":"address","nodeType":"ElementaryTypeName","src":"6422:7:14","typeDescriptions":{}}},"id":4752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6422:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6412:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4763,"nodeType":"IfStatement","src":"6408:101:14","trueBody":{"id":4762,"nodeType":"Block","src":"6434:75:14","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6464:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6456:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4754,"name":"address","nodeType":"ElementaryTypeName","src":"6456:7:14","typeDescriptions":{}}},"id":4757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6456:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4758,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"6468:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4512_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6481:16:14","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":4508,"src":"6468:29:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4512","typeString":"enum ECDSA.RecoverError"}}],"id":4760,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6455:43:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4512_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":4722,"id":4761,"nodeType":"Return","src":"6448:50:14"}]}},{"expression":{"components":[{"id":4764,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4740,"src":"6527:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4765,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"6535:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4512_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6548:7:14","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":4507,"src":"6535:20:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4512","typeString":"enum ECDSA.RecoverError"}}],"id":4767,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6526:30:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4512_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":4722,"id":4768,"nodeType":"Return","src":"6519:37:14"}]},"documentation":{"id":4707,"nodeType":"StructuredDocumentation","src":"4901:163:14","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":4770,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5078:10:14","nodeType":"FunctionDefinition","parameters":{"id":4716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4709,"mutability":"mutable","name":"hash","nameLocation":"5106:4:14","nodeType":"VariableDeclaration","scope":4770,"src":"5098:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4708,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5098:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4711,"mutability":"mutable","name":"v","nameLocation":"5126:1:14","nodeType":"VariableDeclaration","scope":4770,"src":"5120:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4710,"name":"uint8","nodeType":"ElementaryTypeName","src":"5120:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4713,"mutability":"mutable","name":"r","nameLocation":"5145:1:14","nodeType":"VariableDeclaration","scope":4770,"src":"5137:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4712,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5137:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4715,"mutability":"mutable","name":"s","nameLocation":"5164:1:14","nodeType":"VariableDeclaration","scope":4770,"src":"5156:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4714,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5156:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5088:83:14"},"returnParameters":{"id":4722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4718,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4770,"src":"5195:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4717,"name":"address","nodeType":"ElementaryTypeName","src":"5195:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4770,"src":"5204:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4512","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4720,"nodeType":"UserDefinedTypeName","pathNode":{"id":4719,"name":"RecoverError","nameLocations":["5204:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":4512,"src":"5204:12:14"},"referencedDeclaration":4512,"src":"5204:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4512","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5194:23:14"},"scope":4863,"src":"5069:1494:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4802,"nodeType":"Block","src":"6828:138:14","statements":[{"assignments":[4785,4788],"declarations":[{"constant":false,"id":4785,"mutability":"mutable","name":"recovered","nameLocation":"6847:9:14","nodeType":"VariableDeclaration","scope":4802,"src":"6839:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4784,"name":"address","nodeType":"ElementaryTypeName","src":"6839:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4788,"mutability":"mutable","name":"error","nameLocation":"6871:5:14","nodeType":"VariableDeclaration","scope":4802,"src":"6858:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4512","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4787,"nodeType":"UserDefinedTypeName","pathNode":{"id":4786,"name":"RecoverError","nameLocations":["6858:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":4512,"src":"6858:12:14"},"referencedDeclaration":4512,"src":"6858:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4512","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":4795,"initialValue":{"arguments":[{"id":4790,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4773,"src":"6891:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4791,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4775,"src":"6897:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4792,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"6900:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4793,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"6903:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4789,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4602,4676,4770],"referencedDeclaration":4770,"src":"6880:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4512_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6880:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4512_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6838:67:14"},{"expression":{"arguments":[{"id":4797,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"6927:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4512","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4512","typeString":"enum ECDSA.RecoverError"}],"id":4796,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"6915:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4512_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6915:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4799,"nodeType":"ExpressionStatement","src":"6915:18:14"},{"expression":{"id":4800,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"6950:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4783,"id":4801,"nodeType":"Return","src":"6943:16:14"}]},"documentation":{"id":4771,"nodeType":"StructuredDocumentation","src":"6569:122:14","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":4803,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6705:7:14","nodeType":"FunctionDefinition","parameters":{"id":4780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4773,"mutability":"mutable","name":"hash","nameLocation":"6730:4:14","nodeType":"VariableDeclaration","scope":4803,"src":"6722:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4772,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6722:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4775,"mutability":"mutable","name":"v","nameLocation":"6750:1:14","nodeType":"VariableDeclaration","scope":4803,"src":"6744:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4774,"name":"uint8","nodeType":"ElementaryTypeName","src":"6744:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4777,"mutability":"mutable","name":"r","nameLocation":"6769:1:14","nodeType":"VariableDeclaration","scope":4803,"src":"6761:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4776,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6761:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4779,"mutability":"mutable","name":"s","nameLocation":"6788:1:14","nodeType":"VariableDeclaration","scope":4803,"src":"6780:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4778,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6780:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6712:83:14"},"returnParameters":{"id":4783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4782,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4803,"src":"6819:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4781,"name":"address","nodeType":"ElementaryTypeName","src":"6819:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6818:9:14"},"scope":4863,"src":"6696:270:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4819,"nodeType":"Block","src":"7334:187:14","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","id":4814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7472:34:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},"value":"\u0019Ethereum Signed Message:\n32"},{"id":4815,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"7508:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4812,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7455:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7459:12:14","memberName":"encodePacked","nodeType":"MemberAccess","src":"7455:16:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7455:58:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4811,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7445:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7445:69:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4810,"id":4818,"nodeType":"Return","src":"7438:76:14"}]},"documentation":{"id":4804,"nodeType":"StructuredDocumentation","src":"6972:279:14","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":4820,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7265:22:14","nodeType":"FunctionDefinition","parameters":{"id":4807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4806,"mutability":"mutable","name":"hash","nameLocation":"7296:4:14","nodeType":"VariableDeclaration","scope":4820,"src":"7288:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4805,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7288:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7287:14:14"},"returnParameters":{"id":4810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4820,"src":"7325:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4808,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7325:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7324:9:14"},"scope":4863,"src":"7256:265:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4841,"nodeType":"Block","src":"7886:116:14","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":4831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7930:32:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":4834,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"7981:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7983:6:14","memberName":"length","nodeType":"MemberAccess","src":"7981:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4832,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4288,"src":"7964:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$4288_$","typeString":"type(library Strings)"}},"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7972:8:14","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":4171,"src":"7964:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7964:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4837,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"7992:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4829,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7913:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7917:12:14","memberName":"encodePacked","nodeType":"MemberAccess","src":"7913:16:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7913:81:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4828,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7903:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7903:92:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4827,"id":4840,"nodeType":"Return","src":"7896:99:14"}]},"documentation":{"id":4821,"nodeType":"StructuredDocumentation","src":"7527:274:14","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":4842,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7815:22:14","nodeType":"FunctionDefinition","parameters":{"id":4824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4823,"mutability":"mutable","name":"s","nameLocation":"7851:1:14","nodeType":"VariableDeclaration","scope":4842,"src":"7838:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4822,"name":"bytes","nodeType":"ElementaryTypeName","src":"7838:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7837:16:14"},"returnParameters":{"id":4827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4842,"src":"7877:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4825,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7877:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7876:9:14"},"scope":4863,"src":"7806:196:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4861,"nodeType":"Block","src":"8443:92:14","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1901","id":4855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8487:10:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"id":4856,"name":"domainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4845,"src":"8499:15:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4857,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4847,"src":"8516:10:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4853,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8470:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8474:12:14","memberName":"encodePacked","nodeType":"MemberAccess","src":"8470:16:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8470:57:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4852,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8460:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8460:68:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4851,"id":4860,"nodeType":"Return","src":"8453:75:14"}]},"documentation":{"id":4843,"nodeType":"StructuredDocumentation","src":"8008:328:14","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":4862,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8350:15:14","nodeType":"FunctionDefinition","parameters":{"id":4848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4845,"mutability":"mutable","name":"domainSeparator","nameLocation":"8374:15:14","nodeType":"VariableDeclaration","scope":4862,"src":"8366:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4844,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8366:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4847,"mutability":"mutable","name":"structHash","nameLocation":"8399:10:14","nodeType":"VariableDeclaration","scope":4862,"src":"8391:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4846,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8391:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8365:45:14"},"returnParameters":{"id":4851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4862,"src":"8434:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4849,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8434:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8433:9:14"},"scope":4863,"src":"8341:194:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4864,"src":"369:8168:14","usedErrors":[]}],"src":"112:8426:14"},"id":14},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"ECDSA":[4863],"EIP712":[5017],"Math":[5918],"Strings":[4288]},"id":5018,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4865,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:15"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"./ECDSA.sol","id":4866,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5018,"sourceUnit":4864,"src":"138:21:15","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":4867,"nodeType":"StructuredDocumentation","src":"161:1142:15","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n they need in their contracts using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n _Available since v3.4._"},"fullyImplemented":true,"id":5017,"linearizedBaseContracts":[5017],"name":"EIP712","nameLocation":"1322:6:15","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":4869,"mutability":"immutable","name":"_CACHED_DOMAIN_SEPARATOR","nameLocation":"1598:24:15","nodeType":"VariableDeclaration","scope":5017,"src":"1572:50:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4868,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1572:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4871,"mutability":"immutable","name":"_CACHED_CHAIN_ID","nameLocation":"1654:16:15","nodeType":"VariableDeclaration","scope":5017,"src":"1628:42:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4870,"name":"uint256","nodeType":"ElementaryTypeName","src":"1628:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":4873,"mutability":"immutable","name":"_CACHED_THIS","nameLocation":"1702:12:15","nodeType":"VariableDeclaration","scope":5017,"src":"1676:38:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4872,"name":"address","nodeType":"ElementaryTypeName","src":"1676:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":4875,"mutability":"immutable","name":"_HASHED_NAME","nameLocation":"1747:12:15","nodeType":"VariableDeclaration","scope":5017,"src":"1721:38:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4874,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1721:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4877,"mutability":"immutable","name":"_HASHED_VERSION","nameLocation":"1791:15:15","nodeType":"VariableDeclaration","scope":5017,"src":"1765:41:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4876,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1765:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4879,"mutability":"immutable","name":"_TYPE_HASH","nameLocation":"1838:10:15","nodeType":"VariableDeclaration","scope":5017,"src":"1812:36:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4878,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1812:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":4943,"nodeType":"Block","src":"2519:547:15","statements":[{"assignments":[4888],"declarations":[{"constant":false,"id":4888,"mutability":"mutable","name":"hashedName","nameLocation":"2537:10:15","nodeType":"VariableDeclaration","scope":4943,"src":"2529:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4887,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2529:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4895,"initialValue":{"arguments":[{"arguments":[{"id":4892,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"2566:4:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2560:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4890,"name":"bytes","nodeType":"ElementaryTypeName","src":"2560:5:15","typeDescriptions":{}}},"id":4893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2560:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4889,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2550:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2550:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2529:43:15"},{"assignments":[4897],"declarations":[{"constant":false,"id":4897,"mutability":"mutable","name":"hashedVersion","nameLocation":"2590:13:15","nodeType":"VariableDeclaration","scope":4943,"src":"2582:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4896,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2582:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4904,"initialValue":{"arguments":[{"arguments":[{"id":4901,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"2622:7:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2616:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4899,"name":"bytes","nodeType":"ElementaryTypeName","src":"2616:5:15","typeDescriptions":{}}},"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2616:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4898,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2606:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2606:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2582:49:15"},{"assignments":[4906],"declarations":[{"constant":false,"id":4906,"mutability":"mutable","name":"typeHash","nameLocation":"2649:8:15","nodeType":"VariableDeclaration","scope":4943,"src":"2641:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4905,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2641:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4910,"initialValue":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":4908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2683:84:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":4907,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2660:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2660:117:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2641:136:15"},{"expression":{"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4911,"name":"_HASHED_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4875,"src":"2787:12:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4912,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4888,"src":"2802:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2787:25:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4914,"nodeType":"ExpressionStatement","src":"2787:25:15"},{"expression":{"id":4917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4915,"name":"_HASHED_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4877,"src":"2822:15:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4916,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4897,"src":"2840:13:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2822:31:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4918,"nodeType":"ExpressionStatement","src":"2822:31:15"},{"expression":{"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4919,"name":"_CACHED_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4871,"src":"2863:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4920,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2882:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2888:7:15","memberName":"chainid","nodeType":"MemberAccess","src":"2882:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2863:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4923,"nodeType":"ExpressionStatement","src":"2863:32:15"},{"expression":{"id":4930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4924,"name":"_CACHED_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"2905:24:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4926,"name":"typeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"2954:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4927,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4888,"src":"2964:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4928,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4897,"src":"2976:13:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4925,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"2932:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) view returns (bytes32)"}},"id":4929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2932:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2905:85:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4931,"nodeType":"ExpressionStatement","src":"2905:85:15"},{"expression":{"id":4937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4932,"name":"_CACHED_THIS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"3000:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4935,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3023:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$5017","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$5017","typeString":"contract EIP712"}],"id":4934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3015:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4933,"name":"address","nodeType":"ElementaryTypeName","src":"3015:7:15","typeDescriptions":{}}},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3015:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3000:28:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4938,"nodeType":"ExpressionStatement","src":"3000:28:15"},{"expression":{"id":4941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4939,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"3038:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4940,"name":"typeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"3051:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3038:21:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4942,"nodeType":"ExpressionStatement","src":"3038:21:15"}]},"documentation":{"id":4880,"nodeType":"StructuredDocumentation","src":"1900:559:15","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":4944,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4882,"mutability":"mutable","name":"name","nameLocation":"2490:4:15","nodeType":"VariableDeclaration","scope":4944,"src":"2476:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4881,"name":"string","nodeType":"ElementaryTypeName","src":"2476:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4884,"mutability":"mutable","name":"version","nameLocation":"2510:7:15","nodeType":"VariableDeclaration","scope":4944,"src":"2496:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4883,"name":"string","nodeType":"ElementaryTypeName","src":"2496:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2475:43:15"},"returnParameters":{"id":4886,"nodeType":"ParameterList","parameters":[],"src":"2519:0:15"},"scope":5017,"src":"2464:602:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4972,"nodeType":"Block","src":"3214:246:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4952,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3236:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$5017","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$5017","typeString":"contract EIP712"}],"id":4951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3228:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4950,"name":"address","nodeType":"ElementaryTypeName","src":"3228:7:15","typeDescriptions":{}}},"id":4953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3228:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4954,"name":"_CACHED_THIS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"3245:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3228:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4956,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3261:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3267:7:15","memberName":"chainid","nodeType":"MemberAccess","src":"3261:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4958,"name":"_CACHED_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4871,"src":"3278:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3261:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3228:66:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4970,"nodeType":"Block","src":"3358:96:15","statements":[{"expression":{"arguments":[{"id":4965,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"3401:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4966,"name":"_HASHED_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4875,"src":"3413:12:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4967,"name":"_HASHED_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4877,"src":"3427:15:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4964,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"3379:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) view returns (bytes32)"}},"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3379:64:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4949,"id":4969,"nodeType":"Return","src":"3372:71:15"}]},"id":4971,"nodeType":"IfStatement","src":"3224:230:15","trueBody":{"id":4963,"nodeType":"Block","src":"3296:56:15","statements":[{"expression":{"id":4961,"name":"_CACHED_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"3317:24:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4949,"id":4962,"nodeType":"Return","src":"3310:31:15"}]}}]},"documentation":{"id":4945,"nodeType":"StructuredDocumentation","src":"3072:75:15","text":" @dev Returns the domain separator for the current chain."},"id":4973,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3161:18:15","nodeType":"FunctionDefinition","parameters":{"id":4946,"nodeType":"ParameterList","parameters":[],"src":"3179:2:15"},"returnParameters":{"id":4949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4973,"src":"3205:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4947,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3205:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3204:9:15"},"scope":5017,"src":"3152:308:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4999,"nodeType":"Block","src":"3615:108:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":4987,"name":"typeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4975,"src":"3653:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4988,"name":"nameHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"3663:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4989,"name":"versionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4979,"src":"3673:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4990,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3686:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3692:7:15","memberName":"chainid","nodeType":"MemberAccess","src":"3686:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4994,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3709:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$5017","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$5017","typeString":"contract EIP712"}],"id":4993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3701:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4992,"name":"address","nodeType":"ElementaryTypeName","src":"3701:7:15","typeDescriptions":{}}},"id":4995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3701:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4985,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3642:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3646:6:15","memberName":"encode","nodeType":"MemberAccess","src":"3642:10:15","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3642:73:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4984,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3632:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3632:84:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4983,"id":4998,"nodeType":"Return","src":"3625:91:15"}]},"id":5000,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"3475:21:15","nodeType":"FunctionDefinition","parameters":{"id":4980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4975,"mutability":"mutable","name":"typeHash","nameLocation":"3514:8:15","nodeType":"VariableDeclaration","scope":5000,"src":"3506:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4974,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3506:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4977,"mutability":"mutable","name":"nameHash","nameLocation":"3540:8:15","nodeType":"VariableDeclaration","scope":5000,"src":"3532:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4976,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3532:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4979,"mutability":"mutable","name":"versionHash","nameLocation":"3566:11:15","nodeType":"VariableDeclaration","scope":5000,"src":"3558:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4978,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3558:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3496:87:15"},"returnParameters":{"id":4983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5000,"src":"3606:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4981,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3606:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3605:9:15"},"scope":5017,"src":"3466:257:15","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":5015,"nodeType":"Block","src":"4434:79:15","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":5010,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4973,"src":"4473:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":5011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4473:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5012,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"4495:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5008,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"4451:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$4863_$","typeString":"type(library ECDSA)"}},"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4457:15:15","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":4862,"src":"4451:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":5013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4451:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5007,"id":5014,"nodeType":"Return","src":"4444:62:15"}]},"documentation":{"id":5001,"nodeType":"StructuredDocumentation","src":"3729:614:15","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":5016,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4357:16:15","nodeType":"FunctionDefinition","parameters":{"id":5004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5003,"mutability":"mutable","name":"structHash","nameLocation":"4382:10:15","nodeType":"VariableDeclaration","scope":5016,"src":"4374:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5002,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4374:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4373:20:15"},"returnParameters":{"id":5007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5016,"src":"4425:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5005,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4425:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4424:9:15"},"scope":5017,"src":"4348:165:15","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":5018,"src":"1304:3211:15","usedErrors":[]}],"src":"113:4403:15"},"id":15},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[5041],"IERC165":[5053]},"id":5042,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5019,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:16"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":5020,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5042,"sourceUnit":5054,"src":"124:23:16","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5022,"name":"IERC165","nameLocations":["754:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":5053,"src":"754:7:16"},"id":5023,"nodeType":"InheritanceSpecifier","src":"754:7:16"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":5021,"nodeType":"StructuredDocumentation","src":"149:576:16","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":5041,"linearizedBaseContracts":[5041,5053],"name":"ERC165","nameLocation":"744:6:16","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[5052],"body":{"id":5039,"nodeType":"Block","src":"920:64:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":5037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5032,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5026,"src":"937:11:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":5034,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5053,"src":"957:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$5053_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$5053_$","typeString":"type(contract IERC165)"}],"id":5033,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$5053","typeString":"type(contract IERC165)"}},"id":5036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"966:11:16","memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5031,"id":5038,"nodeType":"Return","src":"930:47:16"}]},"documentation":{"id":5024,"nodeType":"StructuredDocumentation","src":"768:56:16","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":5040,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:16","nodeType":"FunctionDefinition","overrides":{"id":5028,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:16"},"parameters":{"id":5027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5026,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:16","nodeType":"VariableDeclaration","scope":5040,"src":"856:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5025,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:16"},"returnParameters":{"id":5031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5030,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5040,"src":"914:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5029,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:16"},"scope":5041,"src":"829:155:16","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":5042,"src":"726:260:16","usedErrors":[]}],"src":"99:888:16"},"id":16},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[5053]},"id":5054,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5043,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:17"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":5044,"nodeType":"StructuredDocumentation","src":"125:279:17","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":5053,"linearizedBaseContracts":[5053],"name":"IERC165","nameLocation":"415:7:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5045,"nodeType":"StructuredDocumentation","src":"429:340:17","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":5052,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:17","nodeType":"FunctionDefinition","parameters":{"id":5048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5047,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:17","nodeType":"VariableDeclaration","scope":5052,"src":"801:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5046,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:17"},"returnParameters":{"id":5051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5052,"src":"844:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5049,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:17"},"scope":5053,"src":"774:76:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5054,"src":"405:447:17","usedErrors":[]}],"src":"100:753:17"},"id":17},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5918]},"id":5919,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5055,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":5056,"nodeType":"StructuredDocumentation","src":"128:73:18","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5918,"linearizedBaseContracts":[5918],"name":"Math","nameLocation":"210:4:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":5060,"members":[{"id":5057,"name":"Down","nameLocation":"245:4:18","nodeType":"EnumValue","src":"245:4:18"},{"id":5058,"name":"Up","nameLocation":"287:2:18","nodeType":"EnumValue","src":"287:2:18"},{"id":5059,"name":"Zero","nameLocation":"318:4:18","nodeType":"EnumValue","src":"318:4:18"}],"name":"Rounding","nameLocation":"226:8:18","nodeType":"EnumDefinition","src":"221:122:18"},{"body":{"id":5077,"nodeType":"Block","src":"480:37:18","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5070,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"497:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5071,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5065,"src":"501:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5074,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5065,"src":"509:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:18","trueExpression":{"id":5073,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"505:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5069,"id":5076,"nodeType":"Return","src":"490:20:18"}]},"documentation":{"id":5061,"nodeType":"StructuredDocumentation","src":"349:59:18","text":" @dev Returns the largest of two numbers."},"id":5078,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:18","nodeType":"FunctionDefinition","parameters":{"id":5066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5063,"mutability":"mutable","name":"a","nameLocation":"434:1:18","nodeType":"VariableDeclaration","scope":5078,"src":"426:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5062,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5065,"mutability":"mutable","name":"b","nameLocation":"445:1:18","nodeType":"VariableDeclaration","scope":5078,"src":"437:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5064,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:18"},"returnParameters":{"id":5069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5068,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5078,"src":"471:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5067,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:18"},"scope":5918,"src":"413:104:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5095,"nodeType":"Block","src":"655:37:18","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5088,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5081,"src":"672:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5089,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5083,"src":"676:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5092,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5083,"src":"684:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:18","trueExpression":{"id":5091,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5081,"src":"680:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5087,"id":5094,"nodeType":"Return","src":"665:20:18"}]},"documentation":{"id":5079,"nodeType":"StructuredDocumentation","src":"523:60:18","text":" @dev Returns the smallest of two numbers."},"id":5096,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:18","nodeType":"FunctionDefinition","parameters":{"id":5084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5081,"mutability":"mutable","name":"a","nameLocation":"609:1:18","nodeType":"VariableDeclaration","scope":5096,"src":"601:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5080,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5083,"mutability":"mutable","name":"b","nameLocation":"620:1:18","nodeType":"VariableDeclaration","scope":5096,"src":"612:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5082,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:18"},"returnParameters":{"id":5087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5086,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5096,"src":"646:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5085,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:18"},"scope":5918,"src":"588:104:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5118,"nodeType":"Block","src":"876:82:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5106,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5099,"src":"931:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5107,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"935:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5109,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5110,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5099,"src":"941:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5111,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"945:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5113,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":5114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5105,"id":5117,"nodeType":"Return","src":"923:28:18"}]},"documentation":{"id":5097,"nodeType":"StructuredDocumentation","src":"698:102:18","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":5119,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:18","nodeType":"FunctionDefinition","parameters":{"id":5102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5099,"mutability":"mutable","name":"a","nameLocation":"830:1:18","nodeType":"VariableDeclaration","scope":5119,"src":"822:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5098,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5101,"mutability":"mutable","name":"b","nameLocation":"841:1:18","nodeType":"VariableDeclaration","scope":5119,"src":"833:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5100,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:18"},"returnParameters":{"id":5105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5119,"src":"867:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5103,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:18"},"scope":5918,"src":"805:153:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5143,"nodeType":"Block","src":"1228:123:18","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5129,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"1316:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5133,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"1330:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5136,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5137,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"1339:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:18","trueExpression":{"hexValue":"30","id":5132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5128,"id":5142,"nodeType":"Return","src":"1309:35:18"}]},"documentation":{"id":5120,"nodeType":"StructuredDocumentation","src":"964:188:18","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":5144,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:18","nodeType":"FunctionDefinition","parameters":{"id":5125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5122,"mutability":"mutable","name":"a","nameLocation":"1182:1:18","nodeType":"VariableDeclaration","scope":5144,"src":"1174:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5121,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5124,"mutability":"mutable","name":"b","nameLocation":"1193:1:18","nodeType":"VariableDeclaration","scope":5144,"src":"1185:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5123,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:18"},"returnParameters":{"id":5128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5144,"src":"1219:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5126,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:18"},"scope":5918,"src":"1157:194:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5265,"nodeType":"Block","src":"1795:3797:18","statements":[{"id":5264,"nodeType":"UncheckedBlock","src":"1805:3781:18","statements":[{"assignments":[5157],"declarations":[{"constant":false,"id":5157,"mutability":"mutable","name":"prod0","nameLocation":"2134:5:18","nodeType":"VariableDeclaration","scope":5264,"src":"2126:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5156,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5158,"nodeType":"VariableDeclarationStatement","src":"2126:13:18"},{"assignments":[5160],"declarations":[{"constant":false,"id":5160,"mutability":"mutable","name":"prod1","nameLocation":"2206:5:18","nodeType":"VariableDeclaration","scope":5264,"src":"2198:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5159,"name":"uint256","nodeType":"ElementaryTypeName","src":"2198:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5161,"nodeType":"VariableDeclarationStatement","src":"2198:13:18"},{"AST":{"nodeType":"YulBlock","src":"2278:157:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2296:30:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2313:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"2316:1:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2323:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2319:3:18"},"nodeType":"YulFunctionCall","src":"2319:6:18"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2306:6:18"},"nodeType":"YulFunctionCall","src":"2306:20:18"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2300:2:18","type":""}]},{"nodeType":"YulAssignment","src":"2343:18:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2356:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"2359:1:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2352:3:18"},"nodeType":"YulFunctionCall","src":"2352:9:18"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2343:5:18"}]},{"nodeType":"YulAssignment","src":"2378:43:18","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2395:2:18"},{"name":"prod0","nodeType":"YulIdentifier","src":"2399:5:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2391:3:18"},"nodeType":"YulFunctionCall","src":"2391:14:18"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2410:2:18"},{"name":"prod0","nodeType":"YulIdentifier","src":"2414:5:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2407:2:18"},"nodeType":"YulFunctionCall","src":"2407:13:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2387:3:18"},"nodeType":"YulFunctionCall","src":"2387:34:18"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2378:5:18"}]}]},"evmVersion":"london","externalReferences":[{"declaration":5157,"isOffset":false,"isSlot":false,"src":"2343:5:18","valueSize":1},{"declaration":5157,"isOffset":false,"isSlot":false,"src":"2399:5:18","valueSize":1},{"declaration":5157,"isOffset":false,"isSlot":false,"src":"2414:5:18","valueSize":1},{"declaration":5160,"isOffset":false,"isSlot":false,"src":"2378:5:18","valueSize":1},{"declaration":5147,"isOffset":false,"isSlot":false,"src":"2313:1:18","valueSize":1},{"declaration":5147,"isOffset":false,"isSlot":false,"src":"2356:1:18","valueSize":1},{"declaration":5149,"isOffset":false,"isSlot":false,"src":"2316:1:18","valueSize":1},{"declaration":5149,"isOffset":false,"isSlot":false,"src":"2359:1:18","valueSize":1}],"id":5162,"nodeType":"InlineAssembly","src":"2269:166:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5163,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5160,"src":"2516:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2525:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2516:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5171,"nodeType":"IfStatement","src":"2512:75:18","trueBody":{"id":5170,"nodeType":"Block","src":"2528:59:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5166,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"2553:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5167,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"2561:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2553:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5155,"id":5169,"nodeType":"Return","src":"2546:26:18"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5173,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"2697:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5174,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5160,"src":"2711:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2697:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5172,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2689:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":5176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2689:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5177,"nodeType":"ExpressionStatement","src":"2689:28:18"},{"assignments":[5179],"declarations":[{"constant":false,"id":5179,"mutability":"mutable","name":"remainder","nameLocation":"2981:9:18","nodeType":"VariableDeclaration","scope":5264,"src":"2973:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5178,"name":"uint256","nodeType":"ElementaryTypeName","src":"2973:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5180,"nodeType":"VariableDeclarationStatement","src":"2973:17:18"},{"AST":{"nodeType":"YulBlock","src":"3013:291:18","statements":[{"nodeType":"YulAssignment","src":"3082:38:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3102:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"3105:1:18"},{"name":"denominator","nodeType":"YulIdentifier","src":"3108:11:18"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3095:6:18"},"nodeType":"YulFunctionCall","src":"3095:25:18"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3082:9:18"}]},{"nodeType":"YulAssignment","src":"3202:41:18","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3215:5:18"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3225:9:18"},{"name":"prod0","nodeType":"YulIdentifier","src":"3236:5:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3222:2:18"},"nodeType":"YulFunctionCall","src":"3222:20:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3211:3:18"},"nodeType":"YulFunctionCall","src":"3211:32:18"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3202:5:18"}]},{"nodeType":"YulAssignment","src":"3260:30:18","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3273:5:18"},{"name":"remainder","nodeType":"YulIdentifier","src":"3280:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3269:3:18"},"nodeType":"YulFunctionCall","src":"3269:21:18"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3260:5:18"}]}]},"evmVersion":"london","externalReferences":[{"declaration":5151,"isOffset":false,"isSlot":false,"src":"3108:11:18","valueSize":1},{"declaration":5157,"isOffset":false,"isSlot":false,"src":"3236:5:18","valueSize":1},{"declaration":5157,"isOffset":false,"isSlot":false,"src":"3260:5:18","valueSize":1},{"declaration":5157,"isOffset":false,"isSlot":false,"src":"3273:5:18","valueSize":1},{"declaration":5160,"isOffset":false,"isSlot":false,"src":"3202:5:18","valueSize":1},{"declaration":5160,"isOffset":false,"isSlot":false,"src":"3215:5:18","valueSize":1},{"declaration":5179,"isOffset":false,"isSlot":false,"src":"3082:9:18","valueSize":1},{"declaration":5179,"isOffset":false,"isSlot":false,"src":"3225:9:18","valueSize":1},{"declaration":5179,"isOffset":false,"isSlot":false,"src":"3280:9:18","valueSize":1},{"declaration":5147,"isOffset":false,"isSlot":false,"src":"3102:1:18","valueSize":1},{"declaration":5149,"isOffset":false,"isSlot":false,"src":"3105:1:18","valueSize":1}],"id":5181,"nodeType":"InlineAssembly","src":"3004:300:18"},{"assignments":[5183],"declarations":[{"constant":false,"id":5183,"mutability":"mutable","name":"twos","nameLocation":"3619:4:18","nodeType":"VariableDeclaration","scope":5264,"src":"3611:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5182,"name":"uint256","nodeType":"ElementaryTypeName","src":"3611:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5191,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5184,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"3626:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3641:12:18","subExpression":{"id":5185,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"3642:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3656:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3641:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5189,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3640:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3626:32:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3611:47:18"},{"AST":{"nodeType":"YulBlock","src":"3681:362:18","statements":[{"nodeType":"YulAssignment","src":"3746:37:18","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"3765:11:18"},{"name":"twos","nodeType":"YulIdentifier","src":"3778:4:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3761:3:18"},"nodeType":"YulFunctionCall","src":"3761:22:18"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"3746:11:18"}]},{"nodeType":"YulAssignment","src":"3850:25:18","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3863:5:18"},{"name":"twos","nodeType":"YulIdentifier","src":"3870:4:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3859:3:18"},"nodeType":"YulFunctionCall","src":"3859:16:18"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3850:5:18"}]},{"nodeType":"YulAssignment","src":"3990:39:18","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4010:1:18","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4013:4:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4006:3:18"},"nodeType":"YulFunctionCall","src":"4006:12:18"},{"name":"twos","nodeType":"YulIdentifier","src":"4020:4:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4002:3:18"},"nodeType":"YulFunctionCall","src":"4002:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"4027:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:18"},"nodeType":"YulFunctionCall","src":"3998:31:18"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"3990:4:18"}]}]},"evmVersion":"london","externalReferences":[{"declaration":5151,"isOffset":false,"isSlot":false,"src":"3746:11:18","valueSize":1},{"declaration":5151,"isOffset":false,"isSlot":false,"src":"3765:11:18","valueSize":1},{"declaration":5157,"isOffset":false,"isSlot":false,"src":"3850:5:18","valueSize":1},{"declaration":5157,"isOffset":false,"isSlot":false,"src":"3863:5:18","valueSize":1},{"declaration":5183,"isOffset":false,"isSlot":false,"src":"3778:4:18","valueSize":1},{"declaration":5183,"isOffset":false,"isSlot":false,"src":"3870:4:18","valueSize":1},{"declaration":5183,"isOffset":false,"isSlot":false,"src":"3990:4:18","valueSize":1},{"declaration":5183,"isOffset":false,"isSlot":false,"src":"4013:4:18","valueSize":1},{"declaration":5183,"isOffset":false,"isSlot":false,"src":"4020:4:18","valueSize":1}],"id":5192,"nodeType":"InlineAssembly","src":"3672:371:18"},{"expression":{"id":5197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5193,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"4109:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5194,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5160,"src":"4118:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5195,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"4126:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4118:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4109:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5198,"nodeType":"ExpressionStatement","src":"4109:21:18"},{"assignments":[5200],"declarations":[{"constant":false,"id":5200,"mutability":"mutable","name":"inverse","nameLocation":"4456:7:18","nodeType":"VariableDeclaration","scope":5264,"src":"4448:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5199,"name":"uint256","nodeType":"ElementaryTypeName","src":"4448:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5207,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4467:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5202,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"4471:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4467:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5204,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4466:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":5205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4486:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4466:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4448:39:18"},{"expression":{"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5208,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"4704:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4715:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5210,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"4719:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5211,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"4733:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4719:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4715:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4704:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5215,"nodeType":"ExpressionStatement","src":"4704:36:18"},{"expression":{"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5216,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"4773:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4784:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5218,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"4788:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5219,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"4802:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4788:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4784:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4773:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5223,"nodeType":"ExpressionStatement","src":"4773:36:18"},{"expression":{"id":5230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5224,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"4843:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4854:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5226,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"4858:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5227,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"4872:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4858:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4854:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4843:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5231,"nodeType":"ExpressionStatement","src":"4843:36:18"},{"expression":{"id":5238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5232,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"4913:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4924:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5234,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"4928:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5235,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"4942:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4928:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4924:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4913:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5239,"nodeType":"ExpressionStatement","src":"4913:36:18"},{"expression":{"id":5246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5240,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"4983:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4994:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5242,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"4998:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5243,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"5012:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4998:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4994:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4983:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5247,"nodeType":"ExpressionStatement","src":"4983:36:18"},{"expression":{"id":5254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5248,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"5054:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5065:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5250,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"5069:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5251,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"5083:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5069:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5054:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5255,"nodeType":"ExpressionStatement","src":"5054:36:18"},{"expression":{"id":5260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5256,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5154,"src":"5524:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5257,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"5533:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5258,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"5541:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5533:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5524:24:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5261,"nodeType":"ExpressionStatement","src":"5524:24:18"},{"expression":{"id":5262,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5154,"src":"5569:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5155,"id":5263,"nodeType":"Return","src":"5562:13:18"}]}]},"documentation":{"id":5145,"nodeType":"StructuredDocumentation","src":"1357:305:18","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":5266,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:18","nodeType":"FunctionDefinition","parameters":{"id":5152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5147,"mutability":"mutable","name":"x","nameLocation":"1700:1:18","nodeType":"VariableDeclaration","scope":5266,"src":"1692:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5146,"name":"uint256","nodeType":"ElementaryTypeName","src":"1692:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5149,"mutability":"mutable","name":"y","nameLocation":"1719:1:18","nodeType":"VariableDeclaration","scope":5266,"src":"1711:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5148,"name":"uint256","nodeType":"ElementaryTypeName","src":"1711:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5151,"mutability":"mutable","name":"denominator","nameLocation":"1738:11:18","nodeType":"VariableDeclaration","scope":5266,"src":"1730:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5150,"name":"uint256","nodeType":"ElementaryTypeName","src":"1730:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:73:18"},"returnParameters":{"id":5155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5154,"mutability":"mutable","name":"result","nameLocation":"1787:6:18","nodeType":"VariableDeclaration","scope":5266,"src":"1779:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5153,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1778:16:18"},"scope":5918,"src":"1667:3925:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5309,"nodeType":"Block","src":"5872:189:18","statements":[{"assignments":[5282],"declarations":[{"constant":false,"id":5282,"mutability":"mutable","name":"result","nameLocation":"5890:6:18","nodeType":"VariableDeclaration","scope":5309,"src":"5882:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5281,"name":"uint256","nodeType":"ElementaryTypeName","src":"5882:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5288,"initialValue":{"arguments":[{"id":5284,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5269,"src":"5906:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5285,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"5909:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5286,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5273,"src":"5912:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5283,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[5266,5310],"referencedDeclaration":5266,"src":"5899:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5899:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5882:42:18"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$5060","typeString":"enum Math.Rounding"},"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5289,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5276,"src":"5938:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5060","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5290,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5060,"src":"5950:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$5060_$","typeString":"type(enum Math.Rounding)"}},"id":5291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5959:2:18","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":5058,"src":"5950:11:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5060","typeString":"enum Math.Rounding"}},"src":"5938:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5294,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5269,"src":"5972:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5295,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"5975:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5296,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5273,"src":"5978:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5293,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"5965:6:18","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5965:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5993:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5965:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5938:56:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5306,"nodeType":"IfStatement","src":"5934:98:18","trueBody":{"id":5305,"nodeType":"Block","src":"5996:36:18","statements":[{"expression":{"id":5303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5301,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5282,"src":"6010:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6020:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6010:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5304,"nodeType":"ExpressionStatement","src":"6010:11:18"}]}},{"expression":{"id":5307,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5282,"src":"6048:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5280,"id":5308,"nodeType":"Return","src":"6041:13:18"}]},"documentation":{"id":5267,"nodeType":"StructuredDocumentation","src":"5598:121:18","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":5310,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5733:6:18","nodeType":"FunctionDefinition","parameters":{"id":5277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5269,"mutability":"mutable","name":"x","nameLocation":"5757:1:18","nodeType":"VariableDeclaration","scope":5310,"src":"5749:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5268,"name":"uint256","nodeType":"ElementaryTypeName","src":"5749:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5271,"mutability":"mutable","name":"y","nameLocation":"5776:1:18","nodeType":"VariableDeclaration","scope":5310,"src":"5768:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5270,"name":"uint256","nodeType":"ElementaryTypeName","src":"5768:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5273,"mutability":"mutable","name":"denominator","nameLocation":"5795:11:18","nodeType":"VariableDeclaration","scope":5310,"src":"5787:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5272,"name":"uint256","nodeType":"ElementaryTypeName","src":"5787:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5276,"mutability":"mutable","name":"rounding","nameLocation":"5825:8:18","nodeType":"VariableDeclaration","scope":5310,"src":"5816:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5060","typeString":"enum Math.Rounding"},"typeName":{"id":5275,"nodeType":"UserDefinedTypeName","pathNode":{"id":5274,"name":"Rounding","nameLocations":["5816:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":5060,"src":"5816:8:18"},"referencedDeclaration":5060,"src":"5816:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5060","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"5739:100:18"},"returnParameters":{"id":5280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5310,"src":"5863:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5278,"name":"uint256","nodeType":"ElementaryTypeName","src":"5863:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5862:9:18"},"scope":5918,"src":"5724:337:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5421,"nodeType":"Block","src":"6337:1585:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5318,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5313,"src":"6351:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6356:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6351:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5324,"nodeType":"IfStatement","src":"6347:45:18","trueBody":{"id":5323,"nodeType":"Block","src":"6359:33:18","statements":[{"expression":{"hexValue":"30","id":5321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6380:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5317,"id":5322,"nodeType":"Return","src":"6373:8:18"}]}},{"assignments":[5326],"declarations":[{"constant":false,"id":5326,"mutability":"mutable","name":"result","nameLocation":"7079:6:18","nodeType":"VariableDeclaration","scope":5421,"src":"7071:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5325,"name":"uint256","nodeType":"ElementaryTypeName","src":"7071:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5335,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7088:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5329,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5313,"src":"7099:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5328,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5590,5626],"referencedDeclaration":5590,"src":"7094:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7094:7:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7105:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7094:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5333,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7093:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7088:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7071:36:18"},{"id":5420,"nodeType":"UncheckedBlock","src":"7508:408:18","statements":[{"expression":{"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5336,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"7532:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5337,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"7542:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5338,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5313,"src":"7551:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5339,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"7555:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7551:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7542:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5342,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7541:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7566:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7541:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7532:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5346,"nodeType":"ExpressionStatement","src":"7532:35:18"},{"expression":{"id":5356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5347,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"7581:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5348,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"7591:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5349,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5313,"src":"7600:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5350,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"7604:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7600:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7591:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5353,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7590:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7590:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7581:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5357,"nodeType":"ExpressionStatement","src":"7581:35:18"},{"expression":{"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5358,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"7630:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5359,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"7640:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5360,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5313,"src":"7649:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5361,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"7653:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7649:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7640:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5364,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7639:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7664:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7639:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7630:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5368,"nodeType":"ExpressionStatement","src":"7630:35:18"},{"expression":{"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5369,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"7679:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5370,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"7689:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5371,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5313,"src":"7698:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5372,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"7702:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7698:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7689:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5375,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7688:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7713:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7688:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7679:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5379,"nodeType":"ExpressionStatement","src":"7679:35:18"},{"expression":{"id":5389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5380,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"7728:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5381,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"7738:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5382,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5313,"src":"7747:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5383,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"7751:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7747:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7738:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5386,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7737:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7762:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7737:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7728:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5390,"nodeType":"ExpressionStatement","src":"7728:35:18"},{"expression":{"id":5400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5391,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"7777:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5392,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"7787:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5393,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5313,"src":"7796:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5394,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"7800:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7796:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7787:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5397,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7786:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7811:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7786:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7777:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5401,"nodeType":"ExpressionStatement","src":"7777:35:18"},{"expression":{"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5402,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"7826:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5403,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"7836:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5404,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5313,"src":"7845:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5405,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"7849:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7845:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7836:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5408,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7835:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7860:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7835:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7826:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5412,"nodeType":"ExpressionStatement","src":"7826:35:18"},{"expression":{"arguments":[{"id":5414,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"7886:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5415,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5313,"src":"7894:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5416,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"7898:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7894:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5413,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5096,"src":"7882:3:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7882:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5317,"id":5419,"nodeType":"Return","src":"7875:30:18"}]}]},"documentation":{"id":5311,"nodeType":"StructuredDocumentation","src":"6067:208:18","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":5422,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6289:4:18","nodeType":"FunctionDefinition","parameters":{"id":5314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5313,"mutability":"mutable","name":"a","nameLocation":"6302:1:18","nodeType":"VariableDeclaration","scope":5422,"src":"6294:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5312,"name":"uint256","nodeType":"ElementaryTypeName","src":"6294:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6293:11:18"},"returnParameters":{"id":5317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5422,"src":"6328:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5315,"name":"uint256","nodeType":"ElementaryTypeName","src":"6328:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6327:9:18"},"scope":5918,"src":"6280:1642:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5457,"nodeType":"Block","src":"8098:161:18","statements":[{"id":5456,"nodeType":"UncheckedBlock","src":"8108:145:18","statements":[{"assignments":[5434],"declarations":[{"constant":false,"id":5434,"mutability":"mutable","name":"result","nameLocation":"8140:6:18","nodeType":"VariableDeclaration","scope":5456,"src":"8132:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5433,"name":"uint256","nodeType":"ElementaryTypeName","src":"8132:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5438,"initialValue":{"arguments":[{"id":5436,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5425,"src":"8154:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5435,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5422,5458],"referencedDeclaration":5422,"src":"8149:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8149:7:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8132:24:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5439,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5434,"src":"8177:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$5060","typeString":"enum Math.Rounding"},"id":5443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5440,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5428,"src":"8187:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5060","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5441,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5060,"src":"8199:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$5060_$","typeString":"type(enum Math.Rounding)"}},"id":5442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8208:2:18","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":5058,"src":"8199:11:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5060","typeString":"enum Math.Rounding"}},"src":"8187:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5444,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5434,"src":"8214:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5445,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5434,"src":"8223:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5447,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5425,"src":"8232:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8187:46:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8240:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8187:54:18","trueExpression":{"hexValue":"31","id":5450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8236:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5453,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8186:56:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8177:65:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5432,"id":5455,"nodeType":"Return","src":"8170:72:18"}]}]},"documentation":{"id":5423,"nodeType":"StructuredDocumentation","src":"7928:89:18","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":5458,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8031:4:18","nodeType":"FunctionDefinition","parameters":{"id":5429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5425,"mutability":"mutable","name":"a","nameLocation":"8044:1:18","nodeType":"VariableDeclaration","scope":5458,"src":"8036:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5424,"name":"uint256","nodeType":"ElementaryTypeName","src":"8036:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5428,"mutability":"mutable","name":"rounding","nameLocation":"8056:8:18","nodeType":"VariableDeclaration","scope":5458,"src":"8047:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5060","typeString":"enum Math.Rounding"},"typeName":{"id":5427,"nodeType":"UserDefinedTypeName","pathNode":{"id":5426,"name":"Rounding","nameLocations":["8047:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":5060,"src":"8047:8:18"},"referencedDeclaration":5060,"src":"8047:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5060","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8035:30:18"},"returnParameters":{"id":5432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5458,"src":"8089:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5430,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8088:9:18"},"scope":5918,"src":"8022:237:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5589,"nodeType":"Block","src":"8444:922:18","statements":[{"assignments":[5467],"declarations":[{"constant":false,"id":5467,"mutability":"mutable","name":"result","nameLocation":"8462:6:18","nodeType":"VariableDeclaration","scope":5589,"src":"8454:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5466,"name":"uint256","nodeType":"ElementaryTypeName","src":"8454:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5469,"initialValue":{"hexValue":"30","id":5468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8471:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8454:18:18"},{"id":5586,"nodeType":"UncheckedBlock","src":"8482:855:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"8510:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":5471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8519:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8510:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8525:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8510:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5484,"nodeType":"IfStatement","src":"8506:99:18","trueBody":{"id":5483,"nodeType":"Block","src":"8528:77:18","statements":[{"expression":{"id":5477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"8546:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8556:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8546:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5478,"nodeType":"ExpressionStatement","src":"8546:13:18"},{"expression":{"id":5481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5479,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"8577:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":5480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8587:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8577:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5482,"nodeType":"ExpressionStatement","src":"8577:13:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"8622:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":5486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8631:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8622:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8636:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8622:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5499,"nodeType":"IfStatement","src":"8618:96:18","trueBody":{"id":5498,"nodeType":"Block","src":"8639:75:18","statements":[{"expression":{"id":5492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"8657:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8667:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8657:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5493,"nodeType":"ExpressionStatement","src":"8657:12:18"},{"expression":{"id":5496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5494,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"8687:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8697:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8687:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5497,"nodeType":"ExpressionStatement","src":"8687:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"8731:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":5501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8740:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8731:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8745:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8731:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5514,"nodeType":"IfStatement","src":"8727:96:18","trueBody":{"id":5513,"nodeType":"Block","src":"8748:75:18","statements":[{"expression":{"id":5507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"8766:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8776:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8766:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5508,"nodeType":"ExpressionStatement","src":"8766:12:18"},{"expression":{"id":5511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5509,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"8796:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8796:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5512,"nodeType":"ExpressionStatement","src":"8796:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"8840:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":5516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8849:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8840:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8854:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8840:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5529,"nodeType":"IfStatement","src":"8836:96:18","trueBody":{"id":5528,"nodeType":"Block","src":"8857:75:18","statements":[{"expression":{"id":5522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"8875:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8885:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8875:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5523,"nodeType":"ExpressionStatement","src":"8875:12:18"},{"expression":{"id":5526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5524,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"8905:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8915:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8905:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5527,"nodeType":"ExpressionStatement","src":"8905:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"8949:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":5531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8958:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8949:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8962:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8949:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5544,"nodeType":"IfStatement","src":"8945:93:18","trueBody":{"id":5543,"nodeType":"Block","src":"8965:73:18","statements":[{"expression":{"id":5537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"8983:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8993:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8983:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5538,"nodeType":"ExpressionStatement","src":"8983:11:18"},{"expression":{"id":5541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5539,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"9012:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9022:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9012:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5542,"nodeType":"ExpressionStatement","src":"9012:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"9055:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":5546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9064:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9055:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9068:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9055:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5559,"nodeType":"IfStatement","src":"9051:93:18","trueBody":{"id":5558,"nodeType":"Block","src":"9071:73:18","statements":[{"expression":{"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"9089:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9089:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5553,"nodeType":"ExpressionStatement","src":"9089:11:18"},{"expression":{"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5554,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"9118:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9128:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9118:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5557,"nodeType":"ExpressionStatement","src":"9118:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"9161:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":5561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9170:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9161:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9174:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9161:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5574,"nodeType":"IfStatement","src":"9157:93:18","trueBody":{"id":5573,"nodeType":"Block","src":"9177:73:18","statements":[{"expression":{"id":5567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"9195:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":5566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9205:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9195:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5568,"nodeType":"ExpressionStatement","src":"9195:11:18"},{"expression":{"id":5571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5569,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"9224:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9234:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9224:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5572,"nodeType":"ExpressionStatement","src":"9224:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"9267:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9276:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9267:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9280:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9267:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5585,"nodeType":"IfStatement","src":"9263:64:18","trueBody":{"id":5584,"nodeType":"Block","src":"9283:44:18","statements":[{"expression":{"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5580,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"9301:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9311:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9301:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5583,"nodeType":"ExpressionStatement","src":"9301:11:18"}]}}]},{"expression":{"id":5587,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"9353:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5465,"id":5588,"nodeType":"Return","src":"9346:13:18"}]},"documentation":{"id":5459,"nodeType":"StructuredDocumentation","src":"8265:113:18","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":5590,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8392:4:18","nodeType":"FunctionDefinition","parameters":{"id":5462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5461,"mutability":"mutable","name":"value","nameLocation":"8405:5:18","nodeType":"VariableDeclaration","scope":5590,"src":"8397:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5460,"name":"uint256","nodeType":"ElementaryTypeName","src":"8397:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8396:15:18"},"returnParameters":{"id":5465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5590,"src":"8435:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5463,"name":"uint256","nodeType":"ElementaryTypeName","src":"8435:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8434:9:18"},"scope":5918,"src":"8383:983:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5625,"nodeType":"Block","src":"9599:165:18","statements":[{"id":5624,"nodeType":"UncheckedBlock","src":"9609:149:18","statements":[{"assignments":[5602],"declarations":[{"constant":false,"id":5602,"mutability":"mutable","name":"result","nameLocation":"9641:6:18","nodeType":"VariableDeclaration","scope":5624,"src":"9633:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5601,"name":"uint256","nodeType":"ElementaryTypeName","src":"9633:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5606,"initialValue":{"arguments":[{"id":5604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5593,"src":"9655:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5603,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5590,5626],"referencedDeclaration":5590,"src":"9650:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9650:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9633:28:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5607,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"9682:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$5060","typeString":"enum Math.Rounding"},"id":5611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5608,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5596,"src":"9692:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5060","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5609,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5060,"src":"9704:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$5060_$","typeString":"type(enum Math.Rounding)"}},"id":5610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9713:2:18","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":5058,"src":"9704:11:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5060","typeString":"enum Math.Rounding"}},"src":"9692:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9719:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5613,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"9724:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5593,"src":"9733:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9692:46:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9745:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9692:54:18","trueExpression":{"hexValue":"31","id":5618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9741:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5621,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9691:56:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9682:65:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5600,"id":5623,"nodeType":"Return","src":"9675:72:18"}]}]},"documentation":{"id":5591,"nodeType":"StructuredDocumentation","src":"9372:142:18","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5626,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9528:4:18","nodeType":"FunctionDefinition","parameters":{"id":5597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5593,"mutability":"mutable","name":"value","nameLocation":"9541:5:18","nodeType":"VariableDeclaration","scope":5626,"src":"9533:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5592,"name":"uint256","nodeType":"ElementaryTypeName","src":"9533:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5596,"mutability":"mutable","name":"rounding","nameLocation":"9557:8:18","nodeType":"VariableDeclaration","scope":5626,"src":"9548:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5060","typeString":"enum Math.Rounding"},"typeName":{"id":5595,"nodeType":"UserDefinedTypeName","pathNode":{"id":5594,"name":"Rounding","nameLocations":["9548:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":5060,"src":"9548:8:18"},"referencedDeclaration":5060,"src":"9548:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5060","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9532:34:18"},"returnParameters":{"id":5600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5626,"src":"9590:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5598,"name":"uint256","nodeType":"ElementaryTypeName","src":"9590:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9589:9:18"},"scope":5918,"src":"9519:245:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5754,"nodeType":"Block","src":"9951:828:18","statements":[{"assignments":[5635],"declarations":[{"constant":false,"id":5635,"mutability":"mutable","name":"result","nameLocation":"9969:6:18","nodeType":"VariableDeclaration","scope":5754,"src":"9961:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5634,"name":"uint256","nodeType":"ElementaryTypeName","src":"9961:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5637,"initialValue":{"hexValue":"30","id":5636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9978:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9961:18:18"},{"id":5751,"nodeType":"UncheckedBlock","src":"9989:761:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"10017:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10026:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10030:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10026:6:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10017:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5654,"nodeType":"IfStatement","src":"10013:99:18","trueBody":{"id":5653,"nodeType":"Block","src":"10034:78:18","statements":[{"expression":{"id":5647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"10052:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10061:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10065:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10061:6:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10052:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5648,"nodeType":"ExpressionStatement","src":"10052:15:18"},{"expression":{"id":5651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5649,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5635,"src":"10085:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10095:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10085:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5652,"nodeType":"ExpressionStatement","src":"10085:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"10129:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10138:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10142:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10138:6:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10129:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5671,"nodeType":"IfStatement","src":"10125:99:18","trueBody":{"id":5670,"nodeType":"Block","src":"10146:78:18","statements":[{"expression":{"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"10164:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10173:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10177:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10173:6:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10164:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5665,"nodeType":"ExpressionStatement","src":"10164:15:18"},{"expression":{"id":5668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5666,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5635,"src":"10197:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10207:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10197:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5669,"nodeType":"ExpressionStatement","src":"10197:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"10241:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10250:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10254:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10250:6:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10241:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5688,"nodeType":"IfStatement","src":"10237:99:18","trueBody":{"id":5687,"nodeType":"Block","src":"10258:78:18","statements":[{"expression":{"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"10276:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10289:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10285:6:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10276:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5682,"nodeType":"ExpressionStatement","src":"10276:15:18"},{"expression":{"id":5685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5683,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5635,"src":"10309:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10309:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5686,"nodeType":"ExpressionStatement","src":"10309:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"10353:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10362:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10366:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10362:5:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10353:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5705,"nodeType":"IfStatement","src":"10349:96:18","trueBody":{"id":5704,"nodeType":"Block","src":"10369:76:18","statements":[{"expression":{"id":5698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"10387:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10396:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10400:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10396:5:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10387:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5699,"nodeType":"ExpressionStatement","src":"10387:14:18"},{"expression":{"id":5702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5700,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5635,"src":"10419:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10419:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5703,"nodeType":"ExpressionStatement","src":"10419:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"10462:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10471:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10475:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10471:5:18","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10462:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5722,"nodeType":"IfStatement","src":"10458:96:18","trueBody":{"id":5721,"nodeType":"Block","src":"10478:76:18","statements":[{"expression":{"id":5715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"10496:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10505:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10509:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10505:5:18","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10496:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5716,"nodeType":"ExpressionStatement","src":"10496:14:18"},{"expression":{"id":5719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5717,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5635,"src":"10528:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10538:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10528:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5720,"nodeType":"ExpressionStatement","src":"10528:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"10571:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10580:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10584:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10580:5:18","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10571:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5739,"nodeType":"IfStatement","src":"10567:96:18","trueBody":{"id":5738,"nodeType":"Block","src":"10587:76:18","statements":[{"expression":{"id":5732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"10605:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10614:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10618:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10614:5:18","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10605:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5733,"nodeType":"ExpressionStatement","src":"10605:14:18"},{"expression":{"id":5736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5734,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5635,"src":"10637:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10647:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10637:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5737,"nodeType":"ExpressionStatement","src":"10637:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"10680:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10689:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10693:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10689:5:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10680:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5750,"nodeType":"IfStatement","src":"10676:64:18","trueBody":{"id":5749,"nodeType":"Block","src":"10696:44:18","statements":[{"expression":{"id":5747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5745,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5635,"src":"10714:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10724:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10714:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5748,"nodeType":"ExpressionStatement","src":"10714:11:18"}]}}]},{"expression":{"id":5752,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5635,"src":"10766:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5633,"id":5753,"nodeType":"Return","src":"10759:13:18"}]},"documentation":{"id":5627,"nodeType":"StructuredDocumentation","src":"9770:114:18","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":5755,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"9898:5:18","nodeType":"FunctionDefinition","parameters":{"id":5630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5629,"mutability":"mutable","name":"value","nameLocation":"9912:5:18","nodeType":"VariableDeclaration","scope":5755,"src":"9904:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5628,"name":"uint256","nodeType":"ElementaryTypeName","src":"9904:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9903:15:18"},"returnParameters":{"id":5633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5755,"src":"9942:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5631,"name":"uint256","nodeType":"ElementaryTypeName","src":"9942:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9941:9:18"},"scope":5918,"src":"9889:890:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5790,"nodeType":"Block","src":"11014:165:18","statements":[{"id":5789,"nodeType":"UncheckedBlock","src":"11024:149:18","statements":[{"assignments":[5767],"declarations":[{"constant":false,"id":5767,"mutability":"mutable","name":"result","nameLocation":"11056:6:18","nodeType":"VariableDeclaration","scope":5789,"src":"11048:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5766,"name":"uint256","nodeType":"ElementaryTypeName","src":"11048:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5771,"initialValue":{"arguments":[{"id":5769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5758,"src":"11071:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5768,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5755,5791],"referencedDeclaration":5755,"src":"11065:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11065:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11048:29:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5772,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5767,"src":"11098:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$5060","typeString":"enum Math.Rounding"},"id":5776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5773,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5761,"src":"11108:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5060","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5774,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5060,"src":"11120:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$5060_$","typeString":"type(enum Math.Rounding)"}},"id":5775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11129:2:18","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":5058,"src":"11120:11:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5060","typeString":"enum Math.Rounding"}},"src":"11108:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11135:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5778,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5767,"src":"11139:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5758,"src":"11148:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:18:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11108:45:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11160:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11108:53:18","trueExpression":{"hexValue":"31","id":5783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11156:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5786,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11107:55:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11098:64:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5765,"id":5788,"nodeType":"Return","src":"11091:71:18"}]}]},"documentation":{"id":5756,"nodeType":"StructuredDocumentation","src":"10785:143:18","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5791,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10942:5:18","nodeType":"FunctionDefinition","parameters":{"id":5762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5758,"mutability":"mutable","name":"value","nameLocation":"10956:5:18","nodeType":"VariableDeclaration","scope":5791,"src":"10948:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5757,"name":"uint256","nodeType":"ElementaryTypeName","src":"10948:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5761,"mutability":"mutable","name":"rounding","nameLocation":"10972:8:18","nodeType":"VariableDeclaration","scope":5791,"src":"10963:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5060","typeString":"enum Math.Rounding"},"typeName":{"id":5760,"nodeType":"UserDefinedTypeName","pathNode":{"id":5759,"name":"Rounding","nameLocations":["10963:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":5060,"src":"10963:8:18"},"referencedDeclaration":5060,"src":"10963:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5060","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10947:34:18"},"returnParameters":{"id":5765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5791,"src":"11005:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5763,"name":"uint256","nodeType":"ElementaryTypeName","src":"11005:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11004:9:18"},"scope":5918,"src":"10933:246:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5877,"nodeType":"Block","src":"11493:600:18","statements":[{"assignments":[5800],"declarations":[{"constant":false,"id":5800,"mutability":"mutable","name":"result","nameLocation":"11511:6:18","nodeType":"VariableDeclaration","scope":5877,"src":"11503:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5799,"name":"uint256","nodeType":"ElementaryTypeName","src":"11503:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5802,"initialValue":{"hexValue":"30","id":5801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11520:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11503:18:18"},{"id":5874,"nodeType":"UncheckedBlock","src":"11531:533:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5794,"src":"11559:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":5804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11568:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11559:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11574:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11559:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5817,"nodeType":"IfStatement","src":"11555:98:18","trueBody":{"id":5816,"nodeType":"Block","src":"11577:76:18","statements":[{"expression":{"id":5810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5794,"src":"11595:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11605:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11595:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5811,"nodeType":"ExpressionStatement","src":"11595:13:18"},{"expression":{"id":5814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5812,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"11626:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11636:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11626:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5815,"nodeType":"ExpressionStatement","src":"11626:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5794,"src":"11670:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":5819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11679:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11670:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11684:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11670:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5832,"nodeType":"IfStatement","src":"11666:95:18","trueBody":{"id":5831,"nodeType":"Block","src":"11687:74:18","statements":[{"expression":{"id":5825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5794,"src":"11705:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11715:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11705:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5826,"nodeType":"ExpressionStatement","src":"11705:12:18"},{"expression":{"id":5829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5827,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"11735:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11745:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11735:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5830,"nodeType":"ExpressionStatement","src":"11735:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5794,"src":"11778:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":5834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11787:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11778:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11792:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11778:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5847,"nodeType":"IfStatement","src":"11774:95:18","trueBody":{"id":5846,"nodeType":"Block","src":"11795:74:18","statements":[{"expression":{"id":5840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5794,"src":"11813:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11823:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11813:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5841,"nodeType":"ExpressionStatement","src":"11813:12:18"},{"expression":{"id":5844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5842,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"11843:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11853:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11843:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5845,"nodeType":"ExpressionStatement","src":"11843:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5794,"src":"11886:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":5849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11895:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11886:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11900:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11886:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5862,"nodeType":"IfStatement","src":"11882:95:18","trueBody":{"id":5861,"nodeType":"Block","src":"11903:74:18","statements":[{"expression":{"id":5855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5794,"src":"11921:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11921:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5856,"nodeType":"ExpressionStatement","src":"11921:12:18"},{"expression":{"id":5859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5857,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"11951:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11961:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11951:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5860,"nodeType":"ExpressionStatement","src":"11951:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5794,"src":"11994:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":5864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12003:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11994:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12007:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11994:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5873,"nodeType":"IfStatement","src":"11990:64:18","trueBody":{"id":5872,"nodeType":"Block","src":"12010:44:18","statements":[{"expression":{"id":5870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5868,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"12028:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12028:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5871,"nodeType":"ExpressionStatement","src":"12028:11:18"}]}}]},{"expression":{"id":5875,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"12080:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5798,"id":5876,"nodeType":"Return","src":"12073:13:18"}]},"documentation":{"id":5792,"nodeType":"StructuredDocumentation","src":"11185:240:18","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5878,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11439:6:18","nodeType":"FunctionDefinition","parameters":{"id":5795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5794,"mutability":"mutable","name":"value","nameLocation":"11454:5:18","nodeType":"VariableDeclaration","scope":5878,"src":"11446:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5793,"name":"uint256","nodeType":"ElementaryTypeName","src":"11446:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11445:15:18"},"returnParameters":{"id":5798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5878,"src":"11484:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5796,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:9:18"},"scope":5918,"src":"11430:663:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5916,"nodeType":"Block","src":"12329:173:18","statements":[{"id":5915,"nodeType":"UncheckedBlock","src":"12339:157:18","statements":[{"assignments":[5890],"declarations":[{"constant":false,"id":5890,"mutability":"mutable","name":"result","nameLocation":"12371:6:18","nodeType":"VariableDeclaration","scope":5915,"src":"12363:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5889,"name":"uint256","nodeType":"ElementaryTypeName","src":"12363:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5894,"initialValue":{"arguments":[{"id":5892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5881,"src":"12387:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5891,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5878,5917],"referencedDeclaration":5878,"src":"12380:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12380:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12363:30:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5895,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5890,"src":"12414:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$5060","typeString":"enum Math.Rounding"},"id":5899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5896,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"12424:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5060","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5897,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5060,"src":"12436:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$5060_$","typeString":"type(enum Math.Rounding)"}},"id":5898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12445:2:18","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":5058,"src":"12436:11:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5060","typeString":"enum Math.Rounding"}},"src":"12424:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12451:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5901,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5890,"src":"12457:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":5902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12466:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12457:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5904,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12456:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5881,"src":"12471:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12424:52:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12483:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12424:60:18","trueExpression":{"hexValue":"31","id":5909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12479:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5912,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12423:62:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12414:71:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5888,"id":5914,"nodeType":"Return","src":"12407:78:18"}]}]},"documentation":{"id":5879,"nodeType":"StructuredDocumentation","src":"12099:143:18","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5917,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12256:6:18","nodeType":"FunctionDefinition","parameters":{"id":5885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5881,"mutability":"mutable","name":"value","nameLocation":"12271:5:18","nodeType":"VariableDeclaration","scope":5917,"src":"12263:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5880,"name":"uint256","nodeType":"ElementaryTypeName","src":"12263:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5884,"mutability":"mutable","name":"rounding","nameLocation":"12287:8:18","nodeType":"VariableDeclaration","scope":5917,"src":"12278:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5060","typeString":"enum Math.Rounding"},"typeName":{"id":5883,"nodeType":"UserDefinedTypeName","pathNode":{"id":5882,"name":"Rounding","nameLocations":["12278:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":5060,"src":"12278:8:18"},"referencedDeclaration":5060,"src":"12278:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5060","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12262:34:18"},"returnParameters":{"id":5888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5917,"src":"12320:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5886,"name":"uint256","nodeType":"ElementaryTypeName","src":"12320:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12319:9:18"},"scope":5918,"src":"12247:255:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5919,"src":"202:12302:18","usedErrors":[]}],"src":"103:12402:18"},"id":18},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7459]},"id":7460,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5920,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"192:23:19"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5921,"nodeType":"StructuredDocumentation","src":"217:709:19","text":" @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always.\n Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n all math on `uint256` and `int256` and then downcasting."},"fullyImplemented":true,"id":7459,"linearizedBaseContracts":[7459],"name":"SafeCast","nameLocation":"935:8:19","nodeType":"ContractDefinition","nodes":[{"body":{"id":5945,"nodeType":"Block","src":"1339:126:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5924,"src":"1357:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1371:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5932,"name":"uint248","nodeType":"ElementaryTypeName","src":"1371:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5931,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1366:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1380:3:19","memberName":"max","nodeType":"MemberAccess","src":"1366:17:19","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1357:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":5937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1385:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":5929,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1349:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1349:78:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5939,"nodeType":"ExpressionStatement","src":"1349:78:19"},{"expression":{"arguments":[{"id":5942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5924,"src":"1452:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1444:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5940,"name":"uint248","nodeType":"ElementaryTypeName","src":"1444:7:19","typeDescriptions":{}}},"id":5943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1444:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5928,"id":5944,"nodeType":"Return","src":"1437:21:19"}]},"documentation":{"id":5922,"nodeType":"StructuredDocumentation","src":"950:318:19","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":5946,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1282:9:19","nodeType":"FunctionDefinition","parameters":{"id":5925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5924,"mutability":"mutable","name":"value","nameLocation":"1300:5:19","nodeType":"VariableDeclaration","scope":5946,"src":"1292:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5923,"name":"uint256","nodeType":"ElementaryTypeName","src":"1292:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1291:15:19"},"returnParameters":{"id":5928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5946,"src":"1330:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5926,"name":"uint248","nodeType":"ElementaryTypeName","src":"1330:7:19","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1329:9:19"},"scope":7459,"src":"1273:192:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5970,"nodeType":"Block","src":"1860:126:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5949,"src":"1878:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1892:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5957,"name":"uint240","nodeType":"ElementaryTypeName","src":"1892:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5956,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1887:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1887:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1901:3:19","memberName":"max","nodeType":"MemberAccess","src":"1887:17:19","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"1878:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":5962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1906:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":5954,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1870:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1870:78:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5964,"nodeType":"ExpressionStatement","src":"1870:78:19"},{"expression":{"arguments":[{"id":5967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5949,"src":"1973:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1965:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5965,"name":"uint240","nodeType":"ElementaryTypeName","src":"1965:7:19","typeDescriptions":{}}},"id":5968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1965:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5953,"id":5969,"nodeType":"Return","src":"1958:21:19"}]},"documentation":{"id":5947,"nodeType":"StructuredDocumentation","src":"1471:318:19","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":5971,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"1803:9:19","nodeType":"FunctionDefinition","parameters":{"id":5950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5949,"mutability":"mutable","name":"value","nameLocation":"1821:5:19","nodeType":"VariableDeclaration","scope":5971,"src":"1813:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5948,"name":"uint256","nodeType":"ElementaryTypeName","src":"1813:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1812:15:19"},"returnParameters":{"id":5953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5971,"src":"1851:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5951,"name":"uint240","nodeType":"ElementaryTypeName","src":"1851:7:19","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"1850:9:19"},"scope":7459,"src":"1794:192:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5995,"nodeType":"Block","src":"2381:126:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5974,"src":"2399:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2413:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5982,"name":"uint232","nodeType":"ElementaryTypeName","src":"2413:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5981,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2408:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2408:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2422:3:19","memberName":"max","nodeType":"MemberAccess","src":"2408:17:19","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2399:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":5987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2427:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":5979,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2391:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2391:78:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5989,"nodeType":"ExpressionStatement","src":"2391:78:19"},{"expression":{"arguments":[{"id":5992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5974,"src":"2494:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2486:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5990,"name":"uint232","nodeType":"ElementaryTypeName","src":"2486:7:19","typeDescriptions":{}}},"id":5993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2486:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5978,"id":5994,"nodeType":"Return","src":"2479:21:19"}]},"documentation":{"id":5972,"nodeType":"StructuredDocumentation","src":"1992:318:19","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":5996,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2324:9:19","nodeType":"FunctionDefinition","parameters":{"id":5975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5974,"mutability":"mutable","name":"value","nameLocation":"2342:5:19","nodeType":"VariableDeclaration","scope":5996,"src":"2334:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5973,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:19"},"returnParameters":{"id":5978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5977,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5996,"src":"2372:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5976,"name":"uint232","nodeType":"ElementaryTypeName","src":"2372:7:19","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2371:9:19"},"scope":7459,"src":"2315:192:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6020,"nodeType":"Block","src":"2902:126:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"2920:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2934:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6007,"name":"uint224","nodeType":"ElementaryTypeName","src":"2934:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":6006,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2929:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2929:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":6010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2943:3:19","memberName":"max","nodeType":"MemberAccess","src":"2929:17:19","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"2920:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":6012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2948:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":6004,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2912:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2912:78:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6014,"nodeType":"ExpressionStatement","src":"2912:78:19"},{"expression":{"arguments":[{"id":6017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"3015:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3007:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6015,"name":"uint224","nodeType":"ElementaryTypeName","src":"3007:7:19","typeDescriptions":{}}},"id":6018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3007:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":6003,"id":6019,"nodeType":"Return","src":"3000:21:19"}]},"documentation":{"id":5997,"nodeType":"StructuredDocumentation","src":"2513:318:19","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.2._"},"id":6021,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"2845:9:19","nodeType":"FunctionDefinition","parameters":{"id":6000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5999,"mutability":"mutable","name":"value","nameLocation":"2863:5:19","nodeType":"VariableDeclaration","scope":6021,"src":"2855:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5998,"name":"uint256","nodeType":"ElementaryTypeName","src":"2855:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2854:15:19"},"returnParameters":{"id":6003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6002,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6021,"src":"2893:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6001,"name":"uint224","nodeType":"ElementaryTypeName","src":"2893:7:19","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2892:9:19"},"scope":7459,"src":"2836:192:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6045,"nodeType":"Block","src":"3423:126:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6024,"src":"3441:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3455:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6032,"name":"uint216","nodeType":"ElementaryTypeName","src":"3455:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":6031,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3450:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3450:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":6035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3464:3:19","memberName":"max","nodeType":"MemberAccess","src":"3450:17:19","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3441:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":6037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3469:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":6029,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3433:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3433:78:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6039,"nodeType":"ExpressionStatement","src":"3433:78:19"},{"expression":{"arguments":[{"id":6042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6024,"src":"3536:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3528:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6040,"name":"uint216","nodeType":"ElementaryTypeName","src":"3528:7:19","typeDescriptions":{}}},"id":6043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3528:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":6028,"id":6044,"nodeType":"Return","src":"3521:21:19"}]},"documentation":{"id":6022,"nodeType":"StructuredDocumentation","src":"3034:318:19","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":6046,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3366:9:19","nodeType":"FunctionDefinition","parameters":{"id":6025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6024,"mutability":"mutable","name":"value","nameLocation":"3384:5:19","nodeType":"VariableDeclaration","scope":6046,"src":"3376:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6023,"name":"uint256","nodeType":"ElementaryTypeName","src":"3376:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3375:15:19"},"returnParameters":{"id":6028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6046,"src":"3414:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":6026,"name":"uint216","nodeType":"ElementaryTypeName","src":"3414:7:19","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3413:9:19"},"scope":7459,"src":"3357:192:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6070,"nodeType":"Block","src":"3944:126:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6049,"src":"3962:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3976:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6057,"name":"uint208","nodeType":"ElementaryTypeName","src":"3976:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":6056,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3971:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3971:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":6060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3985:3:19","memberName":"max","nodeType":"MemberAccess","src":"3971:17:19","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"3962:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":6062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3990:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":6054,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3954:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3954:78:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6064,"nodeType":"ExpressionStatement","src":"3954:78:19"},{"expression":{"arguments":[{"id":6067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6049,"src":"4057:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4049:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6065,"name":"uint208","nodeType":"ElementaryTypeName","src":"4049:7:19","typeDescriptions":{}}},"id":6068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4049:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":6053,"id":6069,"nodeType":"Return","src":"4042:21:19"}]},"documentation":{"id":6047,"nodeType":"StructuredDocumentation","src":"3555:318:19","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":6071,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"3887:9:19","nodeType":"FunctionDefinition","parameters":{"id":6050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6049,"mutability":"mutable","name":"value","nameLocation":"3905:5:19","nodeType":"VariableDeclaration","scope":6071,"src":"3897:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6048,"name":"uint256","nodeType":"ElementaryTypeName","src":"3897:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3896:15:19"},"returnParameters":{"id":6053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6052,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6071,"src":"3935:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6051,"name":"uint208","nodeType":"ElementaryTypeName","src":"3935:7:19","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"3934:9:19"},"scope":7459,"src":"3878:192:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6095,"nodeType":"Block","src":"4465:126:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"4483:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4497:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6082,"name":"uint200","nodeType":"ElementaryTypeName","src":"4497:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":6081,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4492:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4492:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":6085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4506:3:19","memberName":"max","nodeType":"MemberAccess","src":"4492:17:19","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4483:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":6087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4511:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":6079,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4475:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4475:78:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6089,"nodeType":"ExpressionStatement","src":"4475:78:19"},{"expression":{"arguments":[{"id":6092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"4578:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4570:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6090,"name":"uint200","nodeType":"ElementaryTypeName","src":"4570:7:19","typeDescriptions":{}}},"id":6093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4570:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":6078,"id":6094,"nodeType":"Return","src":"4563:21:19"}]},"documentation":{"id":6072,"nodeType":"StructuredDocumentation","src":"4076:318:19","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":6096,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4408:9:19","nodeType":"FunctionDefinition","parameters":{"id":6075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6074,"mutability":"mutable","name":"value","nameLocation":"4426:5:19","nodeType":"VariableDeclaration","scope":6096,"src":"4418:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6073,"name":"uint256","nodeType":"ElementaryTypeName","src":"4418:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4417:15:19"},"returnParameters":{"id":6078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6077,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6096,"src":"4456:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":6076,"name":"uint200","nodeType":"ElementaryTypeName","src":"4456:7:19","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4455:9:19"},"scope":7459,"src":"4399:192:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6120,"nodeType":"Block","src":"4986:126:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6099,"src":"5004:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5018:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6107,"name":"uint192","nodeType":"ElementaryTypeName","src":"5018:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":6106,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5013:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5013:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":6110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5027:3:19","memberName":"max","nodeType":"MemberAccess","src":"5013:17:19","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5004:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":6112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5032:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":6104,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4996:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4996:78:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6114,"nodeType":"ExpressionStatement","src":"4996:78:19"},{"expression":{"arguments":[{"id":6117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6099,"src":"5099:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5091:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6115,"name":"uint192","nodeType":"ElementaryTypeName","src":"5091:7:19","typeDescriptions":{}}},"id":6118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":6103,"id":6119,"nodeType":"Return","src":"5084:21:19"}]},"documentation":{"id":6097,"nodeType":"StructuredDocumentation","src":"4597:318:19","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":6121,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"4929:9:19","nodeType":"FunctionDefinition","parameters":{"id":6100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6099,"mutability":"mutable","name":"value","nameLocation":"4947:5:19","nodeType":"VariableDeclaration","scope":6121,"src":"4939:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6098,"name":"uint256","nodeType":"ElementaryTypeName","src":"4939:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4938:15:19"},"returnParameters":{"id":6103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6121,"src":"4977:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":6101,"name":"uint192","nodeType":"ElementaryTypeName","src":"4977:7:19","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"4976:9:19"},"scope":7459,"src":"4920:192:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6145,"nodeType":"Block","src":"5507:126:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6124,"src":"5525:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5539:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6132,"name":"uint184","nodeType":"ElementaryTypeName","src":"5539:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":6131,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5534:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5534:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":6135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5548:3:19","memberName":"max","nodeType":"MemberAccess","src":"5534:17:19","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5525:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":6137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5553:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":6129,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5517:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:78:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6139,"nodeType":"ExpressionStatement","src":"5517:78:19"},{"expression":{"arguments":[{"id":6142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6124,"src":"5620:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5612:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6140,"name":"uint184","nodeType":"ElementaryTypeName","src":"5612:7:19","typeDescriptions":{}}},"id":6143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5612:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":6128,"id":6144,"nodeType":"Return","src":"5605:21:19"}]},"documentation":{"id":6122,"nodeType":"StructuredDocumentation","src":"5118:318:19","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":6146,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5450:9:19","nodeType":"FunctionDefinition","parameters":{"id":6125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6124,"mutability":"mutable","name":"value","nameLocation":"5468:5:19","nodeType":"VariableDeclaration","scope":6146,"src":"5460:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6123,"name":"uint256","nodeType":"ElementaryTypeName","src":"5460:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5459:15:19"},"returnParameters":{"id":6128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6146,"src":"5498:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":6126,"name":"uint184","nodeType":"ElementaryTypeName","src":"5498:7:19","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5497:9:19"},"scope":7459,"src":"5441:192:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6170,"nodeType":"Block","src":"6028:126:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6149,"src":"6046:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6060:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6157,"name":"uint176","nodeType":"ElementaryTypeName","src":"6060:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":6156,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6055:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6055:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":6160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6069:3:19","memberName":"max","nodeType":"MemberAccess","src":"6055:17:19","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6046:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":6162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6074:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":6154,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6038:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6038:78:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6164,"nodeType":"ExpressionStatement","src":"6038:78:19"},{"expression":{"arguments":[{"id":6167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6149,"src":"6141:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6133:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6165,"name":"uint176","nodeType":"ElementaryTypeName","src":"6133:7:19","typeDescriptions":{}}},"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6133:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":6153,"id":6169,"nodeType":"Return","src":"6126:21:19"}]},"documentation":{"id":6147,"nodeType":"StructuredDocumentation","src":"5639:318:19","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":6171,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"5971:9:19","nodeType":"FunctionDefinition","parameters":{"id":6150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6149,"mutability":"mutable","name":"value","nameLocation":"5989:5:19","nodeType":"VariableDeclaration","scope":6171,"src":"5981:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6148,"name":"uint256","nodeType":"ElementaryTypeName","src":"5981:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5980:15:19"},"returnParameters":{"id":6153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6171,"src":"6019:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":6151,"name":"uint176","nodeType":"ElementaryTypeName","src":"6019:7:19","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6018:9:19"},"scope":7459,"src":"5962:192:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6195,"nodeType":"Block","src":"6549:126:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"6567:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6581:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6182,"name":"uint168","nodeType":"ElementaryTypeName","src":"6581:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":6181,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6576:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6576:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":6185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6590:3:19","memberName":"max","nodeType":"MemberAccess","src":"6576:17:19","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6567:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":6187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6595:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":6179,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6559:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6559:78:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6189,"nodeType":"ExpressionStatement","src":"6559:78:19"},{"expression":{"arguments":[{"id":6192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"6662:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6654:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6190,"name":"uint168","nodeType":"ElementaryTypeName","src":"6654:7:19","typeDescriptions":{}}},"id":6193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6654:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":6178,"id":6194,"nodeType":"Return","src":"6647:21:19"}]},"documentation":{"id":6172,"nodeType":"StructuredDocumentation","src":"6160:318:19","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":6196,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6492:9:19","nodeType":"FunctionDefinition","parameters":{"id":6175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6174,"mutability":"mutable","name":"value","nameLocation":"6510:5:19","nodeType":"VariableDeclaration","scope":6196,"src":"6502:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6173,"name":"uint256","nodeType":"ElementaryTypeName","src":"6502:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6501:15:19"},"returnParameters":{"id":6178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6196,"src":"6540:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":6176,"name":"uint168","nodeType":"ElementaryTypeName","src":"6540:7:19","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6539:9:19"},"scope":7459,"src":"6483:192:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6220,"nodeType":"Block","src":"7070:126:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6199,"src":"7088:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7102:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6207,"name":"uint160","nodeType":"ElementaryTypeName","src":"7102:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":6206,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7097:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7097:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":6210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7111:3:19","memberName":"max","nodeType":"MemberAccess","src":"7097:17:19","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7088:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":6212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7116:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":6204,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7080:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7080:78:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6214,"nodeType":"ExpressionStatement","src":"7080:78:19"},{"expression":{"arguments":[{"id":6217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6199,"src":"7183:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7175:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6215,"name":"uint160","nodeType":"ElementaryTypeName","src":"7175:7:19","typeDescriptions":{}}},"id":6218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7175:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":6203,"id":6219,"nodeType":"Return","src":"7168:21:19"}]},"documentation":{"id":6197,"nodeType":"StructuredDocumentation","src":"6681:318:19","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":6221,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7013:9:19","nodeType":"FunctionDefinition","parameters":{"id":6200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6199,"mutability":"mutable","name":"value","nameLocation":"7031:5:19","nodeType":"VariableDeclaration","scope":6221,"src":"7023:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6198,"name":"uint256","nodeType":"ElementaryTypeName","src":"7023:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7022:15:19"},"returnParameters":{"id":6203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6221,"src":"7061:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6201,"name":"uint160","nodeType":"ElementaryTypeName","src":"7061:7:19","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7060:9:19"},"scope":7459,"src":"7004:192:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6245,"nodeType":"Block","src":"7591:126:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6224,"src":"7609:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7623:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6232,"name":"uint152","nodeType":"ElementaryTypeName","src":"7623:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":6231,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7618:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7618:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":6235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7632:3:19","memberName":"max","nodeType":"MemberAccess","src":"7618:17:19","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7609:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":6237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7637:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":6229,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7601:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7601:78:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6239,"nodeType":"ExpressionStatement","src":"7601:78:19"},{"expression":{"arguments":[{"id":6242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6224,"src":"7704:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7696:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6240,"name":"uint152","nodeType":"ElementaryTypeName","src":"7696:7:19","typeDescriptions":{}}},"id":6243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7696:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":6228,"id":6244,"nodeType":"Return","src":"7689:21:19"}]},"documentation":{"id":6222,"nodeType":"StructuredDocumentation","src":"7202:318:19","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":6246,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7534:9:19","nodeType":"FunctionDefinition","parameters":{"id":6225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6224,"mutability":"mutable","name":"value","nameLocation":"7552:5:19","nodeType":"VariableDeclaration","scope":6246,"src":"7544:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6223,"name":"uint256","nodeType":"ElementaryTypeName","src":"7544:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7543:15:19"},"returnParameters":{"id":6228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6246,"src":"7582:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":6226,"name":"uint152","nodeType":"ElementaryTypeName","src":"7582:7:19","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7581:9:19"},"scope":7459,"src":"7525:192:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6270,"nodeType":"Block","src":"8112:126:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6249,"src":"8130:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8144:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6257,"name":"uint144","nodeType":"ElementaryTypeName","src":"8144:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":6256,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8139:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8139:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":6260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8153:3:19","memberName":"max","nodeType":"MemberAccess","src":"8139:17:19","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8130:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":6262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8158:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":6254,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8122:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8122:78:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6264,"nodeType":"ExpressionStatement","src":"8122:78:19"},{"expression":{"arguments":[{"id":6267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6249,"src":"8225:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8217:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6265,"name":"uint144","nodeType":"ElementaryTypeName","src":"8217:7:19","typeDescriptions":{}}},"id":6268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8217:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":6253,"id":6269,"nodeType":"Return","src":"8210:21:19"}]},"documentation":{"id":6247,"nodeType":"StructuredDocumentation","src":"7723:318:19","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":6271,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8055:9:19","nodeType":"FunctionDefinition","parameters":{"id":6250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6249,"mutability":"mutable","name":"value","nameLocation":"8073:5:19","nodeType":"VariableDeclaration","scope":6271,"src":"8065:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6248,"name":"uint256","nodeType":"ElementaryTypeName","src":"8065:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8064:15:19"},"returnParameters":{"id":6253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6271,"src":"8103:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":6251,"name":"uint144","nodeType":"ElementaryTypeName","src":"8103:7:19","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8102:9:19"},"scope":7459,"src":"8046:192:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6295,"nodeType":"Block","src":"8633:126:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6274,"src":"8651:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8665:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6282,"name":"uint136","nodeType":"ElementaryTypeName","src":"8665:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6281,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8660:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8660:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8674:3:19","memberName":"max","nodeType":"MemberAccess","src":"8660:17:19","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8651:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":6287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8679:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":6279,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8643:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8643:78:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6289,"nodeType":"ExpressionStatement","src":"8643:78:19"},{"expression":{"arguments":[{"id":6292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6274,"src":"8746:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8738:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6290,"name":"uint136","nodeType":"ElementaryTypeName","src":"8738:7:19","typeDescriptions":{}}},"id":6293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8738:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6278,"id":6294,"nodeType":"Return","src":"8731:21:19"}]},"documentation":{"id":6272,"nodeType":"StructuredDocumentation","src":"8244:318:19","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":6296,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8576:9:19","nodeType":"FunctionDefinition","parameters":{"id":6275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6274,"mutability":"mutable","name":"value","nameLocation":"8594:5:19","nodeType":"VariableDeclaration","scope":6296,"src":"8586:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6273,"name":"uint256","nodeType":"ElementaryTypeName","src":"8586:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8585:15:19"},"returnParameters":{"id":6278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6296,"src":"8624:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6276,"name":"uint136","nodeType":"ElementaryTypeName","src":"8624:7:19","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8623:9:19"},"scope":7459,"src":"8567:192:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6320,"nodeType":"Block","src":"9154:126:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6305,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"9172:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9186:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6307,"name":"uint128","nodeType":"ElementaryTypeName","src":"9186:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6306,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9181:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9181:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9195:3:19","memberName":"max","nodeType":"MemberAccess","src":"9181:17:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9172:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":6312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9200:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":6304,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9164:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9164:78:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6314,"nodeType":"ExpressionStatement","src":"9164:78:19"},{"expression":{"arguments":[{"id":6317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"9267:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9259:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6315,"name":"uint128","nodeType":"ElementaryTypeName","src":"9259:7:19","typeDescriptions":{}}},"id":6318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9259:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6303,"id":6319,"nodeType":"Return","src":"9252:21:19"}]},"documentation":{"id":6297,"nodeType":"StructuredDocumentation","src":"8765:318:19","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v2.5._"},"id":6321,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9097:9:19","nodeType":"FunctionDefinition","parameters":{"id":6300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6299,"mutability":"mutable","name":"value","nameLocation":"9115:5:19","nodeType":"VariableDeclaration","scope":6321,"src":"9107:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6298,"name":"uint256","nodeType":"ElementaryTypeName","src":"9107:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9106:15:19"},"returnParameters":{"id":6303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6321,"src":"9145:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6301,"name":"uint128","nodeType":"ElementaryTypeName","src":"9145:7:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9144:9:19"},"scope":7459,"src":"9088:192:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6345,"nodeType":"Block","src":"9675:126:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6324,"src":"9693:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6332,"name":"uint120","nodeType":"ElementaryTypeName","src":"9707:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":6331,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9702:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9702:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":6335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9716:3:19","memberName":"max","nodeType":"MemberAccess","src":"9702:17:19","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9693:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":6337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9721:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":6329,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9685:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9685:78:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6339,"nodeType":"ExpressionStatement","src":"9685:78:19"},{"expression":{"arguments":[{"id":6342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6324,"src":"9788:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9780:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6340,"name":"uint120","nodeType":"ElementaryTypeName","src":"9780:7:19","typeDescriptions":{}}},"id":6343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9780:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6328,"id":6344,"nodeType":"Return","src":"9773:21:19"}]},"documentation":{"id":6322,"nodeType":"StructuredDocumentation","src":"9286:318:19","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":6346,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9618:9:19","nodeType":"FunctionDefinition","parameters":{"id":6325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6324,"mutability":"mutable","name":"value","nameLocation":"9636:5:19","nodeType":"VariableDeclaration","scope":6346,"src":"9628:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6323,"name":"uint256","nodeType":"ElementaryTypeName","src":"9628:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9627:15:19"},"returnParameters":{"id":6328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6346,"src":"9666:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6326,"name":"uint120","nodeType":"ElementaryTypeName","src":"9666:7:19","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9665:9:19"},"scope":7459,"src":"9609:192:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6370,"nodeType":"Block","src":"10196:126:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6349,"src":"10214:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10228:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6357,"name":"uint112","nodeType":"ElementaryTypeName","src":"10228:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":6356,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10223:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":6360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10237:3:19","memberName":"max","nodeType":"MemberAccess","src":"10223:17:19","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10214:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":6362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10242:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":6354,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10206:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10206:78:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6364,"nodeType":"ExpressionStatement","src":"10206:78:19"},{"expression":{"arguments":[{"id":6367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6349,"src":"10309:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10301:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6365,"name":"uint112","nodeType":"ElementaryTypeName","src":"10301:7:19","typeDescriptions":{}}},"id":6368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10301:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":6353,"id":6369,"nodeType":"Return","src":"10294:21:19"}]},"documentation":{"id":6347,"nodeType":"StructuredDocumentation","src":"9807:318:19","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":6371,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10139:9:19","nodeType":"FunctionDefinition","parameters":{"id":6350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6349,"mutability":"mutable","name":"value","nameLocation":"10157:5:19","nodeType":"VariableDeclaration","scope":6371,"src":"10149:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6348,"name":"uint256","nodeType":"ElementaryTypeName","src":"10149:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10148:15:19"},"returnParameters":{"id":6353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6371,"src":"10187:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6351,"name":"uint112","nodeType":"ElementaryTypeName","src":"10187:7:19","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10186:9:19"},"scope":7459,"src":"10130:192:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6395,"nodeType":"Block","src":"10717:126:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"10735:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10749:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6382,"name":"uint104","nodeType":"ElementaryTypeName","src":"10749:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":6381,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10744:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10744:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":6385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10758:3:19","memberName":"max","nodeType":"MemberAccess","src":"10744:17:19","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10735:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":6387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10763:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":6379,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10727:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10727:78:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6389,"nodeType":"ExpressionStatement","src":"10727:78:19"},{"expression":{"arguments":[{"id":6392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"10830:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10822:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6390,"name":"uint104","nodeType":"ElementaryTypeName","src":"10822:7:19","typeDescriptions":{}}},"id":6393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10822:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":6378,"id":6394,"nodeType":"Return","src":"10815:21:19"}]},"documentation":{"id":6372,"nodeType":"StructuredDocumentation","src":"10328:318:19","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":6396,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10660:9:19","nodeType":"FunctionDefinition","parameters":{"id":6375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6374,"mutability":"mutable","name":"value","nameLocation":"10678:5:19","nodeType":"VariableDeclaration","scope":6396,"src":"10670:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6373,"name":"uint256","nodeType":"ElementaryTypeName","src":"10670:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10669:15:19"},"returnParameters":{"id":6378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6396,"src":"10708:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":6376,"name":"uint104","nodeType":"ElementaryTypeName","src":"10708:7:19","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10707:9:19"},"scope":7459,"src":"10651:192:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6420,"nodeType":"Block","src":"11232:123:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"11250:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11264:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6407,"name":"uint96","nodeType":"ElementaryTypeName","src":"11264:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6406,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11259:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11259:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11272:3:19","memberName":"max","nodeType":"MemberAccess","src":"11259:16:19","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11250:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":6412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11277:40:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":6404,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11242:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11242:76:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6414,"nodeType":"ExpressionStatement","src":"11242:76:19"},{"expression":{"arguments":[{"id":6417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"11342:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11335:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6415,"name":"uint96","nodeType":"ElementaryTypeName","src":"11335:6:19","typeDescriptions":{}}},"id":6418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11335:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6403,"id":6419,"nodeType":"Return","src":"11328:20:19"}]},"documentation":{"id":6397,"nodeType":"StructuredDocumentation","src":"10849:314:19","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.2._"},"id":6421,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11177:8:19","nodeType":"FunctionDefinition","parameters":{"id":6400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6399,"mutability":"mutable","name":"value","nameLocation":"11194:5:19","nodeType":"VariableDeclaration","scope":6421,"src":"11186:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6398,"name":"uint256","nodeType":"ElementaryTypeName","src":"11186:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11185:15:19"},"returnParameters":{"id":6403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6421,"src":"11224:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6401,"name":"uint96","nodeType":"ElementaryTypeName","src":"11224:6:19","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11223:8:19"},"scope":7459,"src":"11168:187:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6445,"nodeType":"Block","src":"11744:123:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6424,"src":"11762:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11776:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6432,"name":"uint88","nodeType":"ElementaryTypeName","src":"11776:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":6431,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11771:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11771:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":6435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11784:3:19","memberName":"max","nodeType":"MemberAccess","src":"11771:16:19","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11762:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":6437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11789:40:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":6429,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11754:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11754:76:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6439,"nodeType":"ExpressionStatement","src":"11754:76:19"},{"expression":{"arguments":[{"id":6442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6424,"src":"11854:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6440,"name":"uint88","nodeType":"ElementaryTypeName","src":"11847:6:19","typeDescriptions":{}}},"id":6443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":6428,"id":6444,"nodeType":"Return","src":"11840:20:19"}]},"documentation":{"id":6422,"nodeType":"StructuredDocumentation","src":"11361:314:19","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":6446,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11689:8:19","nodeType":"FunctionDefinition","parameters":{"id":6425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6424,"mutability":"mutable","name":"value","nameLocation":"11706:5:19","nodeType":"VariableDeclaration","scope":6446,"src":"11698:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6423,"name":"uint256","nodeType":"ElementaryTypeName","src":"11698:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11697:15:19"},"returnParameters":{"id":6428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6427,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6446,"src":"11736:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6426,"name":"uint88","nodeType":"ElementaryTypeName","src":"11736:6:19","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11735:8:19"},"scope":7459,"src":"11680:187:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6470,"nodeType":"Block","src":"12256:123:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6449,"src":"12274:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12288:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6457,"name":"uint80","nodeType":"ElementaryTypeName","src":"12288:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":6456,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12283:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12283:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12296:3:19","memberName":"max","nodeType":"MemberAccess","src":"12283:16:19","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12274:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":6462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12301:40:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":6454,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12266:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12266:76:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6464,"nodeType":"ExpressionStatement","src":"12266:76:19"},{"expression":{"arguments":[{"id":6467,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6449,"src":"12366:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12359:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6465,"name":"uint80","nodeType":"ElementaryTypeName","src":"12359:6:19","typeDescriptions":{}}},"id":6468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12359:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":6453,"id":6469,"nodeType":"Return","src":"12352:20:19"}]},"documentation":{"id":6447,"nodeType":"StructuredDocumentation","src":"11873:314:19","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":6471,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12201:8:19","nodeType":"FunctionDefinition","parameters":{"id":6450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6449,"mutability":"mutable","name":"value","nameLocation":"12218:5:19","nodeType":"VariableDeclaration","scope":6471,"src":"12210:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6448,"name":"uint256","nodeType":"ElementaryTypeName","src":"12210:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12209:15:19"},"returnParameters":{"id":6453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6471,"src":"12248:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6451,"name":"uint80","nodeType":"ElementaryTypeName","src":"12248:6:19","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12247:8:19"},"scope":7459,"src":"12192:187:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6495,"nodeType":"Block","src":"12768:123:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6474,"src":"12786:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12800:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6482,"name":"uint72","nodeType":"ElementaryTypeName","src":"12800:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":6481,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12795:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12795:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":6485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12808:3:19","memberName":"max","nodeType":"MemberAccess","src":"12795:16:19","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12786:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":6487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12813:40:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":6479,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12778:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12778:76:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6489,"nodeType":"ExpressionStatement","src":"12778:76:19"},{"expression":{"arguments":[{"id":6492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6474,"src":"12878:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12871:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6490,"name":"uint72","nodeType":"ElementaryTypeName","src":"12871:6:19","typeDescriptions":{}}},"id":6493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12871:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":6478,"id":6494,"nodeType":"Return","src":"12864:20:19"}]},"documentation":{"id":6472,"nodeType":"StructuredDocumentation","src":"12385:314:19","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":6496,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12713:8:19","nodeType":"FunctionDefinition","parameters":{"id":6475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6474,"mutability":"mutable","name":"value","nameLocation":"12730:5:19","nodeType":"VariableDeclaration","scope":6496,"src":"12722:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6473,"name":"uint256","nodeType":"ElementaryTypeName","src":"12722:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12721:15:19"},"returnParameters":{"id":6478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6496,"src":"12760:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":6476,"name":"uint72","nodeType":"ElementaryTypeName","src":"12760:6:19","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12759:8:19"},"scope":7459,"src":"12704:187:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6520,"nodeType":"Block","src":"13280:123:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6499,"src":"13298:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13312:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6507,"name":"uint64","nodeType":"ElementaryTypeName","src":"13312:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6506,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13307:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13307:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13320:3:19","memberName":"max","nodeType":"MemberAccess","src":"13307:16:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13298:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":6512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13325:40:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":6504,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13290:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13290:76:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6514,"nodeType":"ExpressionStatement","src":"13290:76:19"},{"expression":{"arguments":[{"id":6517,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6499,"src":"13390:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13383:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6515,"name":"uint64","nodeType":"ElementaryTypeName","src":"13383:6:19","typeDescriptions":{}}},"id":6518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13383:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6503,"id":6519,"nodeType":"Return","src":"13376:20:19"}]},"documentation":{"id":6497,"nodeType":"StructuredDocumentation","src":"12897:314:19","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v2.5._"},"id":6521,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13225:8:19","nodeType":"FunctionDefinition","parameters":{"id":6500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6499,"mutability":"mutable","name":"value","nameLocation":"13242:5:19","nodeType":"VariableDeclaration","scope":6521,"src":"13234:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6498,"name":"uint256","nodeType":"ElementaryTypeName","src":"13234:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13233:15:19"},"returnParameters":{"id":6503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6521,"src":"13272:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6501,"name":"uint64","nodeType":"ElementaryTypeName","src":"13272:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13271:8:19"},"scope":7459,"src":"13216:187:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6545,"nodeType":"Block","src":"13792:123:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6524,"src":"13810:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13824:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6532,"name":"uint56","nodeType":"ElementaryTypeName","src":"13824:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":6531,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13819:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13819:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":6535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13832:3:19","memberName":"max","nodeType":"MemberAccess","src":"13819:16:19","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13810:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":6537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13837:40:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":6529,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13802:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13802:76:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6539,"nodeType":"ExpressionStatement","src":"13802:76:19"},{"expression":{"arguments":[{"id":6542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6524,"src":"13902:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13895:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6540,"name":"uint56","nodeType":"ElementaryTypeName","src":"13895:6:19","typeDescriptions":{}}},"id":6543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13895:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":6528,"id":6544,"nodeType":"Return","src":"13888:20:19"}]},"documentation":{"id":6522,"nodeType":"StructuredDocumentation","src":"13409:314:19","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":6546,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13737:8:19","nodeType":"FunctionDefinition","parameters":{"id":6525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6524,"mutability":"mutable","name":"value","nameLocation":"13754:5:19","nodeType":"VariableDeclaration","scope":6546,"src":"13746:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6523,"name":"uint256","nodeType":"ElementaryTypeName","src":"13746:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13745:15:19"},"returnParameters":{"id":6528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6546,"src":"13784:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":6526,"name":"uint56","nodeType":"ElementaryTypeName","src":"13784:6:19","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13783:8:19"},"scope":7459,"src":"13728:187:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6570,"nodeType":"Block","src":"14304:123:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"14322:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14336:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6557,"name":"uint48","nodeType":"ElementaryTypeName","src":"14336:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6556,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14331:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14331:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14344:3:19","memberName":"max","nodeType":"MemberAccess","src":"14331:16:19","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14322:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":6562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14349:40:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":6554,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14314:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14314:76:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6564,"nodeType":"ExpressionStatement","src":"14314:76:19"},{"expression":{"arguments":[{"id":6567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"14414:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14407:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6565,"name":"uint48","nodeType":"ElementaryTypeName","src":"14407:6:19","typeDescriptions":{}}},"id":6568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14407:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6553,"id":6569,"nodeType":"Return","src":"14400:20:19"}]},"documentation":{"id":6547,"nodeType":"StructuredDocumentation","src":"13921:314:19","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":6571,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14249:8:19","nodeType":"FunctionDefinition","parameters":{"id":6550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6549,"mutability":"mutable","name":"value","nameLocation":"14266:5:19","nodeType":"VariableDeclaration","scope":6571,"src":"14258:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6548,"name":"uint256","nodeType":"ElementaryTypeName","src":"14258:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14257:15:19"},"returnParameters":{"id":6553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6571,"src":"14296:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6551,"name":"uint48","nodeType":"ElementaryTypeName","src":"14296:6:19","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14295:8:19"},"scope":7459,"src":"14240:187:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6595,"nodeType":"Block","src":"14816:123:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"14834:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14848:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6582,"name":"uint40","nodeType":"ElementaryTypeName","src":"14848:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6581,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14843:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14843:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14856:3:19","memberName":"max","nodeType":"MemberAccess","src":"14843:16:19","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14834:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":6587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14861:40:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":6579,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14826:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14826:76:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6589,"nodeType":"ExpressionStatement","src":"14826:76:19"},{"expression":{"arguments":[{"id":6592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"14926:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14919:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6590,"name":"uint40","nodeType":"ElementaryTypeName","src":"14919:6:19","typeDescriptions":{}}},"id":6593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14919:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6578,"id":6594,"nodeType":"Return","src":"14912:20:19"}]},"documentation":{"id":6572,"nodeType":"StructuredDocumentation","src":"14433:314:19","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":6596,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14761:8:19","nodeType":"FunctionDefinition","parameters":{"id":6575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6574,"mutability":"mutable","name":"value","nameLocation":"14778:5:19","nodeType":"VariableDeclaration","scope":6596,"src":"14770:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6573,"name":"uint256","nodeType":"ElementaryTypeName","src":"14770:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14769:15:19"},"returnParameters":{"id":6578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6596,"src":"14808:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6576,"name":"uint40","nodeType":"ElementaryTypeName","src":"14808:6:19","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14807:8:19"},"scope":7459,"src":"14752:187:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6620,"nodeType":"Block","src":"15328:123:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6605,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6599,"src":"15346:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15360:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6607,"name":"uint32","nodeType":"ElementaryTypeName","src":"15360:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6606,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15355:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15355:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15368:3:19","memberName":"max","nodeType":"MemberAccess","src":"15355:16:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15346:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":6612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15373:40:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":6604,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15338:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15338:76:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6614,"nodeType":"ExpressionStatement","src":"15338:76:19"},{"expression":{"arguments":[{"id":6617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6599,"src":"15438:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15431:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6615,"name":"uint32","nodeType":"ElementaryTypeName","src":"15431:6:19","typeDescriptions":{}}},"id":6618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15431:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6603,"id":6619,"nodeType":"Return","src":"15424:20:19"}]},"documentation":{"id":6597,"nodeType":"StructuredDocumentation","src":"14945:314:19","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v2.5._"},"id":6621,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15273:8:19","nodeType":"FunctionDefinition","parameters":{"id":6600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6599,"mutability":"mutable","name":"value","nameLocation":"15290:5:19","nodeType":"VariableDeclaration","scope":6621,"src":"15282:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6598,"name":"uint256","nodeType":"ElementaryTypeName","src":"15282:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15281:15:19"},"returnParameters":{"id":6603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6621,"src":"15320:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6601,"name":"uint32","nodeType":"ElementaryTypeName","src":"15320:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15319:8:19"},"scope":7459,"src":"15264:187:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6645,"nodeType":"Block","src":"15840:123:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6624,"src":"15858:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15872:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6632,"name":"uint24","nodeType":"ElementaryTypeName","src":"15872:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6631,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15867:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15867:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15880:3:19","memberName":"max","nodeType":"MemberAccess","src":"15867:16:19","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15858:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":6637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15885:40:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":6629,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15850:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15850:76:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6639,"nodeType":"ExpressionStatement","src":"15850:76:19"},{"expression":{"arguments":[{"id":6642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6624,"src":"15950:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15943:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6640,"name":"uint24","nodeType":"ElementaryTypeName","src":"15943:6:19","typeDescriptions":{}}},"id":6643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15943:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6628,"id":6644,"nodeType":"Return","src":"15936:20:19"}]},"documentation":{"id":6622,"nodeType":"StructuredDocumentation","src":"15457:314:19","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":6646,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15785:8:19","nodeType":"FunctionDefinition","parameters":{"id":6625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6624,"mutability":"mutable","name":"value","nameLocation":"15802:5:19","nodeType":"VariableDeclaration","scope":6646,"src":"15794:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6623,"name":"uint256","nodeType":"ElementaryTypeName","src":"15794:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15793:15:19"},"returnParameters":{"id":6628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6646,"src":"15832:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6626,"name":"uint24","nodeType":"ElementaryTypeName","src":"15832:6:19","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15831:8:19"},"scope":7459,"src":"15776:187:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6670,"nodeType":"Block","src":"16352:123:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"16370:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16384:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6657,"name":"uint16","nodeType":"ElementaryTypeName","src":"16384:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6656,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16379:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16379:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16392:3:19","memberName":"max","nodeType":"MemberAccess","src":"16379:16:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16370:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":6662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16397:40:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":6654,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16362:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16362:76:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6664,"nodeType":"ExpressionStatement","src":"16362:76:19"},{"expression":{"arguments":[{"id":6667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"16462:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16455:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6665,"name":"uint16","nodeType":"ElementaryTypeName","src":"16455:6:19","typeDescriptions":{}}},"id":6668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16455:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6653,"id":6669,"nodeType":"Return","src":"16448:20:19"}]},"documentation":{"id":6647,"nodeType":"StructuredDocumentation","src":"15969:314:19","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v2.5._"},"id":6671,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16297:8:19","nodeType":"FunctionDefinition","parameters":{"id":6650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6649,"mutability":"mutable","name":"value","nameLocation":"16314:5:19","nodeType":"VariableDeclaration","scope":6671,"src":"16306:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6648,"name":"uint256","nodeType":"ElementaryTypeName","src":"16306:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16305:15:19"},"returnParameters":{"id":6653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6671,"src":"16344:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6651,"name":"uint16","nodeType":"ElementaryTypeName","src":"16344:6:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16343:8:19"},"scope":7459,"src":"16288:187:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6695,"nodeType":"Block","src":"16858:120:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"16876:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":6683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16890:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6682,"name":"uint8","nodeType":"ElementaryTypeName","src":"16890:5:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6681,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16885:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16885:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16897:3:19","memberName":"max","nodeType":"MemberAccess","src":"16885:15:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16876:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":6687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16902:39:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":6679,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16868:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16868:74:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6689,"nodeType":"ExpressionStatement","src":"16868:74:19"},{"expression":{"arguments":[{"id":6692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"16965:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16959:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6690,"name":"uint8","nodeType":"ElementaryTypeName","src":"16959:5:19","typeDescriptions":{}}},"id":6693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16959:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6678,"id":6694,"nodeType":"Return","src":"16952:19:19"}]},"documentation":{"id":6672,"nodeType":"StructuredDocumentation","src":"16481:310:19","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v2.5._"},"id":6696,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16805:7:19","nodeType":"FunctionDefinition","parameters":{"id":6675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6674,"mutability":"mutable","name":"value","nameLocation":"16821:5:19","nodeType":"VariableDeclaration","scope":6696,"src":"16813:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6673,"name":"uint256","nodeType":"ElementaryTypeName","src":"16813:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16812:15:19"},"returnParameters":{"id":6678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6677,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6696,"src":"16851:5:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6676,"name":"uint8","nodeType":"ElementaryTypeName","src":"16851:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16850:7:19"},"scope":7459,"src":"16796:182:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6716,"nodeType":"Block","src":"17252:103:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6699,"src":"17270:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":6706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17279:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17270:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c7565206d75737420626520706f736974697665","id":6708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17282:34:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""},"value":"SafeCast: value must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""}],"id":6704,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17262:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17262:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6710,"nodeType":"ExpressionStatement","src":"17262:55:19"},{"expression":{"arguments":[{"id":6713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6699,"src":"17342:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17334:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6711,"name":"uint256","nodeType":"ElementaryTypeName","src":"17334:7:19","typeDescriptions":{}}},"id":6714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17334:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6703,"id":6715,"nodeType":"Return","src":"17327:21:19"}]},"documentation":{"id":6697,"nodeType":"StructuredDocumentation","src":"16984:198:19","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0.\n _Available since v3.0._"},"id":6717,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17196:9:19","nodeType":"FunctionDefinition","parameters":{"id":6700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6699,"mutability":"mutable","name":"value","nameLocation":"17213:5:19","nodeType":"VariableDeclaration","scope":6717,"src":"17206:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6698,"name":"int256","nodeType":"ElementaryTypeName","src":"17206:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17205:14:19"},"returnParameters":{"id":6703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6702,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6717,"src":"17243:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6701,"name":"uint256","nodeType":"ElementaryTypeName","src":"17243:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17242:9:19"},"scope":7459,"src":"17187:168:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6739,"nodeType":"Block","src":"17790:124:19","statements":[{"expression":{"id":6730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6725,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"17800:10:19","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6720,"src":"17820:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17813:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6726,"name":"int248","nodeType":"ElementaryTypeName","src":"17813:6:19","typeDescriptions":{}}},"id":6729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17813:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17800:26:19","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6731,"nodeType":"ExpressionStatement","src":"17800:26:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6733,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"17844:10:19","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6720,"src":"17858:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17844:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":6736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17865:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":6732,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17836:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17836:71:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6738,"nodeType":"ExpressionStatement","src":"17836:71:19"}]},"documentation":{"id":6718,"nodeType":"StructuredDocumentation","src":"17361:350:19","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":6740,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17725:8:19","nodeType":"FunctionDefinition","parameters":{"id":6721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6720,"mutability":"mutable","name":"value","nameLocation":"17741:5:19","nodeType":"VariableDeclaration","scope":6740,"src":"17734:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6719,"name":"int256","nodeType":"ElementaryTypeName","src":"17734:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17733:14:19"},"returnParameters":{"id":6724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6723,"mutability":"mutable","name":"downcasted","nameLocation":"17778:10:19","nodeType":"VariableDeclaration","scope":6740,"src":"17771:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6722,"name":"int248","nodeType":"ElementaryTypeName","src":"17771:6:19","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17770:19:19"},"scope":7459,"src":"17716:198:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6762,"nodeType":"Block","src":"18349:124:19","statements":[{"expression":{"id":6753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6748,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"18359:10:19","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6743,"src":"18379:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18372:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6749,"name":"int240","nodeType":"ElementaryTypeName","src":"18372:6:19","typeDescriptions":{}}},"id":6752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18372:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18359:26:19","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6754,"nodeType":"ExpressionStatement","src":"18359:26:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6756,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"18403:10:19","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6743,"src":"18417:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18403:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":6759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18424:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":6755,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18395:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18395:71:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6761,"nodeType":"ExpressionStatement","src":"18395:71:19"}]},"documentation":{"id":6741,"nodeType":"StructuredDocumentation","src":"17920:350:19","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":6763,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18284:8:19","nodeType":"FunctionDefinition","parameters":{"id":6744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6743,"mutability":"mutable","name":"value","nameLocation":"18300:5:19","nodeType":"VariableDeclaration","scope":6763,"src":"18293:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6742,"name":"int256","nodeType":"ElementaryTypeName","src":"18293:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18292:14:19"},"returnParameters":{"id":6747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6746,"mutability":"mutable","name":"downcasted","nameLocation":"18337:10:19","nodeType":"VariableDeclaration","scope":6763,"src":"18330:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6745,"name":"int240","nodeType":"ElementaryTypeName","src":"18330:6:19","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18329:19:19"},"scope":7459,"src":"18275:198:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6785,"nodeType":"Block","src":"18908:124:19","statements":[{"expression":{"id":6776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6771,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6769,"src":"18918:10:19","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6774,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6766,"src":"18938:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18931:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6772,"name":"int232","nodeType":"ElementaryTypeName","src":"18931:6:19","typeDescriptions":{}}},"id":6775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18931:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18918:26:19","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6777,"nodeType":"ExpressionStatement","src":"18918:26:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6779,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6769,"src":"18962:10:19","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6766,"src":"18976:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18962:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":6782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18983:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":6778,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18954:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18954:71:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6784,"nodeType":"ExpressionStatement","src":"18954:71:19"}]},"documentation":{"id":6764,"nodeType":"StructuredDocumentation","src":"18479:350:19","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":6786,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18843:8:19","nodeType":"FunctionDefinition","parameters":{"id":6767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6766,"mutability":"mutable","name":"value","nameLocation":"18859:5:19","nodeType":"VariableDeclaration","scope":6786,"src":"18852:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6765,"name":"int256","nodeType":"ElementaryTypeName","src":"18852:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18851:14:19"},"returnParameters":{"id":6770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6769,"mutability":"mutable","name":"downcasted","nameLocation":"18896:10:19","nodeType":"VariableDeclaration","scope":6786,"src":"18889:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6768,"name":"int232","nodeType":"ElementaryTypeName","src":"18889:6:19","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18888:19:19"},"scope":7459,"src":"18834:198:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6808,"nodeType":"Block","src":"19467:124:19","statements":[{"expression":{"id":6799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6794,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6792,"src":"19477:10:19","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6789,"src":"19497:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19490:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6795,"name":"int224","nodeType":"ElementaryTypeName","src":"19490:6:19","typeDescriptions":{}}},"id":6798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19490:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19477:26:19","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6800,"nodeType":"ExpressionStatement","src":"19477:26:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6802,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6792,"src":"19521:10:19","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6789,"src":"19535:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19521:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":6805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19542:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":6801,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19513:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19513:71:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6807,"nodeType":"ExpressionStatement","src":"19513:71:19"}]},"documentation":{"id":6787,"nodeType":"StructuredDocumentation","src":"19038:350:19","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.7._"},"id":6809,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19402:8:19","nodeType":"FunctionDefinition","parameters":{"id":6790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6789,"mutability":"mutable","name":"value","nameLocation":"19418:5:19","nodeType":"VariableDeclaration","scope":6809,"src":"19411:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6788,"name":"int256","nodeType":"ElementaryTypeName","src":"19411:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19410:14:19"},"returnParameters":{"id":6793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6792,"mutability":"mutable","name":"downcasted","nameLocation":"19455:10:19","nodeType":"VariableDeclaration","scope":6809,"src":"19448:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6791,"name":"int224","nodeType":"ElementaryTypeName","src":"19448:6:19","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19447:19:19"},"scope":7459,"src":"19393:198:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6831,"nodeType":"Block","src":"20026:124:19","statements":[{"expression":{"id":6822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6817,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6815,"src":"20036:10:19","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"20056:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20049:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6818,"name":"int216","nodeType":"ElementaryTypeName","src":"20049:6:19","typeDescriptions":{}}},"id":6821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20049:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"20036:26:19","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6823,"nodeType":"ExpressionStatement","src":"20036:26:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6825,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6815,"src":"20080:10:19","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"20094:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20080:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":6828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20101:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":6824,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20072:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20072:71:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6830,"nodeType":"ExpressionStatement","src":"20072:71:19"}]},"documentation":{"id":6810,"nodeType":"StructuredDocumentation","src":"19597:350:19","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":6832,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19961:8:19","nodeType":"FunctionDefinition","parameters":{"id":6813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6812,"mutability":"mutable","name":"value","nameLocation":"19977:5:19","nodeType":"VariableDeclaration","scope":6832,"src":"19970:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6811,"name":"int256","nodeType":"ElementaryTypeName","src":"19970:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19969:14:19"},"returnParameters":{"id":6816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6815,"mutability":"mutable","name":"downcasted","nameLocation":"20014:10:19","nodeType":"VariableDeclaration","scope":6832,"src":"20007:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6814,"name":"int216","nodeType":"ElementaryTypeName","src":"20007:6:19","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"20006:19:19"},"scope":7459,"src":"19952:198:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6854,"nodeType":"Block","src":"20585:124:19","statements":[{"expression":{"id":6845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6840,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6838,"src":"20595:10:19","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6835,"src":"20615:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20608:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6841,"name":"int208","nodeType":"ElementaryTypeName","src":"20608:6:19","typeDescriptions":{}}},"id":6844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20608:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20595:26:19","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6846,"nodeType":"ExpressionStatement","src":"20595:26:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6848,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6838,"src":"20639:10:19","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6835,"src":"20653:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20639:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":6851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20660:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":6847,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20631:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20631:71:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6853,"nodeType":"ExpressionStatement","src":"20631:71:19"}]},"documentation":{"id":6833,"nodeType":"StructuredDocumentation","src":"20156:350:19","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":6855,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20520:8:19","nodeType":"FunctionDefinition","parameters":{"id":6836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6835,"mutability":"mutable","name":"value","nameLocation":"20536:5:19","nodeType":"VariableDeclaration","scope":6855,"src":"20529:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6834,"name":"int256","nodeType":"ElementaryTypeName","src":"20529:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20528:14:19"},"returnParameters":{"id":6839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6838,"mutability":"mutable","name":"downcasted","nameLocation":"20573:10:19","nodeType":"VariableDeclaration","scope":6855,"src":"20566:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6837,"name":"int208","nodeType":"ElementaryTypeName","src":"20566:6:19","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20565:19:19"},"scope":7459,"src":"20511:198:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6877,"nodeType":"Block","src":"21144:124:19","statements":[{"expression":{"id":6868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6863,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6861,"src":"21154:10:19","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6858,"src":"21174:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21167:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6864,"name":"int200","nodeType":"ElementaryTypeName","src":"21167:6:19","typeDescriptions":{}}},"id":6867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21167:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21154:26:19","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6869,"nodeType":"ExpressionStatement","src":"21154:26:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6871,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6861,"src":"21198:10:19","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6858,"src":"21212:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21198:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":6874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21219:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":6870,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21190:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21190:71:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6876,"nodeType":"ExpressionStatement","src":"21190:71:19"}]},"documentation":{"id":6856,"nodeType":"StructuredDocumentation","src":"20715:350:19","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":6878,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"21079:8:19","nodeType":"FunctionDefinition","parameters":{"id":6859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6858,"mutability":"mutable","name":"value","nameLocation":"21095:5:19","nodeType":"VariableDeclaration","scope":6878,"src":"21088:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6857,"name":"int256","nodeType":"ElementaryTypeName","src":"21088:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21087:14:19"},"returnParameters":{"id":6862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6861,"mutability":"mutable","name":"downcasted","nameLocation":"21132:10:19","nodeType":"VariableDeclaration","scope":6878,"src":"21125:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6860,"name":"int200","nodeType":"ElementaryTypeName","src":"21125:6:19","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21124:19:19"},"scope":7459,"src":"21070:198:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6900,"nodeType":"Block","src":"21703:124:19","statements":[{"expression":{"id":6891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6886,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"21713:10:19","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"21733:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21726:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6887,"name":"int192","nodeType":"ElementaryTypeName","src":"21726:6:19","typeDescriptions":{}}},"id":6890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21726:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21713:26:19","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6892,"nodeType":"ExpressionStatement","src":"21713:26:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6894,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"21757:10:19","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"21771:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21757:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":6897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21778:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":6893,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21749:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21749:71:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6899,"nodeType":"ExpressionStatement","src":"21749:71:19"}]},"documentation":{"id":6879,"nodeType":"StructuredDocumentation","src":"21274:350:19","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":6901,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21638:8:19","nodeType":"FunctionDefinition","parameters":{"id":6882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6881,"mutability":"mutable","name":"value","nameLocation":"21654:5:19","nodeType":"VariableDeclaration","scope":6901,"src":"21647:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6880,"name":"int256","nodeType":"ElementaryTypeName","src":"21647:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21646:14:19"},"returnParameters":{"id":6885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6884,"mutability":"mutable","name":"downcasted","nameLocation":"21691:10:19","nodeType":"VariableDeclaration","scope":6901,"src":"21684:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6883,"name":"int192","nodeType":"ElementaryTypeName","src":"21684:6:19","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21683:19:19"},"scope":7459,"src":"21629:198:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6923,"nodeType":"Block","src":"22262:124:19","statements":[{"expression":{"id":6914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6909,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6907,"src":"22272:10:19","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"22292:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22285:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6910,"name":"int184","nodeType":"ElementaryTypeName","src":"22285:6:19","typeDescriptions":{}}},"id":6913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22285:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22272:26:19","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6915,"nodeType":"ExpressionStatement","src":"22272:26:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6917,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6907,"src":"22316:10:19","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"22330:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22316:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":6920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22337:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":6916,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22308:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22308:71:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6922,"nodeType":"ExpressionStatement","src":"22308:71:19"}]},"documentation":{"id":6902,"nodeType":"StructuredDocumentation","src":"21833:350:19","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":6924,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22197:8:19","nodeType":"FunctionDefinition","parameters":{"id":6905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6904,"mutability":"mutable","name":"value","nameLocation":"22213:5:19","nodeType":"VariableDeclaration","scope":6924,"src":"22206:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6903,"name":"int256","nodeType":"ElementaryTypeName","src":"22206:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22205:14:19"},"returnParameters":{"id":6908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6907,"mutability":"mutable","name":"downcasted","nameLocation":"22250:10:19","nodeType":"VariableDeclaration","scope":6924,"src":"22243:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6906,"name":"int184","nodeType":"ElementaryTypeName","src":"22243:6:19","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22242:19:19"},"scope":7459,"src":"22188:198:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6946,"nodeType":"Block","src":"22821:124:19","statements":[{"expression":{"id":6937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6932,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"22831:10:19","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6927,"src":"22851:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22844:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6933,"name":"int176","nodeType":"ElementaryTypeName","src":"22844:6:19","typeDescriptions":{}}},"id":6936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22844:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22831:26:19","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6938,"nodeType":"ExpressionStatement","src":"22831:26:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6940,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"22875:10:19","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6927,"src":"22889:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22875:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":6943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22896:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":6939,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22867:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22867:71:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6945,"nodeType":"ExpressionStatement","src":"22867:71:19"}]},"documentation":{"id":6925,"nodeType":"StructuredDocumentation","src":"22392:350:19","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":6947,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22756:8:19","nodeType":"FunctionDefinition","parameters":{"id":6928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6927,"mutability":"mutable","name":"value","nameLocation":"22772:5:19","nodeType":"VariableDeclaration","scope":6947,"src":"22765:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6926,"name":"int256","nodeType":"ElementaryTypeName","src":"22765:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22764:14:19"},"returnParameters":{"id":6931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6930,"mutability":"mutable","name":"downcasted","nameLocation":"22809:10:19","nodeType":"VariableDeclaration","scope":6947,"src":"22802:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6929,"name":"int176","nodeType":"ElementaryTypeName","src":"22802:6:19","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22801:19:19"},"scope":7459,"src":"22747:198:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6969,"nodeType":"Block","src":"23380:124:19","statements":[{"expression":{"id":6960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6955,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6953,"src":"23390:10:19","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6950,"src":"23410:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23403:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6956,"name":"int168","nodeType":"ElementaryTypeName","src":"23403:6:19","typeDescriptions":{}}},"id":6959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23403:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23390:26:19","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6961,"nodeType":"ExpressionStatement","src":"23390:26:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6963,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6953,"src":"23434:10:19","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6950,"src":"23448:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23434:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":6966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23455:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":6962,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23426:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23426:71:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6968,"nodeType":"ExpressionStatement","src":"23426:71:19"}]},"documentation":{"id":6948,"nodeType":"StructuredDocumentation","src":"22951:350:19","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":6970,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23315:8:19","nodeType":"FunctionDefinition","parameters":{"id":6951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6950,"mutability":"mutable","name":"value","nameLocation":"23331:5:19","nodeType":"VariableDeclaration","scope":6970,"src":"23324:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6949,"name":"int256","nodeType":"ElementaryTypeName","src":"23324:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23323:14:19"},"returnParameters":{"id":6954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6953,"mutability":"mutable","name":"downcasted","nameLocation":"23368:10:19","nodeType":"VariableDeclaration","scope":6970,"src":"23361:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6952,"name":"int168","nodeType":"ElementaryTypeName","src":"23361:6:19","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23360:19:19"},"scope":7459,"src":"23306:198:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6992,"nodeType":"Block","src":"23939:124:19","statements":[{"expression":{"id":6983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6978,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"23949:10:19","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6973,"src":"23969:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23962:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6979,"name":"int160","nodeType":"ElementaryTypeName","src":"23962:6:19","typeDescriptions":{}}},"id":6982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23962:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23949:26:19","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6984,"nodeType":"ExpressionStatement","src":"23949:26:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6986,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"23993:10:19","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6973,"src":"24007:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23993:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":6989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24014:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":6985,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23985:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23985:71:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6991,"nodeType":"ExpressionStatement","src":"23985:71:19"}]},"documentation":{"id":6971,"nodeType":"StructuredDocumentation","src":"23510:350:19","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":6993,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23874:8:19","nodeType":"FunctionDefinition","parameters":{"id":6974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6973,"mutability":"mutable","name":"value","nameLocation":"23890:5:19","nodeType":"VariableDeclaration","scope":6993,"src":"23883:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6972,"name":"int256","nodeType":"ElementaryTypeName","src":"23883:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23882:14:19"},"returnParameters":{"id":6977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6976,"mutability":"mutable","name":"downcasted","nameLocation":"23927:10:19","nodeType":"VariableDeclaration","scope":6993,"src":"23920:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6975,"name":"int160","nodeType":"ElementaryTypeName","src":"23920:6:19","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23919:19:19"},"scope":7459,"src":"23865:198:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7015,"nodeType":"Block","src":"24498:124:19","statements":[{"expression":{"id":7006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7001,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6999,"src":"24508:10:19","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"24528:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24521:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":7002,"name":"int152","nodeType":"ElementaryTypeName","src":"24521:6:19","typeDescriptions":{}}},"id":7005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24521:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24508:26:19","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":7007,"nodeType":"ExpressionStatement","src":"24508:26:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7009,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6999,"src":"24552:10:19","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"24566:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24552:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":7012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24573:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":7008,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24544:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24544:71:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7014,"nodeType":"ExpressionStatement","src":"24544:71:19"}]},"documentation":{"id":6994,"nodeType":"StructuredDocumentation","src":"24069:350:19","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":7016,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24433:8:19","nodeType":"FunctionDefinition","parameters":{"id":6997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6996,"mutability":"mutable","name":"value","nameLocation":"24449:5:19","nodeType":"VariableDeclaration","scope":7016,"src":"24442:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6995,"name":"int256","nodeType":"ElementaryTypeName","src":"24442:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24441:14:19"},"returnParameters":{"id":7000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6999,"mutability":"mutable","name":"downcasted","nameLocation":"24486:10:19","nodeType":"VariableDeclaration","scope":7016,"src":"24479:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6998,"name":"int152","nodeType":"ElementaryTypeName","src":"24479:6:19","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24478:19:19"},"scope":7459,"src":"24424:198:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7038,"nodeType":"Block","src":"25057:124:19","statements":[{"expression":{"id":7029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7024,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7022,"src":"25067:10:19","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"25087:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25080:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":7025,"name":"int144","nodeType":"ElementaryTypeName","src":"25080:6:19","typeDescriptions":{}}},"id":7028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25080:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"25067:26:19","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":7030,"nodeType":"ExpressionStatement","src":"25067:26:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7032,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7022,"src":"25111:10:19","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"25125:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25111:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":7035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25132:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":7031,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25103:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25103:71:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7037,"nodeType":"ExpressionStatement","src":"25103:71:19"}]},"documentation":{"id":7017,"nodeType":"StructuredDocumentation","src":"24628:350:19","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":7039,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24992:8:19","nodeType":"FunctionDefinition","parameters":{"id":7020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7019,"mutability":"mutable","name":"value","nameLocation":"25008:5:19","nodeType":"VariableDeclaration","scope":7039,"src":"25001:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7018,"name":"int256","nodeType":"ElementaryTypeName","src":"25001:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25000:14:19"},"returnParameters":{"id":7023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7022,"mutability":"mutable","name":"downcasted","nameLocation":"25045:10:19","nodeType":"VariableDeclaration","scope":7039,"src":"25038:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":7021,"name":"int144","nodeType":"ElementaryTypeName","src":"25038:6:19","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"25037:19:19"},"scope":7459,"src":"24983:198:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7061,"nodeType":"Block","src":"25616:124:19","statements":[{"expression":{"id":7052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7047,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7045,"src":"25626:10:19","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7042,"src":"25646:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25639:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":7048,"name":"int136","nodeType":"ElementaryTypeName","src":"25639:6:19","typeDescriptions":{}}},"id":7051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25639:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25626:26:19","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":7053,"nodeType":"ExpressionStatement","src":"25626:26:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7055,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7045,"src":"25670:10:19","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7042,"src":"25684:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25670:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":7058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25691:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":7054,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25662:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25662:71:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7060,"nodeType":"ExpressionStatement","src":"25662:71:19"}]},"documentation":{"id":7040,"nodeType":"StructuredDocumentation","src":"25187:350:19","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":7062,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25551:8:19","nodeType":"FunctionDefinition","parameters":{"id":7043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7042,"mutability":"mutable","name":"value","nameLocation":"25567:5:19","nodeType":"VariableDeclaration","scope":7062,"src":"25560:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7041,"name":"int256","nodeType":"ElementaryTypeName","src":"25560:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25559:14:19"},"returnParameters":{"id":7046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7045,"mutability":"mutable","name":"downcasted","nameLocation":"25604:10:19","nodeType":"VariableDeclaration","scope":7062,"src":"25597:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":7044,"name":"int136","nodeType":"ElementaryTypeName","src":"25597:6:19","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25596:19:19"},"scope":7459,"src":"25542:198:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7084,"nodeType":"Block","src":"26175:124:19","statements":[{"expression":{"id":7075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7070,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7068,"src":"26185:10:19","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7065,"src":"26205:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26198:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":7071,"name":"int128","nodeType":"ElementaryTypeName","src":"26198:6:19","typeDescriptions":{}}},"id":7074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26198:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"26185:26:19","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7076,"nodeType":"ExpressionStatement","src":"26185:26:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7078,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7068,"src":"26229:10:19","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7065,"src":"26243:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26229:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":7081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26250:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":7077,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26221:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26221:71:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7083,"nodeType":"ExpressionStatement","src":"26221:71:19"}]},"documentation":{"id":7063,"nodeType":"StructuredDocumentation","src":"25746:350:19","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v3.1._"},"id":7085,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"26110:8:19","nodeType":"FunctionDefinition","parameters":{"id":7066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7065,"mutability":"mutable","name":"value","nameLocation":"26126:5:19","nodeType":"VariableDeclaration","scope":7085,"src":"26119:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7064,"name":"int256","nodeType":"ElementaryTypeName","src":"26119:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26118:14:19"},"returnParameters":{"id":7069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7068,"mutability":"mutable","name":"downcasted","nameLocation":"26163:10:19","nodeType":"VariableDeclaration","scope":7085,"src":"26156:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7067,"name":"int128","nodeType":"ElementaryTypeName","src":"26156:6:19","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"26155:19:19"},"scope":7459,"src":"26101:198:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7107,"nodeType":"Block","src":"26734:124:19","statements":[{"expression":{"id":7098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7093,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7091,"src":"26744:10:19","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7088,"src":"26764:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26757:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":7094,"name":"int120","nodeType":"ElementaryTypeName","src":"26757:6:19","typeDescriptions":{}}},"id":7097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26757:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26744:26:19","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":7099,"nodeType":"ExpressionStatement","src":"26744:26:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7101,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7091,"src":"26788:10:19","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7088,"src":"26802:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26788:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":7104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26809:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":7100,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26780:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26780:71:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7106,"nodeType":"ExpressionStatement","src":"26780:71:19"}]},"documentation":{"id":7086,"nodeType":"StructuredDocumentation","src":"26305:350:19","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":7108,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26669:8:19","nodeType":"FunctionDefinition","parameters":{"id":7089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7088,"mutability":"mutable","name":"value","nameLocation":"26685:5:19","nodeType":"VariableDeclaration","scope":7108,"src":"26678:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7087,"name":"int256","nodeType":"ElementaryTypeName","src":"26678:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26677:14:19"},"returnParameters":{"id":7092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7091,"mutability":"mutable","name":"downcasted","nameLocation":"26722:10:19","nodeType":"VariableDeclaration","scope":7108,"src":"26715:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":7090,"name":"int120","nodeType":"ElementaryTypeName","src":"26715:6:19","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26714:19:19"},"scope":7459,"src":"26660:198:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7130,"nodeType":"Block","src":"27293:124:19","statements":[{"expression":{"id":7121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7116,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"27303:10:19","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7111,"src":"27323:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27316:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":7117,"name":"int112","nodeType":"ElementaryTypeName","src":"27316:6:19","typeDescriptions":{}}},"id":7120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27316:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27303:26:19","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":7122,"nodeType":"ExpressionStatement","src":"27303:26:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7124,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"27347:10:19","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7111,"src":"27361:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27347:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":7127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27368:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":7123,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27339:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27339:71:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7129,"nodeType":"ExpressionStatement","src":"27339:71:19"}]},"documentation":{"id":7109,"nodeType":"StructuredDocumentation","src":"26864:350:19","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":7131,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"27228:8:19","nodeType":"FunctionDefinition","parameters":{"id":7112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7111,"mutability":"mutable","name":"value","nameLocation":"27244:5:19","nodeType":"VariableDeclaration","scope":7131,"src":"27237:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7110,"name":"int256","nodeType":"ElementaryTypeName","src":"27237:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27236:14:19"},"returnParameters":{"id":7115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7114,"mutability":"mutable","name":"downcasted","nameLocation":"27281:10:19","nodeType":"VariableDeclaration","scope":7131,"src":"27274:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":7113,"name":"int112","nodeType":"ElementaryTypeName","src":"27274:6:19","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27273:19:19"},"scope":7459,"src":"27219:198:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7153,"nodeType":"Block","src":"27852:124:19","statements":[{"expression":{"id":7144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7139,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"27862:10:19","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7134,"src":"27882:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27875:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":7140,"name":"int104","nodeType":"ElementaryTypeName","src":"27875:6:19","typeDescriptions":{}}},"id":7143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27875:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27862:26:19","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":7145,"nodeType":"ExpressionStatement","src":"27862:26:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7147,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"27906:10:19","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7134,"src":"27920:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27906:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":7150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27927:41:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":7146,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27898:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27898:71:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7152,"nodeType":"ExpressionStatement","src":"27898:71:19"}]},"documentation":{"id":7132,"nodeType":"StructuredDocumentation","src":"27423:350:19","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":7154,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27787:8:19","nodeType":"FunctionDefinition","parameters":{"id":7135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7134,"mutability":"mutable","name":"value","nameLocation":"27803:5:19","nodeType":"VariableDeclaration","scope":7154,"src":"27796:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7133,"name":"int256","nodeType":"ElementaryTypeName","src":"27796:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27795:14:19"},"returnParameters":{"id":7138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7137,"mutability":"mutable","name":"downcasted","nameLocation":"27840:10:19","nodeType":"VariableDeclaration","scope":7154,"src":"27833:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":7136,"name":"int104","nodeType":"ElementaryTypeName","src":"27833:6:19","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27832:19:19"},"scope":7459,"src":"27778:198:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7176,"nodeType":"Block","src":"28404:122:19","statements":[{"expression":{"id":7167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7162,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7160,"src":"28414:10:19","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7157,"src":"28433:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28427:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7163,"name":"int96","nodeType":"ElementaryTypeName","src":"28427:5:19","typeDescriptions":{}}},"id":7166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28427:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28414:25:19","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7168,"nodeType":"ExpressionStatement","src":"28414:25:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7170,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7160,"src":"28457:10:19","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7157,"src":"28471:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28457:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":7173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28478:40:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":7169,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28449:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28449:70:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7175,"nodeType":"ExpressionStatement","src":"28449:70:19"}]},"documentation":{"id":7155,"nodeType":"StructuredDocumentation","src":"27982:345:19","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.7._"},"id":7177,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28341:7:19","nodeType":"FunctionDefinition","parameters":{"id":7158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7157,"mutability":"mutable","name":"value","nameLocation":"28356:5:19","nodeType":"VariableDeclaration","scope":7177,"src":"28349:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7156,"name":"int256","nodeType":"ElementaryTypeName","src":"28349:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28348:14:19"},"returnParameters":{"id":7161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7160,"mutability":"mutable","name":"downcasted","nameLocation":"28392:10:19","nodeType":"VariableDeclaration","scope":7177,"src":"28386:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7159,"name":"int96","nodeType":"ElementaryTypeName","src":"28386:5:19","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28385:18:19"},"scope":7459,"src":"28332:194:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7199,"nodeType":"Block","src":"28954:122:19","statements":[{"expression":{"id":7190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7185,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7183,"src":"28964:10:19","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7180,"src":"28983:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28977:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7186,"name":"int88","nodeType":"ElementaryTypeName","src":"28977:5:19","typeDescriptions":{}}},"id":7189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28977:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28964:25:19","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7191,"nodeType":"ExpressionStatement","src":"28964:25:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7193,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7183,"src":"29007:10:19","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7180,"src":"29021:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29007:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":7196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29028:40:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":7192,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28999:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28999:70:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7198,"nodeType":"ExpressionStatement","src":"28999:70:19"}]},"documentation":{"id":7178,"nodeType":"StructuredDocumentation","src":"28532:345:19","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":7200,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28891:7:19","nodeType":"FunctionDefinition","parameters":{"id":7181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7180,"mutability":"mutable","name":"value","nameLocation":"28906:5:19","nodeType":"VariableDeclaration","scope":7200,"src":"28899:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7179,"name":"int256","nodeType":"ElementaryTypeName","src":"28899:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28898:14:19"},"returnParameters":{"id":7184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7183,"mutability":"mutable","name":"downcasted","nameLocation":"28942:10:19","nodeType":"VariableDeclaration","scope":7200,"src":"28936:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7182,"name":"int88","nodeType":"ElementaryTypeName","src":"28936:5:19","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28935:18:19"},"scope":7459,"src":"28882:194:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7222,"nodeType":"Block","src":"29504:122:19","statements":[{"expression":{"id":7213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7208,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7206,"src":"29514:10:19","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"29533:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29527:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7209,"name":"int80","nodeType":"ElementaryTypeName","src":"29527:5:19","typeDescriptions":{}}},"id":7212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29527:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29514:25:19","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7214,"nodeType":"ExpressionStatement","src":"29514:25:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7216,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7206,"src":"29557:10:19","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"29571:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29557:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":7219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29578:40:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":7215,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29549:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29549:70:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7221,"nodeType":"ExpressionStatement","src":"29549:70:19"}]},"documentation":{"id":7201,"nodeType":"StructuredDocumentation","src":"29082:345:19","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":7223,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29441:7:19","nodeType":"FunctionDefinition","parameters":{"id":7204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7203,"mutability":"mutable","name":"value","nameLocation":"29456:5:19","nodeType":"VariableDeclaration","scope":7223,"src":"29449:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7202,"name":"int256","nodeType":"ElementaryTypeName","src":"29449:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29448:14:19"},"returnParameters":{"id":7207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7206,"mutability":"mutable","name":"downcasted","nameLocation":"29492:10:19","nodeType":"VariableDeclaration","scope":7223,"src":"29486:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7205,"name":"int80","nodeType":"ElementaryTypeName","src":"29486:5:19","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29485:18:19"},"scope":7459,"src":"29432:194:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7245,"nodeType":"Block","src":"30054:122:19","statements":[{"expression":{"id":7236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7231,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"30064:10:19","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7226,"src":"30083:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30077:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":7232,"name":"int72","nodeType":"ElementaryTypeName","src":"30077:5:19","typeDescriptions":{}}},"id":7235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30077:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"30064:25:19","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":7237,"nodeType":"ExpressionStatement","src":"30064:25:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7239,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"30107:10:19","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7226,"src":"30121:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30107:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":7242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30128:40:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":7238,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30099:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30099:70:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7244,"nodeType":"ExpressionStatement","src":"30099:70:19"}]},"documentation":{"id":7224,"nodeType":"StructuredDocumentation","src":"29632:345:19","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":7246,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29991:7:19","nodeType":"FunctionDefinition","parameters":{"id":7227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7226,"mutability":"mutable","name":"value","nameLocation":"30006:5:19","nodeType":"VariableDeclaration","scope":7246,"src":"29999:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7225,"name":"int256","nodeType":"ElementaryTypeName","src":"29999:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29998:14:19"},"returnParameters":{"id":7230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7229,"mutability":"mutable","name":"downcasted","nameLocation":"30042:10:19","nodeType":"VariableDeclaration","scope":7246,"src":"30036:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":7228,"name":"int72","nodeType":"ElementaryTypeName","src":"30036:5:19","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"30035:18:19"},"scope":7459,"src":"29982:194:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7268,"nodeType":"Block","src":"30604:122:19","statements":[{"expression":{"id":7259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7254,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7252,"src":"30614:10:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"30633:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30627:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":7255,"name":"int64","nodeType":"ElementaryTypeName","src":"30627:5:19","typeDescriptions":{}}},"id":7258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30627:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30614:25:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":7260,"nodeType":"ExpressionStatement","src":"30614:25:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7262,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7252,"src":"30657:10:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"30671:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30657:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":7265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30678:40:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":7261,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30649:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30649:70:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7267,"nodeType":"ExpressionStatement","src":"30649:70:19"}]},"documentation":{"id":7247,"nodeType":"StructuredDocumentation","src":"30182:345:19","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v3.1._"},"id":7269,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30541:7:19","nodeType":"FunctionDefinition","parameters":{"id":7250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7249,"mutability":"mutable","name":"value","nameLocation":"30556:5:19","nodeType":"VariableDeclaration","scope":7269,"src":"30549:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7248,"name":"int256","nodeType":"ElementaryTypeName","src":"30549:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30548:14:19"},"returnParameters":{"id":7253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7252,"mutability":"mutable","name":"downcasted","nameLocation":"30592:10:19","nodeType":"VariableDeclaration","scope":7269,"src":"30586:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7251,"name":"int64","nodeType":"ElementaryTypeName","src":"30586:5:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30585:18:19"},"scope":7459,"src":"30532:194:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7291,"nodeType":"Block","src":"31154:122:19","statements":[{"expression":{"id":7282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7277,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7275,"src":"31164:10:19","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7272,"src":"31183:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31177:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":7278,"name":"int56","nodeType":"ElementaryTypeName","src":"31177:5:19","typeDescriptions":{}}},"id":7281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31177:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"31164:25:19","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":7283,"nodeType":"ExpressionStatement","src":"31164:25:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7285,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7275,"src":"31207:10:19","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7272,"src":"31221:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31207:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":7288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31228:40:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":7284,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31199:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31199:70:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7290,"nodeType":"ExpressionStatement","src":"31199:70:19"}]},"documentation":{"id":7270,"nodeType":"StructuredDocumentation","src":"30732:345:19","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":7292,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"31091:7:19","nodeType":"FunctionDefinition","parameters":{"id":7273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7272,"mutability":"mutable","name":"value","nameLocation":"31106:5:19","nodeType":"VariableDeclaration","scope":7292,"src":"31099:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7271,"name":"int256","nodeType":"ElementaryTypeName","src":"31099:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31098:14:19"},"returnParameters":{"id":7276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7275,"mutability":"mutable","name":"downcasted","nameLocation":"31142:10:19","nodeType":"VariableDeclaration","scope":7292,"src":"31136:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":7274,"name":"int56","nodeType":"ElementaryTypeName","src":"31136:5:19","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"31135:18:19"},"scope":7459,"src":"31082:194:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7314,"nodeType":"Block","src":"31704:122:19","statements":[{"expression":{"id":7305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7300,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7298,"src":"31714:10:19","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7295,"src":"31733:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31727:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7301,"name":"int48","nodeType":"ElementaryTypeName","src":"31727:5:19","typeDescriptions":{}}},"id":7304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31727:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31714:25:19","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7306,"nodeType":"ExpressionStatement","src":"31714:25:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7308,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7298,"src":"31757:10:19","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7295,"src":"31771:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31757:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":7311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31778:40:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":7307,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31749:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31749:70:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7313,"nodeType":"ExpressionStatement","src":"31749:70:19"}]},"documentation":{"id":7293,"nodeType":"StructuredDocumentation","src":"31282:345:19","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":7315,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31641:7:19","nodeType":"FunctionDefinition","parameters":{"id":7296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7295,"mutability":"mutable","name":"value","nameLocation":"31656:5:19","nodeType":"VariableDeclaration","scope":7315,"src":"31649:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7294,"name":"int256","nodeType":"ElementaryTypeName","src":"31649:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31648:14:19"},"returnParameters":{"id":7299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7298,"mutability":"mutable","name":"downcasted","nameLocation":"31692:10:19","nodeType":"VariableDeclaration","scope":7315,"src":"31686:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7297,"name":"int48","nodeType":"ElementaryTypeName","src":"31686:5:19","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31685:18:19"},"scope":7459,"src":"31632:194:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7337,"nodeType":"Block","src":"32254:122:19","statements":[{"expression":{"id":7328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7323,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7321,"src":"32264:10:19","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7318,"src":"32283:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32277:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":7324,"name":"int40","nodeType":"ElementaryTypeName","src":"32277:5:19","typeDescriptions":{}}},"id":7327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32277:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"32264:25:19","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":7329,"nodeType":"ExpressionStatement","src":"32264:25:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7331,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7321,"src":"32307:10:19","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7318,"src":"32321:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32307:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":7334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32328:40:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":7330,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32299:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32299:70:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7336,"nodeType":"ExpressionStatement","src":"32299:70:19"}]},"documentation":{"id":7316,"nodeType":"StructuredDocumentation","src":"31832:345:19","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":7338,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"32191:7:19","nodeType":"FunctionDefinition","parameters":{"id":7319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7318,"mutability":"mutable","name":"value","nameLocation":"32206:5:19","nodeType":"VariableDeclaration","scope":7338,"src":"32199:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7317,"name":"int256","nodeType":"ElementaryTypeName","src":"32199:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32198:14:19"},"returnParameters":{"id":7322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7321,"mutability":"mutable","name":"downcasted","nameLocation":"32242:10:19","nodeType":"VariableDeclaration","scope":7338,"src":"32236:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":7320,"name":"int40","nodeType":"ElementaryTypeName","src":"32236:5:19","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"32235:18:19"},"scope":7459,"src":"32182:194:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7360,"nodeType":"Block","src":"32804:122:19","statements":[{"expression":{"id":7351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7346,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7344,"src":"32814:10:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7341,"src":"32833:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32827:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7347,"name":"int32","nodeType":"ElementaryTypeName","src":"32827:5:19","typeDescriptions":{}}},"id":7350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32827:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32814:25:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7352,"nodeType":"ExpressionStatement","src":"32814:25:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7354,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7344,"src":"32857:10:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7341,"src":"32871:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32857:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":7357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32878:40:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":7353,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32849:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32849:70:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7359,"nodeType":"ExpressionStatement","src":"32849:70:19"}]},"documentation":{"id":7339,"nodeType":"StructuredDocumentation","src":"32382:345:19","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v3.1._"},"id":7361,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32741:7:19","nodeType":"FunctionDefinition","parameters":{"id":7342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7341,"mutability":"mutable","name":"value","nameLocation":"32756:5:19","nodeType":"VariableDeclaration","scope":7361,"src":"32749:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7340,"name":"int256","nodeType":"ElementaryTypeName","src":"32749:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32748:14:19"},"returnParameters":{"id":7345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7344,"mutability":"mutable","name":"downcasted","nameLocation":"32792:10:19","nodeType":"VariableDeclaration","scope":7361,"src":"32786:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":7343,"name":"int32","nodeType":"ElementaryTypeName","src":"32786:5:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32785:18:19"},"scope":7459,"src":"32732:194:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7383,"nodeType":"Block","src":"33354:122:19","statements":[{"expression":{"id":7374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7369,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7367,"src":"33364:10:19","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7364,"src":"33383:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33377:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7370,"name":"int24","nodeType":"ElementaryTypeName","src":"33377:5:19","typeDescriptions":{}}},"id":7373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33377:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"33364:25:19","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7375,"nodeType":"ExpressionStatement","src":"33364:25:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7377,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7367,"src":"33407:10:19","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7364,"src":"33421:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33407:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":7380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33428:40:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":7376,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33399:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33399:70:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7382,"nodeType":"ExpressionStatement","src":"33399:70:19"}]},"documentation":{"id":7362,"nodeType":"StructuredDocumentation","src":"32932:345:19","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":7384,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"33291:7:19","nodeType":"FunctionDefinition","parameters":{"id":7365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7364,"mutability":"mutable","name":"value","nameLocation":"33306:5:19","nodeType":"VariableDeclaration","scope":7384,"src":"33299:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7363,"name":"int256","nodeType":"ElementaryTypeName","src":"33299:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33298:14:19"},"returnParameters":{"id":7368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7367,"mutability":"mutable","name":"downcasted","nameLocation":"33342:10:19","nodeType":"VariableDeclaration","scope":7384,"src":"33336:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7366,"name":"int24","nodeType":"ElementaryTypeName","src":"33336:5:19","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"33335:18:19"},"scope":7459,"src":"33282:194:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7406,"nodeType":"Block","src":"33904:122:19","statements":[{"expression":{"id":7397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7392,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7390,"src":"33914:10:19","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7387,"src":"33933:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33927:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":7393,"name":"int16","nodeType":"ElementaryTypeName","src":"33927:5:19","typeDescriptions":{}}},"id":7396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33927:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33914:25:19","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":7398,"nodeType":"ExpressionStatement","src":"33914:25:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7400,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7390,"src":"33957:10:19","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7387,"src":"33971:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33957:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":7403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33978:40:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":7399,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33949:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33949:70:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7405,"nodeType":"ExpressionStatement","src":"33949:70:19"}]},"documentation":{"id":7385,"nodeType":"StructuredDocumentation","src":"33482:345:19","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v3.1._"},"id":7407,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33841:7:19","nodeType":"FunctionDefinition","parameters":{"id":7388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7387,"mutability":"mutable","name":"value","nameLocation":"33856:5:19","nodeType":"VariableDeclaration","scope":7407,"src":"33849:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7386,"name":"int256","nodeType":"ElementaryTypeName","src":"33849:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33848:14:19"},"returnParameters":{"id":7391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7390,"mutability":"mutable","name":"downcasted","nameLocation":"33892:10:19","nodeType":"VariableDeclaration","scope":7407,"src":"33886:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":7389,"name":"int16","nodeType":"ElementaryTypeName","src":"33886:5:19","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33885:18:19"},"scope":7459,"src":"33832:194:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7429,"nodeType":"Block","src":"34447:120:19","statements":[{"expression":{"id":7420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7415,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7413,"src":"34457:10:19","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7410,"src":"34475:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34470:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":7416,"name":"int8","nodeType":"ElementaryTypeName","src":"34470:4:19","typeDescriptions":{}}},"id":7419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34470:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34457:24:19","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7421,"nodeType":"ExpressionStatement","src":"34457:24:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7423,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7413,"src":"34499:10:19","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7410,"src":"34513:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34499:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":7426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34520:39:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":7422,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34491:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34491:69:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7428,"nodeType":"ExpressionStatement","src":"34491:69:19"}]},"documentation":{"id":7408,"nodeType":"StructuredDocumentation","src":"34032:340:19","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v3.1._"},"id":7430,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"34386:6:19","nodeType":"FunctionDefinition","parameters":{"id":7411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7410,"mutability":"mutable","name":"value","nameLocation":"34400:5:19","nodeType":"VariableDeclaration","scope":7430,"src":"34393:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7409,"name":"int256","nodeType":"ElementaryTypeName","src":"34393:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34392:14:19"},"returnParameters":{"id":7414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7413,"mutability":"mutable","name":"downcasted","nameLocation":"34435:10:19","nodeType":"VariableDeclaration","scope":7430,"src":"34430:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7412,"name":"int8","nodeType":"ElementaryTypeName","src":"34430:4:19","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34429:17:19"},"scope":7459,"src":"34377:190:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7457,"nodeType":"Block","src":"34845:233:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"34962:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":7444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34984:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7443,"name":"int256","nodeType":"ElementaryTypeName","src":"34984:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":7442,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34979:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34979:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34992:3:19","memberName":"max","nodeType":"MemberAccess","src":"34979:16:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34971:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7440,"name":"uint256","nodeType":"ElementaryTypeName","src":"34971:7:19","typeDescriptions":{}}},"id":7447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34971:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34962:34:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536","id":7449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34998:42:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""},"value":"SafeCast: value doesn't fit in an int256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""}],"id":7438,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34954:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34954:87:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7451,"nodeType":"ExpressionStatement","src":"34954:87:19"},{"expression":{"arguments":[{"id":7454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"35065:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35058:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7452,"name":"int256","nodeType":"ElementaryTypeName","src":"35058:6:19","typeDescriptions":{}}},"id":7455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35058:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7437,"id":7456,"nodeType":"Return","src":"35051:20:19"}]},"documentation":{"id":7431,"nodeType":"StructuredDocumentation","src":"34573:203:19","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256.\n _Available since v3.0._"},"id":7458,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34790:8:19","nodeType":"FunctionDefinition","parameters":{"id":7434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7433,"mutability":"mutable","name":"value","nameLocation":"34807:5:19","nodeType":"VariableDeclaration","scope":7458,"src":"34799:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7432,"name":"uint256","nodeType":"ElementaryTypeName","src":"34799:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34798:15:19"},"returnParameters":{"id":7437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7458,"src":"34837:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7435,"name":"int256","nodeType":"ElementaryTypeName","src":"34837:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34836:8:19"},"scope":7459,"src":"34781:297:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7460,"src":"927:34153:19","usedErrors":[]}],"src":"192:34889:19"},"id":19},"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol","exportedSymbols":{"DoubleEndedQueue":[7800],"SafeCast":[7459]},"id":7801,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7461,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"117:23:20"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../math/SafeCast.sol","id":7462,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7801,"sourceUnit":7460,"src":"142:30:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"DoubleEndedQueue","contractDependencies":[],"contractKind":"library","documentation":{"id":7463,"nodeType":"StructuredDocumentation","src":"174:660:20","text":" @dev A sequence of items with the ability to efficiently push and pop items (i.e. insert and remove) on both ends of\n the sequence (called front and back). Among other access patterns, it can be used to implement efficient LIFO and\n FIFO queues. Storage use is optimized, and all operations are O(1) constant time. This includes {clear}, given that\n the existing queue contents are left in storage.\n The struct is called `Bytes32Deque`. Other types can be cast to and from `bytes32`. This data structure can only be\n used in storage, and not in memory.\n ```\n DoubleEndedQueue.Bytes32Deque queue;\n ```\n _Available since v4.6._"},"fullyImplemented":true,"id":7800,"linearizedBaseContracts":[7800],"name":"DoubleEndedQueue","nameLocation":"843:16:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":7464,"nodeType":"StructuredDocumentation","src":"866:103:20","text":" @dev An operation (e.g. {front}) couldn't be completed due to the queue being empty."},"errorSelector":"3db2a12a","id":7466,"name":"Empty","nameLocation":"980:5:20","nodeType":"ErrorDefinition","parameters":{"id":7465,"nodeType":"ParameterList","parameters":[],"src":"985:2:20"},"src":"974:14:20"},{"documentation":{"id":7467,"nodeType":"StructuredDocumentation","src":"994:107:20","text":" @dev An operation (e.g. {at}) couldn't be completed due to an index being out of bounds."},"errorSelector":"b4120f14","id":7469,"name":"OutOfBounds","nameLocation":"1112:11:20","nodeType":"ErrorDefinition","parameters":{"id":7468,"nodeType":"ParameterList","parameters":[],"src":"1123:2:20"},"src":"1106:20:20"},{"canonicalName":"DoubleEndedQueue.Bytes32Deque","id":7478,"members":[{"constant":false,"id":7471,"mutability":"mutable","name":"_begin","nameLocation":"1937:6:20","nodeType":"VariableDeclaration","scope":7478,"src":"1930:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7470,"name":"int128","nodeType":"ElementaryTypeName","src":"1930:6:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":7473,"mutability":"mutable","name":"_end","nameLocation":"1960:4:20","nodeType":"VariableDeclaration","scope":7478,"src":"1953:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7472,"name":"int128","nodeType":"ElementaryTypeName","src":"1953:6:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":7477,"mutability":"mutable","name":"_data","nameLocation":"2001:5:20","nodeType":"VariableDeclaration","scope":7478,"src":"1974:32:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int128_$_t_bytes32_$","typeString":"mapping(int128 => bytes32)"},"typeName":{"id":7476,"keyType":{"id":7474,"name":"int128","nodeType":"ElementaryTypeName","src":"1982:6:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Mapping","src":"1974:26:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int128_$_t_bytes32_$","typeString":"mapping(int128 => bytes32)"},"valueType":{"id":7475,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1992:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},"visibility":"internal"}],"name":"Bytes32Deque","nameLocation":"1907:12:20","nodeType":"StructDefinition","scope":7800,"src":"1900:113:20","visibility":"public"},{"body":{"id":7509,"nodeType":"Block","src":"2158:156:20","statements":[{"assignments":[7488],"declarations":[{"constant":false,"id":7488,"mutability":"mutable","name":"backIndex","nameLocation":"2175:9:20","nodeType":"VariableDeclaration","scope":7509,"src":"2168:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7487,"name":"int128","nodeType":"ElementaryTypeName","src":"2168:6:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":7491,"initialValue":{"expression":{"id":7489,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7482,"src":"2187:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":7490,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2193:4:20","memberName":"_end","nodeType":"MemberAccess","referencedDeclaration":7473,"src":"2187:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"2168:29:20"},{"expression":{"id":7498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":7492,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7482,"src":"2207:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":7495,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2213:5:20","memberName":"_data","nodeType":"MemberAccess","referencedDeclaration":7477,"src":"2207:11:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int128_$_t_bytes32_$","typeString":"mapping(int128 => bytes32)"}},"id":7496,"indexExpression":{"id":7494,"name":"backIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7488,"src":"2219:9:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2207:22:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7484,"src":"2232:5:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2207:30:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7499,"nodeType":"ExpressionStatement","src":"2207:30:20"},{"id":7508,"nodeType":"UncheckedBlock","src":"2247:61:20","statements":[{"expression":{"id":7506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7500,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7482,"src":"2271:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":7502,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2277:4:20","memberName":"_end","nodeType":"MemberAccess","referencedDeclaration":7473,"src":"2271:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":7505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7503,"name":"backIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7488,"src":"2284:9:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2296:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2284:13:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"2271:26:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7507,"nodeType":"ExpressionStatement","src":"2271:26:20"}]}]},"documentation":{"id":7479,"nodeType":"StructuredDocumentation","src":"2019:64:20","text":" @dev Inserts an item at the end of the queue."},"id":7510,"implemented":true,"kind":"function","modifiers":[],"name":"pushBack","nameLocation":"2097:8:20","nodeType":"FunctionDefinition","parameters":{"id":7485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7482,"mutability":"mutable","name":"deque","nameLocation":"2127:5:20","nodeType":"VariableDeclaration","scope":7510,"src":"2106:26:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":7481,"nodeType":"UserDefinedTypeName","pathNode":{"id":7480,"name":"Bytes32Deque","nameLocations":["2106:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":7478,"src":"2106:12:20"},"referencedDeclaration":7478,"src":"2106:12:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"internal"},{"constant":false,"id":7484,"mutability":"mutable","name":"value","nameLocation":"2142:5:20","nodeType":"VariableDeclaration","scope":7510,"src":"2134:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7483,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2134:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2105:43:20"},"returnParameters":{"id":7486,"nodeType":"ParameterList","parameters":[],"src":"2158:0:20"},"scope":7800,"src":"2088:226:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7556,"nodeType":"Block","src":"2541:256:20","statements":[{"condition":{"arguments":[{"id":7520,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"2561:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}],"id":7519,"name":"empty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7799,"src":"2555:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Deque_$7478_storage_ptr_$returns$_t_bool_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (bool)"}},"id":7521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2555:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7525,"nodeType":"IfStatement","src":"2551:32:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7522,"name":"Empty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7466,"src":"2576:5:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2576:7:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7524,"nodeType":"RevertStatement","src":"2569:14:20"}},{"assignments":[7527],"declarations":[{"constant":false,"id":7527,"mutability":"mutable","name":"backIndex","nameLocation":"2600:9:20","nodeType":"VariableDeclaration","scope":7556,"src":"2593:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7526,"name":"int128","nodeType":"ElementaryTypeName","src":"2593:6:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":7528,"nodeType":"VariableDeclarationStatement","src":"2593:16:20"},{"id":7536,"nodeType":"UncheckedBlock","src":"2619:61:20","statements":[{"expression":{"id":7534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7529,"name":"backIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7527,"src":"2643:9:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":7533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7530,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"2655:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":7531,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2661:4:20","memberName":"_end","nodeType":"MemberAccess","referencedDeclaration":7473,"src":"2655:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2668:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2655:14:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"2643:26:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7535,"nodeType":"ExpressionStatement","src":"2643:26:20"}]},{"expression":{"id":7542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7517,"src":"2689:5:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"id":7538,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"2697:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":7539,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2703:5:20","memberName":"_data","nodeType":"MemberAccess","referencedDeclaration":7477,"src":"2697:11:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int128_$_t_bytes32_$","typeString":"mapping(int128 => bytes32)"}},"id":7541,"indexExpression":{"id":7540,"name":"backIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7527,"src":"2709:9:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2697:22:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2689:30:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7543,"nodeType":"ExpressionStatement","src":"2689:30:20"},{"expression":{"id":7548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"2729:29:20","subExpression":{"baseExpression":{"expression":{"id":7544,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"2736:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":7545,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2742:5:20","memberName":"_data","nodeType":"MemberAccess","referencedDeclaration":7477,"src":"2736:11:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int128_$_t_bytes32_$","typeString":"mapping(int128 => bytes32)"}},"id":7547,"indexExpression":{"id":7546,"name":"backIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7527,"src":"2748:9:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2736:22:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7549,"nodeType":"ExpressionStatement","src":"2729:29:20"},{"expression":{"id":7554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7550,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"2768:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":7552,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2774:4:20","memberName":"_end","nodeType":"MemberAccess","referencedDeclaration":7473,"src":"2768:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7553,"name":"backIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7527,"src":"2781:9:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"2768:22:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7555,"nodeType":"ExpressionStatement","src":"2768:22:20"}]},"documentation":{"id":7511,"nodeType":"StructuredDocumentation","src":"2320:138:20","text":" @dev Removes the item at the end of the queue and returns it.\n Reverts with `Empty` if the queue is empty."},"id":7557,"implemented":true,"kind":"function","modifiers":[],"name":"popBack","nameLocation":"2472:7:20","nodeType":"FunctionDefinition","parameters":{"id":7515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7514,"mutability":"mutable","name":"deque","nameLocation":"2501:5:20","nodeType":"VariableDeclaration","scope":7557,"src":"2480:26:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":7513,"nodeType":"UserDefinedTypeName","pathNode":{"id":7512,"name":"Bytes32Deque","nameLocations":["2480:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":7478,"src":"2480:12:20"},"referencedDeclaration":7478,"src":"2480:12:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"internal"}],"src":"2479:28:20"},"returnParameters":{"id":7518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7517,"mutability":"mutable","name":"value","nameLocation":"2534:5:20","nodeType":"VariableDeclaration","scope":7557,"src":"2526:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7516,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2526:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2525:15:20"},"scope":7800,"src":"2463:334:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7591,"nodeType":"Block","src":"2949:183:20","statements":[{"assignments":[7567],"declarations":[{"constant":false,"id":7567,"mutability":"mutable","name":"frontIndex","nameLocation":"2966:10:20","nodeType":"VariableDeclaration","scope":7591,"src":"2959:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7566,"name":"int128","nodeType":"ElementaryTypeName","src":"2959:6:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":7568,"nodeType":"VariableDeclarationStatement","src":"2959:17:20"},{"id":7576,"nodeType":"UncheckedBlock","src":"2986:64:20","statements":[{"expression":{"id":7574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7569,"name":"frontIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"3010:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":7573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7570,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7561,"src":"3023:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":7571,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3029:6:20","memberName":"_begin","nodeType":"MemberAccess","referencedDeclaration":7471,"src":"3023:12:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3038:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3023:16:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"3010:29:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7575,"nodeType":"ExpressionStatement","src":"3010:29:20"}]},{"expression":{"id":7583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":7577,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7561,"src":"3059:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":7580,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3065:5:20","memberName":"_data","nodeType":"MemberAccess","referencedDeclaration":7477,"src":"3059:11:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int128_$_t_bytes32_$","typeString":"mapping(int128 => bytes32)"}},"id":7581,"indexExpression":{"id":7579,"name":"frontIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"3071:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3059:23:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7563,"src":"3085:5:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3059:31:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7584,"nodeType":"ExpressionStatement","src":"3059:31:20"},{"expression":{"id":7589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7585,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7561,"src":"3100:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":7587,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3106:6:20","memberName":"_begin","nodeType":"MemberAccess","referencedDeclaration":7471,"src":"3100:12:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7588,"name":"frontIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"3115:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"3100:25:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7590,"nodeType":"ExpressionStatement","src":"3100:25:20"}]},"documentation":{"id":7558,"nodeType":"StructuredDocumentation","src":"2803:70:20","text":" @dev Inserts an item at the beginning of the queue."},"id":7592,"implemented":true,"kind":"function","modifiers":[],"name":"pushFront","nameLocation":"2887:9:20","nodeType":"FunctionDefinition","parameters":{"id":7564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7561,"mutability":"mutable","name":"deque","nameLocation":"2918:5:20","nodeType":"VariableDeclaration","scope":7592,"src":"2897:26:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":7560,"nodeType":"UserDefinedTypeName","pathNode":{"id":7559,"name":"Bytes32Deque","nameLocations":["2897:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":7478,"src":"2897:12:20"},"referencedDeclaration":7478,"src":"2897:12:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"internal"},{"constant":false,"id":7563,"mutability":"mutable","name":"value","nameLocation":"2933:5:20","nodeType":"VariableDeclaration","scope":7592,"src":"2925:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7562,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2925:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2896:43:20"},"returnParameters":{"id":7565,"nodeType":"ParameterList","parameters":[],"src":"2949:0:20"},"scope":7800,"src":"2878:254:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7635,"nodeType":"Block","src":"3366:245:20","statements":[{"condition":{"arguments":[{"id":7602,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"3386:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}],"id":7601,"name":"empty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7799,"src":"3380:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Deque_$7478_storage_ptr_$returns$_t_bool_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (bool)"}},"id":7603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3380:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7607,"nodeType":"IfStatement","src":"3376:32:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7604,"name":"Empty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7466,"src":"3401:5:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3401:7:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7606,"nodeType":"RevertStatement","src":"3394:14:20"}},{"assignments":[7609],"declarations":[{"constant":false,"id":7609,"mutability":"mutable","name":"frontIndex","nameLocation":"3425:10:20","nodeType":"VariableDeclaration","scope":7635,"src":"3418:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7608,"name":"int128","nodeType":"ElementaryTypeName","src":"3418:6:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":7612,"initialValue":{"expression":{"id":7610,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"3438:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":7611,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3444:6:20","memberName":"_begin","nodeType":"MemberAccess","referencedDeclaration":7471,"src":"3438:12:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"3418:32:20"},{"expression":{"id":7618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7599,"src":"3460:5:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"id":7614,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"3468:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":7615,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3474:5:20","memberName":"_data","nodeType":"MemberAccess","referencedDeclaration":7477,"src":"3468:11:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int128_$_t_bytes32_$","typeString":"mapping(int128 => bytes32)"}},"id":7617,"indexExpression":{"id":7616,"name":"frontIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"3480:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3468:23:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3460:31:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7619,"nodeType":"ExpressionStatement","src":"3460:31:20"},{"expression":{"id":7624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"3501:30:20","subExpression":{"baseExpression":{"expression":{"id":7620,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"3508:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":7621,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3514:5:20","memberName":"_data","nodeType":"MemberAccess","referencedDeclaration":7477,"src":"3508:11:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int128_$_t_bytes32_$","typeString":"mapping(int128 => bytes32)"}},"id":7623,"indexExpression":{"id":7622,"name":"frontIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"3520:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3508:23:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7625,"nodeType":"ExpressionStatement","src":"3501:30:20"},{"id":7634,"nodeType":"UncheckedBlock","src":"3541:64:20","statements":[{"expression":{"id":7632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7626,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"3565:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":7628,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3571:6:20","memberName":"_begin","nodeType":"MemberAccess","referencedDeclaration":7471,"src":"3565:12:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":7631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7629,"name":"frontIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"3580:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3593:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3580:14:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"3565:29:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7633,"nodeType":"ExpressionStatement","src":"3565:29:20"}]}]},"documentation":{"id":7593,"nodeType":"StructuredDocumentation","src":"3138:144:20","text":" @dev Removes the item at the beginning of the queue and returns it.\n Reverts with `Empty` if the queue is empty."},"id":7636,"implemented":true,"kind":"function","modifiers":[],"name":"popFront","nameLocation":"3296:8:20","nodeType":"FunctionDefinition","parameters":{"id":7597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7596,"mutability":"mutable","name":"deque","nameLocation":"3326:5:20","nodeType":"VariableDeclaration","scope":7636,"src":"3305:26:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":7595,"nodeType":"UserDefinedTypeName","pathNode":{"id":7594,"name":"Bytes32Deque","nameLocations":["3305:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":7478,"src":"3305:12:20"},"referencedDeclaration":7478,"src":"3305:12:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"internal"}],"src":"3304:28:20"},"returnParameters":{"id":7600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7599,"mutability":"mutable","name":"value","nameLocation":"3359:5:20","nodeType":"VariableDeclaration","scope":7636,"src":"3351:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7598,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3351:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3350:15:20"},"scope":7800,"src":"3287:324:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7662,"nodeType":"Block","src":"3832:131:20","statements":[{"condition":{"arguments":[{"id":7646,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7640,"src":"3852:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}],"id":7645,"name":"empty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7799,"src":"3846:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Deque_$7478_storage_ptr_$returns$_t_bool_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (bool)"}},"id":7647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3846:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7651,"nodeType":"IfStatement","src":"3842:32:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7648,"name":"Empty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7466,"src":"3867:5:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3867:7:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7650,"nodeType":"RevertStatement","src":"3860:14:20"}},{"assignments":[7653],"declarations":[{"constant":false,"id":7653,"mutability":"mutable","name":"frontIndex","nameLocation":"3891:10:20","nodeType":"VariableDeclaration","scope":7662,"src":"3884:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7652,"name":"int128","nodeType":"ElementaryTypeName","src":"3884:6:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":7656,"initialValue":{"expression":{"id":7654,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7640,"src":"3904:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":7655,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3910:6:20","memberName":"_begin","nodeType":"MemberAccess","referencedDeclaration":7471,"src":"3904:12:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"3884:32:20"},{"expression":{"baseExpression":{"expression":{"id":7657,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7640,"src":"3933:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":7658,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3939:5:20","memberName":"_data","nodeType":"MemberAccess","referencedDeclaration":7477,"src":"3933:11:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int128_$_t_bytes32_$","typeString":"mapping(int128 => bytes32)"}},"id":7660,"indexExpression":{"id":7659,"name":"frontIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7653,"src":"3945:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3933:23:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":7644,"id":7661,"nodeType":"Return","src":"3926:30:20"}]},"documentation":{"id":7637,"nodeType":"StructuredDocumentation","src":"3617:129:20","text":" @dev Returns the item at the beginning of the queue.\n Reverts with `Empty` if the queue is empty."},"id":7663,"implemented":true,"kind":"function","modifiers":[],"name":"front","nameLocation":"3760:5:20","nodeType":"FunctionDefinition","parameters":{"id":7641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7640,"mutability":"mutable","name":"deque","nameLocation":"3787:5:20","nodeType":"VariableDeclaration","scope":7663,"src":"3766:26:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":7639,"nodeType":"UserDefinedTypeName","pathNode":{"id":7638,"name":"Bytes32Deque","nameLocations":["3766:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":7478,"src":"3766:12:20"},"referencedDeclaration":7478,"src":"3766:12:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"internal"}],"src":"3765:28:20"},"returnParameters":{"id":7644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7643,"mutability":"mutable","name":"value","nameLocation":"3825:5:20","nodeType":"VariableDeclaration","scope":7663,"src":"3817:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7642,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3817:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3816:15:20"},"scope":7800,"src":"3751:212:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7695,"nodeType":"Block","src":"4177:184:20","statements":[{"condition":{"arguments":[{"id":7673,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7667,"src":"4197:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}],"id":7672,"name":"empty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7799,"src":"4191:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Deque_$7478_storage_ptr_$returns$_t_bool_$","typeString":"function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (bool)"}},"id":7674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7678,"nodeType":"IfStatement","src":"4187:32:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7675,"name":"Empty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7466,"src":"4212:5:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4212:7:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7677,"nodeType":"RevertStatement","src":"4205:14:20"}},{"assignments":[7680],"declarations":[{"constant":false,"id":7680,"mutability":"mutable","name":"backIndex","nameLocation":"4236:9:20","nodeType":"VariableDeclaration","scope":7695,"src":"4229:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7679,"name":"int128","nodeType":"ElementaryTypeName","src":"4229:6:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":7681,"nodeType":"VariableDeclarationStatement","src":"4229:16:20"},{"id":7689,"nodeType":"UncheckedBlock","src":"4255:61:20","statements":[{"expression":{"id":7687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7682,"name":"backIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7680,"src":"4279:9:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":7686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7683,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7667,"src":"4291:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":7684,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4297:4:20","memberName":"_end","nodeType":"MemberAccess","referencedDeclaration":7473,"src":"4291:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4304:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4291:14:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"4279:26:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7688,"nodeType":"ExpressionStatement","src":"4279:26:20"}]},{"expression":{"baseExpression":{"expression":{"id":7690,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7667,"src":"4332:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":7691,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4338:5:20","memberName":"_data","nodeType":"MemberAccess","referencedDeclaration":7477,"src":"4332:11:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int128_$_t_bytes32_$","typeString":"mapping(int128 => bytes32)"}},"id":7693,"indexExpression":{"id":7692,"name":"backIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7680,"src":"4344:9:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4332:22:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":7671,"id":7694,"nodeType":"Return","src":"4325:29:20"}]},"documentation":{"id":7664,"nodeType":"StructuredDocumentation","src":"3969:123:20","text":" @dev Returns the item at the end of the queue.\n Reverts with `Empty` if the queue is empty."},"id":7696,"implemented":true,"kind":"function","modifiers":[],"name":"back","nameLocation":"4106:4:20","nodeType":"FunctionDefinition","parameters":{"id":7668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7667,"mutability":"mutable","name":"deque","nameLocation":"4132:5:20","nodeType":"VariableDeclaration","scope":7696,"src":"4111:26:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":7666,"nodeType":"UserDefinedTypeName","pathNode":{"id":7665,"name":"Bytes32Deque","nameLocations":["4111:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":7478,"src":"4111:12:20"},"referencedDeclaration":7478,"src":"4111:12:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"internal"}],"src":"4110:28:20"},"returnParameters":{"id":7671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7670,"mutability":"mutable","name":"value","nameLocation":"4170:5:20","nodeType":"VariableDeclaration","scope":7696,"src":"4162:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7669,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4162:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4161:15:20"},"scope":7800,"src":"4097:264:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7736,"nodeType":"Block","src":"4691:231:20","statements":[{"assignments":[7708],"declarations":[{"constant":false,"id":7708,"mutability":"mutable","name":"idx","nameLocation":"4757:3:20","nodeType":"VariableDeclaration","scope":7736,"src":"4750:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7707,"name":"int128","nodeType":"ElementaryTypeName","src":"4750:6:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":7722,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":7713,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7700,"src":"4788:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":7714,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4794:6:20","memberName":"_begin","nodeType":"MemberAccess","referencedDeclaration":7471,"src":"4788:12:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":7712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4781:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7711,"name":"int256","nodeType":"ElementaryTypeName","src":"4781:6:20","typeDescriptions":{}}},"id":7715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4781:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"id":7718,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7702,"src":"4822:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7716,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7459,"src":"4804:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7459_$","typeString":"type(library SafeCast)"}},"id":7717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4813:8:20","memberName":"toInt256","nodeType":"MemberAccess","referencedDeclaration":7458,"src":"4804:17:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_int256_$","typeString":"function (uint256) pure returns (int256)"}},"id":7719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4804:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"4781:47:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":7709,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7459,"src":"4763:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7459_$","typeString":"type(library SafeCast)"}},"id":7710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4772:8:20","memberName":"toInt128","nodeType":"MemberAccess","referencedDeclaration":7085,"src":"4763:17:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_int128_$","typeString":"function (int256) pure returns (int128)"}},"id":7721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4763:66:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"4750:79:20"},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":7726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7723,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7708,"src":"4843:3:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":7724,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7700,"src":"4850:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":7725,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4856:4:20","memberName":"_end","nodeType":"MemberAccess","referencedDeclaration":7473,"src":"4850:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"4843:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7730,"nodeType":"IfStatement","src":"4839:43:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7727,"name":"OutOfBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7469,"src":"4869:11:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4869:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7729,"nodeType":"RevertStatement","src":"4862:20:20"}},{"expression":{"baseExpression":{"expression":{"id":7731,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7700,"src":"4899:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":7732,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4905:5:20","memberName":"_data","nodeType":"MemberAccess","referencedDeclaration":7477,"src":"4899:11:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int128_$_t_bytes32_$","typeString":"mapping(int128 => bytes32)"}},"id":7734,"indexExpression":{"id":7733,"name":"idx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7708,"src":"4911:3:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4899:16:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":7706,"id":7735,"nodeType":"Return","src":"4892:23:20"}]},"documentation":{"id":7697,"nodeType":"StructuredDocumentation","src":"4367:226:20","text":" @dev Return the item at a position in the queue given by `index`, with the first item at 0 and last item at\n `length(deque) - 1`.\n Reverts with `OutOfBounds` if the index is out of bounds."},"id":7737,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"4607:2:20","nodeType":"FunctionDefinition","parameters":{"id":7703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7700,"mutability":"mutable","name":"deque","nameLocation":"4631:5:20","nodeType":"VariableDeclaration","scope":7737,"src":"4610:26:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":7699,"nodeType":"UserDefinedTypeName","pathNode":{"id":7698,"name":"Bytes32Deque","nameLocations":["4610:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":7478,"src":"4610:12:20"},"referencedDeclaration":7478,"src":"4610:12:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"internal"},{"constant":false,"id":7702,"mutability":"mutable","name":"index","nameLocation":"4646:5:20","nodeType":"VariableDeclaration","scope":7737,"src":"4638:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7701,"name":"uint256","nodeType":"ElementaryTypeName","src":"4638:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4609:43:20"},"returnParameters":{"id":7706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7705,"mutability":"mutable","name":"value","nameLocation":"4684:5:20","nodeType":"VariableDeclaration","scope":7737,"src":"4676:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7704,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4676:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4675:15:20"},"scope":7800,"src":"4598:324:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7756,"nodeType":"Block","src":"5211:57:20","statements":[{"expression":{"id":7748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7744,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7741,"src":"5221:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":7746,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5227:6:20","memberName":"_begin","nodeType":"MemberAccess","referencedDeclaration":7471,"src":"5221:12:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":7747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5236:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5221:16:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7749,"nodeType":"ExpressionStatement","src":"5221:16:20"},{"expression":{"id":7754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7750,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7741,"src":"5247:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":7752,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5253:4:20","memberName":"_end","nodeType":"MemberAccess","referencedDeclaration":7473,"src":"5247:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":7753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5260:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5247:14:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7755,"nodeType":"ExpressionStatement","src":"5247:14:20"}]},"documentation":{"id":7738,"nodeType":"StructuredDocumentation","src":"4928:226:20","text":" @dev Resets the queue back to being empty.\n NOTE: The current items are left behind in storage. This does not affect the functioning of the queue, but misses\n out on potential gas refunds."},"id":7757,"implemented":true,"kind":"function","modifiers":[],"name":"clear","nameLocation":"5168:5:20","nodeType":"FunctionDefinition","parameters":{"id":7742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7741,"mutability":"mutable","name":"deque","nameLocation":"5195:5:20","nodeType":"VariableDeclaration","scope":7757,"src":"5174:26:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":7740,"nodeType":"UserDefinedTypeName","pathNode":{"id":7739,"name":"Bytes32Deque","nameLocations":["5174:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":7478,"src":"5174:12:20"},"referencedDeclaration":7478,"src":"5174:12:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"internal"}],"src":"5173:28:20"},"returnParameters":{"id":7743,"nodeType":"ParameterList","parameters":[],"src":"5211:0:20"},"scope":7800,"src":"5159:109:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7782,"nodeType":"Block","src":"5420:287:20","statements":[{"id":7781,"nodeType":"UncheckedBlock","src":"5609:92:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":7770,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7761,"src":"5655:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":7771,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5661:4:20","memberName":"_end","nodeType":"MemberAccess","referencedDeclaration":7473,"src":"5655:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":7769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5648:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7768,"name":"int256","nodeType":"ElementaryTypeName","src":"5648:6:20","typeDescriptions":{}}},"id":7772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5648:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"expression":{"id":7775,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7761,"src":"5676:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":7776,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5682:6:20","memberName":"_begin","nodeType":"MemberAccess","referencedDeclaration":7471,"src":"5676:12:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":7774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5669:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7773,"name":"int256","nodeType":"ElementaryTypeName","src":"5669:6:20","typeDescriptions":{}}},"id":7777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5669:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"5648:41:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5640:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7766,"name":"uint256","nodeType":"ElementaryTypeName","src":"5640:7:20","typeDescriptions":{}}},"id":7779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5640:50:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7765,"id":7780,"nodeType":"Return","src":"5633:57:20"}]}]},"documentation":{"id":7758,"nodeType":"StructuredDocumentation","src":"5274:65:20","text":" @dev Returns the number of items in the queue."},"id":7783,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"5353:6:20","nodeType":"FunctionDefinition","parameters":{"id":7762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7761,"mutability":"mutable","name":"deque","nameLocation":"5381:5:20","nodeType":"VariableDeclaration","scope":7783,"src":"5360:26:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":7760,"nodeType":"UserDefinedTypeName","pathNode":{"id":7759,"name":"Bytes32Deque","nameLocations":["5360:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":7478,"src":"5360:12:20"},"referencedDeclaration":7478,"src":"5360:12:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"internal"}],"src":"5359:28:20"},"returnParameters":{"id":7765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7783,"src":"5411:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7763,"name":"uint256","nodeType":"ElementaryTypeName","src":"5411:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5410:9:20"},"scope":7800,"src":"5344:363:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7798,"nodeType":"Block","src":"5849:50:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":7796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7792,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7787,"src":"5866:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":7793,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5872:4:20","memberName":"_end","nodeType":"MemberAccess","referencedDeclaration":7473,"src":"5866:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":7794,"name":"deque","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7787,"src":"5880:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque storage pointer"}},"id":7795,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5886:6:20","memberName":"_begin","nodeType":"MemberAccess","referencedDeclaration":7471,"src":"5880:12:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"5866:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7791,"id":7797,"nodeType":"Return","src":"5859:33:20"}]},"documentation":{"id":7784,"nodeType":"StructuredDocumentation","src":"5713:59:20","text":" @dev Returns true if the queue is empty."},"id":7799,"implemented":true,"kind":"function","modifiers":[],"name":"empty","nameLocation":"5786:5:20","nodeType":"FunctionDefinition","parameters":{"id":7788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7787,"mutability":"mutable","name":"deque","nameLocation":"5813:5:20","nodeType":"VariableDeclaration","scope":7799,"src":"5792:26:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"},"typeName":{"id":7786,"nodeType":"UserDefinedTypeName","pathNode":{"id":7785,"name":"Bytes32Deque","nameLocations":["5792:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":7478,"src":"5792:12:20"},"referencedDeclaration":7478,"src":"5792:12:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Deque_$7478_storage_ptr","typeString":"struct DoubleEndedQueue.Bytes32Deque"}},"visibility":"internal"}],"src":"5791:28:20"},"returnParameters":{"id":7791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7790,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7799,"src":"5843:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7789,"name":"bool","nodeType":"ElementaryTypeName","src":"5843:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5842:6:20"},"scope":7800,"src":"5777:122:20","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":7801,"src":"835:5066:20","usedErrors":[7466,7469]}],"src":"117:5785:20"},"id":20},"contracts/MyGovernor.sol":{"ast":{"absolutePath":"contracts/MyGovernor.sol","exportedSymbols":{"Address":[2720],"Checkpoints":[4091],"Context":[4113],"DoubleEndedQueue":[7800],"ECDSA":[4863],"EIP712":[5017],"ERC165":[5041],"Governor":[1307],"GovernorCountingSimple":[1830],"GovernorSettings":[2008],"GovernorVotes":[2050],"GovernorVotesQuorumFraction":[2253],"IERC1155Receiver":[2372],"IERC165":[5053],"IERC721Receiver":[2390],"IGovernor":[1604],"IVotes":[2331],"Math":[5918],"MyGovernor":[7894],"SafeCast":[7459],"Strings":[4288],"Timers":[4502]},"id":7895,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7802,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:21"},{"absolutePath":"@openzeppelin/contracts/governance/Governor.sol","file":"@openzeppelin/contracts/governance/Governor.sol","id":7803,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7895,"sourceUnit":1308,"src":"57:57:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/governance/extensions/GovernorSettings.sol","file":"@openzeppelin/contracts/governance/extensions/GovernorSettings.sol","id":7804,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7895,"sourceUnit":2009,"src":"115:76:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/governance/extensions/GovernorCountingSimple.sol","file":"@openzeppelin/contracts/governance/extensions/GovernorCountingSimple.sol","id":7805,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7895,"sourceUnit":1831,"src":"192:82:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/governance/extensions/GovernorVotes.sol","file":"@openzeppelin/contracts/governance/extensions/GovernorVotes.sol","id":7806,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7895,"sourceUnit":2051,"src":"275:73:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/governance/extensions/GovernorVotesQuorumFraction.sol","file":"@openzeppelin/contracts/governance/extensions/GovernorVotesQuorumFraction.sol","id":7807,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7895,"sourceUnit":2254,"src":"349:87:21","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7808,"name":"Governor","nameLocations":["465:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":1307,"src":"465:8:21"},"id":7809,"nodeType":"InheritanceSpecifier","src":"465:8:21"},{"baseName":{"id":7810,"name":"GovernorSettings","nameLocations":["479:16:21"],"nodeType":"IdentifierPath","referencedDeclaration":2008,"src":"479:16:21"},"id":7811,"nodeType":"InheritanceSpecifier","src":"479:16:21"},{"baseName":{"id":7812,"name":"GovernorCountingSimple","nameLocations":["501:22:21"],"nodeType":"IdentifierPath","referencedDeclaration":1830,"src":"501:22:21"},"id":7813,"nodeType":"InheritanceSpecifier","src":"501:22:21"},{"baseName":{"id":7814,"name":"GovernorVotes","nameLocations":["529:13:21"],"nodeType":"IdentifierPath","referencedDeclaration":2050,"src":"529:13:21"},"id":7815,"nodeType":"InheritanceSpecifier","src":"529:13:21"},{"baseName":{"id":7816,"name":"GovernorVotesQuorumFraction","nameLocations":["548:27:21"],"nodeType":"IdentifierPath","referencedDeclaration":2253,"src":"548:27:21"},"id":7817,"nodeType":"InheritanceSpecifier","src":"548:27:21"}],"canonicalName":"MyGovernor","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7894,"linearizedBaseContracts":[7894,2253,2050,1830,2008,1307,2372,2390,1604,5017,5041,5053,4113],"name":"MyGovernor","nameLocation":"447:10:21","nodeType":"ContractDefinition","nodes":[{"body":{"id":7837,"nodeType":"Block","src":"765:2:21","statements":[]},"id":7838,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4d79476f7665726e6f72","id":7823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"640:12:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_0eda089b9f80b4a473bf1ca007c7c5020b2cb5638d7d815d4e11d874e0d7f2b4","typeString":"literal_string \"MyGovernor\""},"value":"MyGovernor"}],"id":7824,"kind":"baseConstructorSpecifier","modifierName":{"id":7822,"name":"Governor","nameLocations":["631:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":1307,"src":"631:8:21"},"nodeType":"ModifierInvocation","src":"631:22:21"},{"arguments":[{"hexValue":"31","id":7826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"679:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"3530343030","id":7827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"682:5:21","typeDescriptions":{"typeIdentifier":"t_rational_50400_by_1","typeString":"int_const 50400"},"value":"50400"},{"hexValue":"30","id":7828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"689:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":7829,"kind":"baseConstructorSpecifier","modifierName":{"id":7825,"name":"GovernorSettings","nameLocations":["662:16:21"],"nodeType":"IdentifierPath","referencedDeclaration":2008,"src":"662:16:21"},"nodeType":"ModifierInvocation","src":"662:29:21"},{"arguments":[{"id":7831,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7820,"src":"714:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IVotes_$2331","typeString":"contract IVotes"}}],"id":7832,"kind":"baseConstructorSpecifier","modifierName":{"id":7830,"name":"GovernorVotes","nameLocations":["700:13:21"],"nodeType":"IdentifierPath","referencedDeclaration":2050,"src":"700:13:21"},"nodeType":"ModifierInvocation","src":"700:21:21"},{"arguments":[{"hexValue":"34","id":7834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"758:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"}],"id":7835,"kind":"baseConstructorSpecifier","modifierName":{"id":7833,"name":"GovernorVotesQuorumFraction","nameLocations":["730:27:21"],"nodeType":"IdentifierPath","referencedDeclaration":2253,"src":"730:27:21"},"nodeType":"ModifierInvocation","src":"730:30:21"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7820,"mutability":"mutable","name":"_token","nameLocation":"610:6:21","nodeType":"VariableDeclaration","scope":7838,"src":"603:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVotes_$2331","typeString":"contract IVotes"},"typeName":{"id":7819,"nodeType":"UserDefinedTypeName","pathNode":{"id":7818,"name":"IVotes","nameLocations":["603:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":2331,"src":"603:6:21"},"referencedDeclaration":2331,"src":"603:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IVotes_$2331","typeString":"contract IVotes"}},"visibility":"internal"}],"src":"593:29:21"},"returnParameters":{"id":7836,"nodeType":"ParameterList","parameters":[],"src":"765:0:21"},"scope":7894,"src":"582:185:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1451,1893],"body":{"id":7850,"nodeType":"Block","src":"968:43:21","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7846,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"985:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_MyGovernor_$7894_$","typeString":"type(contract super MyGovernor)"}},"id":7847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"991:11:21","memberName":"votingDelay","nodeType":"MemberAccess","referencedDeclaration":1893,"src":"985:17:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":7848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"985:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7845,"id":7849,"nodeType":"Return","src":"978:26:21"}]},"functionSelector":"3932abb1","id":7851,"implemented":true,"kind":"function","modifiers":[],"name":"votingDelay","nameLocation":"850:11:21","nodeType":"FunctionDefinition","overrides":{"id":7842,"nodeType":"OverrideSpecifier","overrides":[{"id":7840,"name":"IGovernor","nameLocations":["909:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":1604,"src":"909:9:21"},{"id":7841,"name":"GovernorSettings","nameLocations":["920:16:21"],"nodeType":"IdentifierPath","referencedDeclaration":2008,"src":"920:16:21"}],"src":"900:37:21"},"parameters":{"id":7839,"nodeType":"ParameterList","parameters":[],"src":"861:2:21"},"returnParameters":{"id":7845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7851,"src":"955:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7843,"name":"uint256","nodeType":"ElementaryTypeName","src":"955:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"954:9:21"},"scope":7894,"src":"841:170:21","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1457,1903],"body":{"id":7863,"nodeType":"Block","src":"1145:44:21","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7859,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1162:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_MyGovernor_$7894_$","typeString":"type(contract super MyGovernor)"}},"id":7860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1168:12:21","memberName":"votingPeriod","nodeType":"MemberAccess","referencedDeclaration":1903,"src":"1162:18:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":7861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1162:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7858,"id":7862,"nodeType":"Return","src":"1155:27:21"}]},"functionSelector":"02a251a3","id":7864,"implemented":true,"kind":"function","modifiers":[],"name":"votingPeriod","nameLocation":"1026:12:21","nodeType":"FunctionDefinition","overrides":{"id":7855,"nodeType":"OverrideSpecifier","overrides":[{"id":7853,"name":"IGovernor","nameLocations":["1086:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":1604,"src":"1086:9:21"},{"id":7854,"name":"GovernorSettings","nameLocations":["1097:16:21"],"nodeType":"IdentifierPath","referencedDeclaration":2008,"src":"1097:16:21"}],"src":"1077:37:21"},"parameters":{"id":7852,"nodeType":"ParameterList","parameters":[],"src":"1038:2:21"},"returnParameters":{"id":7858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7864,"src":"1132:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7856,"name":"uint256","nodeType":"ElementaryTypeName","src":"1132:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1131:9:21"},"scope":7894,"src":"1017:172:21","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1465,2182],"body":{"id":7879,"nodeType":"Block","src":"1361:49:21","statements":[{"expression":{"arguments":[{"id":7876,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7866,"src":"1391:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7874,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1378:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_MyGovernor_$7894_$","typeString":"type(contract super MyGovernor)"}},"id":7875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1384:6:21","memberName":"quorum","nodeType":"MemberAccess","referencedDeclaration":2182,"src":"1378:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":7877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1378:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7873,"id":7878,"nodeType":"Return","src":"1371:32:21"}]},"functionSelector":"f8ce560a","id":7880,"implemented":true,"kind":"function","modifiers":[],"name":"quorum","nameLocation":"1204:6:21","nodeType":"FunctionDefinition","overrides":{"id":7870,"nodeType":"OverrideSpecifier","overrides":[{"id":7868,"name":"IGovernor","nameLocations":["1291:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":1604,"src":"1291:9:21"},{"id":7869,"name":"GovernorVotesQuorumFraction","nameLocations":["1302:27:21"],"nodeType":"IdentifierPath","referencedDeclaration":2253,"src":"1302:27:21"}],"src":"1282:48:21"},"parameters":{"id":7867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7866,"mutability":"mutable","name":"blockNumber","nameLocation":"1228:11:21","nodeType":"VariableDeclaration","scope":7880,"src":"1220:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7865,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:35:21"},"returnParameters":{"id":7873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7880,"src":"1348:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7871,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1347:9:21"},"scope":7894,"src":"1195:215:21","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[368,1913],"body":{"id":7892,"nodeType":"Block","src":"1548:49:21","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7888,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1565:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_MyGovernor_$7894_$","typeString":"type(contract super MyGovernor)"}},"id":7889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1571:17:21","memberName":"proposalThreshold","nodeType":"MemberAccess","referencedDeclaration":1913,"src":"1565:23:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":7890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1565:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7887,"id":7891,"nodeType":"Return","src":"1558:32:21"}]},"functionSelector":"b58131b0","id":7893,"implemented":true,"kind":"function","modifiers":[],"name":"proposalThreshold","nameLocation":"1425:17:21","nodeType":"FunctionDefinition","overrides":{"id":7884,"nodeType":"OverrideSpecifier","overrides":[{"id":7882,"name":"Governor","nameLocations":["1490:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":1307,"src":"1490:8:21"},{"id":7883,"name":"GovernorSettings","nameLocations":["1500:16:21"],"nodeType":"IdentifierPath","referencedDeclaration":2008,"src":"1500:16:21"}],"src":"1481:36:21"},"parameters":{"id":7881,"nodeType":"ParameterList","parameters":[],"src":"1442:2:21"},"returnParameters":{"id":7887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7893,"src":"1535:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7885,"name":"uint256","nodeType":"ElementaryTypeName","src":"1535:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1534:9:21"},"scope":7894,"src":"1416:181:21","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":7895,"src":"438:1161:21","usedErrors":[7466]}],"src":"32:1568:21"},"id":21}},"contracts":{"@openzeppelin/contracts/governance/Governor.sol":{"Governor":{"abi":[{"inputs":[],"name":"Empty","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"ProposalCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"address","name":"proposer","type":"address"},{"indexed":false,"internalType":"address[]","name":"targets","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"},{"indexed":false,"internalType":"string[]","name":"signatures","type":"string[]"},{"indexed":false,"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"indexed":false,"internalType":"uint256","name":"startBlock","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endBlock","type":"uint256"},{"indexed":false,"internalType":"string","name":"description","type":"string"}],"name":"ProposalCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"ProposalExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"support","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"VoteCast","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"support","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"},{"indexed":false,"internalType":"bytes","name":"params","type":"bytes"}],"name":"VoteCastWithParams","type":"event"},{"inputs":[],"name":"BALLOT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"COUNTING_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"EXTENDED_BALLOT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"}],"name":"castVote","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"castVoteBySig","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"}],"name":"castVoteWithReason","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"params","type":"bytes"}],"name":"castVoteWithReasonAndParams","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"params","type":"bytes"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"castVoteWithReasonAndParamsBySig","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"execute","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes","name":"params","type":"bytes"}],"name":"getVotesWithParams","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"address","name":"account","type":"address"}],"name":"hasVoted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"hashProposal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalDeadline","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalSnapshot","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposalThreshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"string","name":"description","type":"string"}],"name":"propose","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"quorum","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"relay","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"state","outputs":[{"internalType":"enum IGovernor.ProposalState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"votingDelay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"votingPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"BALLOT_TYPEHASH()":"deaaa7cc","COUNTING_MODE()":"dd4e2ba5","EXTENDED_BALLOT_TYPEHASH()":"2fe3e261","castVote(uint256,uint8)":"56781388","castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)":"3bccf4fd","castVoteWithReason(uint256,uint8,string)":"7b3c71d3","castVoteWithReasonAndParams(uint256,uint8,string,bytes)":"5f398a14","castVoteWithReasonAndParamsBySig(uint256,uint8,string,bytes,uint8,bytes32,bytes32)":"03420181","execute(address[],uint256[],bytes[],bytes32)":"2656227d","getVotes(address,uint256)":"eb9019d4","getVotesWithParams(address,uint256,bytes)":"9a802a6d","hasVoted(uint256,address)":"43859632","hashProposal(address[],uint256[],bytes[],bytes32)":"c59057e4","name()":"06fdde03","onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","onERC721Received(address,address,uint256,bytes)":"150b7a02","proposalDeadline(uint256)":"c01f9e37","proposalSnapshot(uint256)":"2d63f693","proposalThreshold()":"b58131b0","propose(address[],uint256[],bytes[],string)":"7d5e81e2","quorum(uint256)":"f8ce560a","relay(address,uint256,bytes)":"c28bc2fa","state(uint256)":"3e4f49e6","supportsInterface(bytes4)":"01ffc9a7","version()":"54fd4d50","votingDelay()":"3932abb1","votingPeriod()":"02a251a3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Empty\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"VoteCastWithParams\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COUNTING_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EXTENDED_BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"}],\"name\":\"castVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteBySig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"castVoteWithReason\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"castVoteWithReasonAndParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteWithReasonAndParamsBySig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"getVotesWithParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"hashProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalSnapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"relay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum IGovernor.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Core of the governance system, designed to be extended though various modules. This contract is abstract and requires several function to be implemented in various modules: - A counting module must implement {quorum}, {_quorumReached}, {_voteSucceeded} and {_countVote} - A voting module must implement {_getVotes} - Additionanly, the {votingPeriod} must also be implemented _Available since v4.3._\",\"errors\":{\"Empty()\":[{\"details\":\"An operation (e.g. {front}) couldn't be completed due to the queue being empty.\"}]},\"kind\":\"dev\",\"methods\":{\"COUNTING_MODE()\":{\"details\":\"A description of the possible `support` values for {castVote} and the way these votes are counted, meant to be consumed by UIs to show correct vote options and interpret the results. The string is a URL-encoded sequence of key-value pairs that each describe one aspect, for example `support=bravo&quorum=for,abstain`. There are 2 standard keys: `support` and `quorum`. - `support=bravo` refers to the vote options 0 = Against, 1 = For, 2 = Abstain, as in `GovernorBravo`. - `quorum=bravo` means that only For votes are counted towards quorum. - `quorum=for,abstain` means that both For and Abstain votes are counted towards quorum. If a counting module makes use of encoded `params`, it should  include this under a `params` key with a unique name that describes the behavior. For example: - `params=fractional` might refer to a scheme where votes are divided fractionally between for/against/abstain. - `params=erc721` might refer to a scheme where specific NFTs are delegated to vote. NOTE: The string can be decoded by the standard https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams[`URLSearchParams`] JavaScript class.\"},\"castVote(uint256,uint8)\":{\"details\":\"See {IGovernor-castVote}.\"},\"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)\":{\"details\":\"See {IGovernor-castVoteBySig}.\"},\"castVoteWithReason(uint256,uint8,string)\":{\"details\":\"See {IGovernor-castVoteWithReason}.\"},\"castVoteWithReasonAndParams(uint256,uint8,string,bytes)\":{\"details\":\"See {IGovernor-castVoteWithReasonAndParams}.\"},\"castVoteWithReasonAndParamsBySig(uint256,uint8,string,bytes,uint8,bytes32,bytes32)\":{\"details\":\"See {IGovernor-castVoteWithReasonAndParamsBySig}.\"},\"constructor\":{\"details\":\"Sets the value for {name} and {version}\"},\"execute(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-execute}.\"},\"getVotes(address,uint256)\":{\"details\":\"See {IGovernor-getVotes}.\"},\"getVotesWithParams(address,uint256,bytes)\":{\"details\":\"See {IGovernor-getVotesWithParams}.\"},\"hasVoted(uint256,address)\":{\"details\":\"Returns whether `account` has cast a vote on `proposalId`.\"},\"hashProposal(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-hashProposal}. The proposal id is produced by hashing the ABI encoded `targets` array, the `values` array, the `calldatas` array and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in advance, before the proposal is submitted. Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the same proposal (with same operation and same description) will have the same id if submitted on multiple governors across multiple networks. This also means that in order to execute the same operation twice (on the same governor) the proposer will have to change the description in order to avoid proposal id conflicts.\"},\"name()\":{\"details\":\"See {IGovernor-name}.\"},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155Receiver-onERC1155BatchReceived}.\"},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155Receiver-onERC1155Received}.\"},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}.\"},\"proposalDeadline(uint256)\":{\"details\":\"See {IGovernor-proposalDeadline}.\"},\"proposalSnapshot(uint256)\":{\"details\":\"See {IGovernor-proposalSnapshot}.\"},\"proposalThreshold()\":{\"details\":\"Part of the Governor Bravo's interface: _\\\"The number of votes required in order for a voter to become a proposer\\\"_.\"},\"propose(address[],uint256[],bytes[],string)\":{\"details\":\"See {IGovernor-propose}.\"},\"quorum(uint256)\":{\"details\":\"Minimum number of cast voted required for a proposal to be successful. Note: The `blockNumber` parameter corresponds to the snapshot used for counting vote. This allows to scale the quorum depending on values such as the totalSupply of a token at this block (see {ERC20Votes}).\"},\"relay(address,uint256,bytes)\":{\"details\":\"Relays a transaction or function call to an arbitrary target. In cases where the governance executor is some contract other than the governor itself, like when using a timelock, this function can be invoked in a governance proposal to recover tokens or Ether that was sent to the governor contract by mistake. Note that if the executor is simply the governor itself, use of `relay` is redundant.\"},\"state(uint256)\":{\"details\":\"See {IGovernor-state}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"version()\":{\"details\":\"See {IGovernor-version}.\"},\"votingDelay()\":{\"details\":\"Delay, in number of block, between the proposal is created and the vote starts. This can be increassed to leave time for users to buy voting power, or delegate it, before the voting of a proposal starts.\"},\"votingPeriod()\":{\"details\":\"Delay, in number of blocks, between the vote start and vote ends. NOTE: The {votingDelay} can delay the start of the vote. This must be considered when setting the voting duration compared to the voting delay.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"COUNTING_MODE()\":{\"notice\":\"module:voting\"},\"hasVoted(uint256,address)\":{\"notice\":\"module:voting\"},\"quorum(uint256)\":{\"notice\":\"module:user-config\"},\"votingDelay()\":{\"notice\":\"module:user-config\"},\"votingPeriod()\":{\"notice\":\"module:user-config\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/Governor.sol\":\"Governor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/Governor.sol\":{\"keccak256\":\"0x57da86c5f5c46ab8f2cf67ada4258567a9270f89499690f40ed8160788733a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9fab32423b6dbc9cf70737380a9444731acbe042945b65674858e064370be3a\",\"dweb:/ipfs/QmPLopcmcMBLkazDRVEVgts5ADMjXBba1vqtZcRGCRHtbF\"]},\"@openzeppelin/contracts/governance/IGovernor.sol\":{\"keccak256\":\"0xa52d593ff06a2353f78fa149da31f2ca94f03d1eff99bde41977fa2fe985a92f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d275abef31363d629e2a1a06f439bb7d2f26f66545ddb61f74b174de6f034a8\",\"dweb:/ipfs/QmPfjkyNcfiiZnPtYCvGfSHikbYzZxut3D4pBhBZ2VwfoT\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/Timers.sol\":{\"keccak256\":\"0x29791a62950a7983e02a673639c1a781d1e448691800456c2ce4b99715391b14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f37b3c682657d4b1790b5e564d4c9445856c93aa79ffed43fd076959118118\",\"dweb:/ipfs/QmcBGSacnV1JDz7kicsFijDYBxx5CmLSjUSJVLqyn7zH3G\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\":{\"keccak256\":\"0x4859ffd6dd69382a1462930c00b6e394007da80e78e510f56930271034737bf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0497f84a7fdfafac2046d23b456a05454365d38bb59883b7d8ce398a26704f4f\",\"dweb:/ipfs/QmZSXpAvoXWkxQ4U2GJ4juWvmn4Fd7zeH9wXZq6wKUbfi6\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/IGovernor.sol":{"IGovernor":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"ProposalCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"address","name":"proposer","type":"address"},{"indexed":false,"internalType":"address[]","name":"targets","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"},{"indexed":false,"internalType":"string[]","name":"signatures","type":"string[]"},{"indexed":false,"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"indexed":false,"internalType":"uint256","name":"startBlock","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endBlock","type":"uint256"},{"indexed":false,"internalType":"string","name":"description","type":"string"}],"name":"ProposalCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"ProposalExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"support","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"VoteCast","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"support","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"},{"indexed":false,"internalType":"bytes","name":"params","type":"bytes"}],"name":"VoteCastWithParams","type":"event"},{"inputs":[],"name":"COUNTING_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"}],"name":"castVote","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"castVoteBySig","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"}],"name":"castVoteWithReason","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"params","type":"bytes"}],"name":"castVoteWithReasonAndParams","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"params","type":"bytes"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"castVoteWithReasonAndParamsBySig","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"execute","outputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes","name":"params","type":"bytes"}],"name":"getVotesWithParams","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"address","name":"account","type":"address"}],"name":"hasVoted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"hashProposal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalDeadline","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalSnapshot","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"string","name":"description","type":"string"}],"name":"propose","outputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"quorum","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"state","outputs":[{"internalType":"enum IGovernor.ProposalState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"votingDelay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"votingPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"COUNTING_MODE()":"dd4e2ba5","castVote(uint256,uint8)":"56781388","castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)":"3bccf4fd","castVoteWithReason(uint256,uint8,string)":"7b3c71d3","castVoteWithReasonAndParams(uint256,uint8,string,bytes)":"5f398a14","castVoteWithReasonAndParamsBySig(uint256,uint8,string,bytes,uint8,bytes32,bytes32)":"03420181","execute(address[],uint256[],bytes[],bytes32)":"2656227d","getVotes(address,uint256)":"eb9019d4","getVotesWithParams(address,uint256,bytes)":"9a802a6d","hasVoted(uint256,address)":"43859632","hashProposal(address[],uint256[],bytes[],bytes32)":"c59057e4","name()":"06fdde03","proposalDeadline(uint256)":"c01f9e37","proposalSnapshot(uint256)":"2d63f693","propose(address[],uint256[],bytes[],string)":"7d5e81e2","quorum(uint256)":"f8ce560a","state(uint256)":"3e4f49e6","supportsInterface(bytes4)":"01ffc9a7","version()":"54fd4d50","votingDelay()":"3932abb1","votingPeriod()":"02a251a3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"VoteCastWithParams\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"COUNTING_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"}],\"name\":\"castVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteBySig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"castVoteWithReason\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"castVoteWithReasonAndParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteWithReasonAndParamsBySig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"getVotesWithParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"hashProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalSnapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum IGovernor.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the {Governor} core. _Available since v4.3._\",\"events\":{\"ProposalCanceled(uint256)\":{\"details\":\"Emitted when a proposal is canceled.\"},\"ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)\":{\"details\":\"Emitted when a proposal is created.\"},\"ProposalExecuted(uint256)\":{\"details\":\"Emitted when a proposal is executed.\"},\"VoteCast(address,uint256,uint8,uint256,string)\":{\"details\":\"Emitted when a vote is cast without params. Note: `support` values should be seen as buckets. Their interpretation depends on the voting module used.\"},\"VoteCastWithParams(address,uint256,uint8,uint256,string,bytes)\":{\"details\":\"Emitted when a vote is cast with params. Note: `support` values should be seen as buckets. Their interpretation depends on the voting module used. `params` are additional encoded parameters. Their intepepretation also depends on the voting module used.\"}},\"kind\":\"dev\",\"methods\":{\"COUNTING_MODE()\":{\"details\":\"A description of the possible `support` values for {castVote} and the way these votes are counted, meant to be consumed by UIs to show correct vote options and interpret the results. The string is a URL-encoded sequence of key-value pairs that each describe one aspect, for example `support=bravo&quorum=for,abstain`. There are 2 standard keys: `support` and `quorum`. - `support=bravo` refers to the vote options 0 = Against, 1 = For, 2 = Abstain, as in `GovernorBravo`. - `quorum=bravo` means that only For votes are counted towards quorum. - `quorum=for,abstain` means that both For and Abstain votes are counted towards quorum. If a counting module makes use of encoded `params`, it should  include this under a `params` key with a unique name that describes the behavior. For example: - `params=fractional` might refer to a scheme where votes are divided fractionally between for/against/abstain. - `params=erc721` might refer to a scheme where specific NFTs are delegated to vote. NOTE: The string can be decoded by the standard https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams[`URLSearchParams`] JavaScript class.\"},\"castVote(uint256,uint8)\":{\"details\":\"Cast a vote Emits a {VoteCast} event.\"},\"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)\":{\"details\":\"Cast a vote using the user's cryptographic signature. Emits a {VoteCast} event.\"},\"castVoteWithReason(uint256,uint8,string)\":{\"details\":\"Cast a vote with a reason Emits a {VoteCast} event.\"},\"castVoteWithReasonAndParams(uint256,uint8,string,bytes)\":{\"details\":\"Cast a vote with a reason and additional encoded parameters Emits a {VoteCast} or {VoteCastWithParams} event depending on the length of params.\"},\"castVoteWithReasonAndParamsBySig(uint256,uint8,string,bytes,uint8,bytes32,bytes32)\":{\"details\":\"Cast a vote with a reason and additional encoded parameters using the user's cryptographic signature. Emits a {VoteCast} or {VoteCastWithParams} event depending on the length of params.\"},\"execute(address[],uint256[],bytes[],bytes32)\":{\"details\":\"Execute a successful proposal. This requires the quorum to be reached, the vote to be successful, and the deadline to be reached. Emits a {ProposalExecuted} event. Note: some module can modify the requirements for execution, for example by adding an additional timelock.\"},\"getVotes(address,uint256)\":{\"details\":\"Voting power of an `account` at a specific `blockNumber`. Note: this can be implemented in a number of ways, for example by reading the delegated balance from one (or multiple), {ERC20Votes} tokens.\"},\"getVotesWithParams(address,uint256,bytes)\":{\"details\":\"Voting power of an `account` at a specific `blockNumber` given additional encoded parameters.\"},\"hasVoted(uint256,address)\":{\"details\":\"Returns whether `account` has cast a vote on `proposalId`.\"},\"hashProposal(address[],uint256[],bytes[],bytes32)\":{\"details\":\"Hashing function used to (re)build the proposal id from the proposal details..\"},\"name()\":{\"details\":\"Name of the governor instance (used in building the ERC712 domain separator).\"},\"proposalDeadline(uint256)\":{\"details\":\"Block number at which votes close. Votes close at the end of this block, so it is possible to cast a vote during this block.\"},\"proposalSnapshot(uint256)\":{\"details\":\"Block number used to retrieve user's votes and quorum. As per Compound's Comp and OpenZeppelin's ERC20Votes, the snapshot is performed at the end of this block. Hence, voting for this proposal starts at the beginning of the following block.\"},\"propose(address[],uint256[],bytes[],string)\":{\"details\":\"Create a new proposal. Vote start {IGovernor-votingDelay} blocks after the proposal is created and ends {IGovernor-votingPeriod} blocks after the voting starts. Emits a {ProposalCreated} event.\"},\"quorum(uint256)\":{\"details\":\"Minimum number of cast voted required for a proposal to be successful. Note: The `blockNumber` parameter corresponds to the snapshot used for counting vote. This allows to scale the quorum depending on values such as the totalSupply of a token at this block (see {ERC20Votes}).\"},\"state(uint256)\":{\"details\":\"Current state of a proposal, following Compound's convention\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"version()\":{\"details\":\"Version of the governor instance (used in building the ERC712 domain separator). Default: \\\"1\\\"\"},\"votingDelay()\":{\"details\":\"Delay, in number of block, between the proposal is created and the vote starts. This can be increassed to leave time for users to buy voting power, or delegate it, before the voting of a proposal starts.\"},\"votingPeriod()\":{\"details\":\"Delay, in number of blocks, between the vote start and vote ends. NOTE: The {votingDelay} can delay the start of the vote. This must be considered when setting the voting duration compared to the voting delay.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"COUNTING_MODE()\":{\"notice\":\"module:voting\"},\"getVotes(address,uint256)\":{\"notice\":\"module:reputation\"},\"getVotesWithParams(address,uint256,bytes)\":{\"notice\":\"module:reputation\"},\"hasVoted(uint256,address)\":{\"notice\":\"module:voting\"},\"hashProposal(address[],uint256[],bytes[],bytes32)\":{\"notice\":\"module:core\"},\"name()\":{\"notice\":\"module:core\"},\"proposalDeadline(uint256)\":{\"notice\":\"module:core\"},\"proposalSnapshot(uint256)\":{\"notice\":\"module:core\"},\"quorum(uint256)\":{\"notice\":\"module:user-config\"},\"state(uint256)\":{\"notice\":\"module:core\"},\"version()\":{\"notice\":\"module:core\"},\"votingDelay()\":{\"notice\":\"module:user-config\"},\"votingPeriod()\":{\"notice\":\"module:user-config\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/IGovernor.sol\":\"IGovernor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/IGovernor.sol\":{\"keccak256\":\"0xa52d593ff06a2353f78fa149da31f2ca94f03d1eff99bde41977fa2fe985a92f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d275abef31363d629e2a1a06f439bb7d2f26f66545ddb61f74b174de6f034a8\",\"dweb:/ipfs/QmPfjkyNcfiiZnPtYCvGfSHikbYzZxut3D4pBhBZ2VwfoT\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/extensions/GovernorCountingSimple.sol":{"GovernorCountingSimple":{"abi":[{"inputs":[],"name":"Empty","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"ProposalCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"address","name":"proposer","type":"address"},{"indexed":false,"internalType":"address[]","name":"targets","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"},{"indexed":false,"internalType":"string[]","name":"signatures","type":"string[]"},{"indexed":false,"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"indexed":false,"internalType":"uint256","name":"startBlock","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endBlock","type":"uint256"},{"indexed":false,"internalType":"string","name":"description","type":"string"}],"name":"ProposalCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"ProposalExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"support","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"VoteCast","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"support","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"},{"indexed":false,"internalType":"bytes","name":"params","type":"bytes"}],"name":"VoteCastWithParams","type":"event"},{"inputs":[],"name":"BALLOT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"COUNTING_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"EXTENDED_BALLOT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"}],"name":"castVote","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"castVoteBySig","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"}],"name":"castVoteWithReason","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"params","type":"bytes"}],"name":"castVoteWithReasonAndParams","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"params","type":"bytes"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"castVoteWithReasonAndParamsBySig","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"execute","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes","name":"params","type":"bytes"}],"name":"getVotesWithParams","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"address","name":"account","type":"address"}],"name":"hasVoted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"hashProposal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalDeadline","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalSnapshot","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposalThreshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalVotes","outputs":[{"internalType":"uint256","name":"againstVotes","type":"uint256"},{"internalType":"uint256","name":"forVotes","type":"uint256"},{"internalType":"uint256","name":"abstainVotes","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"string","name":"description","type":"string"}],"name":"propose","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"quorum","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"relay","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"state","outputs":[{"internalType":"enum IGovernor.ProposalState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"votingDelay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"votingPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"BALLOT_TYPEHASH()":"deaaa7cc","COUNTING_MODE()":"dd4e2ba5","EXTENDED_BALLOT_TYPEHASH()":"2fe3e261","castVote(uint256,uint8)":"56781388","castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)":"3bccf4fd","castVoteWithReason(uint256,uint8,string)":"7b3c71d3","castVoteWithReasonAndParams(uint256,uint8,string,bytes)":"5f398a14","castVoteWithReasonAndParamsBySig(uint256,uint8,string,bytes,uint8,bytes32,bytes32)":"03420181","execute(address[],uint256[],bytes[],bytes32)":"2656227d","getVotes(address,uint256)":"eb9019d4","getVotesWithParams(address,uint256,bytes)":"9a802a6d","hasVoted(uint256,address)":"43859632","hashProposal(address[],uint256[],bytes[],bytes32)":"c59057e4","name()":"06fdde03","onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","onERC721Received(address,address,uint256,bytes)":"150b7a02","proposalDeadline(uint256)":"c01f9e37","proposalSnapshot(uint256)":"2d63f693","proposalThreshold()":"b58131b0","proposalVotes(uint256)":"544ffc9c","propose(address[],uint256[],bytes[],string)":"7d5e81e2","quorum(uint256)":"f8ce560a","relay(address,uint256,bytes)":"c28bc2fa","state(uint256)":"3e4f49e6","supportsInterface(bytes4)":"01ffc9a7","version()":"54fd4d50","votingDelay()":"3932abb1","votingPeriod()":"02a251a3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Empty\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"VoteCastWithParams\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COUNTING_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EXTENDED_BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"}],\"name\":\"castVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteBySig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"castVoteWithReason\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"castVoteWithReasonAndParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteWithReasonAndParamsBySig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"getVotesWithParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"hashProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalSnapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"abstainVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"relay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum IGovernor.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Extension of {Governor} for simple, 3 options, vote counting. _Available since v4.3._\",\"errors\":{\"Empty()\":[{\"details\":\"An operation (e.g. {front}) couldn't be completed due to the queue being empty.\"}]},\"kind\":\"dev\",\"methods\":{\"COUNTING_MODE()\":{\"details\":\"See {IGovernor-COUNTING_MODE}.\"},\"castVote(uint256,uint8)\":{\"details\":\"See {IGovernor-castVote}.\"},\"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)\":{\"details\":\"See {IGovernor-castVoteBySig}.\"},\"castVoteWithReason(uint256,uint8,string)\":{\"details\":\"See {IGovernor-castVoteWithReason}.\"},\"castVoteWithReasonAndParams(uint256,uint8,string,bytes)\":{\"details\":\"See {IGovernor-castVoteWithReasonAndParams}.\"},\"castVoteWithReasonAndParamsBySig(uint256,uint8,string,bytes,uint8,bytes32,bytes32)\":{\"details\":\"See {IGovernor-castVoteWithReasonAndParamsBySig}.\"},\"execute(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-execute}.\"},\"getVotes(address,uint256)\":{\"details\":\"See {IGovernor-getVotes}.\"},\"getVotesWithParams(address,uint256,bytes)\":{\"details\":\"See {IGovernor-getVotesWithParams}.\"},\"hasVoted(uint256,address)\":{\"details\":\"See {IGovernor-hasVoted}.\"},\"hashProposal(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-hashProposal}. The proposal id is produced by hashing the ABI encoded `targets` array, the `values` array, the `calldatas` array and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in advance, before the proposal is submitted. Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the same proposal (with same operation and same description) will have the same id if submitted on multiple governors across multiple networks. This also means that in order to execute the same operation twice (on the same governor) the proposer will have to change the description in order to avoid proposal id conflicts.\"},\"name()\":{\"details\":\"See {IGovernor-name}.\"},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155Receiver-onERC1155BatchReceived}.\"},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155Receiver-onERC1155Received}.\"},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}.\"},\"proposalDeadline(uint256)\":{\"details\":\"See {IGovernor-proposalDeadline}.\"},\"proposalSnapshot(uint256)\":{\"details\":\"See {IGovernor-proposalSnapshot}.\"},\"proposalThreshold()\":{\"details\":\"Part of the Governor Bravo's interface: _\\\"The number of votes required in order for a voter to become a proposer\\\"_.\"},\"proposalVotes(uint256)\":{\"details\":\"Accessor to the internal vote counts.\"},\"propose(address[],uint256[],bytes[],string)\":{\"details\":\"See {IGovernor-propose}.\"},\"quorum(uint256)\":{\"details\":\"Minimum number of cast voted required for a proposal to be successful. Note: The `blockNumber` parameter corresponds to the snapshot used for counting vote. This allows to scale the quorum depending on values such as the totalSupply of a token at this block (see {ERC20Votes}).\"},\"relay(address,uint256,bytes)\":{\"details\":\"Relays a transaction or function call to an arbitrary target. In cases where the governance executor is some contract other than the governor itself, like when using a timelock, this function can be invoked in a governance proposal to recover tokens or Ether that was sent to the governor contract by mistake. Note that if the executor is simply the governor itself, use of `relay` is redundant.\"},\"state(uint256)\":{\"details\":\"See {IGovernor-state}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"version()\":{\"details\":\"See {IGovernor-version}.\"},\"votingDelay()\":{\"details\":\"Delay, in number of block, between the proposal is created and the vote starts. This can be increassed to leave time for users to buy voting power, or delegate it, before the voting of a proposal starts.\"},\"votingPeriod()\":{\"details\":\"Delay, in number of blocks, between the vote start and vote ends. NOTE: The {votingDelay} can delay the start of the vote. This must be considered when setting the voting duration compared to the voting delay.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"quorum(uint256)\":{\"notice\":\"module:user-config\"},\"votingDelay()\":{\"notice\":\"module:user-config\"},\"votingPeriod()\":{\"notice\":\"module:user-config\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/extensions/GovernorCountingSimple.sol\":\"GovernorCountingSimple\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/Governor.sol\":{\"keccak256\":\"0x57da86c5f5c46ab8f2cf67ada4258567a9270f89499690f40ed8160788733a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9fab32423b6dbc9cf70737380a9444731acbe042945b65674858e064370be3a\",\"dweb:/ipfs/QmPLopcmcMBLkazDRVEVgts5ADMjXBba1vqtZcRGCRHtbF\"]},\"@openzeppelin/contracts/governance/IGovernor.sol\":{\"keccak256\":\"0xa52d593ff06a2353f78fa149da31f2ca94f03d1eff99bde41977fa2fe985a92f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d275abef31363d629e2a1a06f439bb7d2f26f66545ddb61f74b174de6f034a8\",\"dweb:/ipfs/QmPfjkyNcfiiZnPtYCvGfSHikbYzZxut3D4pBhBZ2VwfoT\"]},\"@openzeppelin/contracts/governance/extensions/GovernorCountingSimple.sol\":{\"keccak256\":\"0x0f9c01248b04279913cc08936e9d15494ec3700c21768a175f91e72ba52c7789\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60518084110ae055e83e9d75c47334aabb3e9db45f6895557bb4ad7f1a658b91\",\"dweb:/ipfs/QmVKJnESDYK52gy59iMChFibs4XWuUxRNxo23zY72h2crY\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/Timers.sol\":{\"keccak256\":\"0x29791a62950a7983e02a673639c1a781d1e448691800456c2ce4b99715391b14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f37b3c682657d4b1790b5e564d4c9445856c93aa79ffed43fd076959118118\",\"dweb:/ipfs/QmcBGSacnV1JDz7kicsFijDYBxx5CmLSjUSJVLqyn7zH3G\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\":{\"keccak256\":\"0x4859ffd6dd69382a1462930c00b6e394007da80e78e510f56930271034737bf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0497f84a7fdfafac2046d23b456a05454365d38bb59883b7d8ce398a26704f4f\",\"dweb:/ipfs/QmZSXpAvoXWkxQ4U2GJ4juWvmn4Fd7zeH9wXZq6wKUbfi6\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/extensions/GovernorSettings.sol":{"GovernorSettings":{"abi":[{"inputs":[],"name":"Empty","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"ProposalCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"address","name":"proposer","type":"address"},{"indexed":false,"internalType":"address[]","name":"targets","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"},{"indexed":false,"internalType":"string[]","name":"signatures","type":"string[]"},{"indexed":false,"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"indexed":false,"internalType":"uint256","name":"startBlock","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endBlock","type":"uint256"},{"indexed":false,"internalType":"string","name":"description","type":"string"}],"name":"ProposalCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"ProposalExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldProposalThreshold","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newProposalThreshold","type":"uint256"}],"name":"ProposalThresholdSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"support","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"VoteCast","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"support","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"},{"indexed":false,"internalType":"bytes","name":"params","type":"bytes"}],"name":"VoteCastWithParams","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldVotingDelay","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotingDelay","type":"uint256"}],"name":"VotingDelaySet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldVotingPeriod","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotingPeriod","type":"uint256"}],"name":"VotingPeriodSet","type":"event"},{"inputs":[],"name":"BALLOT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"COUNTING_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"EXTENDED_BALLOT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"}],"name":"castVote","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"castVoteBySig","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"}],"name":"castVoteWithReason","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"params","type":"bytes"}],"name":"castVoteWithReasonAndParams","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"params","type":"bytes"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"castVoteWithReasonAndParamsBySig","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"execute","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes","name":"params","type":"bytes"}],"name":"getVotesWithParams","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"address","name":"account","type":"address"}],"name":"hasVoted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"hashProposal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalDeadline","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalSnapshot","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposalThreshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"string","name":"description","type":"string"}],"name":"propose","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"quorum","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"relay","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newProposalThreshold","type":"uint256"}],"name":"setProposalThreshold","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newVotingDelay","type":"uint256"}],"name":"setVotingDelay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newVotingPeriod","type":"uint256"}],"name":"setVotingPeriod","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"state","outputs":[{"internalType":"enum IGovernor.ProposalState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"votingDelay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"votingPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"BALLOT_TYPEHASH()":"deaaa7cc","COUNTING_MODE()":"dd4e2ba5","EXTENDED_BALLOT_TYPEHASH()":"2fe3e261","castVote(uint256,uint8)":"56781388","castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)":"3bccf4fd","castVoteWithReason(uint256,uint8,string)":"7b3c71d3","castVoteWithReasonAndParams(uint256,uint8,string,bytes)":"5f398a14","castVoteWithReasonAndParamsBySig(uint256,uint8,string,bytes,uint8,bytes32,bytes32)":"03420181","execute(address[],uint256[],bytes[],bytes32)":"2656227d","getVotes(address,uint256)":"eb9019d4","getVotesWithParams(address,uint256,bytes)":"9a802a6d","hasVoted(uint256,address)":"43859632","hashProposal(address[],uint256[],bytes[],bytes32)":"c59057e4","name()":"06fdde03","onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","onERC721Received(address,address,uint256,bytes)":"150b7a02","proposalDeadline(uint256)":"c01f9e37","proposalSnapshot(uint256)":"2d63f693","proposalThreshold()":"b58131b0","propose(address[],uint256[],bytes[],string)":"7d5e81e2","quorum(uint256)":"f8ce560a","relay(address,uint256,bytes)":"c28bc2fa","setProposalThreshold(uint256)":"ece40cc1","setVotingDelay(uint256)":"70b0f660","setVotingPeriod(uint256)":"ea0217cf","state(uint256)":"3e4f49e6","supportsInterface(bytes4)":"01ffc9a7","version()":"54fd4d50","votingDelay()":"3932abb1","votingPeriod()":"02a251a3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Empty\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldProposalThreshold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newProposalThreshold\",\"type\":\"uint256\"}],\"name\":\"ProposalThresholdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"VoteCastWithParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingDelay\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingDelay\",\"type\":\"uint256\"}],\"name\":\"VotingDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"VotingPeriodSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COUNTING_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EXTENDED_BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"}],\"name\":\"castVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteBySig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"castVoteWithReason\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"castVoteWithReasonAndParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteWithReasonAndParamsBySig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"getVotesWithParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"hashProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalSnapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"relay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newProposalThreshold\",\"type\":\"uint256\"}],\"name\":\"setProposalThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newVotingDelay\",\"type\":\"uint256\"}],\"name\":\"setVotingDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"setVotingPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum IGovernor.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Extension of {Governor} for settings updatable through governance. _Available since v4.4._\",\"errors\":{\"Empty()\":[{\"details\":\"An operation (e.g. {front}) couldn't be completed due to the queue being empty.\"}]},\"kind\":\"dev\",\"methods\":{\"COUNTING_MODE()\":{\"details\":\"A description of the possible `support` values for {castVote} and the way these votes are counted, meant to be consumed by UIs to show correct vote options and interpret the results. The string is a URL-encoded sequence of key-value pairs that each describe one aspect, for example `support=bravo&quorum=for,abstain`. There are 2 standard keys: `support` and `quorum`. - `support=bravo` refers to the vote options 0 = Against, 1 = For, 2 = Abstain, as in `GovernorBravo`. - `quorum=bravo` means that only For votes are counted towards quorum. - `quorum=for,abstain` means that both For and Abstain votes are counted towards quorum. If a counting module makes use of encoded `params`, it should  include this under a `params` key with a unique name that describes the behavior. For example: - `params=fractional` might refer to a scheme where votes are divided fractionally between for/against/abstain. - `params=erc721` might refer to a scheme where specific NFTs are delegated to vote. NOTE: The string can be decoded by the standard https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams[`URLSearchParams`] JavaScript class.\"},\"castVote(uint256,uint8)\":{\"details\":\"See {IGovernor-castVote}.\"},\"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)\":{\"details\":\"See {IGovernor-castVoteBySig}.\"},\"castVoteWithReason(uint256,uint8,string)\":{\"details\":\"See {IGovernor-castVoteWithReason}.\"},\"castVoteWithReasonAndParams(uint256,uint8,string,bytes)\":{\"details\":\"See {IGovernor-castVoteWithReasonAndParams}.\"},\"castVoteWithReasonAndParamsBySig(uint256,uint8,string,bytes,uint8,bytes32,bytes32)\":{\"details\":\"See {IGovernor-castVoteWithReasonAndParamsBySig}.\"},\"constructor\":{\"details\":\"Initialize the governance parameters.\"},\"execute(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-execute}.\"},\"getVotes(address,uint256)\":{\"details\":\"See {IGovernor-getVotes}.\"},\"getVotesWithParams(address,uint256,bytes)\":{\"details\":\"See {IGovernor-getVotesWithParams}.\"},\"hasVoted(uint256,address)\":{\"details\":\"Returns whether `account` has cast a vote on `proposalId`.\"},\"hashProposal(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-hashProposal}. The proposal id is produced by hashing the ABI encoded `targets` array, the `values` array, the `calldatas` array and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in advance, before the proposal is submitted. Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the same proposal (with same operation and same description) will have the same id if submitted on multiple governors across multiple networks. This also means that in order to execute the same operation twice (on the same governor) the proposer will have to change the description in order to avoid proposal id conflicts.\"},\"name()\":{\"details\":\"See {IGovernor-name}.\"},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155Receiver-onERC1155BatchReceived}.\"},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155Receiver-onERC1155Received}.\"},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}.\"},\"proposalDeadline(uint256)\":{\"details\":\"See {IGovernor-proposalDeadline}.\"},\"proposalSnapshot(uint256)\":{\"details\":\"See {IGovernor-proposalSnapshot}.\"},\"proposalThreshold()\":{\"details\":\"See {Governor-proposalThreshold}.\"},\"propose(address[],uint256[],bytes[],string)\":{\"details\":\"See {IGovernor-propose}.\"},\"quorum(uint256)\":{\"details\":\"Minimum number of cast voted required for a proposal to be successful. Note: The `blockNumber` parameter corresponds to the snapshot used for counting vote. This allows to scale the quorum depending on values such as the totalSupply of a token at this block (see {ERC20Votes}).\"},\"relay(address,uint256,bytes)\":{\"details\":\"Relays a transaction or function call to an arbitrary target. In cases where the governance executor is some contract other than the governor itself, like when using a timelock, this function can be invoked in a governance proposal to recover tokens or Ether that was sent to the governor contract by mistake. Note that if the executor is simply the governor itself, use of `relay` is redundant.\"},\"setProposalThreshold(uint256)\":{\"details\":\"Update the proposal threshold. This operation can only be performed through a governance proposal. Emits a {ProposalThresholdSet} event.\"},\"setVotingDelay(uint256)\":{\"details\":\"Update the voting delay. This operation can only be performed through a governance proposal. Emits a {VotingDelaySet} event.\"},\"setVotingPeriod(uint256)\":{\"details\":\"Update the voting period. This operation can only be performed through a governance proposal. Emits a {VotingPeriodSet} event.\"},\"state(uint256)\":{\"details\":\"See {IGovernor-state}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"version()\":{\"details\":\"See {IGovernor-version}.\"},\"votingDelay()\":{\"details\":\"See {IGovernor-votingDelay}.\"},\"votingPeriod()\":{\"details\":\"See {IGovernor-votingPeriod}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"COUNTING_MODE()\":{\"notice\":\"module:voting\"},\"hasVoted(uint256,address)\":{\"notice\":\"module:voting\"},\"quorum(uint256)\":{\"notice\":\"module:user-config\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/extensions/GovernorSettings.sol\":\"GovernorSettings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/Governor.sol\":{\"keccak256\":\"0x57da86c5f5c46ab8f2cf67ada4258567a9270f89499690f40ed8160788733a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9fab32423b6dbc9cf70737380a9444731acbe042945b65674858e064370be3a\",\"dweb:/ipfs/QmPLopcmcMBLkazDRVEVgts5ADMjXBba1vqtZcRGCRHtbF\"]},\"@openzeppelin/contracts/governance/IGovernor.sol\":{\"keccak256\":\"0xa52d593ff06a2353f78fa149da31f2ca94f03d1eff99bde41977fa2fe985a92f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d275abef31363d629e2a1a06f439bb7d2f26f66545ddb61f74b174de6f034a8\",\"dweb:/ipfs/QmPfjkyNcfiiZnPtYCvGfSHikbYzZxut3D4pBhBZ2VwfoT\"]},\"@openzeppelin/contracts/governance/extensions/GovernorSettings.sol\":{\"keccak256\":\"0xab3781f09dfb447d0c2f5bbb2aafc9ff86333f16c61580ab85d7c8a87491eab9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58571bc89cd0e54fa9af6b41e53e2110c6f5767eb691af8ad88759dbde07b3fd\",\"dweb:/ipfs/QmbeoatuYT5ukpGLWZh4DHb7yrC3TpBbm9hDdWwkdUuUy4\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/Timers.sol\":{\"keccak256\":\"0x29791a62950a7983e02a673639c1a781d1e448691800456c2ce4b99715391b14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f37b3c682657d4b1790b5e564d4c9445856c93aa79ffed43fd076959118118\",\"dweb:/ipfs/QmcBGSacnV1JDz7kicsFijDYBxx5CmLSjUSJVLqyn7zH3G\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\":{\"keccak256\":\"0x4859ffd6dd69382a1462930c00b6e394007da80e78e510f56930271034737bf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0497f84a7fdfafac2046d23b456a05454365d38bb59883b7d8ce398a26704f4f\",\"dweb:/ipfs/QmZSXpAvoXWkxQ4U2GJ4juWvmn4Fd7zeH9wXZq6wKUbfi6\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/extensions/GovernorVotes.sol":{"GovernorVotes":{"abi":[{"inputs":[],"name":"Empty","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"ProposalCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"address","name":"proposer","type":"address"},{"indexed":false,"internalType":"address[]","name":"targets","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"},{"indexed":false,"internalType":"string[]","name":"signatures","type":"string[]"},{"indexed":false,"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"indexed":false,"internalType":"uint256","name":"startBlock","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endBlock","type":"uint256"},{"indexed":false,"internalType":"string","name":"description","type":"string"}],"name":"ProposalCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"ProposalExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"support","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"VoteCast","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"support","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"},{"indexed":false,"internalType":"bytes","name":"params","type":"bytes"}],"name":"VoteCastWithParams","type":"event"},{"inputs":[],"name":"BALLOT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"COUNTING_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"EXTENDED_BALLOT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"}],"name":"castVote","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"castVoteBySig","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"}],"name":"castVoteWithReason","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"params","type":"bytes"}],"name":"castVoteWithReasonAndParams","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"params","type":"bytes"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"castVoteWithReasonAndParamsBySig","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"execute","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes","name":"params","type":"bytes"}],"name":"getVotesWithParams","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"address","name":"account","type":"address"}],"name":"hasVoted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"hashProposal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalDeadline","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalSnapshot","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposalThreshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"string","name":"description","type":"string"}],"name":"propose","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"quorum","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"relay","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"state","outputs":[{"internalType":"enum IGovernor.ProposalState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IVotes","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"votingDelay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"votingPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"BALLOT_TYPEHASH()":"deaaa7cc","COUNTING_MODE()":"dd4e2ba5","EXTENDED_BALLOT_TYPEHASH()":"2fe3e261","castVote(uint256,uint8)":"56781388","castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)":"3bccf4fd","castVoteWithReason(uint256,uint8,string)":"7b3c71d3","castVoteWithReasonAndParams(uint256,uint8,string,bytes)":"5f398a14","castVoteWithReasonAndParamsBySig(uint256,uint8,string,bytes,uint8,bytes32,bytes32)":"03420181","execute(address[],uint256[],bytes[],bytes32)":"2656227d","getVotes(address,uint256)":"eb9019d4","getVotesWithParams(address,uint256,bytes)":"9a802a6d","hasVoted(uint256,address)":"43859632","hashProposal(address[],uint256[],bytes[],bytes32)":"c59057e4","name()":"06fdde03","onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","onERC721Received(address,address,uint256,bytes)":"150b7a02","proposalDeadline(uint256)":"c01f9e37","proposalSnapshot(uint256)":"2d63f693","proposalThreshold()":"b58131b0","propose(address[],uint256[],bytes[],string)":"7d5e81e2","quorum(uint256)":"f8ce560a","relay(address,uint256,bytes)":"c28bc2fa","state(uint256)":"3e4f49e6","supportsInterface(bytes4)":"01ffc9a7","token()":"fc0c546a","version()":"54fd4d50","votingDelay()":"3932abb1","votingPeriod()":"02a251a3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Empty\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"VoteCastWithParams\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COUNTING_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EXTENDED_BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"}],\"name\":\"castVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteBySig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"castVoteWithReason\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"castVoteWithReasonAndParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteWithReasonAndParamsBySig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"getVotesWithParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"hashProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalSnapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"relay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum IGovernor.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IVotes\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Extension of {Governor} for voting weight extraction from an {ERC20Votes} token, or since v4.5 an {ERC721Votes} token. _Available since v4.3._\",\"errors\":{\"Empty()\":[{\"details\":\"An operation (e.g. {front}) couldn't be completed due to the queue being empty.\"}]},\"kind\":\"dev\",\"methods\":{\"COUNTING_MODE()\":{\"details\":\"A description of the possible `support` values for {castVote} and the way these votes are counted, meant to be consumed by UIs to show correct vote options and interpret the results. The string is a URL-encoded sequence of key-value pairs that each describe one aspect, for example `support=bravo&quorum=for,abstain`. There are 2 standard keys: `support` and `quorum`. - `support=bravo` refers to the vote options 0 = Against, 1 = For, 2 = Abstain, as in `GovernorBravo`. - `quorum=bravo` means that only For votes are counted towards quorum. - `quorum=for,abstain` means that both For and Abstain votes are counted towards quorum. If a counting module makes use of encoded `params`, it should  include this under a `params` key with a unique name that describes the behavior. For example: - `params=fractional` might refer to a scheme where votes are divided fractionally between for/against/abstain. - `params=erc721` might refer to a scheme where specific NFTs are delegated to vote. NOTE: The string can be decoded by the standard https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams[`URLSearchParams`] JavaScript class.\"},\"castVote(uint256,uint8)\":{\"details\":\"See {IGovernor-castVote}.\"},\"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)\":{\"details\":\"See {IGovernor-castVoteBySig}.\"},\"castVoteWithReason(uint256,uint8,string)\":{\"details\":\"See {IGovernor-castVoteWithReason}.\"},\"castVoteWithReasonAndParams(uint256,uint8,string,bytes)\":{\"details\":\"See {IGovernor-castVoteWithReasonAndParams}.\"},\"castVoteWithReasonAndParamsBySig(uint256,uint8,string,bytes,uint8,bytes32,bytes32)\":{\"details\":\"See {IGovernor-castVoteWithReasonAndParamsBySig}.\"},\"execute(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-execute}.\"},\"getVotes(address,uint256)\":{\"details\":\"See {IGovernor-getVotes}.\"},\"getVotesWithParams(address,uint256,bytes)\":{\"details\":\"See {IGovernor-getVotesWithParams}.\"},\"hasVoted(uint256,address)\":{\"details\":\"Returns whether `account` has cast a vote on `proposalId`.\"},\"hashProposal(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-hashProposal}. The proposal id is produced by hashing the ABI encoded `targets` array, the `values` array, the `calldatas` array and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in advance, before the proposal is submitted. Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the same proposal (with same operation and same description) will have the same id if submitted on multiple governors across multiple networks. This also means that in order to execute the same operation twice (on the same governor) the proposer will have to change the description in order to avoid proposal id conflicts.\"},\"name()\":{\"details\":\"See {IGovernor-name}.\"},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155Receiver-onERC1155BatchReceived}.\"},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155Receiver-onERC1155Received}.\"},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}.\"},\"proposalDeadline(uint256)\":{\"details\":\"See {IGovernor-proposalDeadline}.\"},\"proposalSnapshot(uint256)\":{\"details\":\"See {IGovernor-proposalSnapshot}.\"},\"proposalThreshold()\":{\"details\":\"Part of the Governor Bravo's interface: _\\\"The number of votes required in order for a voter to become a proposer\\\"_.\"},\"propose(address[],uint256[],bytes[],string)\":{\"details\":\"See {IGovernor-propose}.\"},\"quorum(uint256)\":{\"details\":\"Minimum number of cast voted required for a proposal to be successful. Note: The `blockNumber` parameter corresponds to the snapshot used for counting vote. This allows to scale the quorum depending on values such as the totalSupply of a token at this block (see {ERC20Votes}).\"},\"relay(address,uint256,bytes)\":{\"details\":\"Relays a transaction or function call to an arbitrary target. In cases where the governance executor is some contract other than the governor itself, like when using a timelock, this function can be invoked in a governance proposal to recover tokens or Ether that was sent to the governor contract by mistake. Note that if the executor is simply the governor itself, use of `relay` is redundant.\"},\"state(uint256)\":{\"details\":\"See {IGovernor-state}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"version()\":{\"details\":\"See {IGovernor-version}.\"},\"votingDelay()\":{\"details\":\"Delay, in number of block, between the proposal is created and the vote starts. This can be increassed to leave time for users to buy voting power, or delegate it, before the voting of a proposal starts.\"},\"votingPeriod()\":{\"details\":\"Delay, in number of blocks, between the vote start and vote ends. NOTE: The {votingDelay} can delay the start of the vote. This must be considered when setting the voting duration compared to the voting delay.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"COUNTING_MODE()\":{\"notice\":\"module:voting\"},\"hasVoted(uint256,address)\":{\"notice\":\"module:voting\"},\"quorum(uint256)\":{\"notice\":\"module:user-config\"},\"votingDelay()\":{\"notice\":\"module:user-config\"},\"votingPeriod()\":{\"notice\":\"module:user-config\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/extensions/GovernorVotes.sol\":\"GovernorVotes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/Governor.sol\":{\"keccak256\":\"0x57da86c5f5c46ab8f2cf67ada4258567a9270f89499690f40ed8160788733a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9fab32423b6dbc9cf70737380a9444731acbe042945b65674858e064370be3a\",\"dweb:/ipfs/QmPLopcmcMBLkazDRVEVgts5ADMjXBba1vqtZcRGCRHtbF\"]},\"@openzeppelin/contracts/governance/IGovernor.sol\":{\"keccak256\":\"0xa52d593ff06a2353f78fa149da31f2ca94f03d1eff99bde41977fa2fe985a92f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d275abef31363d629e2a1a06f439bb7d2f26f66545ddb61f74b174de6f034a8\",\"dweb:/ipfs/QmPfjkyNcfiiZnPtYCvGfSHikbYzZxut3D4pBhBZ2VwfoT\"]},\"@openzeppelin/contracts/governance/extensions/GovernorVotes.sol\":{\"keccak256\":\"0xf818ee82b0faf7938ced9fcc851600b17202c8f6b1b33e01035702cadda684bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aaea7133e6c40ce2c9c2235c72ffec8befbe50c6df0414565675f2648562484\",\"dweb:/ipfs/QmSvUuPuorTqpscvfmhV4PCJCjJDFpMmjcxTnJUB64cj98\"]},\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86\",\"dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/Timers.sol\":{\"keccak256\":\"0x29791a62950a7983e02a673639c1a781d1e448691800456c2ce4b99715391b14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f37b3c682657d4b1790b5e564d4c9445856c93aa79ffed43fd076959118118\",\"dweb:/ipfs/QmcBGSacnV1JDz7kicsFijDYBxx5CmLSjUSJVLqyn7zH3G\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\":{\"keccak256\":\"0x4859ffd6dd69382a1462930c00b6e394007da80e78e510f56930271034737bf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0497f84a7fdfafac2046d23b456a05454365d38bb59883b7d8ce398a26704f4f\",\"dweb:/ipfs/QmZSXpAvoXWkxQ4U2GJ4juWvmn4Fd7zeH9wXZq6wKUbfi6\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/extensions/GovernorVotesQuorumFraction.sol":{"GovernorVotesQuorumFraction":{"abi":[{"inputs":[],"name":"Empty","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"ProposalCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"address","name":"proposer","type":"address"},{"indexed":false,"internalType":"address[]","name":"targets","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"},{"indexed":false,"internalType":"string[]","name":"signatures","type":"string[]"},{"indexed":false,"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"indexed":false,"internalType":"uint256","name":"startBlock","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endBlock","type":"uint256"},{"indexed":false,"internalType":"string","name":"description","type":"string"}],"name":"ProposalCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"ProposalExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldQuorumNumerator","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newQuorumNumerator","type":"uint256"}],"name":"QuorumNumeratorUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"support","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"VoteCast","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"support","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"},{"indexed":false,"internalType":"bytes","name":"params","type":"bytes"}],"name":"VoteCastWithParams","type":"event"},{"inputs":[],"name":"BALLOT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"COUNTING_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"EXTENDED_BALLOT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"}],"name":"castVote","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"castVoteBySig","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"}],"name":"castVoteWithReason","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"params","type":"bytes"}],"name":"castVoteWithReasonAndParams","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"params","type":"bytes"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"castVoteWithReasonAndParamsBySig","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"execute","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes","name":"params","type":"bytes"}],"name":"getVotesWithParams","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"address","name":"account","type":"address"}],"name":"hasVoted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"hashProposal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalDeadline","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalSnapshot","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposalThreshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"string","name":"description","type":"string"}],"name":"propose","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"quorum","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"quorumDenominator","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"quorumNumerator","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"quorumNumerator","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"relay","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"state","outputs":[{"internalType":"enum IGovernor.ProposalState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IVotes","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"newQuorumNumerator","type":"uint256"}],"name":"updateQuorumNumerator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"votingDelay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"votingPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"BALLOT_TYPEHASH()":"deaaa7cc","COUNTING_MODE()":"dd4e2ba5","EXTENDED_BALLOT_TYPEHASH()":"2fe3e261","castVote(uint256,uint8)":"56781388","castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)":"3bccf4fd","castVoteWithReason(uint256,uint8,string)":"7b3c71d3","castVoteWithReasonAndParams(uint256,uint8,string,bytes)":"5f398a14","castVoteWithReasonAndParamsBySig(uint256,uint8,string,bytes,uint8,bytes32,bytes32)":"03420181","execute(address[],uint256[],bytes[],bytes32)":"2656227d","getVotes(address,uint256)":"eb9019d4","getVotesWithParams(address,uint256,bytes)":"9a802a6d","hasVoted(uint256,address)":"43859632","hashProposal(address[],uint256[],bytes[],bytes32)":"c59057e4","name()":"06fdde03","onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","onERC721Received(address,address,uint256,bytes)":"150b7a02","proposalDeadline(uint256)":"c01f9e37","proposalSnapshot(uint256)":"2d63f693","proposalThreshold()":"b58131b0","propose(address[],uint256[],bytes[],string)":"7d5e81e2","quorum(uint256)":"f8ce560a","quorumDenominator()":"97c3d334","quorumNumerator()":"a7713a70","quorumNumerator(uint256)":"60c4247f","relay(address,uint256,bytes)":"c28bc2fa","state(uint256)":"3e4f49e6","supportsInterface(bytes4)":"01ffc9a7","token()":"fc0c546a","updateQuorumNumerator(uint256)":"06f3f9e6","version()":"54fd4d50","votingDelay()":"3932abb1","votingPeriod()":"02a251a3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Empty\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldQuorumNumerator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newQuorumNumerator\",\"type\":\"uint256\"}],\"name\":\"QuorumNumeratorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"VoteCastWithParams\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COUNTING_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EXTENDED_BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"}],\"name\":\"castVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteBySig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"castVoteWithReason\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"castVoteWithReasonAndParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteWithReasonAndParamsBySig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"getVotesWithParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"hashProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalSnapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorumDenominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"quorumNumerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorumNumerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"relay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum IGovernor.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IVotes\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newQuorumNumerator\",\"type\":\"uint256\"}],\"name\":\"updateQuorumNumerator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Extension of {Governor} for voting weight extraction from an {ERC20Votes} token and a quorum expressed as a fraction of the total supply. _Available since v4.3._\",\"errors\":{\"Empty()\":[{\"details\":\"An operation (e.g. {front}) couldn't be completed due to the queue being empty.\"}]},\"kind\":\"dev\",\"methods\":{\"COUNTING_MODE()\":{\"details\":\"A description of the possible `support` values for {castVote} and the way these votes are counted, meant to be consumed by UIs to show correct vote options and interpret the results. The string is a URL-encoded sequence of key-value pairs that each describe one aspect, for example `support=bravo&quorum=for,abstain`. There are 2 standard keys: `support` and `quorum`. - `support=bravo` refers to the vote options 0 = Against, 1 = For, 2 = Abstain, as in `GovernorBravo`. - `quorum=bravo` means that only For votes are counted towards quorum. - `quorum=for,abstain` means that both For and Abstain votes are counted towards quorum. If a counting module makes use of encoded `params`, it should  include this under a `params` key with a unique name that describes the behavior. For example: - `params=fractional` might refer to a scheme where votes are divided fractionally between for/against/abstain. - `params=erc721` might refer to a scheme where specific NFTs are delegated to vote. NOTE: The string can be decoded by the standard https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams[`URLSearchParams`] JavaScript class.\"},\"castVote(uint256,uint8)\":{\"details\":\"See {IGovernor-castVote}.\"},\"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)\":{\"details\":\"See {IGovernor-castVoteBySig}.\"},\"castVoteWithReason(uint256,uint8,string)\":{\"details\":\"See {IGovernor-castVoteWithReason}.\"},\"castVoteWithReasonAndParams(uint256,uint8,string,bytes)\":{\"details\":\"See {IGovernor-castVoteWithReasonAndParams}.\"},\"castVoteWithReasonAndParamsBySig(uint256,uint8,string,bytes,uint8,bytes32,bytes32)\":{\"details\":\"See {IGovernor-castVoteWithReasonAndParamsBySig}.\"},\"constructor\":{\"details\":\"Initialize quorum as a fraction of the token's total supply. The fraction is specified as `numerator / denominator`. By default the denominator is 100, so quorum is specified as a percent: a numerator of 10 corresponds to quorum being 10% of total supply. The denominator can be customized by overriding {quorumDenominator}.\"},\"execute(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-execute}.\"},\"getVotes(address,uint256)\":{\"details\":\"See {IGovernor-getVotes}.\"},\"getVotesWithParams(address,uint256,bytes)\":{\"details\":\"See {IGovernor-getVotesWithParams}.\"},\"hasVoted(uint256,address)\":{\"details\":\"Returns whether `account` has cast a vote on `proposalId`.\"},\"hashProposal(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-hashProposal}. The proposal id is produced by hashing the ABI encoded `targets` array, the `values` array, the `calldatas` array and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in advance, before the proposal is submitted. Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the same proposal (with same operation and same description) will have the same id if submitted on multiple governors across multiple networks. This also means that in order to execute the same operation twice (on the same governor) the proposer will have to change the description in order to avoid proposal id conflicts.\"},\"name()\":{\"details\":\"See {IGovernor-name}.\"},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155Receiver-onERC1155BatchReceived}.\"},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155Receiver-onERC1155Received}.\"},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}.\"},\"proposalDeadline(uint256)\":{\"details\":\"See {IGovernor-proposalDeadline}.\"},\"proposalSnapshot(uint256)\":{\"details\":\"See {IGovernor-proposalSnapshot}.\"},\"proposalThreshold()\":{\"details\":\"Part of the Governor Bravo's interface: _\\\"The number of votes required in order for a voter to become a proposer\\\"_.\"},\"propose(address[],uint256[],bytes[],string)\":{\"details\":\"See {IGovernor-propose}.\"},\"quorum(uint256)\":{\"details\":\"Returns the quorum for a block number, in terms of number of votes: `supply * numerator / denominator`.\"},\"quorumDenominator()\":{\"details\":\"Returns the quorum denominator. Defaults to 100, but may be overridden.\"},\"quorumNumerator()\":{\"details\":\"Returns the current quorum numerator. See {quorumDenominator}.\"},\"quorumNumerator(uint256)\":{\"details\":\"Returns the quorum numerator at a specific block number. See {quorumDenominator}.\"},\"relay(address,uint256,bytes)\":{\"details\":\"Relays a transaction or function call to an arbitrary target. In cases where the governance executor is some contract other than the governor itself, like when using a timelock, this function can be invoked in a governance proposal to recover tokens or Ether that was sent to the governor contract by mistake. Note that if the executor is simply the governor itself, use of `relay` is redundant.\"},\"state(uint256)\":{\"details\":\"See {IGovernor-state}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"updateQuorumNumerator(uint256)\":{\"details\":\"Changes the quorum numerator. Emits a {QuorumNumeratorUpdated} event. Requirements: - Must be called through a governance proposal. - New numerator must be smaller or equal to the denominator.\"},\"version()\":{\"details\":\"See {IGovernor-version}.\"},\"votingDelay()\":{\"details\":\"Delay, in number of block, between the proposal is created and the vote starts. This can be increassed to leave time for users to buy voting power, or delegate it, before the voting of a proposal starts.\"},\"votingPeriod()\":{\"details\":\"Delay, in number of blocks, between the vote start and vote ends. NOTE: The {votingDelay} can delay the start of the vote. This must be considered when setting the voting duration compared to the voting delay.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"COUNTING_MODE()\":{\"notice\":\"module:voting\"},\"hasVoted(uint256,address)\":{\"notice\":\"module:voting\"},\"votingDelay()\":{\"notice\":\"module:user-config\"},\"votingPeriod()\":{\"notice\":\"module:user-config\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/extensions/GovernorVotesQuorumFraction.sol\":\"GovernorVotesQuorumFraction\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/Governor.sol\":{\"keccak256\":\"0x57da86c5f5c46ab8f2cf67ada4258567a9270f89499690f40ed8160788733a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9fab32423b6dbc9cf70737380a9444731acbe042945b65674858e064370be3a\",\"dweb:/ipfs/QmPLopcmcMBLkazDRVEVgts5ADMjXBba1vqtZcRGCRHtbF\"]},\"@openzeppelin/contracts/governance/IGovernor.sol\":{\"keccak256\":\"0xa52d593ff06a2353f78fa149da31f2ca94f03d1eff99bde41977fa2fe985a92f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d275abef31363d629e2a1a06f439bb7d2f26f66545ddb61f74b174de6f034a8\",\"dweb:/ipfs/QmPfjkyNcfiiZnPtYCvGfSHikbYzZxut3D4pBhBZ2VwfoT\"]},\"@openzeppelin/contracts/governance/extensions/GovernorVotes.sol\":{\"keccak256\":\"0xf818ee82b0faf7938ced9fcc851600b17202c8f6b1b33e01035702cadda684bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aaea7133e6c40ce2c9c2235c72ffec8befbe50c6df0414565675f2648562484\",\"dweb:/ipfs/QmSvUuPuorTqpscvfmhV4PCJCjJDFpMmjcxTnJUB64cj98\"]},\"@openzeppelin/contracts/governance/extensions/GovernorVotesQuorumFraction.sol\":{\"keccak256\":\"0x78a9387835f2dd3409988348661df2724630c7bb31bb3da54146c568460c42af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe76999864eaa47e124dfa6f3124eb5d42d5ef705508fb8ad696372f0f40da92\",\"dweb:/ipfs/Qmbjd3L2Rz1sp9rZ5yzwCH2nQFZTQThR9naCkGZY5DVN2p\"]},\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86\",\"dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Checkpoints.sol\":{\"keccak256\":\"0xf586981d605e0c0f07a44e158a3da023bd526409d3709e969d323b2d91398078\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df93b9e4731d4e904a7216af640c5ec0a4ef5f87051fedc2a272b3b3039f1247\",\"dweb:/ipfs/QmYvPqBpuZXxnedpn1vAMuHfustou2hByanL8zRA3qm3ob\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/Timers.sol\":{\"keccak256\":\"0x29791a62950a7983e02a673639c1a781d1e448691800456c2ce4b99715391b14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f37b3c682657d4b1790b5e564d4c9445856c93aa79ffed43fd076959118118\",\"dweb:/ipfs/QmcBGSacnV1JDz7kicsFijDYBxx5CmLSjUSJVLqyn7zH3G\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\":{\"keccak256\":\"0x4859ffd6dd69382a1462930c00b6e394007da80e78e510f56930271034737bf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0497f84a7fdfafac2046d23b456a05454365d38bb59883b7d8ce398a26704f4f\",\"dweb:/ipfs/QmZSXpAvoXWkxQ4U2GJ4juWvmn4Fd7zeH9wXZq6wKUbfi6\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"IVotes":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts. _Available since v4.5._\",\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"}},\"kind\":\"dev\",\"methods\":{\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at the end of a past block (`blockNumber`). NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at the end of a past block (`blockNumber`).\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":\"IVotes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86\",\"dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201456f7767f46f239da11f81368573b480f6d8de2e2a321dadf5bcd65d1c39d7564736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ JUMP 0xF7 PUSH23 0x7F46F239DA11F81368573B480F6D8DE2E2A321DADF5BCD PUSH6 0xD1C39D756473 PUSH16 0x6C634300081100330000000000000000 ","sourceMap":"194:8964:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201456f7767f46f239da11f81368573b480f6d8de2e2a321dadf5bcd65d1c39d7564736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ JUMP 0xF7 PUSH23 0x7F46F239DA11F81368573B480F6D8DE2E2A321DADF5BCD PUSH6 0xD1C39D756473 PUSH16 0x6C634300081100330000000000000000 ","sourceMap":"194:8964:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Checkpoints.sol":{"Checkpoints":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206e44a2444181172912ad9586aef4645983851a0129f9d3cf03fcc4705ec81b6d64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x44A2444181172912AD9586AEF46459 DUP4 DUP6 BYTE ADD 0x29 0xF9 0xD3 0xCF SUB 0xFC 0xC4 PUSH17 0x5EC81B6D64736F6C634300081100330000 ","sourceMap":"708:18139:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206e44a2444181172912ad9586aef4645983851a0129f9d3cf03fcc4705ec81b6d64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x44A2444181172912AD9586AEF46459 DUP4 DUP6 BYTE ADD 0x29 0xF9 0xD3 0xCF SUB 0xFC 0xC4 PUSH17 0x5EC81B6D64736F6C634300081100330000 ","sourceMap":"708:18139:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This library defines the `History` struct, for checkpointing values as they change at different points in time, and later looking up past values by block number. See {Votes} as an example. To create a history of checkpoints define a variable type `Checkpoints.History` in your contract, and store a new checkpoint for the current transaction block using the {push} function. _Available since v4.5._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Checkpoints.sol\":\"Checkpoints\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Checkpoints.sol\":{\"keccak256\":\"0xf586981d605e0c0f07a44e158a3da023bd526409d3709e969d323b2d91398078\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df93b9e4731d4e904a7216af640c5ec0a4ef5f87051fedc2a272b3b3039f1247\",\"dweb:/ipfs/QmYvPqBpuZXxnedpn1vAMuHfustou2hByanL8zRA3qm3ob\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205377adc79bb987de03049c655529acbf51a3f7d36bb14c89a2d2f790fee54d6064736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 PUSH24 0xADC79BB987DE03049C655529ACBF51A3F7D36BB14C89A2D2 0xF7 SWAP1 INVALID 0xE5 0x4D PUSH1 0x64 PUSH20 0x6F6C634300081100330000000000000000000000 ","sourceMap":"188:2065:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205377adc79bb987de03049c655529acbf51a3f7d36bb14c89a2d2f790fee54d6064736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 PUSH24 0xADC79BB987DE03049C655529ACBF51A3F7D36BB14C89A2D2 0xF7 SWAP1 INVALID 0xE5 0x4D PUSH1 0x64 PUSH20 0x6F6C634300081100330000000000000000000000 ","sourceMap":"188:2065:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Timers.sol":{"Timers":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122041690a25f28b40c703d0cab6898b961c566d3c42510f23ff29c04b513e50f8e664736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE PUSH10 0xA25F28B40C703D0CAB6 DUP10 DUP12 SWAP7 SHR JUMP PUSH14 0x3C42510F23FF29C04B513E50F8E6 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"168:1873:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122041690a25f28b40c703d0cab6898b961c566d3c42510f23ff29c04b513e50f8e664736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE PUSH10 0xA25F28B40C703D0CAB6 DUP10 DUP12 SWAP7 SHR JUMP PUSH14 0x3C42510F23FF29C04B513E50F8E6 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"168:1873:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Tooling for timepoints, timers and delays\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Timers.sol\":\"Timers\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Timers.sol\":{\"keccak256\":\"0x29791a62950a7983e02a673639c1a781d1e448691800456c2ce4b99715391b14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f37b3c682657d4b1790b5e564d4c9445856c93aa79ffed43fd076959118118\",\"dweb:/ipfs/QmcBGSacnV1JDz7kicsFijDYBxx5CmLSjUSJVLqyn7zH3G\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ba14ff8a9dd4618e8896ba6d400adb1ae7c434a98b46be49bf9252c6fa4f61e064736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA EQ SELFDESTRUCT DUP11 SWAP14 0xD4 PUSH2 0x8E88 SWAP7 0xBA PUSH14 0x400ADB1AE7C434A98B46BE49BF92 MSTORE 0xC6 STATICCALL 0x4F PUSH2 0xE064 PUSH20 0x6F6C634300081100330000000000000000000000 ","sourceMap":"369:8168:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ba14ff8a9dd4618e8896ba6d400adb1ae7c434a98b46be49bf9252c6fa4f61e064736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA EQ SELFDESTRUCT DUP11 SWAP14 0xD4 PUSH2 0x8E88 SWAP7 0xBA PUSH14 0x400ADB1AE7C434A98B46BE49BF92 MSTORE 0xC6 STATICCALL 0x4F PUSH2 0xE064 PUSH20 0x6F6C634300081100330000000000000000000000 ","sourceMap":"369:8168:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200deb2d155cc73fbf04f3651b35566c36121307684f46e0e4f511e6d6a66133ad64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xEB 0x2D ISZERO 0x5C 0xC7 EXTCODEHASH 0xBF DIV RETURN PUSH6 0x1B35566C3612 SGT SMOD PUSH9 0x4F46E0E4F511E6D6A6 PUSH2 0x33AD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"202:12302:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200deb2d155cc73fbf04f3651b35566c36121307684f46e0e4f511e6d6a66133ad64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xEB 0x2D ISZERO 0x5C 0xC7 EXTCODEHASH 0xBF DIV RETURN PUSH6 0x1B35566C3612 SGT SMOD PUSH9 0x4F46E0E4F511E6D6A6 PUSH2 0x33AD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"202:12302:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208e68354f14c9d7678f10a06961d6826f3c027320cf756c8ebb9e5426777ee2a864736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 PUSH9 0x354F14C9D7678F10A0 PUSH10 0x61D6826F3C027320CF75 PUSH13 0x8EBB9E5426777EE2A864736F6C PUSH4 0x43000811 STOP CALLER ","sourceMap":"927:34153:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208e68354f14c9d7678f10a06961d6826f3c027320cf756c8ebb9e5426777ee2a864736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 PUSH9 0x354F14C9D7678F10A0 PUSH10 0x61D6826F3C027320CF75 PUSH13 0x8EBB9E5426777EE2A864736F6C PUSH4 0x43000811 STOP CALLER ","sourceMap":"927:34153:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol":{"DoubleEndedQueue":{"abi":[{"inputs":[],"name":"Empty","type":"error"},{"inputs":[],"name":"OutOfBounds","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122028f5b1dea628652b41df96b585ea461940b245dbfcf5e5b84cf6b9e3ffe4317c64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 CREATE2 0xB1 0xDE 0xA6 0x28 PUSH6 0x2B41DF96B585 0xEA CHAINID NOT BLOCKHASH 0xB2 GASLIMIT 0xDB 0xFC CREATE2 0xE5 0xB8 0x4C 0xF6 0xB9 0xE3 SELFDESTRUCT 0xE4 BALANCE PUSH29 0x64736F6C63430008110033000000000000000000000000000000000000 ","sourceMap":"835:5066:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122028f5b1dea628652b41df96b585ea461940b245dbfcf5e5b84cf6b9e3ffe4317c64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 CREATE2 0xB1 0xDE 0xA6 0x28 PUSH6 0x2B41DF96B585 0xEA CHAINID NOT BLOCKHASH 0xB2 GASLIMIT 0xDB 0xFC CREATE2 0xE5 0xB8 0x4C 0xF6 0xB9 0xE3 SELFDESTRUCT 0xE4 BALANCE PUSH29 0x64736F6C63430008110033000000000000000000000000000000000000 ","sourceMap":"835:5066:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Empty\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OutOfBounds\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"A sequence of items with the ability to efficiently push and pop items (i.e. insert and remove) on both ends of the sequence (called front and back). Among other access patterns, it can be used to implement efficient LIFO and FIFO queues. Storage use is optimized, and all operations are O(1) constant time. This includes {clear}, given that the existing queue contents are left in storage. The struct is called `Bytes32Deque`. Other types can be cast to and from `bytes32`. This data structure can only be used in storage, and not in memory. ``` DoubleEndedQueue.Bytes32Deque queue; ``` _Available since v4.6._\",\"errors\":{\"Empty()\":[{\"details\":\"An operation (e.g. {front}) couldn't be completed due to the queue being empty.\"}],\"OutOfBounds()\":[{\"details\":\"An operation (e.g. {at}) couldn't be completed due to an index being out of bounds.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\":\"DoubleEndedQueue\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\":{\"keccak256\":\"0x4859ffd6dd69382a1462930c00b6e394007da80e78e510f56930271034737bf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0497f84a7fdfafac2046d23b456a05454365d38bb59883b7d8ce398a26704f4f\",\"dweb:/ipfs/QmZSXpAvoXWkxQ4U2GJ4juWvmn4Fd7zeH9wXZq6wKUbfi6\"]}},\"version\":1}"}},"contracts/MyGovernor.sol":{"MyGovernor":{"abi":[{"inputs":[{"internalType":"contract IVotes","name":"_token","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"Empty","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"ProposalCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"address","name":"proposer","type":"address"},{"indexed":false,"internalType":"address[]","name":"targets","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"},{"indexed":false,"internalType":"string[]","name":"signatures","type":"string[]"},{"indexed":false,"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"indexed":false,"internalType":"uint256","name":"startBlock","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endBlock","type":"uint256"},{"indexed":false,"internalType":"string","name":"description","type":"string"}],"name":"ProposalCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"ProposalExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldProposalThreshold","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newProposalThreshold","type":"uint256"}],"name":"ProposalThresholdSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldQuorumNumerator","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newQuorumNumerator","type":"uint256"}],"name":"QuorumNumeratorUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"support","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"VoteCast","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"support","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"},{"indexed":false,"internalType":"bytes","name":"params","type":"bytes"}],"name":"VoteCastWithParams","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldVotingDelay","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotingDelay","type":"uint256"}],"name":"VotingDelaySet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldVotingPeriod","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotingPeriod","type":"uint256"}],"name":"VotingPeriodSet","type":"event"},{"inputs":[],"name":"BALLOT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"COUNTING_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"EXTENDED_BALLOT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"}],"name":"castVote","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"castVoteBySig","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"}],"name":"castVoteWithReason","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"params","type":"bytes"}],"name":"castVoteWithReasonAndParams","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint8","name":"support","type":"uint8"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"params","type":"bytes"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"castVoteWithReasonAndParamsBySig","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"execute","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes","name":"params","type":"bytes"}],"name":"getVotesWithParams","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"address","name":"account","type":"address"}],"name":"hasVoted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"bytes32","name":"descriptionHash","type":"bytes32"}],"name":"hashProposal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalDeadline","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalSnapshot","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposalThreshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"proposalVotes","outputs":[{"internalType":"uint256","name":"againstVotes","type":"uint256"},{"internalType":"uint256","name":"forVotes","type":"uint256"},{"internalType":"uint256","name":"abstainVotes","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"calldatas","type":"bytes[]"},{"internalType":"string","name":"description","type":"string"}],"name":"propose","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"quorum","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"quorumDenominator","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"quorumNumerator","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"quorumNumerator","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"relay","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newProposalThreshold","type":"uint256"}],"name":"setProposalThreshold","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newVotingDelay","type":"uint256"}],"name":"setVotingDelay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newVotingPeriod","type":"uint256"}],"name":"setVotingPeriod","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"state","outputs":[{"internalType":"enum IGovernor.ProposalState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IVotes","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"newQuorumNumerator","type":"uint256"}],"name":"updateQuorumNumerator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"votingDelay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"votingPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_120":{"entryPoint":null,"id":120,"parameterSlots":1,"returnSlots":0},"@_1883":{"entryPoint":null,"id":1883,"parameterSlots":3,"returnSlots":0},"@_2029":{"entryPoint":null,"id":2029,"parameterSlots":1,"returnSlots":0},"@_2084":{"entryPoint":null,"id":2084,"parameterSlots":1,"returnSlots":0},"@_4944":{"entryPoint":null,"id":4944,"parameterSlots":2,"returnSlots":0},"@_7838":{"entryPoint":null,"id":7838,"parameterSlots":1,"returnSlots":0},"@_buildDomainSeparator_5000":{"entryPoint":528,"id":5000,"parameterSlots":3,"returnSlots":1},"@_insert_3137":{"entryPoint":1903,"id":3137,"parameterSlots":3,"returnSlots":2},"@_setProposalThreshold_2007":{"entryPoint":800,"id":2007,"parameterSlots":1,"returnSlots":0},"@_setVotingDelay_1968":{"entryPoint":588,"id":1968,"parameterSlots":1,"returnSlots":0},"@_setVotingPeriod_1991":{"entryPoint":659,"id":1991,"parameterSlots":1,"returnSlots":0},"@_unsafeAccess_3256":{"entryPoint":2832,"id":3256,"parameterSlots":2,"returnSlots":1},"@_updateQuorumNumerator_2252":{"entryPoint":871,"id":2252,"parameterSlots":1,"returnSlots":0},"@latest_2984":{"entryPoint":1699,"id":2984,"parameterSlots":1,"returnSlots":1},"@push_2920":{"entryPoint":1555,"id":2920,"parameterSlots":2,"returnSlots":2},"@quorumDenominator_2159":{"entryPoint":1350,"id":2159,"parameterSlots":0,"returnSlots":1},"@quorumNumerator_2102":{"entryPoint":1359,"id":2102,"parameterSlots":0,"returnSlots":1},"@toUint224_6021":{"entryPoint":1445,"id":6021,"parameterSlots":1,"returnSlots":1},"@toUint32_6621":{"entryPoint":1817,"id":6621,"parameterSlots":1,"returnSlots":1},"@version_206":{"entryPoint":467,"id":206,"parameterSlots":0,"returnSlots":1},"abi_decode_t_contract$_IVotes_$2331_fromMemory":{"entryPoint":2956,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IVotes_$2331_fromMemory":{"entryPoint":2979,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3938,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":3904,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_0687f8064c09ccf183090b5092c4485c730072a161487645a7e37b56cef356bb_to_t_string_memory_ptr_fromStack":{"entryPoint":4379,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3f314603cb191f371d117be724372820f824fc7fbb608c5408b31620bafe9a83_to_t_string_memory_ptr_fromStack":{"entryPoint":4189,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack":{"entryPoint":4531,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df_to_t_string_memory_ptr_fromStack":{"entryPoint":4903,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack":{"entryPoint":4789,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3921,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":3955,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0687f8064c09ccf183090b5092c4485c730072a161487645a7e37b56cef356bb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4418,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3f314603cb191f371d117be724372820f824fc7fbb608c5408b31620bafe9a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4228,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4570,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4942,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4828,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":4048,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":3187,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3029,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":4093,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":4651,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":3508,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":2890,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":3894,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IVotes_$2331":{"entryPoint":2910,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2858,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3323,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":3469,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":3343,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":3663,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":3208,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":3134,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":3633,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":3333,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":3601,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":4604,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3087,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3040,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":3383,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2853,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left_dynamic":{"entryPoint":3224,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":3588,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":3441,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_0687f8064c09ccf183090b5092c4485c730072a161487645a7e37b56cef356bb":{"entryPoint":4262,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3f314603cb191f371d117be724372820f824fc7fbb608c5408b31620bafe9a83":{"entryPoint":4110,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79":{"entryPoint":4452,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df":{"entryPoint":4862,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19":{"entryPoint":4710,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":3237,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":3393,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_contract$_IVotes_$2331":{"entryPoint":2930,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":3436,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13813:22","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:22","statements":[{"nodeType":"YulAssignment","src":"57:19:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:22"},"nodeType":"YulFunctionCall","src":"67:9:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:22"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:22","type":""}],"src":"7:75:22"},{"body":{"nodeType":"YulBlock","src":"177:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:22"},"nodeType":"YulFunctionCall","src":"187:12:22"},"nodeType":"YulExpressionStatement","src":"187:12:22"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:22"},{"body":{"nodeType":"YulBlock","src":"300:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:22"},"nodeType":"YulFunctionCall","src":"310:12:22"},"nodeType":"YulExpressionStatement","src":"310:12:22"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:22"},{"body":{"nodeType":"YulBlock","src":"379:81:22","statements":[{"nodeType":"YulAssignment","src":"389:65:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:22"},"nodeType":"YulFunctionCall","src":"400:54:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:22"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:22","type":""}],"src":"334:126:22"},{"body":{"nodeType":"YulBlock","src":"511:51:22","statements":[{"nodeType":"YulAssignment","src":"521:35:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:22"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:22"},"nodeType":"YulFunctionCall","src":"532:24:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:22"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:22","type":""}],"src":"466:96:22"},{"body":{"nodeType":"YulBlock","src":"628:51:22","statements":[{"nodeType":"YulAssignment","src":"638:35:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"667:5:22"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"649:17:22"},"nodeType":"YulFunctionCall","src":"649:24:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"638:7:22"}]}]},"name":"cleanup_t_contract$_IVotes_$2331","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"610:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"620:7:22","type":""}],"src":"568:111:22"},{"body":{"nodeType":"YulBlock","src":"743:94:22","statements":[{"body":{"nodeType":"YulBlock","src":"815:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"824:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"827:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"817:6:22"},"nodeType":"YulFunctionCall","src":"817:12:22"},"nodeType":"YulExpressionStatement","src":"817:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"766:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"806:5:22"}],"functionName":{"name":"cleanup_t_contract$_IVotes_$2331","nodeType":"YulIdentifier","src":"773:32:22"},"nodeType":"YulFunctionCall","src":"773:39:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"763:2:22"},"nodeType":"YulFunctionCall","src":"763:50:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"756:6:22"},"nodeType":"YulFunctionCall","src":"756:58:22"},"nodeType":"YulIf","src":"753:78:22"}]},"name":"validator_revert_t_contract$_IVotes_$2331","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"736:5:22","type":""}],"src":"685:152:22"},{"body":{"nodeType":"YulBlock","src":"921:95:22","statements":[{"nodeType":"YulAssignment","src":"931:22:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"946:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"940:5:22"},"nodeType":"YulFunctionCall","src":"940:13:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"931:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1004:5:22"}],"functionName":{"name":"validator_revert_t_contract$_IVotes_$2331","nodeType":"YulIdentifier","src":"962:41:22"},"nodeType":"YulFunctionCall","src":"962:48:22"},"nodeType":"YulExpressionStatement","src":"962:48:22"}]},"name":"abi_decode_t_contract$_IVotes_$2331_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"899:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"907:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"915:5:22","type":""}],"src":"843:173:22"},{"body":{"nodeType":"YulBlock","src":"1114:289:22","statements":[{"body":{"nodeType":"YulBlock","src":"1160:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1162:77:22"},"nodeType":"YulFunctionCall","src":"1162:79:22"},"nodeType":"YulExpressionStatement","src":"1162:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1135:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"1144:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1131:3:22"},"nodeType":"YulFunctionCall","src":"1131:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"1156:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1127:3:22"},"nodeType":"YulFunctionCall","src":"1127:32:22"},"nodeType":"YulIf","src":"1124:119:22"},{"nodeType":"YulBlock","src":"1253:143:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1268:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1282:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1272:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1297:89:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1358:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1369:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1354:3:22"},"nodeType":"YulFunctionCall","src":"1354:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1378:7:22"}],"functionName":{"name":"abi_decode_t_contract$_IVotes_$2331_fromMemory","nodeType":"YulIdentifier","src":"1307:46:22"},"nodeType":"YulFunctionCall","src":"1307:79:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1297:6:22"}]}]}]},"name":"abi_decode_tuple_t_contract$_IVotes_$2331_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1084:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1095:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1107:6:22","type":""}],"src":"1022:381:22"},{"body":{"nodeType":"YulBlock","src":"1468:40:22","statements":[{"nodeType":"YulAssignment","src":"1479:22:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1495:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1489:5:22"},"nodeType":"YulFunctionCall","src":"1489:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1479:6:22"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1451:5:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1461:6:22","type":""}],"src":"1409:99:22"},{"body":{"nodeType":"YulBlock","src":"1542:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1559:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1562:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1552:6:22"},"nodeType":"YulFunctionCall","src":"1552:88:22"},"nodeType":"YulExpressionStatement","src":"1552:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1656:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1659:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1649:6:22"},"nodeType":"YulFunctionCall","src":"1649:15:22"},"nodeType":"YulExpressionStatement","src":"1649:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1680:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1683:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1673:6:22"},"nodeType":"YulFunctionCall","src":"1673:15:22"},"nodeType":"YulExpressionStatement","src":"1673:15:22"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1514:180:22"},{"body":{"nodeType":"YulBlock","src":"1728:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1745:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1748:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1738:6:22"},"nodeType":"YulFunctionCall","src":"1738:88:22"},"nodeType":"YulExpressionStatement","src":"1738:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1842:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1845:4:22","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1835:6:22"},"nodeType":"YulFunctionCall","src":"1835:15:22"},"nodeType":"YulExpressionStatement","src":"1835:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1866:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1869:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1859:6:22"},"nodeType":"YulFunctionCall","src":"1859:15:22"},"nodeType":"YulExpressionStatement","src":"1859:15:22"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"1700:180:22"},{"body":{"nodeType":"YulBlock","src":"1937:269:22","statements":[{"nodeType":"YulAssignment","src":"1947:22:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1961:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"1967:1:22","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1957:3:22"},"nodeType":"YulFunctionCall","src":"1957:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1947:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"1978:38:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2008:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"2014:1:22","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2004:3:22"},"nodeType":"YulFunctionCall","src":"2004:12:22"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1982:18:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"2055:51:22","statements":[{"nodeType":"YulAssignment","src":"2069:27:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2083:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"2091:4:22","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2079:3:22"},"nodeType":"YulFunctionCall","src":"2079:17:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2069:6:22"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2035:18:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2028:6:22"},"nodeType":"YulFunctionCall","src":"2028:26:22"},"nodeType":"YulIf","src":"2025:81:22"},{"body":{"nodeType":"YulBlock","src":"2158:42:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"2172:16:22"},"nodeType":"YulFunctionCall","src":"2172:18:22"},"nodeType":"YulExpressionStatement","src":"2172:18:22"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2122:18:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2145:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"2153:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2142:2:22"},"nodeType":"YulFunctionCall","src":"2142:14:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2119:2:22"},"nodeType":"YulFunctionCall","src":"2119:38:22"},"nodeType":"YulIf","src":"2116:84:22"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1921:4:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1930:6:22","type":""}],"src":"1886:320:22"},{"body":{"nodeType":"YulBlock","src":"2266:87:22","statements":[{"nodeType":"YulAssignment","src":"2276:11:22","value":{"name":"ptr","nodeType":"YulIdentifier","src":"2284:3:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2276:4:22"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2304:1:22","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2307:3:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2297:6:22"},"nodeType":"YulFunctionCall","src":"2297:14:22"},"nodeType":"YulExpressionStatement","src":"2297:14:22"},{"nodeType":"YulAssignment","src":"2320:26:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2338:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2341:4:22","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2328:9:22"},"nodeType":"YulFunctionCall","src":"2328:18:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2320:4:22"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2253:3:22","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2261:4:22","type":""}],"src":"2212:141:22"},{"body":{"nodeType":"YulBlock","src":"2403:49:22","statements":[{"nodeType":"YulAssignment","src":"2413:33:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2431:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"2438:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2427:3:22"},"nodeType":"YulFunctionCall","src":"2427:14:22"},{"kind":"number","nodeType":"YulLiteral","src":"2443:2:22","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2423:3:22"},"nodeType":"YulFunctionCall","src":"2423:23:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2413:6:22"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2386:5:22","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2396:6:22","type":""}],"src":"2359:93:22"},{"body":{"nodeType":"YulBlock","src":"2511:54:22","statements":[{"nodeType":"YulAssignment","src":"2521:37:22","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"2546:4:22"},{"name":"value","nodeType":"YulIdentifier","src":"2552:5:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2542:3:22"},"nodeType":"YulFunctionCall","src":"2542:16:22"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"2521:8:22"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"2486:4:22","type":""},{"name":"value","nodeType":"YulTypedName","src":"2492:5:22","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"2502:8:22","type":""}],"src":"2458:107:22"},{"body":{"nodeType":"YulBlock","src":"2647:317:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2657:35:22","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"2678:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"2690:1:22","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2674:3:22"},"nodeType":"YulFunctionCall","src":"2674:18:22"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"2661:9:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2701:109:22","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2732:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2743:66:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2713:18:22"},"nodeType":"YulFunctionCall","src":"2713:97:22"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"2705:4:22","type":""}]},{"nodeType":"YulAssignment","src":"2819:51:22","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2850:9:22"},{"name":"toInsert","nodeType":"YulIdentifier","src":"2861:8:22"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2831:18:22"},"nodeType":"YulFunctionCall","src":"2831:39:22"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"2819:8:22"}]},{"nodeType":"YulAssignment","src":"2879:30:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2892:5:22"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"2903:4:22"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2899:3:22"},"nodeType":"YulFunctionCall","src":"2899:9:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2888:3:22"},"nodeType":"YulFunctionCall","src":"2888:21:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2879:5:22"}]},{"nodeType":"YulAssignment","src":"2918:40:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2931:5:22"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"2942:8:22"},{"name":"mask","nodeType":"YulIdentifier","src":"2952:4:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2938:3:22"},"nodeType":"YulFunctionCall","src":"2938:19:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2928:2:22"},"nodeType":"YulFunctionCall","src":"2928:30:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2918:6:22"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2608:5:22","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"2615:10:22","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"2627:8:22","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2640:6:22","type":""}],"src":"2571:393:22"},{"body":{"nodeType":"YulBlock","src":"3015:32:22","statements":[{"nodeType":"YulAssignment","src":"3025:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"3036:5:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3025:7:22"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2997:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3007:7:22","type":""}],"src":"2970:77:22"},{"body":{"nodeType":"YulBlock","src":"3085:28:22","statements":[{"nodeType":"YulAssignment","src":"3095:12:22","value":{"name":"value","nodeType":"YulIdentifier","src":"3102:5:22"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3095:3:22"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3071:5:22","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3081:3:22","type":""}],"src":"3053:60:22"},{"body":{"nodeType":"YulBlock","src":"3179:82:22","statements":[{"nodeType":"YulAssignment","src":"3189:66:22","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3247:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3229:17:22"},"nodeType":"YulFunctionCall","src":"3229:24:22"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"3220:8:22"},"nodeType":"YulFunctionCall","src":"3220:34:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3202:17:22"},"nodeType":"YulFunctionCall","src":"3202:53:22"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3189:9:22"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3159:5:22","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3169:9:22","type":""}],"src":"3119:142:22"},{"body":{"nodeType":"YulBlock","src":"3314:28:22","statements":[{"nodeType":"YulAssignment","src":"3324:12:22","value":{"name":"value","nodeType":"YulIdentifier","src":"3331:5:22"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3324:3:22"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3300:5:22","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3310:3:22","type":""}],"src":"3267:75:22"},{"body":{"nodeType":"YulBlock","src":"3424:193:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3434:63:22","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"3489:7:22"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3458:30:22"},"nodeType":"YulFunctionCall","src":"3458:39:22"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"3438:16:22","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3513:4:22"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3553:4:22"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3547:5:22"},"nodeType":"YulFunctionCall","src":"3547:11:22"},{"name":"offset","nodeType":"YulIdentifier","src":"3560:6:22"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"3592:16:22"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"3568:23:22"},"nodeType":"YulFunctionCall","src":"3568:41:22"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"3519:27:22"},"nodeType":"YulFunctionCall","src":"3519:91:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3506:6:22"},"nodeType":"YulFunctionCall","src":"3506:105:22"},"nodeType":"YulExpressionStatement","src":"3506:105:22"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3401:4:22","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3407:6:22","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"3415:7:22","type":""}],"src":"3348:269:22"},{"body":{"nodeType":"YulBlock","src":"3672:24:22","statements":[{"nodeType":"YulAssignment","src":"3682:8:22","value":{"kind":"number","nodeType":"YulLiteral","src":"3689:1:22","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3682:3:22"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3668:3:22","type":""}],"src":"3623:73:22"},{"body":{"nodeType":"YulBlock","src":"3755:136:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3765:46:22","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"3779:30:22"},"nodeType":"YulFunctionCall","src":"3779:32:22"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"3769:6:22","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3864:4:22"},{"name":"offset","nodeType":"YulIdentifier","src":"3870:6:22"},{"name":"zero_0","nodeType":"YulIdentifier","src":"3878:6:22"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3820:43:22"},"nodeType":"YulFunctionCall","src":"3820:65:22"},"nodeType":"YulExpressionStatement","src":"3820:65:22"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3741:4:22","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3747:6:22","type":""}],"src":"3702:189:22"},{"body":{"nodeType":"YulBlock","src":"3947:136:22","statements":[{"body":{"nodeType":"YulBlock","src":"4014:63:22","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4058:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"4065:1:22","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"4028:29:22"},"nodeType":"YulFunctionCall","src":"4028:39:22"},"nodeType":"YulExpressionStatement","src":"4028:39:22"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3967:5:22"},{"name":"end","nodeType":"YulIdentifier","src":"3974:3:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3964:2:22"},"nodeType":"YulFunctionCall","src":"3964:14:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3979:26:22","statements":[{"nodeType":"YulAssignment","src":"3981:22:22","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3994:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"4001:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3990:3:22"},"nodeType":"YulFunctionCall","src":"3990:13:22"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"3981:5:22"}]}]},"pre":{"nodeType":"YulBlock","src":"3961:2:22","statements":[]},"src":"3957:120:22"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"3935:5:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"3942:3:22","type":""}],"src":"3897:186:22"},{"body":{"nodeType":"YulBlock","src":"4168:464:22","statements":[{"body":{"nodeType":"YulBlock","src":"4194:431:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4208:54:22","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4256:5:22"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4224:31:22"},"nodeType":"YulFunctionCall","src":"4224:38:22"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"4212:8:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4275:63:22","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4298:8:22"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4326:10:22"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4308:17:22"},"nodeType":"YulFunctionCall","src":"4308:29:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4294:3:22"},"nodeType":"YulFunctionCall","src":"4294:44:22"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"4279:11:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"4495:27:22","statements":[{"nodeType":"YulAssignment","src":"4497:23:22","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"4512:8:22"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4497:11:22"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4479:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"4491:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4476:2:22"},"nodeType":"YulFunctionCall","src":"4476:18:22"},"nodeType":"YulIf","src":"4473:49:22"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4564:11:22"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4581:8:22"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"4609:3:22"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4591:17:22"},"nodeType":"YulFunctionCall","src":"4591:22:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4577:3:22"},"nodeType":"YulFunctionCall","src":"4577:37:22"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"4535:28:22"},"nodeType":"YulFunctionCall","src":"4535:80:22"},"nodeType":"YulExpressionStatement","src":"4535:80:22"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"4185:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"4190:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4182:2:22"},"nodeType":"YulFunctionCall","src":"4182:11:22"},"nodeType":"YulIf","src":"4179:446:22"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"4144:5:22","type":""},{"name":"len","nodeType":"YulTypedName","src":"4151:3:22","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"4156:10:22","type":""}],"src":"4089:543:22"},{"body":{"nodeType":"YulBlock","src":"4701:54:22","statements":[{"nodeType":"YulAssignment","src":"4711:37:22","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4736:4:22"},{"name":"value","nodeType":"YulIdentifier","src":"4742:5:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4732:3:22"},"nodeType":"YulFunctionCall","src":"4732:16:22"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4711:8:22"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4676:4:22","type":""},{"name":"value","nodeType":"YulTypedName","src":"4682:5:22","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4692:8:22","type":""}],"src":"4638:117:22"},{"body":{"nodeType":"YulBlock","src":"4812:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4822:68:22","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4871:1:22","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"4874:5:22"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4867:3:22"},"nodeType":"YulFunctionCall","src":"4867:13:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4886:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4882:3:22"},"nodeType":"YulFunctionCall","src":"4882:6:22"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"4838:28:22"},"nodeType":"YulFunctionCall","src":"4838:51:22"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4834:3:22"},"nodeType":"YulFunctionCall","src":"4834:56:22"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4826:4:22","type":""}]},{"nodeType":"YulAssignment","src":"4899:25:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4913:4:22"},{"name":"mask","nodeType":"YulIdentifier","src":"4919:4:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4909:3:22"},"nodeType":"YulFunctionCall","src":"4909:15:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4899:6:22"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4789:4:22","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"4795:5:22","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4805:6:22","type":""}],"src":"4761:169:22"},{"body":{"nodeType":"YulBlock","src":"5016:214:22","statements":[{"nodeType":"YulAssignment","src":"5149:37:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5176:4:22"},{"name":"len","nodeType":"YulIdentifier","src":"5182:3:22"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"5157:18:22"},"nodeType":"YulFunctionCall","src":"5157:29:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5149:4:22"}]},{"nodeType":"YulAssignment","src":"5195:29:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5206:4:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5216:1:22","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"5219:3:22"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5212:3:22"},"nodeType":"YulFunctionCall","src":"5212:11:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5203:2:22"},"nodeType":"YulFunctionCall","src":"5203:21:22"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"5195:4:22"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4997:4:22","type":""},{"name":"len","nodeType":"YulTypedName","src":"5003:3:22","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"5011:4:22","type":""}],"src":"4935:295:22"},{"body":{"nodeType":"YulBlock","src":"5327:1303:22","statements":[{"nodeType":"YulVariableDeclaration","src":"5338:51:22","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5385:3:22"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5352:32:22"},"nodeType":"YulFunctionCall","src":"5352:37:22"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"5342:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"5474:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5476:16:22"},"nodeType":"YulFunctionCall","src":"5476:18:22"},"nodeType":"YulExpressionStatement","src":"5476:18:22"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5446:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"5454:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5443:2:22"},"nodeType":"YulFunctionCall","src":"5443:30:22"},"nodeType":"YulIf","src":"5440:56:22"},{"nodeType":"YulVariableDeclaration","src":"5506:52:22","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5552:4:22"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5546:5:22"},"nodeType":"YulFunctionCall","src":"5546:11:22"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"5520:25:22"},"nodeType":"YulFunctionCall","src":"5520:38:22"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"5510:6:22","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5651:4:22"},{"name":"oldLen","nodeType":"YulIdentifier","src":"5657:6:22"},{"name":"newLen","nodeType":"YulIdentifier","src":"5665:6:22"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"5605:45:22"},"nodeType":"YulFunctionCall","src":"5605:67:22"},"nodeType":"YulExpressionStatement","src":"5605:67:22"},{"nodeType":"YulVariableDeclaration","src":"5682:18:22","value":{"kind":"number","nodeType":"YulLiteral","src":"5699:1:22","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"5686:9:22","type":""}]},{"nodeType":"YulAssignment","src":"5710:17:22","value":{"kind":"number","nodeType":"YulLiteral","src":"5723:4:22","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5710:9:22"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"5774:611:22","statements":[{"nodeType":"YulVariableDeclaration","src":"5788:37:22","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5807:6:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5819:4:22","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5815:3:22"},"nodeType":"YulFunctionCall","src":"5815:9:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5803:3:22"},"nodeType":"YulFunctionCall","src":"5803:22:22"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"5792:7:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5839:51:22","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5885:4:22"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"5853:31:22"},"nodeType":"YulFunctionCall","src":"5853:37:22"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"5843:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5903:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"5912:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5907:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"5971:163:22","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5996:6:22"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6014:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6019:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6010:3:22"},"nodeType":"YulFunctionCall","src":"6010:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6004:5:22"},"nodeType":"YulFunctionCall","src":"6004:26:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5989:6:22"},"nodeType":"YulFunctionCall","src":"5989:42:22"},"nodeType":"YulExpressionStatement","src":"5989:42:22"},{"nodeType":"YulAssignment","src":"6048:24:22","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6062:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"6070:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6058:3:22"},"nodeType":"YulFunctionCall","src":"6058:14:22"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6048:6:22"}]},{"nodeType":"YulAssignment","src":"6089:31:22","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"6106:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6117:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6102:3:22"},"nodeType":"YulFunctionCall","src":"6102:18:22"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"6089:9:22"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5937:1:22"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"5940:7:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5934:2:22"},"nodeType":"YulFunctionCall","src":"5934:14:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5949:21:22","statements":[{"nodeType":"YulAssignment","src":"5951:17:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5960:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"5963:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5956:3:22"},"nodeType":"YulFunctionCall","src":"5956:12:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5951:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"5930:3:22","statements":[]},"src":"5926:208:22"},{"body":{"nodeType":"YulBlock","src":"6170:156:22","statements":[{"nodeType":"YulVariableDeclaration","src":"6188:43:22","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6215:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6220:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6211:3:22"},"nodeType":"YulFunctionCall","src":"6211:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6205:5:22"},"nodeType":"YulFunctionCall","src":"6205:26:22"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"6192:9:22","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6255:6:22"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"6282:9:22"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6297:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"6305:4:22","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6293:3:22"},"nodeType":"YulFunctionCall","src":"6293:17:22"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"6263:18:22"},"nodeType":"YulFunctionCall","src":"6263:48:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6248:6:22"},"nodeType":"YulFunctionCall","src":"6248:64:22"},"nodeType":"YulExpressionStatement","src":"6248:64:22"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"6153:7:22"},{"name":"newLen","nodeType":"YulIdentifier","src":"6162:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6150:2:22"},"nodeType":"YulFunctionCall","src":"6150:19:22"},"nodeType":"YulIf","src":"6147:179:22"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6346:4:22"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6360:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"6368:1:22","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6356:3:22"},"nodeType":"YulFunctionCall","src":"6356:14:22"},{"kind":"number","nodeType":"YulLiteral","src":"6372:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6352:3:22"},"nodeType":"YulFunctionCall","src":"6352:22:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6339:6:22"},"nodeType":"YulFunctionCall","src":"6339:36:22"},"nodeType":"YulExpressionStatement","src":"6339:36:22"}]},"nodeType":"YulCase","src":"5767:618:22","value":{"kind":"number","nodeType":"YulLiteral","src":"5772:1:22","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"6402:222:22","statements":[{"nodeType":"YulVariableDeclaration","src":"6416:14:22","value":{"kind":"number","nodeType":"YulLiteral","src":"6429:1:22","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6420:5:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"6453:67:22","statements":[{"nodeType":"YulAssignment","src":"6471:35:22","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6490:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6495:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6486:3:22"},"nodeType":"YulFunctionCall","src":"6486:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6480:5:22"},"nodeType":"YulFunctionCall","src":"6480:26:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6471:5:22"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"6446:6:22"},"nodeType":"YulIf","src":"6443:77:22"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6540:4:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6599:5:22"},{"name":"newLen","nodeType":"YulIdentifier","src":"6606:6:22"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"6546:52:22"},"nodeType":"YulFunctionCall","src":"6546:67:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6533:6:22"},"nodeType":"YulFunctionCall","src":"6533:81:22"},"nodeType":"YulExpressionStatement","src":"6533:81:22"}]},"nodeType":"YulCase","src":"6394:230:22","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5747:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"5755:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5744:2:22"},"nodeType":"YulFunctionCall","src":"5744:14:22"},"nodeType":"YulSwitch","src":"5737:887:22"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5316:4:22","type":""},{"name":"src","nodeType":"YulTypedName","src":"5322:3:22","type":""}],"src":"5235:1395:22"},{"body":{"nodeType":"YulBlock","src":"6681:32:22","statements":[{"nodeType":"YulAssignment","src":"6691:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"6702:5:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6691:7:22"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6663:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6673:7:22","type":""}],"src":"6636:77:22"},{"body":{"nodeType":"YulBlock","src":"6784:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6801:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6824:5:22"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"6806:17:22"},"nodeType":"YulFunctionCall","src":"6806:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6794:6:22"},"nodeType":"YulFunctionCall","src":"6794:37:22"},"nodeType":"YulExpressionStatement","src":"6794:37:22"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6772:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6779:3:22","type":""}],"src":"6719:118:22"},{"body":{"nodeType":"YulBlock","src":"6908:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6925:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6948:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6930:17:22"},"nodeType":"YulFunctionCall","src":"6930:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6918:6:22"},"nodeType":"YulFunctionCall","src":"6918:37:22"},"nodeType":"YulExpressionStatement","src":"6918:37:22"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6896:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6903:3:22","type":""}],"src":"6843:118:22"},{"body":{"nodeType":"YulBlock","src":"7032:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7049:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7072:5:22"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"7054:17:22"},"nodeType":"YulFunctionCall","src":"7054:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7042:6:22"},"nodeType":"YulFunctionCall","src":"7042:37:22"},"nodeType":"YulExpressionStatement","src":"7042:37:22"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7020:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7027:3:22","type":""}],"src":"6967:118:22"},{"body":{"nodeType":"YulBlock","src":"7301:454:22","statements":[{"nodeType":"YulAssignment","src":"7311:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7323:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7334:3:22","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7319:3:22"},"nodeType":"YulFunctionCall","src":"7319:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7311:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7392:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7405:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7416:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7401:3:22"},"nodeType":"YulFunctionCall","src":"7401:17:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"7348:43:22"},"nodeType":"YulFunctionCall","src":"7348:71:22"},"nodeType":"YulExpressionStatement","src":"7348:71:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7473:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7486:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7497:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7482:3:22"},"nodeType":"YulFunctionCall","src":"7482:18:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"7429:43:22"},"nodeType":"YulFunctionCall","src":"7429:72:22"},"nodeType":"YulExpressionStatement","src":"7429:72:22"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7555:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7568:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7579:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7564:3:22"},"nodeType":"YulFunctionCall","src":"7564:18:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"7511:43:22"},"nodeType":"YulFunctionCall","src":"7511:72:22"},"nodeType":"YulExpressionStatement","src":"7511:72:22"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"7637:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7650:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7661:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7646:3:22"},"nodeType":"YulFunctionCall","src":"7646:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7593:43:22"},"nodeType":"YulFunctionCall","src":"7593:72:22"},"nodeType":"YulExpressionStatement","src":"7593:72:22"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"7719:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7732:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7743:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7728:3:22"},"nodeType":"YulFunctionCall","src":"7728:19:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7675:43:22"},"nodeType":"YulFunctionCall","src":"7675:73:22"},"nodeType":"YulExpressionStatement","src":"7675:73:22"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7241:9:22","type":""},{"name":"value4","nodeType":"YulTypedName","src":"7253:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7261:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7269:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7277:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7285:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7296:4:22","type":""}],"src":"7091:664:22"},{"body":{"nodeType":"YulBlock","src":"7887:206:22","statements":[{"nodeType":"YulAssignment","src":"7897:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7909:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7920:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7905:3:22"},"nodeType":"YulFunctionCall","src":"7905:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7897:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7977:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7990:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8001:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7986:3:22"},"nodeType":"YulFunctionCall","src":"7986:17:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7933:43:22"},"nodeType":"YulFunctionCall","src":"7933:71:22"},"nodeType":"YulExpressionStatement","src":"7933:71:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8058:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8071:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8082:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8067:3:22"},"nodeType":"YulFunctionCall","src":"8067:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8014:43:22"},"nodeType":"YulFunctionCall","src":"8014:72:22"},"nodeType":"YulExpressionStatement","src":"8014:72:22"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7851:9:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7863:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7871:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7882:4:22","type":""}],"src":"7761:332:22"},{"body":{"nodeType":"YulBlock","src":"8195:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8212:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"8217:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8205:6:22"},"nodeType":"YulFunctionCall","src":"8205:19:22"},"nodeType":"YulExpressionStatement","src":"8205:19:22"},{"nodeType":"YulAssignment","src":"8233:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8252:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"8257:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8248:3:22"},"nodeType":"YulFunctionCall","src":"8248:14:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8233:11:22"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8167:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"8172:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8183:11:22","type":""}],"src":"8099:169:22"},{"body":{"nodeType":"YulBlock","src":"8380:120:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8402:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"8410:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8398:3:22"},"nodeType":"YulFunctionCall","src":"8398:14:22"},{"hexValue":"476f7665726e6f7253657474696e67733a20766f74696e6720706572696f6420","kind":"string","nodeType":"YulLiteral","src":"8414:34:22","type":"","value":"GovernorSettings: voting period "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8391:6:22"},"nodeType":"YulFunctionCall","src":"8391:58:22"},"nodeType":"YulExpressionStatement","src":"8391:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8470:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"8478:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8466:3:22"},"nodeType":"YulFunctionCall","src":"8466:15:22"},{"hexValue":"746f6f206c6f77","kind":"string","nodeType":"YulLiteral","src":"8483:9:22","type":"","value":"too low"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8459:6:22"},"nodeType":"YulFunctionCall","src":"8459:34:22"},"nodeType":"YulExpressionStatement","src":"8459:34:22"}]},"name":"store_literal_in_memory_3f314603cb191f371d117be724372820f824fc7fbb608c5408b31620bafe9a83","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8372:6:22","type":""}],"src":"8274:226:22"},{"body":{"nodeType":"YulBlock","src":"8652:220:22","statements":[{"nodeType":"YulAssignment","src":"8662:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8728:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"8733:2:22","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8669:58:22"},"nodeType":"YulFunctionCall","src":"8669:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8662:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8834:3:22"}],"functionName":{"name":"store_literal_in_memory_3f314603cb191f371d117be724372820f824fc7fbb608c5408b31620bafe9a83","nodeType":"YulIdentifier","src":"8745:88:22"},"nodeType":"YulFunctionCall","src":"8745:93:22"},"nodeType":"YulExpressionStatement","src":"8745:93:22"},{"nodeType":"YulAssignment","src":"8847:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8858:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"8863:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8854:3:22"},"nodeType":"YulFunctionCall","src":"8854:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8847:3:22"}]}]},"name":"abi_encode_t_stringliteral_3f314603cb191f371d117be724372820f824fc7fbb608c5408b31620bafe9a83_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8640:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8648:3:22","type":""}],"src":"8506:366:22"},{"body":{"nodeType":"YulBlock","src":"9049:248:22","statements":[{"nodeType":"YulAssignment","src":"9059:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9071:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9082:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9067:3:22"},"nodeType":"YulFunctionCall","src":"9067:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9059:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9106:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9117:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9102:3:22"},"nodeType":"YulFunctionCall","src":"9102:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9125:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"9131:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9121:3:22"},"nodeType":"YulFunctionCall","src":"9121:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9095:6:22"},"nodeType":"YulFunctionCall","src":"9095:47:22"},"nodeType":"YulExpressionStatement","src":"9095:47:22"},{"nodeType":"YulAssignment","src":"9151:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9285:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_3f314603cb191f371d117be724372820f824fc7fbb608c5408b31620bafe9a83_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9159:124:22"},"nodeType":"YulFunctionCall","src":"9159:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9151:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_3f314603cb191f371d117be724372820f824fc7fbb608c5408b31620bafe9a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9029:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9044:4:22","type":""}],"src":"8878:419:22"},{"body":{"nodeType":"YulBlock","src":"9409:185:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9431:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"9439:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9427:3:22"},"nodeType":"YulFunctionCall","src":"9427:14:22"},{"hexValue":"476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f","kind":"string","nodeType":"YulLiteral","src":"9443:34:22","type":"","value":"GovernorVotesQuorumFraction: quo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9420:6:22"},"nodeType":"YulFunctionCall","src":"9420:58:22"},"nodeType":"YulExpressionStatement","src":"9420:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9499:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"9507:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9495:3:22"},"nodeType":"YulFunctionCall","src":"9495:15:22"},{"hexValue":"72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e61","kind":"string","nodeType":"YulLiteral","src":"9512:34:22","type":"","value":"rumNumerator over quorumDenomina"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9488:6:22"},"nodeType":"YulFunctionCall","src":"9488:59:22"},"nodeType":"YulExpressionStatement","src":"9488:59:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9568:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"9576:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9564:3:22"},"nodeType":"YulFunctionCall","src":"9564:15:22"},{"hexValue":"746f72","kind":"string","nodeType":"YulLiteral","src":"9581:5:22","type":"","value":"tor"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9557:6:22"},"nodeType":"YulFunctionCall","src":"9557:30:22"},"nodeType":"YulExpressionStatement","src":"9557:30:22"}]},"name":"store_literal_in_memory_0687f8064c09ccf183090b5092c4485c730072a161487645a7e37b56cef356bb","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9401:6:22","type":""}],"src":"9303:291:22"},{"body":{"nodeType":"YulBlock","src":"9746:220:22","statements":[{"nodeType":"YulAssignment","src":"9756:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9822:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"9827:2:22","type":"","value":"67"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9763:58:22"},"nodeType":"YulFunctionCall","src":"9763:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9756:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9928:3:22"}],"functionName":{"name":"store_literal_in_memory_0687f8064c09ccf183090b5092c4485c730072a161487645a7e37b56cef356bb","nodeType":"YulIdentifier","src":"9839:88:22"},"nodeType":"YulFunctionCall","src":"9839:93:22"},"nodeType":"YulExpressionStatement","src":"9839:93:22"},{"nodeType":"YulAssignment","src":"9941:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9952:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"9957:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9948:3:22"},"nodeType":"YulFunctionCall","src":"9948:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9941:3:22"}]}]},"name":"abi_encode_t_stringliteral_0687f8064c09ccf183090b5092c4485c730072a161487645a7e37b56cef356bb_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9734:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9742:3:22","type":""}],"src":"9600:366:22"},{"body":{"nodeType":"YulBlock","src":"10143:248:22","statements":[{"nodeType":"YulAssignment","src":"10153:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10165:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10176:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10161:3:22"},"nodeType":"YulFunctionCall","src":"10161:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10153:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10200:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10211:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10196:3:22"},"nodeType":"YulFunctionCall","src":"10196:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10219:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"10225:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10215:3:22"},"nodeType":"YulFunctionCall","src":"10215:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10189:6:22"},"nodeType":"YulFunctionCall","src":"10189:47:22"},"nodeType":"YulExpressionStatement","src":"10189:47:22"},{"nodeType":"YulAssignment","src":"10245:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10379:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_0687f8064c09ccf183090b5092c4485c730072a161487645a7e37b56cef356bb_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10253:124:22"},"nodeType":"YulFunctionCall","src":"10253:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10245:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_0687f8064c09ccf183090b5092c4485c730072a161487645a7e37b56cef356bb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10123:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10138:4:22","type":""}],"src":"9972:419:22"},{"body":{"nodeType":"YulBlock","src":"10503:120:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10525:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"10533:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10521:3:22"},"nodeType":"YulFunctionCall","src":"10521:14:22"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032","kind":"string","nodeType":"YulLiteral","src":"10537:34:22","type":"","value":"SafeCast: value doesn't fit in 2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10514:6:22"},"nodeType":"YulFunctionCall","src":"10514:58:22"},"nodeType":"YulExpressionStatement","src":"10514:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10593:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"10601:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10589:3:22"},"nodeType":"YulFunctionCall","src":"10589:15:22"},{"hexValue":"32342062697473","kind":"string","nodeType":"YulLiteral","src":"10606:9:22","type":"","value":"24 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10582:6:22"},"nodeType":"YulFunctionCall","src":"10582:34:22"},"nodeType":"YulExpressionStatement","src":"10582:34:22"}]},"name":"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10495:6:22","type":""}],"src":"10397:226:22"},{"body":{"nodeType":"YulBlock","src":"10775:220:22","statements":[{"nodeType":"YulAssignment","src":"10785:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10851:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"10856:2:22","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10792:58:22"},"nodeType":"YulFunctionCall","src":"10792:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10785:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10957:3:22"}],"functionName":{"name":"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","nodeType":"YulIdentifier","src":"10868:88:22"},"nodeType":"YulFunctionCall","src":"10868:93:22"},"nodeType":"YulExpressionStatement","src":"10868:93:22"},{"nodeType":"YulAssignment","src":"10970:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10981:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"10986:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10977:3:22"},"nodeType":"YulFunctionCall","src":"10977:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10970:3:22"}]}]},"name":"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10763:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10771:3:22","type":""}],"src":"10629:366:22"},{"body":{"nodeType":"YulBlock","src":"11172:248:22","statements":[{"nodeType":"YulAssignment","src":"11182:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11194:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11205:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11190:3:22"},"nodeType":"YulFunctionCall","src":"11190:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11182:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11229:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11240:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11225:3:22"},"nodeType":"YulFunctionCall","src":"11225:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11248:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"11254:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11244:3:22"},"nodeType":"YulFunctionCall","src":"11244:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11218:6:22"},"nodeType":"YulFunctionCall","src":"11218:47:22"},"nodeType":"YulExpressionStatement","src":"11218:47:22"},{"nodeType":"YulAssignment","src":"11274:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11408:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11282:124:22"},"nodeType":"YulFunctionCall","src":"11282:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11274:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11152:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11167:4:22","type":""}],"src":"11001:419:22"},{"body":{"nodeType":"YulBlock","src":"11454:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11471:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11474:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11464:6:22"},"nodeType":"YulFunctionCall","src":"11464:88:22"},"nodeType":"YulExpressionStatement","src":"11464:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11568:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11571:4:22","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11561:6:22"},"nodeType":"YulFunctionCall","src":"11561:15:22"},"nodeType":"YulExpressionStatement","src":"11561:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11592:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11595:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11585:6:22"},"nodeType":"YulFunctionCall","src":"11585:15:22"},"nodeType":"YulExpressionStatement","src":"11585:15:22"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"11426:180:22"},{"body":{"nodeType":"YulBlock","src":"11657:149:22","statements":[{"nodeType":"YulAssignment","src":"11667:25:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11690:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11672:17:22"},"nodeType":"YulFunctionCall","src":"11672:20:22"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"11667:1:22"}]},{"nodeType":"YulAssignment","src":"11701:25:22","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11724:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11706:17:22"},"nodeType":"YulFunctionCall","src":"11706:20:22"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"11701:1:22"}]},{"nodeType":"YulAssignment","src":"11735:17:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11747:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"11750:1:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11743:3:22"},"nodeType":"YulFunctionCall","src":"11743:9:22"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"11735:4:22"}]},{"body":{"nodeType":"YulBlock","src":"11777:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11779:16:22"},"nodeType":"YulFunctionCall","src":"11779:18:22"},"nodeType":"YulExpressionStatement","src":"11779:18:22"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"11768:4:22"},{"name":"x","nodeType":"YulIdentifier","src":"11774:1:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11765:2:22"},"nodeType":"YulFunctionCall","src":"11765:11:22"},"nodeType":"YulIf","src":"11762:37:22"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11643:1:22","type":""},{"name":"y","nodeType":"YulTypedName","src":"11646:1:22","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"11652:4:22","type":""}],"src":"11612:194:22"},{"body":{"nodeType":"YulBlock","src":"11918:119:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11940:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"11948:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11936:3:22"},"nodeType":"YulFunctionCall","src":"11936:14:22"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033","kind":"string","nodeType":"YulLiteral","src":"11952:34:22","type":"","value":"SafeCast: value doesn't fit in 3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11929:6:22"},"nodeType":"YulFunctionCall","src":"11929:58:22"},"nodeType":"YulExpressionStatement","src":"11929:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12008:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"12016:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12004:3:22"},"nodeType":"YulFunctionCall","src":"12004:15:22"},{"hexValue":"322062697473","kind":"string","nodeType":"YulLiteral","src":"12021:8:22","type":"","value":"2 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11997:6:22"},"nodeType":"YulFunctionCall","src":"11997:33:22"},"nodeType":"YulExpressionStatement","src":"11997:33:22"}]},"name":"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11910:6:22","type":""}],"src":"11812:225:22"},{"body":{"nodeType":"YulBlock","src":"12189:220:22","statements":[{"nodeType":"YulAssignment","src":"12199:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12265:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"12270:2:22","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12206:58:22"},"nodeType":"YulFunctionCall","src":"12206:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12199:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12371:3:22"}],"functionName":{"name":"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","nodeType":"YulIdentifier","src":"12282:88:22"},"nodeType":"YulFunctionCall","src":"12282:93:22"},"nodeType":"YulExpressionStatement","src":"12282:93:22"},{"nodeType":"YulAssignment","src":"12384:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12395:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"12400:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12391:3:22"},"nodeType":"YulFunctionCall","src":"12391:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12384:3:22"}]}]},"name":"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12177:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12185:3:22","type":""}],"src":"12043:366:22"},{"body":{"nodeType":"YulBlock","src":"12586:248:22","statements":[{"nodeType":"YulAssignment","src":"12596:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12608:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"12619:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12604:3:22"},"nodeType":"YulFunctionCall","src":"12604:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12596:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12643:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"12654:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12639:3:22"},"nodeType":"YulFunctionCall","src":"12639:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12662:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"12668:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12658:3:22"},"nodeType":"YulFunctionCall","src":"12658:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12632:6:22"},"nodeType":"YulFunctionCall","src":"12632:47:22"},"nodeType":"YulExpressionStatement","src":"12632:47:22"},{"nodeType":"YulAssignment","src":"12688:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12822:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12696:124:22"},"nodeType":"YulFunctionCall","src":"12696:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12688:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12566:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12581:4:22","type":""}],"src":"12415:419:22"},{"body":{"nodeType":"YulBlock","src":"12946:67:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12968:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"12976:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12964:3:22"},"nodeType":"YulFunctionCall","src":"12964:14:22"},{"hexValue":"436865636b706f696e743a20696e76616c6964206b6579","kind":"string","nodeType":"YulLiteral","src":"12980:25:22","type":"","value":"Checkpoint: invalid key"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12957:6:22"},"nodeType":"YulFunctionCall","src":"12957:49:22"},"nodeType":"YulExpressionStatement","src":"12957:49:22"}]},"name":"store_literal_in_memory_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12938:6:22","type":""}],"src":"12840:173:22"},{"body":{"nodeType":"YulBlock","src":"13165:220:22","statements":[{"nodeType":"YulAssignment","src":"13175:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13241:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"13246:2:22","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13182:58:22"},"nodeType":"YulFunctionCall","src":"13182:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13175:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13347:3:22"}],"functionName":{"name":"store_literal_in_memory_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df","nodeType":"YulIdentifier","src":"13258:88:22"},"nodeType":"YulFunctionCall","src":"13258:93:22"},"nodeType":"YulExpressionStatement","src":"13258:93:22"},{"nodeType":"YulAssignment","src":"13360:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13371:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"13376:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13367:3:22"},"nodeType":"YulFunctionCall","src":"13367:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13360:3:22"}]}]},"name":"abi_encode_t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13153:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13161:3:22","type":""}],"src":"13019:366:22"},{"body":{"nodeType":"YulBlock","src":"13562:248:22","statements":[{"nodeType":"YulAssignment","src":"13572:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13584:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13595:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13580:3:22"},"nodeType":"YulFunctionCall","src":"13580:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13572:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13619:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13630:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13615:3:22"},"nodeType":"YulFunctionCall","src":"13615:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13638:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"13644:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13634:3:22"},"nodeType":"YulFunctionCall","src":"13634:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13608:6:22"},"nodeType":"YulFunctionCall","src":"13608:47:22"},"nodeType":"YulExpressionStatement","src":"13608:47:22"},{"nodeType":"YulAssignment","src":"13664:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13798:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13672:124:22"},"nodeType":"YulFunctionCall","src":"13672:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13664:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13542:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13557:4:22","type":""}],"src":"13391:419:22"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IVotes_$2331(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IVotes_$2331(value) {\n        if iszero(eq(value, cleanup_t_contract$_IVotes_$2331(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IVotes_$2331_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IVotes_$2331(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IVotes_$2331_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IVotes_$2331_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_3f314603cb191f371d117be724372820f824fc7fbb608c5408b31620bafe9a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"GovernorSettings: voting period \")\n\n        mstore(add(memPtr, 32), \"too low\")\n\n    }\n\n    function abi_encode_t_stringliteral_3f314603cb191f371d117be724372820f824fc7fbb608c5408b31620bafe9a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_3f314603cb191f371d117be724372820f824fc7fbb608c5408b31620bafe9a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3f314603cb191f371d117be724372820f824fc7fbb608c5408b31620bafe9a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3f314603cb191f371d117be724372820f824fc7fbb608c5408b31620bafe9a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0687f8064c09ccf183090b5092c4485c730072a161487645a7e37b56cef356bb(memPtr) {\n\n        mstore(add(memPtr, 0), \"GovernorVotesQuorumFraction: quo\")\n\n        mstore(add(memPtr, 32), \"rumNumerator over quorumDenomina\")\n\n        mstore(add(memPtr, 64), \"tor\")\n\n    }\n\n    function abi_encode_t_stringliteral_0687f8064c09ccf183090b5092c4485c730072a161487645a7e37b56cef356bb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 67)\n        store_literal_in_memory_0687f8064c09ccf183090b5092c4485c730072a161487645a7e37b56cef356bb(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0687f8064c09ccf183090b5092c4485c730072a161487645a7e37b56cef356bb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0687f8064c09ccf183090b5092c4485c730072a161487645a7e37b56cef356bb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 2\")\n\n        mstore(add(memPtr, 32), \"24 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 3\")\n\n        mstore(add(memPtr, 32), \"2 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df(memPtr) {\n\n        mstore(add(memPtr, 0), \"Checkpoint: invalid key\")\n\n    }\n\n    function abi_encode_t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x72C0 CODESIZE SUB DUP1 PUSH3 0x72C0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0xBA3 JUMP JUMPDEST PUSH1 0x4 DUP2 PUSH1 0x1 PUSH2 0xC4E0 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D79476F7665726E6F7200000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 PUSH3 0x89 PUSH3 0x1D3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F SWAP1 POP DUP3 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP2 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0xF2 DUP2 DUP5 DUP5 PUSH3 0x210 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH2 0x120 DUP2 DUP2 MSTORE POP POP POP POP POP POP POP DUP1 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x14C SWAP2 SWAP1 PUSH3 0xE4F JUMP JUMPDEST POP POP PUSH3 0x15F DUP4 PUSH3 0x24C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x170 DUP3 PUSH3 0x293 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x181 DUP2 PUSH3 0x320 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x140 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH3 0x1CB DUP2 PUSH3 0x367 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x1370 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 DUP4 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x22D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xF73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0xC565B045403DC03C2EEA82B81A0465EDAD9E2E7FC4D97E11421C209DA93D7A93 PUSH1 0x4 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH3 0x281 SWAP3 SWAP2 SWAP1 PUSH3 0xFD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH3 0x2D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2D0 SWAP1 PUSH3 0x1084 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x7E3F7F0708A84DE9203036ABAA450DCCC85AD5FF52F78C170F3EDB55CF5E8828 PUSH1 0x5 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH3 0x30E SWAP3 SWAP2 SWAP1 PUSH3 0xFD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH32 0xCCB45DA8D5717E6C4544694297C4BA5CF151D455C9BB0ED4FC7A38411BC05461 PUSH1 0x6 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH3 0x355 SWAP3 SWAP2 SWAP1 PUSH3 0xFD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH3 0x377 PUSH3 0x546 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 GT ISZERO PUSH3 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x3B3 SWAP1 PUSH3 0x1142 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x3CE PUSH3 0x54F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO DUP1 ISZERO PUSH3 0x3EA JUMPI POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP EQ JUMPDEST ISZERO PUSH3 0x4EA JUMPI PUSH1 0x9 PUSH1 0x0 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x423 DUP5 PUSH3 0x5A5 PUSH1 0x20 SHL PUSH3 0x1E22 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST PUSH3 0x505 DUP3 PUSH1 0x9 PUSH3 0x613 PUSH1 0x20 SHL PUSH3 0x1E8D OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH32 0x553476BF02EF2726E8CE5CED78D63E26E602E4A2257B1F559418E24B4633997 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH3 0x53A SWAP3 SWAP2 SWAP1 PUSH3 0xFD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x9 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP EQ PUSH3 0x59C JUMPI PUSH3 0x578 PUSH1 0x9 PUSH3 0x6A3 PUSH1 0x20 SHL PUSH3 0x1EFB OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x5A0 JUMP JUMPDEST PUSH1 0x8 SLOAD JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH3 0x60B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x602 SWAP1 PUSH3 0x11DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x656 DUP5 PUSH1 0x0 ADD PUSH3 0x634 NUMBER PUSH3 0x719 PUSH1 0x20 SHL PUSH3 0x1F65 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x64A DUP7 PUSH3 0x5A5 PUSH1 0x20 SHL PUSH3 0x1E22 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x76F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH3 0x70E JUMPI PUSH3 0x6DC DUP4 PUSH1 0x0 ADD PUSH1 0x1 DUP4 PUSH3 0x6D0 SWAP2 SWAP1 PUSH3 0x122B JUMP JUMPDEST PUSH3 0xB10 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x711 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH3 0x767 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x75E SWAP1 PUSH3 0x12DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH3 0xA20 JUMPI PUSH1 0x0 PUSH3 0x7A7 DUP8 PUSH1 0x1 DUP5 PUSH3 0x79B SWAP2 SWAP1 PUSH3 0x122B JUMP JUMPDEST PUSH3 0xB10 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP6 PUSH4 0xFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND GT ISZERO PUSH3 0x89E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x895 SWAP1 PUSH3 0x134E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH4 0xFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND SUB PUSH3 0x92E JUMPI DUP5 PUSH3 0x8D7 DUP9 PUSH1 0x1 DUP6 PUSH3 0x8CB SWAP2 SWAP1 PUSH3 0x122B JUMP JUMPDEST PUSH3 0xB10 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0xA0E JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD DUP6 SWAP4 POP SWAP4 POP POP POP PUSH3 0xB08 JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x0 DUP5 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB57 DUP3 PUSH3 0xB2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB6B DUP3 PUSH3 0xB4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xB7D DUP2 PUSH3 0xB5E JUMP JUMPDEST DUP2 EQ PUSH3 0xB89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xB9D DUP2 PUSH3 0xB72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xBBC JUMPI PUSH3 0xBBB PUSH3 0xB25 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xBCC DUP5 DUP3 DUP6 ADD PUSH3 0xB8C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0xC57 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0xC6D JUMPI PUSH3 0xC6C PUSH3 0xC0F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0xCD7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0xC98 JUMP JUMPDEST PUSH3 0xCE3 DUP7 DUP4 PUSH3 0xC98 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD30 PUSH3 0xD2A PUSH3 0xD24 DUP5 PUSH3 0xCFB JUMP JUMPDEST PUSH3 0xD05 JUMP JUMPDEST PUSH3 0xCFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xD4C DUP4 PUSH3 0xD0F JUMP JUMPDEST PUSH3 0xD64 PUSH3 0xD5B DUP3 PUSH3 0xD37 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0xCA5 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0xD7B PUSH3 0xD6C JUMP JUMPDEST PUSH3 0xD88 DUP2 DUP5 DUP5 PUSH3 0xD41 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xDB0 JUMPI PUSH3 0xDA4 PUSH1 0x0 DUP3 PUSH3 0xD71 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0xD8E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0xDFF JUMPI PUSH3 0xDC9 DUP2 PUSH3 0xC73 JUMP JUMPDEST PUSH3 0xDD4 DUP5 PUSH3 0xC88 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0xDE4 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0xDFC PUSH3 0xDF3 DUP6 PUSH3 0xC88 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0xD8D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xE24 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0xE04 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xE3F DUP4 DUP4 PUSH3 0xE11 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xE5A DUP3 PUSH3 0xBD5 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xE76 JUMPI PUSH3 0xE75 PUSH3 0xBE0 JUMP JUMPDEST JUMPDEST PUSH3 0xE82 DUP3 SLOAD PUSH3 0xC3E JUMP JUMPDEST PUSH3 0xE8F DUP3 DUP3 DUP6 PUSH3 0xDB4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0xEC7 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0xEB2 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0xEBE DUP6 DUP3 PUSH3 0xE31 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xF2E JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0xED7 DUP7 PUSH3 0xC73 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xF01 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xEDA JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xF21 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xF1D PUSH1 0x1F DUP10 AND DUP3 PUSH3 0xE11 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xF4B DUP2 PUSH3 0xF36 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0xF5C DUP2 PUSH3 0xCFB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0xF6D DUP2 PUSH3 0xB4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0xF8A PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0xF40 JUMP JUMPDEST PUSH3 0xF99 PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0xF40 JUMP JUMPDEST PUSH3 0xFA8 PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0xF40 JUMP JUMPDEST PUSH3 0xFB7 PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0xF51 JUMP JUMPDEST PUSH3 0xFC6 PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0xF62 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0xFE7 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0xF51 JUMP JUMPDEST PUSH3 0xFF6 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0xF51 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x476F7665726E6F7253657474696E67733A20766F74696E6720706572696F6420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x746F6F206C6F7700000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x106C PUSH1 0x27 DUP4 PUSH3 0xFFD JUMP JUMPDEST SWAP2 POP PUSH3 0x1079 DUP3 PUSH3 0x100E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x109F DUP2 PUSH3 0x105D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476F7665726E6F72566F74657351756F72756D4672616374696F6E3A2071756F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72756D4E756D657261746F72206F7665722071756F72756D44656E6F6D696E61 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x746F720000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x112A PUSH1 0x43 DUP4 PUSH3 0xFFD JUMP JUMPDEST SWAP2 POP PUSH3 0x1137 DUP3 PUSH3 0x10A6 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x115D DUP2 PUSH3 0x111B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3234206269747300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x11C2 PUSH1 0x27 DUP4 PUSH3 0xFFD JUMP JUMPDEST SWAP2 POP PUSH3 0x11CF DUP3 PUSH3 0x1164 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x11F5 DUP2 PUSH3 0x11B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x1238 DUP3 PUSH3 0xCFB JUMP JUMPDEST SWAP2 POP PUSH3 0x1245 DUP4 PUSH3 0xCFB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH3 0x1260 JUMPI PUSH3 0x125F PUSH3 0x11FC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3220626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x12C4 PUSH1 0x26 DUP4 PUSH3 0xFFD JUMP JUMPDEST SWAP2 POP PUSH3 0x12D1 DUP3 PUSH3 0x1266 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x12F7 DUP2 PUSH3 0x12B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436865636B706F696E743A20696E76616C6964206B6579000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1336 PUSH1 0x17 DUP4 PUSH3 0xFFD JUMP JUMPDEST SWAP2 POP PUSH3 0x1343 DUP3 PUSH3 0x12FE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1369 DUP2 PUSH3 0x1327 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x5EE7 PUSH3 0x13D9 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x1E00 ADD MSTORE DUP2 DUP2 PUSH2 0x29A1 ADD MSTORE PUSH2 0x2B69 ADD MSTORE PUSH1 0x0 PUSH2 0x3065 ADD MSTORE PUSH1 0x0 PUSH2 0x30A7 ADD MSTORE PUSH1 0x0 PUSH2 0x3086 ADD MSTORE PUSH1 0x0 PUSH2 0x2FBB ADD MSTORE PUSH1 0x0 PUSH2 0x3011 ADD MSTORE PUSH1 0x0 PUSH2 0x303A ADD MSTORE PUSH2 0x5EE7 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70B0F660 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0xC28BC2FA GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xEB9019D4 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xEB9019D4 EQ PUSH2 0x8ED JUMPI DUP1 PUSH4 0xECE40CC1 EQ PUSH2 0x92A JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x953 JUMPI DUP1 PUSH4 0xF8CE560A EQ PUSH2 0x990 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x9CD JUMPI PUSH2 0x264 JUMP JUMPDEST DUP1 PUSH4 0xC28BC2FA EQ PUSH2 0x815 JUMPI DUP1 PUSH4 0xC59057E4 EQ PUSH2 0x831 JUMPI DUP1 PUSH4 0xDD4E2BA5 EQ PUSH2 0x86E JUMPI DUP1 PUSH4 0xDEAAA7CC EQ PUSH2 0x899 JUMPI DUP1 PUSH4 0xEA0217CF EQ PUSH2 0x8C4 JUMPI PUSH2 0x264 JUMP JUMPDEST DUP1 PUSH4 0x9A802A6D GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x9A802A6D EQ PUSH2 0x708 JUMPI DUP1 PUSH4 0xA7713A70 EQ PUSH2 0x745 JUMPI DUP1 PUSH4 0xB58131B0 EQ PUSH2 0x770 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x79B JUMPI DUP1 PUSH4 0xC01F9E37 EQ PUSH2 0x7D8 JUMPI PUSH2 0x264 JUMP JUMPDEST DUP1 PUSH4 0x70B0F660 EQ PUSH2 0x63A JUMPI DUP1 PUSH4 0x7B3C71D3 EQ PUSH2 0x663 JUMPI DUP1 PUSH4 0x7D5E81E2 EQ PUSH2 0x6A0 JUMPI DUP1 PUSH4 0x97C3D334 EQ PUSH2 0x6DD JUMPI PUSH2 0x264 JUMP JUMPDEST DUP1 PUSH4 0x3932ABB1 GT PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x544FFC9C GT PUSH2 0x175 JUMPI DUP1 PUSH4 0x544FFC9C EQ PUSH2 0x519 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x558 JUMPI DUP1 PUSH4 0x56781388 EQ PUSH2 0x583 JUMPI DUP1 PUSH4 0x5F398A14 EQ PUSH2 0x5C0 JUMPI DUP1 PUSH4 0x60C4247F EQ PUSH2 0x5FD JUMPI PUSH2 0x264 JUMP JUMPDEST DUP1 PUSH4 0x3932ABB1 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x3BCCF4FD EQ PUSH2 0x462 JUMPI DUP1 PUSH4 0x3E4F49E6 EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0x43859632 EQ PUSH2 0x4DC JUMPI PUSH2 0x264 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 GT PUSH2 0x1ED JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0x2656227D EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0x2D63F693 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0x2FE3E261 EQ PUSH2 0x40C JUMPI PUSH2 0x264 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x2A251A3 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x3420181 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x6F3F9E6 EQ PUSH2 0x30E JUMPI PUSH2 0x264 JUMP JUMPDEST CALLDATASIZE PUSH2 0x264 JUMPI ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x242 PUSH2 0x9F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x3811 JUMP JUMPDEST PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x3859 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BB PUSH2 0xB65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x3AE9 JUMP JUMPDEST PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x335 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x330 SWAP2 SWAP1 PUSH2 0x3BC7 JUMP JUMPDEST PUSH2 0xC59 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34C PUSH2 0xD50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x359 SWAP2 SWAP1 PUSH2 0x3C73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x389 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST PUSH2 0xDE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x3D85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x4007 JUMP JUMPDEST PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x3BC7 JUMP JUMPDEST PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x403 SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x418 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x421 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x40D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44C PUSH2 0xFD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x489 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x484 SWAP2 SWAP1 PUSH2 0x40EC JUMP JUMPDEST PUSH2 0xFE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x496 SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x3BC7 JUMP JUMPDEST PUSH2 0x106E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0x41DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x503 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0x41F9 JUMP JUMPDEST PUSH2 0x1182 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x510 SWAP2 SWAP1 PUSH2 0x3859 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x525 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x540 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53B SWAP2 SWAP1 PUSH2 0x3BC7 JUMP JUMPDEST PUSH2 0x11ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x56D PUSH2 0x1225 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57A SWAP2 SWAP1 PUSH2 0x3C73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A5 SWAP2 SWAP1 PUSH2 0x4270 JUMP JUMPDEST PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B7 SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E2 SWAP2 SWAP1 PUSH2 0x42B0 JUMP JUMPDEST PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F4 SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x624 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x61F SWAP2 SWAP1 PUSH2 0x3BC7 JUMP JUMPDEST PUSH2 0x12FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x631 SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x661 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65C SWAP2 SWAP1 PUSH2 0x3BC7 JUMP JUMPDEST PUSH2 0x1449 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x68A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x685 SWAP2 SWAP1 PUSH2 0x4354 JUMP JUMPDEST PUSH2 0x1540 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x697 SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C2 SWAP2 SWAP1 PUSH2 0x4469 JUMP JUMPDEST PUSH2 0x15A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D4 SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F2 PUSH2 0x18AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6FF SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x714 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x72F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x72A SWAP2 SWAP1 PUSH2 0x4540 JUMP JUMPDEST PUSH2 0x18B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x73C SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x751 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x75A PUSH2 0x18CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x767 SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x77C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x785 PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x792 SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7BD SWAP2 SWAP1 PUSH2 0x45AF JUMP JUMPDEST PUSH2 0x1924 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7CF SWAP2 SWAP1 PUSH2 0x3D85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7FA SWAP2 SWAP1 PUSH2 0x3BC7 JUMP JUMPDEST PUSH2 0x1939 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80C SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x82A SWAP2 SWAP1 PUSH2 0x46D4 JUMP JUMPDEST PUSH2 0x19A7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x83D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x858 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x853 SWAP2 SWAP1 PUSH2 0x4007 JUMP JUMPDEST PUSH2 0x1B30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x865 SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x87A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x883 PUSH2 0x1B6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x890 SWAP2 SWAP1 PUSH2 0x3C73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8AE PUSH2 0x1BA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8BB SWAP2 SWAP1 PUSH2 0x40D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8E6 SWAP2 SWAP1 PUSH2 0x3BC7 JUMP JUMPDEST PUSH2 0x1BCD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x914 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x90F SWAP2 SWAP1 PUSH2 0x4748 JUMP JUMPDEST PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x921 SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x936 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x951 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94C SWAP2 SWAP1 PUSH2 0x3BC7 JUMP JUMPDEST PUSH2 0x1CE0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x95F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x97A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x975 SWAP2 SWAP1 PUSH2 0x4788 JUMP JUMPDEST PUSH2 0x1DD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x987 SWAP2 SWAP1 PUSH2 0x3D85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x99C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9B2 SWAP2 SWAP1 PUSH2 0x3BC7 JUMP JUMPDEST PUSH2 0x1DEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9C4 SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9E2 PUSH2 0x1DFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9EF SWAP2 SWAP1 PUSH2 0x487E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 ADDRESS SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x9A802A6D PUSH1 0xE0 SHL PUSH4 0x3420181 PUSH1 0xE0 SHL PUSH4 0x5F398A14 PUSH1 0xE0 SHL PUSH32 0x79DD796F00000000000000000000000000000000000000000000000000000000 XOR XOR XOR PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xAE6 JUMPI POP PUSH32 0x79DD796F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xB4E JUMPI POP PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xB5E JUMPI POP PUSH2 0xB5D DUP3 PUSH2 0x1FB8 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6F PUSH2 0x2022 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBF7 PUSH2 0xBEF PUSH32 0xB3B3F3B703CD84CE352197DCFF232B1B5D3CFB2025CE47CF04742D0651F1AF88 DUP13 DUP13 DUP13 DUP13 PUSH1 0x40 MLOAD PUSH2 0xBB0 SWAP3 SWAP2 SWAP1 PUSH2 0x48C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP12 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBD4 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x48F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x202C JUMP JUMPDEST DUP7 DUP7 DUP7 PUSH2 0x2046 JUMP JUMPDEST SWAP1 POP PUSH2 0xC4A DUP11 DUP3 DUP12 DUP12 DUP12 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP11 PUSH2 0x2071 JUMP JUMPDEST SWAP2 POP POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC61 PUSH2 0x9F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC7F PUSH2 0x222D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCD5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCC SWAP1 PUSH2 0x4990 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCF4 PUSH2 0x9F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD44 JUMPI PUSH1 0x0 PUSH2 0xD19 PUSH2 0x2235 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD27 SWAP3 SWAP2 SWAP1 PUSH2 0x48C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP JUMPDEST DUP1 PUSH2 0xD3D PUSH1 0x2 PUSH2 0x2242 JUMP JUMPDEST SUB PUSH2 0xD32 JUMPI POP JUMPDEST PUSH2 0xD4D DUP2 PUSH2 0x231E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0xD5F SWAP1 PUSH2 0x49DF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD8B SWAP1 PUSH2 0x49DF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDD8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDAD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDD8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDBB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE05 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1B30 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE12 DUP3 PUSH2 0x106E JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0xE28 JUMPI PUSH2 0xE27 PUSH2 0x4167 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0xE3B JUMPI PUSH2 0xE3A PUSH2 0x4167 JUMP JUMPDEST JUMPDEST EQ DUP1 PUSH2 0xE6B JUMPI POP PUSH1 0x5 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0xE56 JUMPI PUSH2 0xE55 PUSH2 0x4167 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0xE69 JUMPI PUSH2 0xE68 PUSH2 0x4167 JUMP JUMPDEST JUMPDEST EQ JUMPDEST PUSH2 0xEAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA1 SWAP1 PUSH2 0x4A82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x712AE1383F79AC853F8D882153778E0260EF8F03B504E2866E0593E04D2B291F DUP3 PUSH1 0x40 MLOAD PUSH2 0xF07 SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xF1C DUP3 DUP9 DUP9 DUP9 DUP9 PUSH2 0x24D2 JUMP JUMPDEST PUSH2 0xF29 DUP3 DUP9 DUP9 DUP9 DUP9 PUSH2 0x25B5 JUMP JUMPDEST PUSH2 0xF36 DUP3 DUP9 DUP9 DUP9 DUP9 PUSH2 0x26C4 JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x271F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xB3B3F3B703CD84CE352197DCFF232B1B5D3CFB2025CE47CF04742D0651F1AF88 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFDF PUSH2 0x272D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1045 PUSH2 0x103D PUSH32 0x150214D74D59B7D1E90C73FC22EF3D991DD0A76B046543D4D80AB92D2A50328F DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1022 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4AA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x202C JUMP JUMPDEST DUP7 DUP7 DUP7 PUSH2 0x2046 JUMP JUMPDEST SWAP1 POP PUSH2 0x1062 DUP8 DUP3 DUP9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2737 JUMP JUMPDEST SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x10A7 JUMPI PUSH1 0x7 SWAP2 POP POP PUSH2 0x117D JUMP JUMPDEST DUP1 PUSH1 0x2 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x10C8 JUMPI PUSH1 0x2 SWAP2 POP POP PUSH2 0x117D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D3 DUP5 PUSH2 0xF43 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0x1118 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110F SWAP1 PUSH2 0x4B25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST NUMBER DUP2 LT PUSH2 0x112A JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x117D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1135 DUP6 PUSH2 0x1939 JUMP JUMPDEST SWAP1 POP NUMBER DUP2 LT PUSH2 0x114A JUMPI PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x117D JUMP JUMPDEST PUSH2 0x1153 DUP6 PUSH2 0x2757 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1164 JUMPI POP PUSH2 0x1163 DUP6 PUSH2 0x279E JUMP JUMPDEST JUMPDEST ISZERO PUSH2 0x1175 JUMPI PUSH1 0x4 SWAP4 POP POP POP POP PUSH2 0x117D JUMP JUMPDEST PUSH1 0x3 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x7 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD DUP2 PUSH1 0x1 ADD SLOAD DUP3 PUSH1 0x2 ADD SLOAD SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x126D PUSH2 0x222D JUMP JUMPDEST SWAP1 POP PUSH2 0x128A DUP5 DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2737 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x129E PUSH2 0x222D JUMP JUMPDEST SWAP1 POP PUSH2 0x12F1 DUP8 DUP3 DUP9 DUP9 DUP9 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP8 PUSH2 0x2071 JUMP JUMPDEST SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x9 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0x131E JUMPI PUSH1 0x8 SLOAD SWAP2 POP POP PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 ADD PUSH1 0x1 DUP4 PUSH2 0x1332 SWAP2 SWAP1 PUSH2 0x4B74 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1343 JUMPI PUSH2 0x1342 PUSH2 0x4BA8 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP4 DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND GT PUSH2 0x142B JUMPI DUP1 PUSH1 0x20 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP POP POP PUSH2 0x1444 JUMP JUMPDEST PUSH2 0x143F DUP5 PUSH1 0x9 PUSH2 0x27C9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1451 PUSH2 0x9F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x146F PUSH2 0x222D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14BC SWAP1 PUSH2 0x4990 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14E4 PUSH2 0x9F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1534 JUMPI PUSH1 0x0 PUSH2 0x1509 PUSH2 0x2235 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1517 SWAP3 SWAP2 SWAP1 PUSH2 0x48C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP JUMPDEST DUP1 PUSH2 0x152D PUSH1 0x2 PUSH2 0x2242 JUMP JUMPDEST SUB PUSH2 0x1522 JUMPI POP JUMPDEST PUSH2 0x153D DUP2 PUSH2 0x28B8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x154B PUSH2 0x222D JUMP JUMPDEST SWAP1 POP PUSH2 0x159D DUP7 DUP3 DUP8 DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x2737 JUMP JUMPDEST SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B2 PUSH2 0x1915 JUMP JUMPDEST PUSH2 0x15CF PUSH2 0x15BD PUSH2 0x222D JUMP JUMPDEST PUSH1 0x1 NUMBER PUSH2 0x15CA SWAP2 SWAP1 PUSH2 0x4B74 JUMP JUMPDEST PUSH2 0x1CC4 JUMP JUMPDEST LT ISZERO PUSH2 0x1610 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1607 SWAP1 PUSH2 0x4C49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1625 DUP7 DUP7 DUP7 DUP7 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1B30 JUMP JUMPDEST SWAP1 POP DUP5 MLOAD DUP7 MLOAD EQ PUSH2 0x166B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1662 SWAP1 PUSH2 0x4CDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 MLOAD DUP7 MLOAD EQ PUSH2 0x16AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A6 SWAP1 PUSH2 0x4CDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 MLOAD GT PUSH2 0x16F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16EA SWAP1 PUSH2 0x4D47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1753 DUP2 PUSH1 0x0 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x28FD JUMP JUMPDEST PUSH2 0x1792 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1789 SWAP1 PUSH2 0x4DD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x17A4 PUSH2 0x179F PUSH2 0xFD5 JUMP JUMPDEST PUSH2 0x2917 JUMP JUMPDEST PUSH2 0x17AD NUMBER PUSH2 0x2917 JUMP JUMPDEST PUSH2 0x17B7 SWAP2 SWAP1 PUSH2 0x4E0D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x17CB PUSH2 0x17C6 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x2917 JUMP JUMPDEST DUP3 PUSH2 0x17D6 SWAP2 SWAP1 PUSH2 0x4E0D JUMP JUMPDEST SWAP1 POP PUSH2 0x17EE DUP3 DUP5 PUSH1 0x0 ADD PUSH2 0x296E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1804 DUP2 DUP5 PUSH1 0x1 ADD PUSH2 0x296E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x7D84A6263AE0D98D3329BD7B46BB4E8D6F98CD35A7ADB45C274C8B7FD5EBD5E0 DUP5 PUSH2 0x182E PUSH2 0x222D JUMP JUMPDEST DUP12 DUP12 DUP14 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x184B JUMPI PUSH2 0x184A PUSH2 0x3988 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x187E JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1869 JUMPI SWAP1 POP JUMPDEST POP DUP13 DUP9 DUP9 DUP15 PUSH1 0x40 MLOAD PUSH2 0x1898 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5228 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP4 SWAP5 POP POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18C5 DUP5 DUP5 DUP5 PUSH2 0x299D JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x9 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP EQ PUSH2 0x190C JUMPI PUSH2 0x18E9 PUSH1 0x9 PUSH2 0x1EFB JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1910 JUMP JUMPDEST PUSH1 0x8 SLOAD JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x191F PUSH2 0x2A44 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1996 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x271F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19AF PUSH2 0x9F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19CD PUSH2 0x222D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A1A SWAP1 PUSH2 0x4990 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A42 PUSH2 0x9F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A92 JUMPI PUSH1 0x0 PUSH2 0x1A67 PUSH2 0x2235 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A75 SWAP3 SWAP2 SWAP1 PUSH2 0x48C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP JUMPDEST DUP1 PUSH2 0x1A8B PUSH1 0x2 PUSH2 0x2242 JUMP JUMPDEST SUB PUSH2 0x1A80 JUMPI POP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1ABD SWAP3 SWAP2 SWAP1 PUSH2 0x48C9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1AFA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1B27 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5E63 PUSH1 0x28 SWAP2 CODECOPY PUSH2 0x2A4E JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B49 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x52D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x737570706F72743D627261766F2671756F72756D3D666F722C6162737461696E DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x150214D74D59B7D1E90C73FC22EF3D991DD0A76B046543D4D80AB92D2A50328F DUP2 JUMP JUMPDEST PUSH2 0x1BD5 PUSH2 0x9F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BF3 PUSH2 0x222D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C40 SWAP1 PUSH2 0x4990 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C68 PUSH2 0x9F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CB8 JUMPI PUSH1 0x0 PUSH2 0x1C8D PUSH2 0x2235 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9B SWAP3 SWAP2 SWAP1 PUSH2 0x48C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP JUMPDEST DUP1 PUSH2 0x1CB1 PUSH1 0x2 PUSH2 0x2242 JUMP JUMPDEST SUB PUSH2 0x1CA6 JUMPI POP JUMPDEST PUSH2 0x1CC1 DUP2 PUSH2 0x2A70 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD8 DUP4 DUP4 PUSH2 0x1CD3 PUSH2 0x2AF8 JUMP JUMPDEST PUSH2 0x299D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CE8 PUSH2 0x9F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D06 PUSH2 0x222D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D5C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D53 SWAP1 PUSH2 0x4990 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D7B PUSH2 0x9F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1DCB JUMPI PUSH1 0x0 PUSH2 0x1DA0 PUSH2 0x2235 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DAE SWAP3 SWAP2 SWAP1 PUSH2 0x48C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP JUMPDEST DUP1 PUSH2 0x1DC4 PUSH1 0x2 PUSH2 0x2242 JUMP JUMPDEST SUB PUSH2 0x1DB9 JUMPI POP JUMPDEST PUSH2 0x1DD4 DUP2 PUSH2 0x2B0F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF7 DUP3 PUSH2 0x2B54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x1E85 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E7C SWAP1 PUSH2 0x53A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1EAE DUP5 PUSH1 0x0 ADD PUSH2 0x1EA0 NUMBER PUSH2 0x1F65 JUMP JUMPDEST PUSH2 0x1EA9 DUP7 PUSH2 0x1E22 JUMP JUMPDEST PUSH2 0x2C1C JUMP JUMPDEST DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x1F5A JUMPI PUSH2 0x1F29 DUP4 PUSH1 0x0 ADD PUSH1 0x1 DUP4 PUSH2 0x1F24 SWAP2 SWAP1 PUSH2 0x4B74 JUMP JUMPDEST PUSH2 0x2FA2 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F5D JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x1FB0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FA7 SWAP1 PUSH2 0x5436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x203F PUSH2 0x2039 PUSH2 0x2FB7 JUMP JUMPDEST DUP4 PUSH2 0x30D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2057 DUP8 DUP8 DUP8 DUP8 PUSH2 0x3104 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x2064 DUP2 PUSH2 0x31E6 JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x1 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x209D JUMPI PUSH2 0x209C PUSH2 0x4167 JUMP JUMPDEST JUMPDEST PUSH2 0x20A6 DUP9 PUSH2 0x106E JUMP JUMPDEST PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x20B8 JUMPI PUSH2 0x20B7 PUSH2 0x4167 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x20F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20EF SWAP1 PUSH2 0x54C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2157 DUP8 PUSH2 0x2147 DUP5 PUSH1 0x0 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x271F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND DUP7 PUSH2 0x299D JUMP JUMPDEST SWAP1 POP PUSH2 0x2166 DUP9 DUP9 DUP9 DUP5 DUP9 PUSH2 0x334C JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD SUB PUSH2 0x21C8 JUMPI DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB8E138887D0AA13BAB447E82DE9D5C1777041ECD21CA36BA824FF1E6C07DDDA4 DUP10 DUP9 DUP5 DUP10 PUSH1 0x40 MLOAD PUSH2 0x21BB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x54E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x221F JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2BABFBAC5889A709B63BB7F598B324E08BC5A4FB9EC647FB3CBC9EC07EB8712 DUP10 DUP9 DUP5 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0x2216 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x557E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP1 SWAP3 POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATASIZE SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x224D DUP3 PUSH2 0x3550 JUMP JUMPDEST ISZERO PUSH2 0x2284 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3DB2A12A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xF SIGNEXTEND SWAP1 POP DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 PUSH1 0xF SIGNEXTEND PUSH1 0xF SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 PUSH1 0xF SIGNEXTEND PUSH1 0xF SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP2 ADD DUP4 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xF SIGNEXTEND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2326 PUSH2 0x18AF JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x2368 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x235F SWAP1 PUSH2 0x5677 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2372 PUSH2 0x18CE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO DUP1 ISZERO PUSH2 0x238D JUMPI POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP EQ JUMPDEST ISZERO PUSH2 0x247F JUMPI PUSH1 0x9 PUSH1 0x0 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x23B8 DUP5 PUSH2 0x1E22 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST PUSH2 0x2493 DUP3 PUSH1 0x9 PUSH2 0x1E8D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP PUSH32 0x553476BF02EF2726E8CE5CED78D63E26E602E4A2257B1F559418E24B4633997 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x24C6 SWAP3 SWAP2 SWAP1 PUSH2 0x5697 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x24F1 PUSH2 0x9F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x25AE JUMPI PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x25AC JUMPI ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2542 JUMPI PUSH2 0x2541 PUSH2 0x4BA8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x259B JUMPI PUSH2 0x259A DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x257B JUMPI PUSH2 0x257A PUSH2 0x4BA8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x2 PUSH2 0x3585 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x25A5 SWAP1 PUSH2 0x56C0 JUMP JUMPDEST SWAP1 POP PUSH2 0x250F JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5E8B PUSH1 0x27 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x26BB JUMPI PUSH1 0x0 DUP1 DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x25F4 JUMPI PUSH2 0x25F3 PUSH2 0x4BA8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2625 JUMPI PUSH2 0x2624 PUSH2 0x4BA8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x2640 JUMPI PUSH2 0x263F PUSH2 0x4BA8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x2655 SWAP2 SWAP1 PUSH2 0x5739 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2692 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2697 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x26A7 DUP3 DUP3 DUP7 PUSH2 0x2A4E JUMP JUMPDEST POP POP POP DUP1 PUSH2 0x26B4 SWAP1 PUSH2 0x56C0 JUMP JUMPDEST SWAP1 POP PUSH2 0x25D5 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x26E3 PUSH2 0x9F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2718 JUMPI PUSH2 0x2708 PUSH1 0x2 PUSH2 0x3550 JUMP JUMPDEST PUSH2 0x2717 JUMPI PUSH2 0x2716 PUSH1 0x2 PUSH2 0x3601 JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x274D DUP6 DUP6 DUP6 DUP6 PUSH2 0x2748 PUSH2 0x2AF8 JUMP JUMPDEST PUSH2 0x2071 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD DUP2 PUSH1 0x1 ADD SLOAD PUSH2 0x2783 SWAP2 SWAP1 PUSH2 0x5750 JUMP JUMPDEST PUSH2 0x2794 PUSH2 0x278F DUP6 PUSH2 0xF43 JUMP JUMPDEST PUSH2 0x1DEC JUMP JUMPDEST GT ISZERO SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD DUP2 PUSH1 0x1 ADD SLOAD GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x280D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2804 SWAP1 PUSH2 0x57D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2818 DUP4 PUSH2 0x1F65 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 PUSH2 0x2838 DUP7 PUSH1 0x0 ADD DUP5 PUSH1 0x0 DUP6 PUSH2 0x3682 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x288C JUMPI PUSH2 0x285B DUP7 PUSH1 0x0 ADD PUSH1 0x1 DUP4 PUSH2 0x2856 SWAP2 SWAP1 PUSH2 0x4B74 JUMP JUMPDEST PUSH2 0x2FA2 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x288F JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xC565B045403DC03C2EEA82B81A0465EDAD9E2E7FC4D97E11421C209DA93D7A93 PUSH1 0x4 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH2 0x28EB SWAP3 SWAP2 SWAP1 PUSH2 0x5697 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x2966 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x295D SWAP1 PUSH2 0x5862 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3A46B1A8 DUP6 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29FA SWAP3 SWAP2 SWAP1 PUSH2 0x5882 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A17 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A3B SWAP2 SWAP1 PUSH2 0x58C0 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2A5E JUMPI DUP3 SWAP1 POP PUSH2 0x2A69 JUMP JUMPDEST PUSH2 0x2A68 DUP4 DUP4 PUSH2 0x36F5 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2AB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AAA SWAP1 PUSH2 0x595F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x7E3F7F0708A84DE9203036ABAA450DCCC85AD5FF52F78C170F3EDB55CF5E8828 PUSH1 0x5 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH2 0x2AE6 SWAP3 SWAP2 SWAP1 PUSH2 0x5697 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0xCCB45DA8D5717E6C4544694297C4BA5CF151D455C9BB0ED4FC7A38411BC05461 PUSH1 0x6 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH2 0x2B42 SWAP3 SWAP2 SWAP1 PUSH2 0x5697 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B5E PUSH2 0x18AF JUMP JUMPDEST PUSH2 0x2B67 DUP4 PUSH2 0x12FD JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8E539E8C DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BC0 SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BDD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C01 SWAP2 SWAP1 PUSH2 0x58C0 JUMP JUMPDEST PUSH2 0x2C0B SWAP2 SWAP1 PUSH2 0x597F JUMP JUMPDEST PUSH2 0x2C15 SWAP2 SWAP1 PUSH2 0x59F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x2EB2 JUMPI PUSH1 0x0 PUSH2 0x2C49 DUP8 PUSH1 0x1 DUP5 PUSH2 0x2C44 SWAP2 SWAP1 PUSH2 0x4B74 JUMP JUMPDEST PUSH2 0x2FA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP6 PUSH4 0xFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x2D3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D34 SWAP1 PUSH2 0x5A6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH4 0xFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND SUB PUSH2 0x2DC1 JUMPI DUP5 PUSH2 0x2D6B DUP9 PUSH1 0x1 DUP6 PUSH2 0x2D66 SWAP2 SWAP1 PUSH2 0x4B74 JUMP JUMPDEST PUSH2 0x2FA2 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x2EA1 JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD DUP6 SWAP4 POP SWAP4 POP POP POP PUSH2 0x2F9A JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x0 DUP5 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x3033 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x3060 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x30CE JUMP JUMPDEST PUSH2 0x30CB PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x3745 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x30E6 SWAP3 SWAP2 SWAP1 PUSH2 0x5B05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x313F JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x31DD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3164 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5B3C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3186 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x31D4 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x31DD JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x31FA JUMPI PUSH2 0x31F9 PUSH2 0x4167 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x320D JUMPI PUSH2 0x320C PUSH2 0x4167 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x3349 JUMPI PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x3227 JUMPI PUSH2 0x3226 PUSH2 0x4167 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x323A JUMPI PUSH2 0x3239 PUSH2 0x4167 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x327A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3271 SWAP1 PUSH2 0x5BCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x328E JUMPI PUSH2 0x328D PUSH2 0x4167 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x32A1 JUMPI PUSH2 0x32A0 PUSH2 0x4167 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x32E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32D8 SWAP1 PUSH2 0x5C39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x32F5 JUMPI PUSH2 0x32F4 PUSH2 0x4167 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x3308 JUMPI PUSH2 0x3307 PUSH2 0x4167 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x3348 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x333F SWAP1 PUSH2 0x5CCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x33F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33E9 SWAP1 PUSH2 0x5D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3460 JUMPI PUSH2 0x345F PUSH2 0x4167 JUMP JUMPDEST JUMPDEST PUSH1 0xFF AND DUP5 PUSH1 0xFF AND SUB PUSH2 0x348C JUMPI DUP3 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3480 SWAP2 SWAP1 PUSH2 0x5750 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3548 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x34A0 JUMPI PUSH2 0x349F PUSH2 0x4167 JUMP JUMPDEST JUMPDEST PUSH1 0xFF AND DUP5 PUSH1 0xFF AND SUB PUSH2 0x34CC JUMPI DUP3 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x34C0 SWAP2 SWAP1 PUSH2 0x5750 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3547 JUMP JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x34DF JUMPI PUSH2 0x34DE PUSH2 0x4167 JUMP JUMPDEST JUMPDEST PUSH1 0xFF AND DUP5 PUSH1 0xFF AND SUB PUSH2 0x350B JUMPI DUP3 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x34FF SWAP2 SWAP1 PUSH2 0x5750 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3546 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x353D SWAP1 PUSH2 0x5DEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xF SIGNEXTEND PUSH1 0xF SIGNEXTEND DUP3 PUSH1 0x0 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xF SIGNEXTEND PUSH1 0xF SIGNEXTEND SGT ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xF SIGNEXTEND SWAP1 POP DUP2 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP4 PUSH1 0xF SIGNEXTEND PUSH1 0xF SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 ADD DUP4 PUSH1 0x0 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xF SIGNEXTEND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xF SIGNEXTEND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xF SIGNEXTEND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x36EA JUMPI PUSH1 0x0 PUSH2 0x3699 DUP5 DUP5 PUSH2 0x377F JUMP JUMPDEST SWAP1 POP DUP5 PUSH4 0xFFFFFFFF AND PUSH2 0x36AC DUP8 DUP4 PUSH2 0x2FA2 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x36D4 JUMPI DUP1 SWAP3 POP PUSH2 0x36E4 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x36E1 SWAP2 SWAP1 PUSH2 0x5750 JUMP JUMPDEST SWAP4 POP JUMPDEST POP PUSH2 0x3685 JUMP JUMPDEST DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x3708 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x373C SWAP2 SWAP1 PUSH2 0x3C73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP4 DUP4 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3760 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5E0F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP5 XOR PUSH2 0x3790 SWAP2 SWAP1 PUSH2 0x59F0 JUMP JUMPDEST DUP3 DUP5 AND PUSH2 0x379D SWAP2 SWAP1 PUSH2 0x5750 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37EE DUP2 PUSH2 0x37B9 JUMP JUMPDEST DUP2 EQ PUSH2 0x37F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x380B DUP2 PUSH2 0x37E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3827 JUMPI PUSH2 0x3826 PUSH2 0x37AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3835 DUP5 DUP3 DUP6 ADD PUSH2 0x37FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3853 DUP2 PUSH2 0x383E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x386E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x384A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3887 DUP2 PUSH2 0x3874 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x38A2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x387E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x38B1 DUP2 PUSH2 0x3874 JUMP JUMPDEST DUP2 EQ PUSH2 0x38BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x38CE DUP2 PUSH2 0x38A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38EA DUP2 PUSH2 0x38D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x38F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3907 DUP2 PUSH2 0x38E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3932 JUMPI PUSH2 0x3931 PUSH2 0x390D JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x394F JUMPI PUSH2 0x394E PUSH2 0x3912 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x396B JUMPI PUSH2 0x396A PUSH2 0x3917 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x39C0 DUP3 PUSH2 0x3977 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x39DF JUMPI PUSH2 0x39DE PUSH2 0x3988 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39F2 PUSH2 0x37A5 JUMP JUMPDEST SWAP1 POP PUSH2 0x39FE DUP3 DUP3 PUSH2 0x39B7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3A1E JUMPI PUSH2 0x3A1D PUSH2 0x3988 JUMP JUMPDEST JUMPDEST PUSH2 0x3A27 DUP3 PUSH2 0x3977 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A56 PUSH2 0x3A51 DUP5 PUSH2 0x3A03 JUMP JUMPDEST PUSH2 0x39E8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3A72 JUMPI PUSH2 0x3A71 PUSH2 0x3972 JUMP JUMPDEST JUMPDEST PUSH2 0x3A7D DUP5 DUP3 DUP6 PUSH2 0x3A34 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3A9A JUMPI PUSH2 0x3A99 PUSH2 0x390D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3AAA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3A43 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3AC6 DUP2 PUSH2 0x3AB3 JUMP JUMPDEST DUP2 EQ PUSH2 0x3AD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3AE3 DUP2 PUSH2 0x3ABD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xE0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x3B09 JUMPI PUSH2 0x3B08 PUSH2 0x37AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B17 DUP12 DUP3 DUP13 ADD PUSH2 0x38BF JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x3B28 DUP12 DUP3 DUP13 ADD PUSH2 0x38F8 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B49 JUMPI PUSH2 0x3B48 PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x3B55 DUP12 DUP3 DUP13 ADD PUSH2 0x391C JUMP JUMPDEST SWAP7 POP SWAP7 POP POP PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B78 JUMPI PUSH2 0x3B77 PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x3B84 DUP12 DUP3 DUP13 ADD PUSH2 0x3A85 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x3B95 DUP12 DUP3 DUP13 ADD PUSH2 0x38F8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x3BA6 DUP12 DUP3 DUP13 ADD PUSH2 0x3AD4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x3BB7 DUP12 DUP3 DUP13 ADD PUSH2 0x3AD4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BDD JUMPI PUSH2 0x3BDC PUSH2 0x37AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3BEB DUP5 DUP3 DUP6 ADD PUSH2 0x38BF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3C2E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3C13 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C45 DUP3 PUSH2 0x3BF4 JUMP JUMPDEST PUSH2 0x3C4F DUP2 DUP6 PUSH2 0x3BFF JUMP JUMPDEST SWAP4 POP PUSH2 0x3C5F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3C10 JUMP JUMPDEST PUSH2 0x3C68 DUP2 PUSH2 0x3977 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C8D DUP2 DUP5 PUSH2 0x3C3A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CC0 DUP3 PUSH2 0x3C95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CD0 DUP2 PUSH2 0x3CB5 JUMP JUMPDEST DUP2 EQ PUSH2 0x3CDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3CED DUP2 PUSH2 0x3CC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3D0D JUMPI PUSH2 0x3D0C PUSH2 0x37AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3D1B DUP8 DUP3 DUP9 ADD PUSH2 0x3CDE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3D2C DUP8 DUP3 DUP9 ADD PUSH2 0x3CDE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3D3D DUP8 DUP3 DUP9 ADD PUSH2 0x38BF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D5E JUMPI PUSH2 0x3D5D PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x3D6A DUP8 DUP3 DUP9 ADD PUSH2 0x3A85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x3D7F DUP2 PUSH2 0x37B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3D9A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3D76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3DBB JUMPI PUSH2 0x3DBA PUSH2 0x3988 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DDF PUSH2 0x3DDA DUP5 PUSH2 0x3DA0 JUMP JUMPDEST PUSH2 0x39E8 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x3E02 JUMPI PUSH2 0x3E01 PUSH2 0x3917 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3E2B JUMPI DUP1 PUSH2 0x3E17 DUP9 DUP3 PUSH2 0x3CDE JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3E04 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3E4A JUMPI PUSH2 0x3E49 PUSH2 0x390D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3E5A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3DCC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3E7E JUMPI PUSH2 0x3E7D PUSH2 0x3988 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EA2 PUSH2 0x3E9D DUP5 PUSH2 0x3E63 JUMP JUMPDEST PUSH2 0x39E8 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x3EC5 JUMPI PUSH2 0x3EC4 PUSH2 0x3917 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3EEE JUMPI DUP1 PUSH2 0x3EDA DUP9 DUP3 PUSH2 0x38BF JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3EC7 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3F0D JUMPI PUSH2 0x3F0C PUSH2 0x390D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3F1D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3E8F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3F41 JUMPI PUSH2 0x3F40 PUSH2 0x3988 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F65 PUSH2 0x3F60 DUP5 PUSH2 0x3F26 JUMP JUMPDEST PUSH2 0x39E8 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x3F88 JUMPI PUSH2 0x3F87 PUSH2 0x3917 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3FCF JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3FAD JUMPI PUSH2 0x3FAC PUSH2 0x390D JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x3FBA DUP10 DUP3 PUSH2 0x3A85 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3F8A JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3FEE JUMPI PUSH2 0x3FED PUSH2 0x390D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3FFE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3F52 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4021 JUMPI PUSH2 0x4020 PUSH2 0x37AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x403F JUMPI PUSH2 0x403E PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x404B DUP8 DUP3 DUP9 ADD PUSH2 0x3E35 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x406C JUMPI PUSH2 0x406B PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x4078 DUP8 DUP3 DUP9 ADD PUSH2 0x3EF8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4099 JUMPI PUSH2 0x4098 PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x40A5 DUP8 DUP3 DUP9 ADD PUSH2 0x3FD9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x40B6 DUP8 DUP3 DUP9 ADD PUSH2 0x3AD4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x40CB DUP2 PUSH2 0x3AB3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x40E6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4108 JUMPI PUSH2 0x4107 PUSH2 0x37AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4116 DUP9 DUP3 DUP10 ADD PUSH2 0x38BF JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x4127 DUP9 DUP3 DUP10 ADD PUSH2 0x38F8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x4138 DUP9 DUP3 DUP10 ADD PUSH2 0x38F8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x4149 DUP9 DUP3 DUP10 ADD PUSH2 0x3AD4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x415A DUP9 DUP3 DUP10 ADD PUSH2 0x3AD4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x41A7 JUMPI PUSH2 0x41A6 PUSH2 0x4167 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x41B8 DUP3 PUSH2 0x4196 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41C8 DUP3 PUSH2 0x41AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x41D8 DUP2 PUSH2 0x41BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x41F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x41CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4210 JUMPI PUSH2 0x420F PUSH2 0x37AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x421E DUP6 DUP3 DUP7 ADD PUSH2 0x38BF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x422F DUP6 DUP3 DUP7 ADD PUSH2 0x3CDE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x424E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x387E JUMP JUMPDEST PUSH2 0x425B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x387E JUMP JUMPDEST PUSH2 0x4268 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x387E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4287 JUMPI PUSH2 0x4286 PUSH2 0x37AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4295 DUP6 DUP3 DUP7 ADD PUSH2 0x38BF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x42A6 DUP6 DUP3 DUP7 ADD PUSH2 0x38F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x42CC JUMPI PUSH2 0x42CB PUSH2 0x37AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x42DA DUP9 DUP3 DUP10 ADD PUSH2 0x38BF JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x42EB DUP9 DUP3 DUP10 ADD PUSH2 0x38F8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x430C JUMPI PUSH2 0x430B PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x4318 DUP9 DUP3 DUP10 ADD PUSH2 0x391C JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x433B JUMPI PUSH2 0x433A PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x4347 DUP9 DUP3 DUP10 ADD PUSH2 0x3A85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x436E JUMPI PUSH2 0x436D PUSH2 0x37AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x437C DUP8 DUP3 DUP9 ADD PUSH2 0x38BF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x438D DUP8 DUP3 DUP9 ADD PUSH2 0x38F8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x43AE JUMPI PUSH2 0x43AD PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x43BA DUP8 DUP3 DUP9 ADD PUSH2 0x391C JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x43E3 JUMPI PUSH2 0x43E2 PUSH2 0x3988 JUMP JUMPDEST JUMPDEST PUSH2 0x43EC DUP3 PUSH2 0x3977 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x440C PUSH2 0x4407 DUP5 PUSH2 0x43C8 JUMP JUMPDEST PUSH2 0x39E8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4428 JUMPI PUSH2 0x4427 PUSH2 0x3972 JUMP JUMPDEST JUMPDEST PUSH2 0x4433 DUP5 DUP3 DUP6 PUSH2 0x3A34 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4450 JUMPI PUSH2 0x444F PUSH2 0x390D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4460 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x43F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4483 JUMPI PUSH2 0x4482 PUSH2 0x37AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x44A1 JUMPI PUSH2 0x44A0 PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x44AD DUP8 DUP3 DUP9 ADD PUSH2 0x3E35 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x44CE JUMPI PUSH2 0x44CD PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x44DA DUP8 DUP3 DUP9 ADD PUSH2 0x3EF8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x44FB JUMPI PUSH2 0x44FA PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x4507 DUP8 DUP3 DUP9 ADD PUSH2 0x3FD9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4528 JUMPI PUSH2 0x4527 PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x4534 DUP8 DUP3 DUP9 ADD PUSH2 0x443B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4559 JUMPI PUSH2 0x4558 PUSH2 0x37AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4567 DUP7 DUP3 DUP8 ADD PUSH2 0x3CDE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4578 DUP7 DUP3 DUP8 ADD PUSH2 0x38BF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4599 JUMPI PUSH2 0x4598 PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x45A5 DUP7 DUP3 DUP8 ADD PUSH2 0x3A85 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x45CB JUMPI PUSH2 0x45CA PUSH2 0x37AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x45D9 DUP9 DUP3 DUP10 ADD PUSH2 0x3CDE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x45EA DUP9 DUP3 DUP10 ADD PUSH2 0x3CDE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x460B JUMPI PUSH2 0x460A PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x4617 DUP9 DUP3 DUP10 ADD PUSH2 0x3EF8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4638 JUMPI PUSH2 0x4637 PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x4644 DUP9 DUP3 DUP10 ADD PUSH2 0x3EF8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4665 JUMPI PUSH2 0x4664 PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x4671 DUP9 DUP3 DUP10 ADD PUSH2 0x3A85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x4694 JUMPI PUSH2 0x4693 PUSH2 0x390D JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x46B1 JUMPI PUSH2 0x46B0 PUSH2 0x3912 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x46CD JUMPI PUSH2 0x46CC PUSH2 0x3917 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x46EE JUMPI PUSH2 0x46ED PUSH2 0x37AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x46FC DUP8 DUP3 DUP9 ADD PUSH2 0x3CDE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x470D DUP8 DUP3 DUP9 ADD PUSH2 0x38BF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x472E JUMPI PUSH2 0x472D PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x473A DUP8 DUP3 DUP9 ADD PUSH2 0x467E JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x475F JUMPI PUSH2 0x475E PUSH2 0x37AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x476D DUP6 DUP3 DUP7 ADD PUSH2 0x3CDE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x477E DUP6 DUP3 DUP7 ADD PUSH2 0x38BF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x47A4 JUMPI PUSH2 0x47A3 PUSH2 0x37AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x47B2 DUP9 DUP3 DUP10 ADD PUSH2 0x3CDE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x47C3 DUP9 DUP3 DUP10 ADD PUSH2 0x3CDE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x47D4 DUP9 DUP3 DUP10 ADD PUSH2 0x38BF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x47E5 DUP9 DUP3 DUP10 ADD PUSH2 0x38BF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4806 JUMPI PUSH2 0x4805 PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x4812 DUP9 DUP3 DUP10 ADD PUSH2 0x3A85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4844 PUSH2 0x483F PUSH2 0x483A DUP5 PUSH2 0x3C95 JUMP JUMPDEST PUSH2 0x481F JUMP JUMPDEST PUSH2 0x3C95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4856 DUP3 PUSH2 0x4829 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4868 DUP3 PUSH2 0x484B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4878 DUP2 PUSH2 0x485D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4893 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x486F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48B0 DUP4 DUP6 PUSH2 0x4899 JUMP JUMPDEST SWAP4 POP PUSH2 0x48BD DUP4 DUP6 DUP5 PUSH2 0x3A34 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48D6 DUP3 DUP5 DUP7 PUSH2 0x48A4 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x48EB DUP2 PUSH2 0x38D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x4906 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x40C2 JUMP JUMPDEST PUSH2 0x4913 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x387E JUMP JUMPDEST PUSH2 0x4920 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x48E2 JUMP JUMPDEST PUSH2 0x492D PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x40C2 JUMP JUMPDEST PUSH2 0x493A PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x40C2 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x476F7665726E6F723A206F6E6C79476F7665726E616E63650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x497A PUSH1 0x18 DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x4985 DUP3 PUSH2 0x4944 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x49A9 DUP2 PUSH2 0x496D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x49F7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4A0A JUMPI PUSH2 0x4A09 PUSH2 0x49B0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476F7665726E6F723A2070726F706F73616C206E6F7420737563636573736675 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A6C PUSH1 0x21 DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x4A77 DUP3 PUSH2 0x4A10 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A9B DUP2 PUSH2 0x4A5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4AB7 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x40C2 JUMP JUMPDEST PUSH2 0x4AC4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x387E JUMP JUMPDEST PUSH2 0x4AD1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x48E2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x476F7665726E6F723A20756E6B6E6F776E2070726F706F73616C206964000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B0F PUSH1 0x1D DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x4B1A DUP3 PUSH2 0x4AD9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B3E DUP2 PUSH2 0x4B02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4B7F DUP3 PUSH2 0x3874 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B8A DUP4 PUSH2 0x3874 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x4BA2 JUMPI PUSH2 0x4BA1 PUSH2 0x4B45 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x476F7665726E6F723A2070726F706F73657220766F7465732062656C6F772070 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F706F73616C207468726573686F6C64000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C33 PUSH1 0x31 DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x4C3E DUP3 PUSH2 0x4BD7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C62 DUP2 PUSH2 0x4C26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476F7665726E6F723A20696E76616C69642070726F706F73616C206C656E6774 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6800000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CC5 PUSH1 0x21 DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x4CD0 DUP3 PUSH2 0x4C69 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4CF4 DUP2 PUSH2 0x4CB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476F7665726E6F723A20656D7074792070726F706F73616C0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D31 PUSH1 0x18 DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x4D3C DUP3 PUSH2 0x4CFB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4D60 DUP2 PUSH2 0x4D24 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476F7665726E6F723A2070726F706F73616C20616C7265616479206578697374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DC3 PUSH1 0x21 DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x4DCE DUP3 PUSH2 0x4D67 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4DF2 DUP2 PUSH2 0x4DB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E18 DUP3 PUSH2 0x4DF9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E23 DUP4 PUSH2 0x4DF9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4E43 JUMPI PUSH2 0x4E42 PUSH2 0x4B45 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4E52 DUP2 PUSH2 0x3CB5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E8D DUP2 PUSH2 0x3CB5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E9F DUP4 DUP4 PUSH2 0x4E84 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EC3 DUP3 PUSH2 0x4E58 JUMP JUMPDEST PUSH2 0x4ECD DUP2 DUP6 PUSH2 0x4E63 JUMP JUMPDEST SWAP4 POP PUSH2 0x4ED8 DUP4 PUSH2 0x4E74 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4F09 JUMPI DUP2 MLOAD PUSH2 0x4EF0 DUP9 DUP3 PUSH2 0x4E93 JUMP JUMPDEST SWAP8 POP PUSH2 0x4EFB DUP4 PUSH2 0x4EAB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4EDC JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4F4B DUP2 PUSH2 0x3874 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F5D DUP4 DUP4 PUSH2 0x4F42 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F81 DUP3 PUSH2 0x4F16 JUMP JUMPDEST PUSH2 0x4F8B DUP2 DUP6 PUSH2 0x4F21 JUMP JUMPDEST SWAP4 POP PUSH2 0x4F96 DUP4 PUSH2 0x4F32 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4FC7 JUMPI DUP2 MLOAD PUSH2 0x4FAE DUP9 DUP3 PUSH2 0x4F51 JUMP JUMPDEST SWAP8 POP PUSH2 0x4FB9 DUP4 PUSH2 0x4F69 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4F9A JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x501C DUP3 PUSH2 0x3BF4 JUMP JUMPDEST PUSH2 0x5026 DUP2 DUP6 PUSH2 0x5000 JUMP JUMPDEST SWAP4 POP PUSH2 0x5036 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3C10 JUMP JUMPDEST PUSH2 0x503F DUP2 PUSH2 0x3977 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5056 DUP4 DUP4 PUSH2 0x5011 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5076 DUP3 PUSH2 0x4FD4 JUMP JUMPDEST PUSH2 0x5080 DUP2 DUP6 PUSH2 0x4FDF JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x5092 DUP6 PUSH2 0x4FF0 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x50CE JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x50AF DUP6 DUP3 PUSH2 0x504A JUMP JUMPDEST SWAP5 POP PUSH2 0x50BA DUP4 PUSH2 0x505E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5096 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5133 DUP3 PUSH2 0x510C JUMP JUMPDEST PUSH2 0x513D DUP2 DUP6 PUSH2 0x5117 JUMP JUMPDEST SWAP4 POP PUSH2 0x514D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3C10 JUMP JUMPDEST PUSH2 0x5156 DUP2 PUSH2 0x3977 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x516D DUP4 DUP4 PUSH2 0x5128 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x518D DUP3 PUSH2 0x50E0 JUMP JUMPDEST PUSH2 0x5197 DUP2 DUP6 PUSH2 0x50EB JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x51A9 DUP6 PUSH2 0x50FC JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x51E5 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x51C6 DUP6 DUP3 PUSH2 0x5161 JUMP JUMPDEST SWAP5 POP PUSH2 0x51D1 DUP4 PUSH2 0x5175 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x51AD JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5212 PUSH2 0x520D PUSH2 0x5208 DUP5 PUSH2 0x4DF9 JUMP JUMPDEST PUSH2 0x481F JUMP JUMPDEST PUSH2 0x3874 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5222 DUP2 PUSH2 0x51F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x523E PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x387E JUMP JUMPDEST PUSH2 0x524B PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x4E49 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x525D DUP2 DUP11 PUSH2 0x4EB8 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x5271 DUP2 DUP10 PUSH2 0x4F76 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x5285 DUP2 DUP9 PUSH2 0x506B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x5299 DUP2 DUP8 PUSH2 0x5182 JUMP JUMPDEST SWAP1 POP PUSH2 0x52A8 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x5219 JUMP JUMPDEST PUSH2 0x52B5 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x5219 JUMP JUMPDEST DUP2 DUP2 SUB PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x52C8 DUP2 DUP5 PUSH2 0x3C3A JUMP JUMPDEST SWAP1 POP SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x52F2 DUP2 DUP8 PUSH2 0x4EB8 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x5306 DUP2 DUP7 PUSH2 0x4F76 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x531A DUP2 DUP6 PUSH2 0x5182 JUMP JUMPDEST SWAP1 POP PUSH2 0x5329 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x40C2 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3234206269747300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x538E PUSH1 0x27 DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x5399 DUP3 PUSH2 0x5332 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x53BD DUP2 PUSH2 0x5381 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3220626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5420 PUSH1 0x26 DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x542B DUP3 PUSH2 0x53C4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x544F DUP2 PUSH2 0x5413 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476F7665726E6F723A20766F7465206E6F742063757272656E746C7920616374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6976650000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54B2 PUSH1 0x23 DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x54BD DUP3 PUSH2 0x5456 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x54E1 DUP2 PUSH2 0x54A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x54FD PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x387E JUMP JUMPDEST PUSH2 0x550A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x48E2 JUMP JUMPDEST PUSH2 0x5517 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x387E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x5529 DUP2 DUP5 PUSH2 0x3C3A JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5550 DUP3 PUSH2 0x510C JUMP JUMPDEST PUSH2 0x555A DUP2 DUP6 PUSH2 0x5534 JUMP JUMPDEST SWAP4 POP PUSH2 0x556A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3C10 JUMP JUMPDEST PUSH2 0x5573 DUP2 PUSH2 0x3977 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x5593 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x387E JUMP JUMPDEST PUSH2 0x55A0 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x48E2 JUMP JUMPDEST PUSH2 0x55AD PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x387E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x55BF DUP2 DUP6 PUSH2 0x3C3A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x55D3 DUP2 DUP5 PUSH2 0x5545 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x476F7665726E6F72566F74657351756F72756D4672616374696F6E3A2071756F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72756D4E756D657261746F72206F7665722071756F72756D44656E6F6D696E61 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x746F720000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5661 PUSH1 0x43 DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x566C DUP3 PUSH2 0x55DF JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5690 DUP2 PUSH2 0x5654 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x56AC PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x387E JUMP JUMPDEST PUSH2 0x56B9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x387E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56CB DUP3 PUSH2 0x3874 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x56FD JUMPI PUSH2 0x56FC PUSH2 0x4B45 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5713 DUP3 PUSH2 0x510C JUMP JUMPDEST PUSH2 0x571D DUP2 DUP6 PUSH2 0x4899 JUMP JUMPDEST SWAP4 POP PUSH2 0x572D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3C10 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5745 DUP3 DUP5 PUSH2 0x5708 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x575B DUP3 PUSH2 0x3874 JUMP JUMPDEST SWAP2 POP PUSH2 0x5766 DUP4 PUSH2 0x3874 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x577E JUMPI PUSH2 0x577D PUSH2 0x4B45 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436865636B706F696E74733A20626C6F636B206E6F7420796574206D696E6564 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57BA PUSH1 0x20 DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x57C5 DUP3 PUSH2 0x5784 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x57E9 DUP2 PUSH2 0x57AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2036 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3420626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x584C PUSH1 0x26 DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x5857 DUP3 PUSH2 0x57F0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x587B DUP2 PUSH2 0x583F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5897 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4E49 JUMP JUMPDEST PUSH2 0x58A4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x387E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x58BA DUP2 PUSH2 0x38A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x58D6 JUMPI PUSH2 0x58D5 PUSH2 0x37AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x58E4 DUP5 DUP3 DUP6 ADD PUSH2 0x58AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x476F7665726E6F7253657474696E67733A20766F74696E6720706572696F6420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x746F6F206C6F7700000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5949 PUSH1 0x27 DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x5954 DUP3 PUSH2 0x58ED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5978 DUP2 PUSH2 0x593C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x598A DUP3 PUSH2 0x3874 JUMP JUMPDEST SWAP2 POP PUSH2 0x5995 DUP4 PUSH2 0x3874 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x59A3 DUP2 PUSH2 0x3874 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x59BA JUMPI PUSH2 0x59B9 PUSH2 0x4B45 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x59FB DUP3 PUSH2 0x3874 JUMP JUMPDEST SWAP2 POP PUSH2 0x5A06 DUP4 PUSH2 0x3874 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x5A16 JUMPI PUSH2 0x5A15 PUSH2 0x59C1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436865636B706F696E743A20696E76616C6964206B6579000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A57 PUSH1 0x17 DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x5A62 DUP3 PUSH2 0x5A21 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5A86 DUP2 PUSH2 0x5A4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5ACE PUSH1 0x2 DUP4 PUSH2 0x5A8D JUMP JUMPDEST SWAP2 POP PUSH2 0x5AD9 DUP3 PUSH2 0x5A98 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5AFF PUSH2 0x5AFA DUP3 PUSH2 0x3AB3 JUMP JUMPDEST PUSH2 0x5AE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B10 DUP3 PUSH2 0x5AC1 JUMP JUMPDEST SWAP2 POP PUSH2 0x5B1C DUP3 DUP6 PUSH2 0x5AEE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x5B2C DUP3 DUP5 PUSH2 0x5AEE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x5B51 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x40C2 JUMP JUMPDEST PUSH2 0x5B5E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x48E2 JUMP JUMPDEST PUSH2 0x5B6B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x40C2 JUMP JUMPDEST PUSH2 0x5B78 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x40C2 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BB7 PUSH1 0x18 DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x5BC2 DUP3 PUSH2 0x5B81 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5BE6 DUP2 PUSH2 0x5BAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C23 PUSH1 0x1F DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x5C2E DUP3 PUSH2 0x5BED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5C52 DUP2 PUSH2 0x5C16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CB5 PUSH1 0x22 DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x5CC0 DUP3 PUSH2 0x5C59 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5CE4 DUP2 PUSH2 0x5CA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476F7665726E6F72566F74696E6753696D706C653A20766F746520616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6479206361737400000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D47 PUSH1 0x27 DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x5D52 DUP3 PUSH2 0x5CEB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5D76 DUP2 PUSH2 0x5D3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476F7665726E6F72566F74696E6753696D706C653A20696E76616C6964207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C756520666F7220656E756D20566F7465547970650000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DD9 PUSH1 0x35 DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x5DE4 DUP3 PUSH2 0x5D7D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5E08 DUP2 PUSH2 0x5DCC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x5E24 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x40C2 JUMP JUMPDEST PUSH2 0x5E31 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x40C2 JUMP JUMPDEST PUSH2 0x5E3E PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x40C2 JUMP JUMPDEST PUSH2 0x5E4B PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x387E JUMP JUMPDEST PUSH2 0x5E58 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x4E49 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID SELFBALANCE PUSH16 0x7665726E6F723A2072656C6179207265 PUSH23 0x657274656420776974686F7574206D657373616765476F PUSH23 0x65726E6F723A2063616C6C207265766572746564207769 PUSH21 0x686F7574206D657373616765A26469706673582212 KECCAK256 ADDRESS SUB CALLDATALOAD SIGNEXTEND 0xA7 0xC7 PUSH17 0xB7F0BC1C5559C008026BA93E4D6DF749C1 0xE SWAP16 PUSH26 0x99FC4B421164736F6C6343000811003300000000000000000000 ","sourceMap":"438:1161:21:-:0;;;582:185;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;758:1;714:6;679:1;682:5;689:1;3441:88:0;;;;;;;;;;;;;;;;;3481:5;3488:9;:7;;;:9;;:::i;:::-;2529:18:15;2566:4;2550:22;;;;;;2529:43;;2582:21;2622:7;2606:25;;;;;;2582:49;;2641:16;2660:117;2641:136;;2802:10;2787:25;;;;;;2840:13;2822:31;;;;;;2882:13;2863:32;;;;;;2932:58;2954:8;2964:10;2976:13;2932:21;;;:58;;:::i;:::-;2905:85;;;;;;3023:4;3000:28;;;;;;;;;;3051:8;3038:21;;;;;;2519:547;;;2464:602;;3517:5:0::1;3509;:13;;;;;;:::i;:::-;;3441:88:::0;892:35:3;908:18;892:15;;;:35;;:::i;:::-;937:37;954:19;937:16;;;:37;;:::i;:::-;984:47;1006:24;984:21;;;:47;;:::i;:::-;749:289;;;507:12:4;499:20;;;;;;;;;;456:70;1209:44:5;1232:20;1209:22;;;:44;;:::i;:::-;1157:103;582:185:21;438:1161;;4780:99:0;4837:13;4862:10;;;;;;;;;;;;;;;;;;;4780:99;:::o;3466:257:15:-;3606:7;3653:8;3663;3673:11;3686:13;3709:4;3642:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3632:84;;;;;;3625:91;;3466:257;;;;;:::o;2622:171:3:-;2703:44;2718:12;;2732:14;2703:44;;;;;;;:::i;:::-;;;;;;;;2772:14;2757:12;:29;;;;2622:171;:::o;2913:316::-;3074:1;3056:15;:19;3048:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;3134:47;3150:13;;3165:15;3134:47;;;;;;;:::i;:::-;;;;;;;;3207:15;3191:13;:31;;;;2913:316;:::o;3359:213::-;3452:62;3473:18;;3493:20;3452:62;;;;;;;:::i;:::-;;;;;;;;3545:20;3524:18;:41;;;;3359:213;:::o;3498:887:5:-;3628:19;:17;;;:19;;:::i;:::-;3606:18;:41;;3585:155;;;;;;;;;;;;:::i;:::-;;;;;;;;;3751:26;3780:17;:15;;;:17;;:::i;:::-;3751:46;;3953:1;3931:18;:23;;:75;;;;;4005:1;3958:23;:36;;:43;;;;:48;3931:75;3927:268;;;4022:23;:36;;4081:89;;;;;;;;4119:1;4081:89;;;;;;4130:38;4149:18;4130;;;;;:38;;:::i;:::-;4081:89;;;;;4022:162;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3927:268;4252:48;4281:18;4252:23;:28;;;;;;:48;;;;:::i;:::-;;;4316:62;4339:18;4359;4316:62;;;;;;;:::i;:::-;;;;;;;;3575:810;3498:887;:::o;2419:94::-;2477:7;2503:3;2496:10;;2419:94;:::o;1357:191::-;1413:7;1486:1;1439:23;:36;;:43;;;;:48;:102;;1509:32;:23;:30;;;;;:32;;:::i;:::-;1439:102;;;;;1490:16;;1439:102;1432:109;;1357:191;:::o;2836:192:19:-;2893:7;2929:17;2920:26;;:5;:26;;2912:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3015:5;3000:21;;2836:192;;;:::o;3000:197:10:-;3069:7;3078;3104:86;3112:4;:17;;3131:31;3149:12;3131:17;;;;;:31;;:::i;:::-;3164:25;3183:5;3164:18;;;;;:25;;:::i;:::-;3104:7;;;:86;;:::i;:::-;3097:93;;;;;;;;;;;;;;3000:197;;;;;:::o;3779:205::-;3840:7;3859:11;3873:4;:17;;:24;;;;3859:38;;3921:1;3914:3;:8;:63;;3929:41;3943:4;:17;;3968:1;3962:3;:7;;;;:::i;:::-;3929:13;;;:41;;:::i;:::-;:48;;;;;;;;;;;;3914:63;;;3925:1;3914:63;3907:70;;;3779:205;;;:::o;15264:187:19:-;15320:6;15355:16;15346:25;;:5;:25;;15338:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;15438:5;15424:20;;15264:187;;;:::o;4999:879:10:-;5117:7;5126;5145:11;5159:4;:11;;;;5145:25;;5191:1;5185:3;:7;5181:691;;;5260:22;5285:28;5299:4;5311:1;5305:3;:7;;;;:::i;:::-;5285:13;;;:28;;:::i;:::-;5260:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5409:3;5388:24;;:4;:17;;;:24;;;;5380:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5525:3;5504:24;;:4;:17;;;:24;;;5500:202;;5586:5;5548:28;5562:4;5574:1;5568:3;:7;;;;:::i;:::-;5548:13;;;:28;;:::i;:::-;:35;;;:43;;;;;;;;;;;;;;;;;;5500:202;;;5630:4;5640:46;;;;;;;;5666:3;5640:46;;;;;;5679:5;5640:46;;;;;5630:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5500:202;5723:4;:11;;;5736:5;5715:27;;;;;;;;5181:691;5773:4;5783:46;;;;;;;;5809:3;5783:46;;;;;;5822:5;5783:46;;;;;5773:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5852:1;5855:5;5844:17;;;;;4999:879;;;;;;;:::o;7568:237::-;7653:25;7723:9;7720:1;7713:20;7785:3;7778:4;7775:1;7765:18;7761:28;7746:43;;7568:237;;;;:::o;88:117:22:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:111::-;620:7;649:24;667:5;649:24;:::i;:::-;638:35;;568:111;;;:::o;685:152::-;773:39;806:5;773:39;:::i;:::-;766:5;763:50;753:78;;827:1;824;817:12;753:78;685:152;:::o;843:173::-;915:5;946:6;940:13;931:22;;962:48;1004:5;962:48;:::i;:::-;843:173;;;;:::o;1022:381::-;1107:6;1156:2;1144:9;1135:7;1131:23;1127:32;1124:119;;;1162:79;;:::i;:::-;1124:119;1282:1;1307:79;1378:7;1369:6;1358:9;1354:22;1307:79;:::i;:::-;1297:89;;1253:143;1022:381;;;;:::o;1409:99::-;1461:6;1495:5;1489:12;1479:22;;1409:99;;;:::o;1514:180::-;1562:77;1559:1;1552:88;1659:4;1656:1;1649:15;1683:4;1680:1;1673:15;1700:180;1748:77;1745:1;1738:88;1845:4;1842:1;1835:15;1869:4;1866:1;1859:15;1886:320;1930:6;1967:1;1961:4;1957:12;1947:22;;2014:1;2008:4;2004:12;2035:18;2025:81;;2091:4;2083:6;2079:17;2069:27;;2025:81;2153:2;2145:6;2142:14;2122:18;2119:38;2116:84;;2172:18;;:::i;:::-;2116:84;1937:269;1886:320;;;:::o;2212:141::-;2261:4;2284:3;2276:11;;2307:3;2304:1;2297:14;2341:4;2338:1;2328:18;2320:26;;2212:141;;;:::o;2359:93::-;2396:6;2443:2;2438;2431:5;2427:14;2423:23;2413:33;;2359:93;;;:::o;2458:107::-;2502:8;2552:5;2546:4;2542:16;2521:37;;2458:107;;;;:::o;2571:393::-;2640:6;2690:1;2678:10;2674:18;2713:97;2743:66;2732:9;2713:97;:::i;:::-;2831:39;2861:8;2850:9;2831:39;:::i;:::-;2819:51;;2903:4;2899:9;2892:5;2888:21;2879:30;;2952:4;2942:8;2938:19;2931:5;2928:30;2918:40;;2647:317;;2571:393;;;;;:::o;2970:77::-;3007:7;3036:5;3025:16;;2970:77;;;:::o;3053:60::-;3081:3;3102:5;3095:12;;3053:60;;;:::o;3119:142::-;3169:9;3202:53;3220:34;3229:24;3247:5;3229:24;:::i;:::-;3220:34;:::i;:::-;3202:53;:::i;:::-;3189:66;;3119:142;;;:::o;3267:75::-;3310:3;3331:5;3324:12;;3267:75;;;:::o;3348:269::-;3458:39;3489:7;3458:39;:::i;:::-;3519:91;3568:41;3592:16;3568:41;:::i;:::-;3560:6;3553:4;3547:11;3519:91;:::i;:::-;3513:4;3506:105;3424:193;3348:269;;;:::o;3623:73::-;3668:3;3623:73;:::o;3702:189::-;3779:32;;:::i;:::-;3820:65;3878:6;3870;3864:4;3820:65;:::i;:::-;3755:136;3702:189;;:::o;3897:186::-;3957:120;3974:3;3967:5;3964:14;3957:120;;;4028:39;4065:1;4058:5;4028:39;:::i;:::-;4001:1;3994:5;3990:13;3981:22;;3957:120;;;3897:186;;:::o;4089:543::-;4190:2;4185:3;4182:11;4179:446;;;4224:38;4256:5;4224:38;:::i;:::-;4308:29;4326:10;4308:29;:::i;:::-;4298:8;4294:44;4491:2;4479:10;4476:18;4473:49;;;4512:8;4497:23;;4473:49;4535:80;4591:22;4609:3;4591:22;:::i;:::-;4581:8;4577:37;4564:11;4535:80;:::i;:::-;4194:431;;4179:446;4089:543;;;:::o;4638:117::-;4692:8;4742:5;4736:4;4732:16;4711:37;;4638:117;;;;:::o;4761:169::-;4805:6;4838:51;4886:1;4882:6;4874:5;4871:1;4867:13;4838:51;:::i;:::-;4834:56;4919:4;4913;4909:15;4899:25;;4812:118;4761:169;;;;:::o;4935:295::-;5011:4;5157:29;5182:3;5176:4;5157:29;:::i;:::-;5149:37;;5219:3;5216:1;5212:11;5206:4;5203:21;5195:29;;4935:295;;;;:::o;5235:1395::-;5352:37;5385:3;5352:37;:::i;:::-;5454:18;5446:6;5443:30;5440:56;;;5476:18;;:::i;:::-;5440:56;5520:38;5552:4;5546:11;5520:38;:::i;:::-;5605:67;5665:6;5657;5651:4;5605:67;:::i;:::-;5699:1;5723:4;5710:17;;5755:2;5747:6;5744:14;5772:1;5767:618;;;;6429:1;6446:6;6443:77;;;6495:9;6490:3;6486:19;6480:26;6471:35;;6443:77;6546:67;6606:6;6599:5;6546:67;:::i;:::-;6540:4;6533:81;6402:222;5737:887;;5767:618;5819:4;5815:9;5807:6;5803:22;5853:37;5885:4;5853:37;:::i;:::-;5912:1;5926:208;5940:7;5937:1;5934:14;5926:208;;;6019:9;6014:3;6010:19;6004:26;5996:6;5989:42;6070:1;6062:6;6058:14;6048:24;;6117:2;6106:9;6102:18;6089:31;;5963:4;5960:1;5956:12;5951:17;;5926:208;;;6162:6;6153:7;6150:19;6147:179;;;6220:9;6215:3;6211:19;6205:26;6263:48;6305:4;6297:6;6293:17;6282:9;6263:48;:::i;:::-;6255:6;6248:64;6170:156;6147:179;6372:1;6368;6360:6;6356:14;6352:22;6346:4;6339:36;5774:611;;;5737:887;;5327:1303;;;5235:1395;;:::o;6636:77::-;6673:7;6702:5;6691:16;;6636:77;;;:::o;6719:118::-;6806:24;6824:5;6806:24;:::i;:::-;6801:3;6794:37;6719:118;;:::o;6843:::-;6930:24;6948:5;6930:24;:::i;:::-;6925:3;6918:37;6843:118;;:::o;6967:::-;7054:24;7072:5;7054:24;:::i;:::-;7049:3;7042:37;6967:118;;:::o;7091:664::-;7296:4;7334:3;7323:9;7319:19;7311:27;;7348:71;7416:1;7405:9;7401:17;7392:6;7348:71;:::i;:::-;7429:72;7497:2;7486:9;7482:18;7473:6;7429:72;:::i;:::-;7511;7579:2;7568:9;7564:18;7555:6;7511:72;:::i;:::-;7593;7661:2;7650:9;7646:18;7637:6;7593:72;:::i;:::-;7675:73;7743:3;7732:9;7728:19;7719:6;7675:73;:::i;:::-;7091:664;;;;;;;;:::o;7761:332::-;7882:4;7920:2;7909:9;7905:18;7897:26;;7933:71;8001:1;7990:9;7986:17;7977:6;7933:71;:::i;:::-;8014:72;8082:2;8071:9;8067:18;8058:6;8014:72;:::i;:::-;7761:332;;;;;:::o;8099:169::-;8183:11;8217:6;8212:3;8205:19;8257:4;8252:3;8248:14;8233:29;;8099:169;;;;:::o;8274:226::-;8414:34;8410:1;8402:6;8398:14;8391:58;8483:9;8478:2;8470:6;8466:15;8459:34;8274:226;:::o;8506:366::-;8648:3;8669:67;8733:2;8728:3;8669:67;:::i;:::-;8662:74;;8745:93;8834:3;8745:93;:::i;:::-;8863:2;8858:3;8854:12;8847:19;;8506:366;;;:::o;8878:419::-;9044:4;9082:2;9071:9;9067:18;9059:26;;9131:9;9125:4;9121:20;9117:1;9106:9;9102:17;9095:47;9159:131;9285:4;9159:131;:::i;:::-;9151:139;;8878:419;;;:::o;9303:291::-;9443:34;9439:1;9431:6;9427:14;9420:58;9512:34;9507:2;9499:6;9495:15;9488:59;9581:5;9576:2;9568:6;9564:15;9557:30;9303:291;:::o;9600:366::-;9742:3;9763:67;9827:2;9822:3;9763:67;:::i;:::-;9756:74;;9839:93;9928:3;9839:93;:::i;:::-;9957:2;9952:3;9948:12;9941:19;;9600:366;;;:::o;9972:419::-;10138:4;10176:2;10165:9;10161:18;10153:26;;10225:9;10219:4;10215:20;10211:1;10200:9;10196:17;10189:47;10253:131;10379:4;10253:131;:::i;:::-;10245:139;;9972:419;;;:::o;10397:226::-;10537:34;10533:1;10525:6;10521:14;10514:58;10606:9;10601:2;10593:6;10589:15;10582:34;10397:226;:::o;10629:366::-;10771:3;10792:67;10856:2;10851:3;10792:67;:::i;:::-;10785:74;;10868:93;10957:3;10868:93;:::i;:::-;10986:2;10981:3;10977:12;10970:19;;10629:366;;;:::o;11001:419::-;11167:4;11205:2;11194:9;11190:18;11182:26;;11254:9;11248:4;11244:20;11240:1;11229:9;11225:17;11218:47;11282:131;11408:4;11282:131;:::i;:::-;11274:139;;11001:419;;;:::o;11426:180::-;11474:77;11471:1;11464:88;11571:4;11568:1;11561:15;11595:4;11592:1;11585:15;11612:194;11652:4;11672:20;11690:1;11672:20;:::i;:::-;11667:25;;11706:20;11724:1;11706:20;:::i;:::-;11701:25;;11750:1;11747;11743:9;11735:17;;11774:1;11768:4;11765:11;11762:37;;;11779:18;;:::i;:::-;11762:37;11612:194;;;;:::o;11812:225::-;11952:34;11948:1;11940:6;11936:14;11929:58;12021:8;12016:2;12008:6;12004:15;11997:33;11812:225;:::o;12043:366::-;12185:3;12206:67;12270:2;12265:3;12206:67;:::i;:::-;12199:74;;12282:93;12371:3;12282:93;:::i;:::-;12400:2;12395:3;12391:12;12384:19;;12043:366;;;:::o;12415:419::-;12581:4;12619:2;12608:9;12604:18;12596:26;;12668:9;12662:4;12658:20;12654:1;12643:9;12639:17;12632:47;12696:131;12822:4;12696:131;:::i;:::-;12688:139;;12415:419;;;:::o;12840:173::-;12980:25;12976:1;12968:6;12964:14;12957:49;12840:173;:::o;13019:366::-;13161:3;13182:67;13246:2;13241:3;13182:67;:::i;:::-;13175:74;;13258:93;13347:3;13258:93;:::i;:::-;13376:2;13371:3;13367:12;13360:19;;13019:366;;;:::o;13391:419::-;13557:4;13595:2;13584:9;13580:18;13572:26;;13644:9;13638:4;13634:20;13630:1;13619:9;13615:17;13608:47;13672:131;13798:4;13672:131;:::i;:::-;13664:139;;13391:419;;;:::o;438:1161:21:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@BALLOT_TYPEHASH_41":{"entryPoint":7081,"id":41,"parameterSlots":0,"returnSlots":0},"@COUNTING_MODE_1640":{"entryPoint":7020,"id":1640,"parameterSlots":0,"returnSlots":1},"@EXTENDED_BALLOT_TYPEHASH_46":{"entryPoint":4017,"id":46,"parameterSlots":0,"returnSlots":0},"@_135":{"entryPoint":null,"id":135,"parameterSlots":0,"returnSlots":0},"@_afterExecute_808":{"entryPoint":9924,"id":808,"parameterSlots":5,"returnSlots":0},"@_beforeExecute_770":{"entryPoint":9426,"id":770,"parameterSlots":5,"returnSlots":0},"@_buildDomainSeparator_5000":{"entryPoint":14149,"id":5000,"parameterSlots":3,"returnSlots":1},"@_castVote_1117":{"entryPoint":10039,"id":1117,"parameterSlots":4,"returnSlots":1},"@_castVote_1196":{"entryPoint":8305,"id":1196,"parameterSlots":5,"returnSlots":1},"@_countVote_1829":{"entryPoint":13132,"id":1829,"parameterSlots":5,"returnSlots":0},"@_defaultParams_419":{"entryPoint":11000,"id":419,"parameterSlots":0,"returnSlots":1},"@_domainSeparatorV4_4973":{"entryPoint":12215,"id":4973,"parameterSlots":0,"returnSlots":1},"@_execute_710":{"entryPoint":9653,"id":710,"parameterSlots":5,"returnSlots":0},"@_executor_1240":{"entryPoint":2552,"id":1240,"parameterSlots":0,"returnSlots":1},"@_getVotes_2049":{"entryPoint":10653,"id":2049,"parameterSlots":3,"returnSlots":1},"@_hashTypedDataV4_5016":{"entryPoint":8236,"id":5016,"parameterSlots":1,"returnSlots":1},"@_insert_3137":{"entryPoint":11292,"id":3137,"parameterSlots":3,"returnSlots":2},"@_msgData_4112":{"entryPoint":8757,"id":4112,"parameterSlots":0,"returnSlots":2},"@_msgSender_4103":{"entryPoint":8749,"id":4103,"parameterSlots":0,"returnSlots":1},"@_quorumReached_1716":{"entryPoint":10071,"id":1716,"parameterSlots":1,"returnSlots":1},"@_revert_2719":{"entryPoint":14069,"id":2719,"parameterSlots":2,"returnSlots":0},"@_setProposalThreshold_2007":{"entryPoint":11023,"id":2007,"parameterSlots":1,"returnSlots":0},"@_setVotingDelay_1968":{"entryPoint":10424,"id":1968,"parameterSlots":1,"returnSlots":0},"@_setVotingPeriod_1991":{"entryPoint":10864,"id":1991,"parameterSlots":1,"returnSlots":0},"@_throwError_4556":{"entryPoint":12774,"id":4556,"parameterSlots":1,"returnSlots":0},"@_unsafeAccess_3256":{"entryPoint":12194,"id":3256,"parameterSlots":2,"returnSlots":1},"@_updateQuorumNumerator_2252":{"entryPoint":8990,"id":2252,"parameterSlots":1,"returnSlots":0},"@_upperBinaryLookup_3189":{"entryPoint":13954,"id":3189,"parameterSlots":4,"returnSlots":1},"@_voteSucceeded_1739":{"entryPoint":10142,"id":1739,"parameterSlots":1,"returnSlots":1},"@average_5119":{"entryPoint":14207,"id":5119,"parameterSlots":2,"returnSlots":1},"@castVoteBySig_1035":{"entryPoint":4068,"id":1035,"parameterSlots":5,"returnSlots":1},"@castVoteWithReasonAndParamsBySig_1093":{"entryPoint":2932,"id":1093,"parameterSlots":8,"returnSlots":1},"@castVoteWithReasonAndParams_991":{"entryPoint":4755,"id":991,"parameterSlots":5,"returnSlots":1},"@castVoteWithReason_962":{"entryPoint":5440,"id":962,"parameterSlots":4,"returnSlots":1},"@castVote_936":{"entryPoint":4706,"id":936,"parameterSlots":2,"returnSlots":1},"@clear_7757":{"entryPoint":13825,"id":7757,"parameterSlots":1,"returnSlots":0},"@empty_7799":{"entryPoint":13648,"id":7799,"parameterSlots":1,"returnSlots":1},"@execute_650":{"entryPoint":3574,"id":650,"parameterSlots":4,"returnSlots":1},"@getAtBlock_2792":{"entryPoint":10185,"id":2792,"parameterSlots":2,"returnSlots":1},"@getDeadline_4411":{"entryPoint":10015,"id":4411,"parameterSlots":1,"returnSlots":1},"@getVotesWithParams_912":{"entryPoint":6328,"id":912,"parameterSlots":3,"returnSlots":1},"@getVotes_892":{"entryPoint":7364,"id":892,"parameterSlots":2,"returnSlots":1},"@hasVoted_1659":{"entryPoint":4482,"id":1659,"parameterSlots":2,"returnSlots":1},"@hashProposal_238":{"entryPoint":6960,"id":238,"parameterSlots":4,"returnSlots":1},"@isUnset_4453":{"entryPoint":10493,"id":4453,"parameterSlots":1,"returnSlots":1},"@latest_2984":{"entryPoint":7931,"id":2984,"parameterSlots":1,"returnSlots":1},"@name_196":{"entryPoint":3408,"id":196,"parameterSlots":0,"returnSlots":1},"@onERC1155BatchReceived_1306":{"entryPoint":6436,"id":1306,"parameterSlots":5,"returnSlots":1},"@onERC1155Received_1282":{"entryPoint":7639,"id":1282,"parameterSlots":5,"returnSlots":1},"@onERC721Received_1260":{"entryPoint":3554,"id":1260,"parameterSlots":4,"returnSlots":1},"@popFront_7636":{"entryPoint":8770,"id":7636,"parameterSlots":1,"returnSlots":1},"@proposalDeadline_359":{"entryPoint":6457,"id":359,"parameterSlots":1,"returnSlots":1},"@proposalSnapshot_342":{"entryPoint":3907,"id":342,"parameterSlots":1,"returnSlots":1},"@proposalThreshold_1913":{"entryPoint":10820,"id":1913,"parameterSlots":0,"returnSlots":1},"@proposalThreshold_7893":{"entryPoint":6421,"id":7893,"parameterSlots":0,"returnSlots":1},"@proposalVotes_1687":{"entryPoint":4589,"id":1687,"parameterSlots":1,"returnSlots":3},"@propose_565":{"entryPoint":5544,"id":565,"parameterSlots":4,"returnSlots":1},"@pushBack_7510":{"entryPoint":13701,"id":7510,"parameterSlots":2,"returnSlots":0},"@push_2920":{"entryPoint":7821,"id":2920,"parameterSlots":2,"returnSlots":2},"@quorumDenominator_2159":{"entryPoint":6319,"id":2159,"parameterSlots":0,"returnSlots":1},"@quorumNumerator_2102":{"entryPoint":6350,"id":2102,"parameterSlots":0,"returnSlots":1},"@quorumNumerator_2150":{"entryPoint":4861,"id":2150,"parameterSlots":1,"returnSlots":1},"@quorum_2182":{"entryPoint":11092,"id":2182,"parameterSlots":1,"returnSlots":1},"@quorum_7880":{"entryPoint":7660,"id":7880,"parameterSlots":1,"returnSlots":1},"@recover_4803":{"entryPoint":8262,"id":4803,"parameterSlots":4,"returnSlots":1},"@relay_1228":{"entryPoint":6567,"id":1228,"parameterSlots":4,"returnSlots":0},"@setDeadline_4426":{"entryPoint":10606,"id":4426,"parameterSlots":2,"returnSlots":0},"@setProposalThreshold_1952":{"entryPoint":7392,"id":1952,"parameterSlots":1,"returnSlots":0},"@setVotingDelay_1926":{"entryPoint":5193,"id":1926,"parameterSlots":1,"returnSlots":0},"@setVotingPeriod_1939":{"entryPoint":7117,"id":1939,"parameterSlots":1,"returnSlots":0},"@state_325":{"entryPoint":4206,"id":325,"parameterSlots":1,"returnSlots":1},"@supportsInterface_186":{"entryPoint":2560,"id":186,"parameterSlots":1,"returnSlots":1},"@supportsInterface_5040":{"entryPoint":8120,"id":5040,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_4862":{"entryPoint":12497,"id":4862,"parameterSlots":2,"returnSlots":1},"@toUint224_6021":{"entryPoint":7714,"id":6021,"parameterSlots":1,"returnSlots":1},"@toUint32_6621":{"entryPoint":8037,"id":6621,"parameterSlots":1,"returnSlots":1},"@toUint64_6521":{"entryPoint":10519,"id":6521,"parameterSlots":1,"returnSlots":1},"@token_2018":{"entryPoint":7678,"id":2018,"parameterSlots":0,"returnSlots":0},"@tryRecover_4770":{"entryPoint":12548,"id":4770,"parameterSlots":4,"returnSlots":2},"@updateQuorumNumerator_2195":{"entryPoint":3161,"id":2195,"parameterSlots":1,"returnSlots":0},"@verifyCallResult_2699":{"entryPoint":10830,"id":2699,"parameterSlots":3,"returnSlots":1},"@version_206":{"entryPoint":4645,"id":206,"parameterSlots":0,"returnSlots":1},"@votingDelay_1893":{"entryPoint":10029,"id":1893,"parameterSlots":0,"returnSlots":1},"@votingDelay_7851":{"entryPoint":4053,"id":7851,"parameterSlots":0,"returnSlots":1},"@votingPeriod_1903":{"entryPoint":8226,"id":1903,"parameterSlots":0,"returnSlots":1},"@votingPeriod_7864":{"entryPoint":2917,"id":7864,"parameterSlots":0,"returnSlots":1},"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":15820,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":16210,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":16015,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":14915,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":17401,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":15582,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":15925,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":16345,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":16120,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":15060,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":14332,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":18046,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bytes_memory_ptr":{"entryPoint":14981,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_calldata_ptr":{"entryPoint":14620,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_string_memory_ptr":{"entryPoint":17467,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":14527,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":22699,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":14584,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":17839,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":15603,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":18312,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":18248,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":18132,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr":{"entryPoint":17728,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptrt_bytes32":{"entryPoint":16391,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptrt_string_memory_ptr":{"entryPoint":17513,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bytes4":{"entryPoint":14353,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":15303,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":22720,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":16889,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint8":{"entryPoint":17008,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint8t_string_calldata_ptr":{"entryPoint":17236,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256t_uint8t_string_calldata_ptrt_bytes_memory_ptr":{"entryPoint":17072,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint256t_uint8t_string_calldata_ptrt_bytes_memory_ptrt_uint8t_bytes32t_bytes32":{"entryPoint":15081,"id":null,"parameterSlots":2,"returnSlots":8},"abi_decode_tuple_t_uint256t_uint8t_uint8t_bytes32t_bytes32":{"entryPoint":16620,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encodeUpdatedPos_t_address_to_t_address":{"entryPoint":20115,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr":{"entryPoint":20833,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":20554,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":20305,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":20100,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":20041,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":20152,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":20866,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":20587,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":20342,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":14410,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":16578,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack":{"entryPoint":23278,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes4_to_t_bytes4_fromStack":{"entryPoint":15734,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":18596,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr":{"entryPoint":20776,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":21829,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":22280,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_IVotes_$2331_to_t_address_fromStack":{"entryPoint":18543,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_enum$_ProposalState_$1322_to_t_uint8_fromStack":{"entryPoint":16847,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":20497,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":15418,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack":{"entryPoint":23466,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_01397b9b23826f2770c44682f6f60114915147b09511a75fee3231adbc22847f_to_t_string_memory_ptr_fromStack":{"entryPoint":18797,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0687f8064c09ccf183090b5092c4485c730072a161487645a7e37b56cef356bb_to_t_string_memory_ptr_fromStack":{"entryPoint":22100,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack":{"entryPoint":23574,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":23233,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_35c793b1b5a6be245307722bba06fa552ac609ebfd70358ab0b3220eed40db4d_to_t_string_memory_ptr_fromStack":{"entryPoint":19640,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3f314603cb191f371d117be724372820f824fc7fbb608c5408b31620bafe9a83_to_t_string_memory_ptr_fromStack":{"entryPoint":22844,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack":{"entryPoint":23720,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_52977fe78dd360b196702e8b1aa8e7d06cd560911da4c4d483548d7b2d1a38d8_to_t_string_memory_ptr_fromStack":{"entryPoint":23866,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5b1e239298a1362f9b5245bd4e9393de28380a12326aa31532e03fe3f1061d80_to_t_string_memory_ptr_fromStack":{"entryPoint":21669,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be_to_t_string_memory_ptr_fromStack":{"entryPoint":22445,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8400b334e0df18026c76df742cddc258619f9923d5f5b8ba67cd6eec1d1f3513_to_t_string_memory_ptr_fromStack":{"entryPoint":19748,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939_to_t_string_memory_ptr_fromStack":{"entryPoint":22591,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack":{"entryPoint":21377,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a608627370ddd238e48feab42026732822e64969fe5a8155723eaa5f397576d9_to_t_string_memory_ptr_fromStack":{"entryPoint":19039,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df_to_t_string_memory_ptr_fromStack":{"entryPoint":23114,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_be0e8e67d15e920d3846a46401854a27a676d8965bbdde05e68fc2cc5672c892_to_t_string_memory_ptr_fromStack":{"entryPoint":19202,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c16dd4ca2a7081ef35bfb3860532c95d6b1aacddadf6f22f1058fc06b5718887_to_t_string_memory_ptr_fromStack":{"entryPoint":24012,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c1bb0f67bc14091429c4b8b5d74e1f929b2838d72b5fb3c5a2cbef13b2faab40_to_t_string_memory_ptr_fromStack":{"entryPoint":19894,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack":{"entryPoint":21523,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_df78ee0077e11770202b643d4ac130b9964a5ac311c9b8d8ed6242eb4e2dcf86_to_t_string_memory_ptr_fromStack":{"entryPoint":19494,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":20290,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":14462,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint256_fromStack":{"entryPoint":21017,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":18658,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":18633,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":22329,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":23301,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":22658,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_bytes32__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_bytes32__fromStack_reversed":{"entryPoint":21208,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":14425,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":16593,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":24079,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint256_t_uint8__to_t_bytes32_t_uint256_t_uint8__fromStack_reversed":{"entryPoint":19106,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":18673,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":23356,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":15749,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IVotes_$2331__to_t_address__fromStack_reversed":{"entryPoint":18558,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_ProposalState_$1322__to_t_uint8__fromStack_reversed":{"entryPoint":16862,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15475,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":23501,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_01397b9b23826f2770c44682f6f60114915147b09511a75fee3231adbc22847f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18832,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0687f8064c09ccf183090b5092c4485c730072a161487645a7e37b56cef356bb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22135,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":23609,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_35c793b1b5a6be245307722bba06fa552ac609ebfd70358ab0b3220eed40db4d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19675,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3f314603cb191f371d117be724372820f824fc7fbb608c5408b31620bafe9a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22879,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":23755,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_52977fe78dd360b196702e8b1aa8e7d06cd560911da4c4d483548d7b2d1a38d8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":23901,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5b1e239298a1362f9b5245bd4e9393de28380a12326aa31532e03fe3f1061d80__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21704,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22480,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8400b334e0df18026c76df742cddc258619f9923d5f5b8ba67cd6eec1d1f3513__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19783,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":22626,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21412,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a608627370ddd238e48feab42026732822e64969fe5a8155723eaa5f397576d9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19074,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":23149,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_be0e8e67d15e920d3846a46401854a27a676d8965bbdde05e68fc2cc5672c892__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19237,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c16dd4ca2a7081ef35bfb3860532c95d6b1aacddadf6f22f1058fc06b5718887__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":24047,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c1bb0f67bc14091429c4b8b5d74e1f929b2838d72b5fb3c5a2cbef13b2faab40__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19929,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21558,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_df78ee0077e11770202b643d4ac130b9964a5ac311c9b8d8ed6242eb4e2dcf86__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19529,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":14477,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_uint64_t_uint64_t_string_memory_ptr__to_t_uint256_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21032,"id":null,"parameterSlots":10,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":22167,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":16953,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint8_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint8_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":21736,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint8_t_uint256_t_string_memory_ptr_t_bytes_memory_ptr__to_t_uint256_t_uint8_t_uint256_t_string_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":21886,"id":null,"parameterSlots":6,"returnSlots":1},"allocate_memory":{"entryPoint":14824,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":14245,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":15776,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":16166,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":15971,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":14851,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":17352,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":20084,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":20732,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":20464,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":20274,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":20056,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":20704,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":20436,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":20246,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":20748,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":15348,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":20139,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":20853,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":20574,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":20329,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":20067,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":20715,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":20447,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":20257,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr":{"entryPoint":20759,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":21812,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":18585,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr":{"entryPoint":20480,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":15359,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":23181,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":22352,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint64":{"entryPoint":19981,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":23024,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":22911,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":19316,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":15541,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":14398,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":15027,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":14265,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_ProposalState_$1322":{"entryPoint":16810,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":15509,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":14452,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":19961,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":14548,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IVotes_$2331_to_t_address":{"entryPoint":18525,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_ProposalState_$1322_to_t_uint8":{"entryPoint":16829,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":18507,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":18473,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint64_to_t_uint256":{"entryPoint":20983,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":14900,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":15376,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":18911,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":14775,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":18463,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":22208,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes32":{"entryPoint":23268,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":19269,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":22977,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":16743,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":18864,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":19368,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":14728,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":14610,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":14605,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":14615,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":14706,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":14260,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":14255,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":14711,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be":{"entryPoint":23425,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_01397b9b23826f2770c44682f6f60114915147b09511a75fee3231adbc22847f":{"entryPoint":18756,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0687f8064c09ccf183090b5092c4485c730072a161487645a7e37b56cef356bb":{"entryPoint":21983,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77":{"entryPoint":23533,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541":{"entryPoint":23192,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_35c793b1b5a6be245307722bba06fa552ac609ebfd70358ab0b3220eed40db4d":{"entryPoint":19561,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3f314603cb191f371d117be724372820f824fc7fbb608c5408b31620bafe9a83":{"entryPoint":22765,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd":{"entryPoint":23641,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_52977fe78dd360b196702e8b1aa8e7d06cd560911da4c4d483548d7b2d1a38d8":{"entryPoint":23787,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5b1e239298a1362f9b5245bd4e9393de28380a12326aa31532e03fe3f1061d80":{"entryPoint":21590,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be":{"entryPoint":22404,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8400b334e0df18026c76df742cddc258619f9923d5f5b8ba67cd6eec1d1f3513":{"entryPoint":19707,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939":{"entryPoint":22512,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79":{"entryPoint":21298,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a608627370ddd238e48feab42026732822e64969fe5a8155723eaa5f397576d9":{"entryPoint":18960,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df":{"entryPoint":23073,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_be0e8e67d15e920d3846a46401854a27a676d8965bbdde05e68fc2cc5672c892":{"entryPoint":19161,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c16dd4ca2a7081ef35bfb3860532c95d6b1aacddadf6f22f1058fc06b5718887":{"entryPoint":23933,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c1bb0f67bc14091429c4b8b5d74e1f929b2838d72b5fb3c5a2cbef13b2faab40":{"entryPoint":19815,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19":{"entryPoint":21444,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_df78ee0077e11770202b643d4ac130b9964a5ac311c9b8d8ed6242eb4e2dcf86":{"entryPoint":19415,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_t_enum$_ProposalState_$1322":{"entryPoint":16790,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":15559,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":15037,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":14309,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":14504,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":14561,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:74672:22","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:22","statements":[{"nodeType":"YulAssignment","src":"57:19:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:22"},"nodeType":"YulFunctionCall","src":"67:9:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:22"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:22","type":""}],"src":"7:75:22"},{"body":{"nodeType":"YulBlock","src":"177:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:22"},"nodeType":"YulFunctionCall","src":"187:12:22"},"nodeType":"YulExpressionStatement","src":"187:12:22"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:22"},{"body":{"nodeType":"YulBlock","src":"300:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:22"},"nodeType":"YulFunctionCall","src":"310:12:22"},"nodeType":"YulExpressionStatement","src":"310:12:22"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:22"},{"body":{"nodeType":"YulBlock","src":"378:105:22","statements":[{"nodeType":"YulAssignment","src":"388:89:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:22","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:22"},"nodeType":"YulFunctionCall","src":"399:78:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:22"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:22","type":""}],"src":"334:149:22"},{"body":{"nodeType":"YulBlock","src":"531:78:22","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:22"},"nodeType":"YulFunctionCall","src":"589:12:22"},"nodeType":"YulExpressionStatement","src":"589:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:22"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:22"},"nodeType":"YulFunctionCall","src":"561:23:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:22"},"nodeType":"YulFunctionCall","src":"551:34:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:22"},"nodeType":"YulFunctionCall","src":"544:42:22"},"nodeType":"YulIf","src":"541:62:22"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:22","type":""}],"src":"489:120:22"},{"body":{"nodeType":"YulBlock","src":"666:86:22","statements":[{"nodeType":"YulAssignment","src":"676:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:22"},"nodeType":"YulFunctionCall","src":"685:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:22"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:22"},"nodeType":"YulFunctionCall","src":"714:32:22"},"nodeType":"YulExpressionStatement","src":"714:32:22"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:22","type":""}],"src":"615:137:22"},{"body":{"nodeType":"YulBlock","src":"823:262:22","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:22"},"nodeType":"YulFunctionCall","src":"871:79:22"},"nodeType":"YulExpressionStatement","src":"871:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:22"},"nodeType":"YulFunctionCall","src":"840:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:22"},"nodeType":"YulFunctionCall","src":"836:32:22"},"nodeType":"YulIf","src":"833:119:22"},{"nodeType":"YulBlock","src":"962:116:22","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:22"},"nodeType":"YulFunctionCall","src":"1036:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:22"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:22"},"nodeType":"YulFunctionCall","src":"1016:52:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:22"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:22","type":""}],"src":"758:327:22"},{"body":{"nodeType":"YulBlock","src":"1133:48:22","statements":[{"nodeType":"YulAssignment","src":"1143:32:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:22"},"nodeType":"YulFunctionCall","src":"1161:13:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:22"},"nodeType":"YulFunctionCall","src":"1154:21:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:22"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:22","type":""}],"src":"1091:90:22"},{"body":{"nodeType":"YulBlock","src":"1246:50:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:22"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:22"},"nodeType":"YulFunctionCall","src":"1268:21:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:22"},"nodeType":"YulFunctionCall","src":"1256:34:22"},"nodeType":"YulExpressionStatement","src":"1256:34:22"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:22","type":""}],"src":"1187:109:22"},{"body":{"nodeType":"YulBlock","src":"1394:118:22","statements":[{"nodeType":"YulAssignment","src":"1404:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:22"},"nodeType":"YulFunctionCall","src":"1412:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:22"},"nodeType":"YulFunctionCall","src":"1487:17:22"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:22"},"nodeType":"YulFunctionCall","src":"1440:65:22"},"nodeType":"YulExpressionStatement","src":"1440:65:22"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:22","type":""}],"src":"1302:210:22"},{"body":{"nodeType":"YulBlock","src":"1563:32:22","statements":[{"nodeType":"YulAssignment","src":"1573:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"1584:5:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1573:7:22"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1545:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1555:7:22","type":""}],"src":"1518:77:22"},{"body":{"nodeType":"YulBlock","src":"1666:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1683:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1706:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1688:17:22"},"nodeType":"YulFunctionCall","src":"1688:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1676:6:22"},"nodeType":"YulFunctionCall","src":"1676:37:22"},"nodeType":"YulExpressionStatement","src":"1676:37:22"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1654:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1661:3:22","type":""}],"src":"1601:118:22"},{"body":{"nodeType":"YulBlock","src":"1823:124:22","statements":[{"nodeType":"YulAssignment","src":"1833:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1845:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1856:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1841:3:22"},"nodeType":"YulFunctionCall","src":"1841:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1833:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1913:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1926:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1937:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1922:3:22"},"nodeType":"YulFunctionCall","src":"1922:17:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1869:43:22"},"nodeType":"YulFunctionCall","src":"1869:71:22"},"nodeType":"YulExpressionStatement","src":"1869:71:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1795:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1807:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1818:4:22","type":""}],"src":"1725:222:22"},{"body":{"nodeType":"YulBlock","src":"1996:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"2053:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2062:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2065:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2055:6:22"},"nodeType":"YulFunctionCall","src":"2055:12:22"},"nodeType":"YulExpressionStatement","src":"2055:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2019:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2044:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2026:17:22"},"nodeType":"YulFunctionCall","src":"2026:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2016:2:22"},"nodeType":"YulFunctionCall","src":"2016:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2009:6:22"},"nodeType":"YulFunctionCall","src":"2009:43:22"},"nodeType":"YulIf","src":"2006:63:22"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1989:5:22","type":""}],"src":"1953:122:22"},{"body":{"nodeType":"YulBlock","src":"2133:87:22","statements":[{"nodeType":"YulAssignment","src":"2143:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2165:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2152:12:22"},"nodeType":"YulFunctionCall","src":"2152:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2143:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2208:5:22"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2181:26:22"},"nodeType":"YulFunctionCall","src":"2181:33:22"},"nodeType":"YulExpressionStatement","src":"2181:33:22"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2111:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"2119:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2127:5:22","type":""}],"src":"2081:139:22"},{"body":{"nodeType":"YulBlock","src":"2269:43:22","statements":[{"nodeType":"YulAssignment","src":"2279:27:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2294:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"2301:4:22","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2290:3:22"},"nodeType":"YulFunctionCall","src":"2290:16:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2279:7:22"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2251:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2261:7:22","type":""}],"src":"2226:86:22"},{"body":{"nodeType":"YulBlock","src":"2359:77:22","statements":[{"body":{"nodeType":"YulBlock","src":"2414:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2423:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2426:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2416:6:22"},"nodeType":"YulFunctionCall","src":"2416:12:22"},"nodeType":"YulExpressionStatement","src":"2416:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2382:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2405:5:22"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"2389:15:22"},"nodeType":"YulFunctionCall","src":"2389:22:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2379:2:22"},"nodeType":"YulFunctionCall","src":"2379:33:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2372:6:22"},"nodeType":"YulFunctionCall","src":"2372:41:22"},"nodeType":"YulIf","src":"2369:61:22"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2352:5:22","type":""}],"src":"2318:118:22"},{"body":{"nodeType":"YulBlock","src":"2492:85:22","statements":[{"nodeType":"YulAssignment","src":"2502:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2524:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2511:12:22"},"nodeType":"YulFunctionCall","src":"2511:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2502:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2565:5:22"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"2540:24:22"},"nodeType":"YulFunctionCall","src":"2540:31:22"},"nodeType":"YulExpressionStatement","src":"2540:31:22"}]},"name":"abi_decode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2470:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"2478:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2486:5:22","type":""}],"src":"2442:135:22"},{"body":{"nodeType":"YulBlock","src":"2672:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2689:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2692:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2682:6:22"},"nodeType":"YulFunctionCall","src":"2682:12:22"},"nodeType":"YulExpressionStatement","src":"2682:12:22"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"2583:117:22"},{"body":{"nodeType":"YulBlock","src":"2795:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2812:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2815:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2805:6:22"},"nodeType":"YulFunctionCall","src":"2805:12:22"},"nodeType":"YulExpressionStatement","src":"2805:12:22"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"2706:117:22"},{"body":{"nodeType":"YulBlock","src":"2918:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2935:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2938:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2928:6:22"},"nodeType":"YulFunctionCall","src":"2928:12:22"},"nodeType":"YulExpressionStatement","src":"2928:12:22"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"2829:117:22"},{"body":{"nodeType":"YulBlock","src":"3041:478:22","statements":[{"body":{"nodeType":"YulBlock","src":"3090:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"3092:77:22"},"nodeType":"YulFunctionCall","src":"3092:79:22"},"nodeType":"YulExpressionStatement","src":"3092:79:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3069:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"3077:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3065:3:22"},"nodeType":"YulFunctionCall","src":"3065:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"3084:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3061:3:22"},"nodeType":"YulFunctionCall","src":"3061:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3054:6:22"},"nodeType":"YulFunctionCall","src":"3054:35:22"},"nodeType":"YulIf","src":"3051:122:22"},{"nodeType":"YulAssignment","src":"3182:30:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3205:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3192:12:22"},"nodeType":"YulFunctionCall","src":"3192:20:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3182:6:22"}]},{"body":{"nodeType":"YulBlock","src":"3255:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"3257:77:22"},"nodeType":"YulFunctionCall","src":"3257:79:22"},"nodeType":"YulExpressionStatement","src":"3257:79:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3227:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"3235:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3224:2:22"},"nodeType":"YulFunctionCall","src":"3224:30:22"},"nodeType":"YulIf","src":"3221:117:22"},{"nodeType":"YulAssignment","src":"3347:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3363:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"3371:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3359:3:22"},"nodeType":"YulFunctionCall","src":"3359:17:22"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"3347:8:22"}]},{"body":{"nodeType":"YulBlock","src":"3430:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"3432:77:22"},"nodeType":"YulFunctionCall","src":"3432:79:22"},"nodeType":"YulExpressionStatement","src":"3432:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"3395:8:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3409:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"3417:4:22","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3405:3:22"},"nodeType":"YulFunctionCall","src":"3405:17:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3391:3:22"},"nodeType":"YulFunctionCall","src":"3391:32:22"},{"name":"end","nodeType":"YulIdentifier","src":"3425:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3388:2:22"},"nodeType":"YulFunctionCall","src":"3388:41:22"},"nodeType":"YulIf","src":"3385:128:22"}]},"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3008:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"3016:3:22","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"3024:8:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"3034:6:22","type":""}],"src":"2966:553:22"},{"body":{"nodeType":"YulBlock","src":"3614:28:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3631:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3634:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3624:6:22"},"nodeType":"YulFunctionCall","src":"3624:12:22"},"nodeType":"YulExpressionStatement","src":"3624:12:22"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"3525:117:22"},{"body":{"nodeType":"YulBlock","src":"3696:54:22","statements":[{"nodeType":"YulAssignment","src":"3706:38:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3724:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"3731:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3720:3:22"},"nodeType":"YulFunctionCall","src":"3720:14:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3740:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3736:3:22"},"nodeType":"YulFunctionCall","src":"3736:7:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3716:3:22"},"nodeType":"YulFunctionCall","src":"3716:28:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3706:6:22"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3679:5:22","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3689:6:22","type":""}],"src":"3648:102:22"},{"body":{"nodeType":"YulBlock","src":"3784:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3801:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3804:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3794:6:22"},"nodeType":"YulFunctionCall","src":"3794:88:22"},"nodeType":"YulExpressionStatement","src":"3794:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3898:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3901:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3891:6:22"},"nodeType":"YulFunctionCall","src":"3891:15:22"},"nodeType":"YulExpressionStatement","src":"3891:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3922:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3925:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3915:6:22"},"nodeType":"YulFunctionCall","src":"3915:15:22"},"nodeType":"YulExpressionStatement","src":"3915:15:22"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3756:180:22"},{"body":{"nodeType":"YulBlock","src":"3985:238:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3995:58:22","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4017:6:22"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4047:4:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4025:21:22"},"nodeType":"YulFunctionCall","src":"4025:27:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4013:3:22"},"nodeType":"YulFunctionCall","src":"4013:40:22"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3999:10:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"4164:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4166:16:22"},"nodeType":"YulFunctionCall","src":"4166:18:22"},"nodeType":"YulExpressionStatement","src":"4166:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4107:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"4119:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4104:2:22"},"nodeType":"YulFunctionCall","src":"4104:34:22"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4143:10:22"},{"name":"memPtr","nodeType":"YulIdentifier","src":"4155:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4140:2:22"},"nodeType":"YulFunctionCall","src":"4140:22:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4101:2:22"},"nodeType":"YulFunctionCall","src":"4101:62:22"},"nodeType":"YulIf","src":"4098:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4202:2:22","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4206:10:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4195:6:22"},"nodeType":"YulFunctionCall","src":"4195:22:22"},"nodeType":"YulExpressionStatement","src":"4195:22:22"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3971:6:22","type":""},{"name":"size","nodeType":"YulTypedName","src":"3979:4:22","type":""}],"src":"3942:281:22"},{"body":{"nodeType":"YulBlock","src":"4270:88:22","statements":[{"nodeType":"YulAssignment","src":"4280:30:22","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"4290:18:22"},"nodeType":"YulFunctionCall","src":"4290:20:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4280:6:22"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4339:6:22"},{"name":"size","nodeType":"YulIdentifier","src":"4347:4:22"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"4319:19:22"},"nodeType":"YulFunctionCall","src":"4319:33:22"},"nodeType":"YulExpressionStatement","src":"4319:33:22"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"4254:4:22","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4263:6:22","type":""}],"src":"4229:129:22"},{"body":{"nodeType":"YulBlock","src":"4430:241:22","statements":[{"body":{"nodeType":"YulBlock","src":"4535:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4537:16:22"},"nodeType":"YulFunctionCall","src":"4537:18:22"},"nodeType":"YulExpressionStatement","src":"4537:18:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4507:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"4515:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4504:2:22"},"nodeType":"YulFunctionCall","src":"4504:30:22"},"nodeType":"YulIf","src":"4501:56:22"},{"nodeType":"YulAssignment","src":"4567:37:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4597:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4575:21:22"},"nodeType":"YulFunctionCall","src":"4575:29:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4567:4:22"}]},{"nodeType":"YulAssignment","src":"4641:23:22","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4653:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"4659:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4649:3:22"},"nodeType":"YulFunctionCall","src":"4649:15:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4641:4:22"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"4414:6:22","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"4425:4:22","type":""}],"src":"4364:307:22"},{"body":{"nodeType":"YulBlock","src":"4741:82:22","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4764:3:22"},{"name":"src","nodeType":"YulIdentifier","src":"4769:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"4774:6:22"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4751:12:22"},"nodeType":"YulFunctionCall","src":"4751:30:22"},"nodeType":"YulExpressionStatement","src":"4751:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4801:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"4806:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4797:3:22"},"nodeType":"YulFunctionCall","src":"4797:16:22"},{"kind":"number","nodeType":"YulLiteral","src":"4815:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4790:6:22"},"nodeType":"YulFunctionCall","src":"4790:27:22"},"nodeType":"YulExpressionStatement","src":"4790:27:22"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4723:3:22","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4728:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"4733:6:22","type":""}],"src":"4677:146:22"},{"body":{"nodeType":"YulBlock","src":"4912:340:22","statements":[{"nodeType":"YulAssignment","src":"4922:74:22","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4988:6:22"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"4947:40:22"},"nodeType":"YulFunctionCall","src":"4947:48:22"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4931:15:22"},"nodeType":"YulFunctionCall","src":"4931:65:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4922:5:22"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5012:5:22"},{"name":"length","nodeType":"YulIdentifier","src":"5019:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5005:6:22"},"nodeType":"YulFunctionCall","src":"5005:21:22"},"nodeType":"YulExpressionStatement","src":"5005:21:22"},{"nodeType":"YulVariableDeclaration","src":"5035:27:22","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5050:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"5057:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5046:3:22"},"nodeType":"YulFunctionCall","src":"5046:16:22"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"5039:3:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"5100:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"5102:77:22"},"nodeType":"YulFunctionCall","src":"5102:79:22"},"nodeType":"YulExpressionStatement","src":"5102:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5081:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"5086:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5077:3:22"},"nodeType":"YulFunctionCall","src":"5077:16:22"},{"name":"end","nodeType":"YulIdentifier","src":"5095:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5074:2:22"},"nodeType":"YulFunctionCall","src":"5074:25:22"},"nodeType":"YulIf","src":"5071:112:22"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5229:3:22"},{"name":"dst","nodeType":"YulIdentifier","src":"5234:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"5239:6:22"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"5192:36:22"},"nodeType":"YulFunctionCall","src":"5192:54:22"},"nodeType":"YulExpressionStatement","src":"5192:54:22"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4885:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"4890:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"4898:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4906:5:22","type":""}],"src":"4829:423:22"},{"body":{"nodeType":"YulBlock","src":"5332:277:22","statements":[{"body":{"nodeType":"YulBlock","src":"5381:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5383:77:22"},"nodeType":"YulFunctionCall","src":"5383:79:22"},"nodeType":"YulExpressionStatement","src":"5383:79:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5360:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"5368:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5356:3:22"},"nodeType":"YulFunctionCall","src":"5356:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"5375:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5352:3:22"},"nodeType":"YulFunctionCall","src":"5352:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5345:6:22"},"nodeType":"YulFunctionCall","src":"5345:35:22"},"nodeType":"YulIf","src":"5342:122:22"},{"nodeType":"YulVariableDeclaration","src":"5473:34:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5500:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5487:12:22"},"nodeType":"YulFunctionCall","src":"5487:20:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5477:6:22","type":""}]},{"nodeType":"YulAssignment","src":"5516:87:22","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5576:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"5584:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5572:3:22"},"nodeType":"YulFunctionCall","src":"5572:17:22"},{"name":"length","nodeType":"YulIdentifier","src":"5591:6:22"},{"name":"end","nodeType":"YulIdentifier","src":"5599:3:22"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"5525:46:22"},"nodeType":"YulFunctionCall","src":"5525:78:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5516:5:22"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5310:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"5318:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5326:5:22","type":""}],"src":"5271:338:22"},{"body":{"nodeType":"YulBlock","src":"5660:32:22","statements":[{"nodeType":"YulAssignment","src":"5670:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"5681:5:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5670:7:22"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5642:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5652:7:22","type":""}],"src":"5615:77:22"},{"body":{"nodeType":"YulBlock","src":"5741:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"5798:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5807:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5810:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5800:6:22"},"nodeType":"YulFunctionCall","src":"5800:12:22"},"nodeType":"YulExpressionStatement","src":"5800:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5764:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5789:5:22"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5771:17:22"},"nodeType":"YulFunctionCall","src":"5771:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5761:2:22"},"nodeType":"YulFunctionCall","src":"5761:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5754:6:22"},"nodeType":"YulFunctionCall","src":"5754:43:22"},"nodeType":"YulIf","src":"5751:63:22"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5734:5:22","type":""}],"src":"5698:122:22"},{"body":{"nodeType":"YulBlock","src":"5878:87:22","statements":[{"nodeType":"YulAssignment","src":"5888:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5910:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5897:12:22"},"nodeType":"YulFunctionCall","src":"5897:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5888:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5953:5:22"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"5926:26:22"},"nodeType":"YulFunctionCall","src":"5926:33:22"},"nodeType":"YulExpressionStatement","src":"5926:33:22"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5856:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"5864:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5872:5:22","type":""}],"src":"5826:139:22"},{"body":{"nodeType":"YulBlock","src":"6164:1380:22","statements":[{"body":{"nodeType":"YulBlock","src":"6211:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6213:77:22"},"nodeType":"YulFunctionCall","src":"6213:79:22"},"nodeType":"YulExpressionStatement","src":"6213:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6185:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"6194:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6181:3:22"},"nodeType":"YulFunctionCall","src":"6181:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"6206:3:22","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6177:3:22"},"nodeType":"YulFunctionCall","src":"6177:33:22"},"nodeType":"YulIf","src":"6174:120:22"},{"nodeType":"YulBlock","src":"6304:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"6319:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"6333:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6323:6:22","type":""}]},{"nodeType":"YulAssignment","src":"6348:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6383:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"6394:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6379:3:22"},"nodeType":"YulFunctionCall","src":"6379:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6403:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6358:20:22"},"nodeType":"YulFunctionCall","src":"6358:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6348:6:22"}]}]},{"nodeType":"YulBlock","src":"6431:116:22","statements":[{"nodeType":"YulVariableDeclaration","src":"6446:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"6460:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6450:6:22","type":""}]},{"nodeType":"YulAssignment","src":"6476:61:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6509:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"6520:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6505:3:22"},"nodeType":"YulFunctionCall","src":"6505:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6529:7:22"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"6486:18:22"},"nodeType":"YulFunctionCall","src":"6486:51:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6476:6:22"}]}]},{"nodeType":"YulBlock","src":"6557:298:22","statements":[{"nodeType":"YulVariableDeclaration","src":"6572:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6603:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6614:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6599:3:22"},"nodeType":"YulFunctionCall","src":"6599:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6586:12:22"},"nodeType":"YulFunctionCall","src":"6586:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6576:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"6665:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6667:77:22"},"nodeType":"YulFunctionCall","src":"6667:79:22"},"nodeType":"YulExpressionStatement","src":"6667:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6637:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"6645:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6634:2:22"},"nodeType":"YulFunctionCall","src":"6634:30:22"},"nodeType":"YulIf","src":"6631:117:22"},{"nodeType":"YulAssignment","src":"6762:83:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6817:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"6828:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6813:3:22"},"nodeType":"YulFunctionCall","src":"6813:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6837:7:22"}],"functionName":{"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulIdentifier","src":"6780:32:22"},"nodeType":"YulFunctionCall","src":"6780:65:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6762:6:22"},{"name":"value3","nodeType":"YulIdentifier","src":"6770:6:22"}]}]},{"nodeType":"YulBlock","src":"6865:287:22","statements":[{"nodeType":"YulVariableDeclaration","src":"6880:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6911:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6922:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6907:3:22"},"nodeType":"YulFunctionCall","src":"6907:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6894:12:22"},"nodeType":"YulFunctionCall","src":"6894:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6884:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"6973:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6975:77:22"},"nodeType":"YulFunctionCall","src":"6975:79:22"},"nodeType":"YulExpressionStatement","src":"6975:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6945:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"6953:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6942:2:22"},"nodeType":"YulFunctionCall","src":"6942:30:22"},"nodeType":"YulIf","src":"6939:117:22"},{"nodeType":"YulAssignment","src":"7070:72:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7114:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"7125:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7110:3:22"},"nodeType":"YulFunctionCall","src":"7110:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7134:7:22"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"7080:29:22"},"nodeType":"YulFunctionCall","src":"7080:62:22"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7070:6:22"}]}]},{"nodeType":"YulBlock","src":"7162:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"7177:17:22","value":{"kind":"number","nodeType":"YulLiteral","src":"7191:3:22","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7181:6:22","type":""}]},{"nodeType":"YulAssignment","src":"7208:61:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7241:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"7252:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7237:3:22"},"nodeType":"YulFunctionCall","src":"7237:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7261:7:22"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"7218:18:22"},"nodeType":"YulFunctionCall","src":"7218:51:22"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"7208:6:22"}]}]},{"nodeType":"YulBlock","src":"7289:119:22","statements":[{"nodeType":"YulVariableDeclaration","src":"7304:17:22","value":{"kind":"number","nodeType":"YulLiteral","src":"7318:3:22","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7308:6:22","type":""}]},{"nodeType":"YulAssignment","src":"7335:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7370:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"7381:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7366:3:22"},"nodeType":"YulFunctionCall","src":"7366:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7390:7:22"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"7345:20:22"},"nodeType":"YulFunctionCall","src":"7345:53:22"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"7335:6:22"}]}]},{"nodeType":"YulBlock","src":"7418:119:22","statements":[{"nodeType":"YulVariableDeclaration","src":"7433:17:22","value":{"kind":"number","nodeType":"YulLiteral","src":"7447:3:22","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7437:6:22","type":""}]},{"nodeType":"YulAssignment","src":"7464:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7499:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"7510:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7495:3:22"},"nodeType":"YulFunctionCall","src":"7495:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7519:7:22"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"7474:20:22"},"nodeType":"YulFunctionCall","src":"7474:53:22"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"7464:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint8t_string_calldata_ptrt_bytes_memory_ptrt_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6078:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6089:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6101:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6109:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6117:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6125:6:22","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6133:6:22","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6141:6:22","type":""},{"name":"value6","nodeType":"YulTypedName","src":"6149:6:22","type":""},{"name":"value7","nodeType":"YulTypedName","src":"6157:6:22","type":""}],"src":"5971:1573:22"},{"body":{"nodeType":"YulBlock","src":"7616:263:22","statements":[{"body":{"nodeType":"YulBlock","src":"7662:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7664:77:22"},"nodeType":"YulFunctionCall","src":"7664:79:22"},"nodeType":"YulExpressionStatement","src":"7664:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7637:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"7646:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7633:3:22"},"nodeType":"YulFunctionCall","src":"7633:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"7658:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7629:3:22"},"nodeType":"YulFunctionCall","src":"7629:32:22"},"nodeType":"YulIf","src":"7626:119:22"},{"nodeType":"YulBlock","src":"7755:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"7770:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"7784:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7774:6:22","type":""}]},{"nodeType":"YulAssignment","src":"7799:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7834:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"7845:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7830:3:22"},"nodeType":"YulFunctionCall","src":"7830:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7854:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7809:20:22"},"nodeType":"YulFunctionCall","src":"7809:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7799:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7586:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7597:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7609:6:22","type":""}],"src":"7550:329:22"},{"body":{"nodeType":"YulBlock","src":"7944:40:22","statements":[{"nodeType":"YulAssignment","src":"7955:22:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7971:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7965:5:22"},"nodeType":"YulFunctionCall","src":"7965:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7955:6:22"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7927:5:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7937:6:22","type":""}],"src":"7885:99:22"},{"body":{"nodeType":"YulBlock","src":"8086:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8103:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"8108:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8096:6:22"},"nodeType":"YulFunctionCall","src":"8096:19:22"},"nodeType":"YulExpressionStatement","src":"8096:19:22"},{"nodeType":"YulAssignment","src":"8124:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8143:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"8148:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8139:3:22"},"nodeType":"YulFunctionCall","src":"8139:14:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8124:11:22"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8058:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"8063:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8074:11:22","type":""}],"src":"7990:169:22"},{"body":{"nodeType":"YulBlock","src":"8227:184:22","statements":[{"nodeType":"YulVariableDeclaration","src":"8237:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"8246:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8241:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"8306:63:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8331:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"8336:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8327:3:22"},"nodeType":"YulFunctionCall","src":"8327:11:22"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8350:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"8355:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8346:3:22"},"nodeType":"YulFunctionCall","src":"8346:11:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8340:5:22"},"nodeType":"YulFunctionCall","src":"8340:18:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8320:6:22"},"nodeType":"YulFunctionCall","src":"8320:39:22"},"nodeType":"YulExpressionStatement","src":"8320:39:22"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8267:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"8270:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8264:2:22"},"nodeType":"YulFunctionCall","src":"8264:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8278:19:22","statements":[{"nodeType":"YulAssignment","src":"8280:15:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8289:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"8292:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8285:3:22"},"nodeType":"YulFunctionCall","src":"8285:10:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8280:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"8260:3:22","statements":[]},"src":"8256:113:22"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8389:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"8394:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8385:3:22"},"nodeType":"YulFunctionCall","src":"8385:16:22"},{"kind":"number","nodeType":"YulLiteral","src":"8403:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8378:6:22"},"nodeType":"YulFunctionCall","src":"8378:27:22"},"nodeType":"YulExpressionStatement","src":"8378:27:22"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8209:3:22","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8214:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"8219:6:22","type":""}],"src":"8165:246:22"},{"body":{"nodeType":"YulBlock","src":"8509:285:22","statements":[{"nodeType":"YulVariableDeclaration","src":"8519:53:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8566:5:22"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8533:32:22"},"nodeType":"YulFunctionCall","src":"8533:39:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8523:6:22","type":""}]},{"nodeType":"YulAssignment","src":"8581:78:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8647:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"8652:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8588:58:22"},"nodeType":"YulFunctionCall","src":"8588:71:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8581:3:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8707:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"8714:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8703:3:22"},"nodeType":"YulFunctionCall","src":"8703:16:22"},{"name":"pos","nodeType":"YulIdentifier","src":"8721:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"8726:6:22"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8668:34:22"},"nodeType":"YulFunctionCall","src":"8668:65:22"},"nodeType":"YulExpressionStatement","src":"8668:65:22"},{"nodeType":"YulAssignment","src":"8742:46:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8753:3:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8780:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8758:21:22"},"nodeType":"YulFunctionCall","src":"8758:29:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8749:3:22"},"nodeType":"YulFunctionCall","src":"8749:39:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8742:3:22"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8490:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8497:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8505:3:22","type":""}],"src":"8417:377:22"},{"body":{"nodeType":"YulBlock","src":"8918:195:22","statements":[{"nodeType":"YulAssignment","src":"8928:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8940:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8951:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8936:3:22"},"nodeType":"YulFunctionCall","src":"8936:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8928:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8975:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8986:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8971:3:22"},"nodeType":"YulFunctionCall","src":"8971:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8994:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"9000:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8990:3:22"},"nodeType":"YulFunctionCall","src":"8990:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8964:6:22"},"nodeType":"YulFunctionCall","src":"8964:47:22"},"nodeType":"YulExpressionStatement","src":"8964:47:22"},{"nodeType":"YulAssignment","src":"9020:86:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9092:6:22"},{"name":"tail","nodeType":"YulIdentifier","src":"9101:4:22"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9028:63:22"},"nodeType":"YulFunctionCall","src":"9028:78:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9020:4:22"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8890:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8902:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8913:4:22","type":""}],"src":"8800:313:22"},{"body":{"nodeType":"YulBlock","src":"9164:81:22","statements":[{"nodeType":"YulAssignment","src":"9174:65:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9189:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"9196:42:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9185:3:22"},"nodeType":"YulFunctionCall","src":"9185:54:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9174:7:22"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9146:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9156:7:22","type":""}],"src":"9119:126:22"},{"body":{"nodeType":"YulBlock","src":"9296:51:22","statements":[{"nodeType":"YulAssignment","src":"9306:35:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9335:5:22"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"9317:17:22"},"nodeType":"YulFunctionCall","src":"9317:24:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9306:7:22"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9278:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9288:7:22","type":""}],"src":"9251:96:22"},{"body":{"nodeType":"YulBlock","src":"9396:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"9453:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9462:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9465:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9455:6:22"},"nodeType":"YulFunctionCall","src":"9455:12:22"},"nodeType":"YulExpressionStatement","src":"9455:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9419:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9444:5:22"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"9426:17:22"},"nodeType":"YulFunctionCall","src":"9426:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9416:2:22"},"nodeType":"YulFunctionCall","src":"9416:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9409:6:22"},"nodeType":"YulFunctionCall","src":"9409:43:22"},"nodeType":"YulIf","src":"9406:63:22"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9389:5:22","type":""}],"src":"9353:122:22"},{"body":{"nodeType":"YulBlock","src":"9533:87:22","statements":[{"nodeType":"YulAssignment","src":"9543:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9565:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9552:12:22"},"nodeType":"YulFunctionCall","src":"9552:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9543:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9608:5:22"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"9581:26:22"},"nodeType":"YulFunctionCall","src":"9581:33:22"},"nodeType":"YulExpressionStatement","src":"9581:33:22"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9511:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"9519:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9527:5:22","type":""}],"src":"9481:139:22"},{"body":{"nodeType":"YulBlock","src":"9752:817:22","statements":[{"body":{"nodeType":"YulBlock","src":"9799:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9801:77:22"},"nodeType":"YulFunctionCall","src":"9801:79:22"},"nodeType":"YulExpressionStatement","src":"9801:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9773:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"9782:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9769:3:22"},"nodeType":"YulFunctionCall","src":"9769:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"9794:3:22","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9765:3:22"},"nodeType":"YulFunctionCall","src":"9765:33:22"},"nodeType":"YulIf","src":"9762:120:22"},{"nodeType":"YulBlock","src":"9892:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"9907:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"9921:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9911:6:22","type":""}]},{"nodeType":"YulAssignment","src":"9936:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9971:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"9982:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9967:3:22"},"nodeType":"YulFunctionCall","src":"9967:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9991:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9946:20:22"},"nodeType":"YulFunctionCall","src":"9946:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9936:6:22"}]}]},{"nodeType":"YulBlock","src":"10019:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"10034:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"10048:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10038:6:22","type":""}]},{"nodeType":"YulAssignment","src":"10064:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10099:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"10110:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10095:3:22"},"nodeType":"YulFunctionCall","src":"10095:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10119:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10074:20:22"},"nodeType":"YulFunctionCall","src":"10074:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10064:6:22"}]}]},{"nodeType":"YulBlock","src":"10147:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"10162:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"10176:2:22","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10166:6:22","type":""}]},{"nodeType":"YulAssignment","src":"10192:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10227:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"10238:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10223:3:22"},"nodeType":"YulFunctionCall","src":"10223:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10247:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10202:20:22"},"nodeType":"YulFunctionCall","src":"10202:53:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10192:6:22"}]}]},{"nodeType":"YulBlock","src":"10275:287:22","statements":[{"nodeType":"YulVariableDeclaration","src":"10290:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10321:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10332:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10317:3:22"},"nodeType":"YulFunctionCall","src":"10317:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10304:12:22"},"nodeType":"YulFunctionCall","src":"10304:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10294:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"10383:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10385:77:22"},"nodeType":"YulFunctionCall","src":"10385:79:22"},"nodeType":"YulExpressionStatement","src":"10385:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10355:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"10363:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10352:2:22"},"nodeType":"YulFunctionCall","src":"10352:30:22"},"nodeType":"YulIf","src":"10349:117:22"},{"nodeType":"YulAssignment","src":"10480:72:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10524:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"10535:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10520:3:22"},"nodeType":"YulFunctionCall","src":"10520:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10544:7:22"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"10490:29:22"},"nodeType":"YulFunctionCall","src":"10490:62:22"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10480:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9698:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9709:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9721:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9729:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9737:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9745:6:22","type":""}],"src":"9626:943:22"},{"body":{"nodeType":"YulBlock","src":"10638:52:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10655:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10677:5:22"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"10660:16:22"},"nodeType":"YulFunctionCall","src":"10660:23:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10648:6:22"},"nodeType":"YulFunctionCall","src":"10648:36:22"},"nodeType":"YulExpressionStatement","src":"10648:36:22"}]},"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10626:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10633:3:22","type":""}],"src":"10575:115:22"},{"body":{"nodeType":"YulBlock","src":"10792:122:22","statements":[{"nodeType":"YulAssignment","src":"10802:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10814:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10825:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10810:3:22"},"nodeType":"YulFunctionCall","src":"10810:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10802:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10880:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10893:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10904:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10889:3:22"},"nodeType":"YulFunctionCall","src":"10889:17:22"}],"functionName":{"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nodeType":"YulIdentifier","src":"10838:41:22"},"nodeType":"YulFunctionCall","src":"10838:69:22"},"nodeType":"YulExpressionStatement","src":"10838:69:22"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10764:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10776:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10787:4:22","type":""}],"src":"10696:218:22"},{"body":{"nodeType":"YulBlock","src":"11002:229:22","statements":[{"body":{"nodeType":"YulBlock","src":"11107:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"11109:16:22"},"nodeType":"YulFunctionCall","src":"11109:18:22"},"nodeType":"YulExpressionStatement","src":"11109:18:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11079:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"11087:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11076:2:22"},"nodeType":"YulFunctionCall","src":"11076:30:22"},"nodeType":"YulIf","src":"11073:56:22"},{"nodeType":"YulAssignment","src":"11139:25:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11151:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"11159:4:22","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11147:3:22"},"nodeType":"YulFunctionCall","src":"11147:17:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"11139:4:22"}]},{"nodeType":"YulAssignment","src":"11201:23:22","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"11213:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"11219:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11209:3:22"},"nodeType":"YulFunctionCall","src":"11209:15:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"11201:4:22"}]}]},"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"10986:6:22","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"10997:4:22","type":""}],"src":"10920:311:22"},{"body":{"nodeType":"YulBlock","src":"11356:608:22","statements":[{"nodeType":"YulAssignment","src":"11366:90:22","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11448:6:22"}],"functionName":{"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"11391:56:22"},"nodeType":"YulFunctionCall","src":"11391:64:22"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"11375:15:22"},"nodeType":"YulFunctionCall","src":"11375:81:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"11366:5:22"}]},{"nodeType":"YulVariableDeclaration","src":"11465:16:22","value":{"name":"array","nodeType":"YulIdentifier","src":"11476:5:22"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"11469:3:22","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"11498:5:22"},{"name":"length","nodeType":"YulIdentifier","src":"11505:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11491:6:22"},"nodeType":"YulFunctionCall","src":"11491:21:22"},"nodeType":"YulExpressionStatement","src":"11491:21:22"},{"nodeType":"YulAssignment","src":"11521:23:22","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"11532:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"11539:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11528:3:22"},"nodeType":"YulFunctionCall","src":"11528:16:22"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"11521:3:22"}]},{"nodeType":"YulVariableDeclaration","src":"11554:44:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11572:6:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11584:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"11592:4:22","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11580:3:22"},"nodeType":"YulFunctionCall","src":"11580:17:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11568:3:22"},"nodeType":"YulFunctionCall","src":"11568:30:22"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"11558:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"11626:103:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"11640:77:22"},"nodeType":"YulFunctionCall","src":"11640:79:22"},"nodeType":"YulExpressionStatement","src":"11640:79:22"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"11613:6:22"},{"name":"end","nodeType":"YulIdentifier","src":"11621:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11610:2:22"},"nodeType":"YulFunctionCall","src":"11610:15:22"},"nodeType":"YulIf","src":"11607:122:22"},{"body":{"nodeType":"YulBlock","src":"11814:144:22","statements":[{"nodeType":"YulVariableDeclaration","src":"11829:21:22","value":{"name":"src","nodeType":"YulIdentifier","src":"11847:3:22"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"11833:10:22","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11871:3:22"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"11897:10:22"},{"name":"end","nodeType":"YulIdentifier","src":"11909:3:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11876:20:22"},"nodeType":"YulFunctionCall","src":"11876:37:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11864:6:22"},"nodeType":"YulFunctionCall","src":"11864:50:22"},"nodeType":"YulExpressionStatement","src":"11864:50:22"},{"nodeType":"YulAssignment","src":"11927:21:22","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11938:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"11943:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11934:3:22"},"nodeType":"YulFunctionCall","src":"11934:14:22"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"11927:3:22"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11767:3:22"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"11772:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11764:2:22"},"nodeType":"YulFunctionCall","src":"11764:15:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11780:25:22","statements":[{"nodeType":"YulAssignment","src":"11782:21:22","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11793:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"11798:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11789:3:22"},"nodeType":"YulFunctionCall","src":"11789:14:22"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"11782:3:22"}]}]},"pre":{"nodeType":"YulBlock","src":"11742:21:22","statements":[{"nodeType":"YulVariableDeclaration","src":"11744:17:22","value":{"name":"offset","nodeType":"YulIdentifier","src":"11755:6:22"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"11748:3:22","type":""}]}]},"src":"11738:220:22"}]},"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11326:6:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"11334:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"11342:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"11350:5:22","type":""}],"src":"11254:710:22"},{"body":{"nodeType":"YulBlock","src":"12064:293:22","statements":[{"body":{"nodeType":"YulBlock","src":"12113:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"12115:77:22"},"nodeType":"YulFunctionCall","src":"12115:79:22"},"nodeType":"YulExpressionStatement","src":"12115:79:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12092:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"12100:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12088:3:22"},"nodeType":"YulFunctionCall","src":"12088:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"12107:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12084:3:22"},"nodeType":"YulFunctionCall","src":"12084:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12077:6:22"},"nodeType":"YulFunctionCall","src":"12077:35:22"},"nodeType":"YulIf","src":"12074:122:22"},{"nodeType":"YulVariableDeclaration","src":"12205:34:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12232:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12219:12:22"},"nodeType":"YulFunctionCall","src":"12219:20:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12209:6:22","type":""}]},{"nodeType":"YulAssignment","src":"12248:103:22","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12324:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"12332:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12320:3:22"},"nodeType":"YulFunctionCall","src":"12320:17:22"},{"name":"length","nodeType":"YulIdentifier","src":"12339:6:22"},{"name":"end","nodeType":"YulIdentifier","src":"12347:3:22"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12257:62:22"},"nodeType":"YulFunctionCall","src":"12257:94:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"12248:5:22"}]}]},"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12042:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"12050:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"12058:5:22","type":""}],"src":"11987:370:22"},{"body":{"nodeType":"YulBlock","src":"12445:229:22","statements":[{"body":{"nodeType":"YulBlock","src":"12550:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"12552:16:22"},"nodeType":"YulFunctionCall","src":"12552:18:22"},"nodeType":"YulExpressionStatement","src":"12552:18:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12522:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"12530:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12519:2:22"},"nodeType":"YulFunctionCall","src":"12519:30:22"},"nodeType":"YulIf","src":"12516:56:22"},{"nodeType":"YulAssignment","src":"12582:25:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12594:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"12602:4:22","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12590:3:22"},"nodeType":"YulFunctionCall","src":"12590:17:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"12582:4:22"}]},{"nodeType":"YulAssignment","src":"12644:23:22","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"12656:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"12662:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12652:3:22"},"nodeType":"YulFunctionCall","src":"12652:15:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"12644:4:22"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"12429:6:22","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"12440:4:22","type":""}],"src":"12363:311:22"},{"body":{"nodeType":"YulBlock","src":"12799:608:22","statements":[{"nodeType":"YulAssignment","src":"12809:90:22","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12891:6:22"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12834:56:22"},"nodeType":"YulFunctionCall","src":"12834:64:22"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"12818:15:22"},"nodeType":"YulFunctionCall","src":"12818:81:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"12809:5:22"}]},{"nodeType":"YulVariableDeclaration","src":"12908:16:22","value":{"name":"array","nodeType":"YulIdentifier","src":"12919:5:22"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"12912:3:22","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"12941:5:22"},{"name":"length","nodeType":"YulIdentifier","src":"12948:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12934:6:22"},"nodeType":"YulFunctionCall","src":"12934:21:22"},"nodeType":"YulExpressionStatement","src":"12934:21:22"},{"nodeType":"YulAssignment","src":"12964:23:22","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"12975:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"12982:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12971:3:22"},"nodeType":"YulFunctionCall","src":"12971:16:22"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"12964:3:22"}]},{"nodeType":"YulVariableDeclaration","src":"12997:44:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13015:6:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13027:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"13035:4:22","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13023:3:22"},"nodeType":"YulFunctionCall","src":"13023:17:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13011:3:22"},"nodeType":"YulFunctionCall","src":"13011:30:22"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"13001:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"13069:103:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"13083:77:22"},"nodeType":"YulFunctionCall","src":"13083:79:22"},"nodeType":"YulExpressionStatement","src":"13083:79:22"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"13056:6:22"},{"name":"end","nodeType":"YulIdentifier","src":"13064:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13053:2:22"},"nodeType":"YulFunctionCall","src":"13053:15:22"},"nodeType":"YulIf","src":"13050:122:22"},{"body":{"nodeType":"YulBlock","src":"13257:144:22","statements":[{"nodeType":"YulVariableDeclaration","src":"13272:21:22","value":{"name":"src","nodeType":"YulIdentifier","src":"13290:3:22"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"13276:10:22","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13314:3:22"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"13340:10:22"},{"name":"end","nodeType":"YulIdentifier","src":"13352:3:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"13319:20:22"},"nodeType":"YulFunctionCall","src":"13319:37:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13307:6:22"},"nodeType":"YulFunctionCall","src":"13307:50:22"},"nodeType":"YulExpressionStatement","src":"13307:50:22"},{"nodeType":"YulAssignment","src":"13370:21:22","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13381:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"13386:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13377:3:22"},"nodeType":"YulFunctionCall","src":"13377:14:22"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"13370:3:22"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13210:3:22"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"13215:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13207:2:22"},"nodeType":"YulFunctionCall","src":"13207:15:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13223:25:22","statements":[{"nodeType":"YulAssignment","src":"13225:21:22","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13236:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"13241:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13232:3:22"},"nodeType":"YulFunctionCall","src":"13232:14:22"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"13225:3:22"}]}]},"pre":{"nodeType":"YulBlock","src":"13185:21:22","statements":[{"nodeType":"YulVariableDeclaration","src":"13187:17:22","value":{"name":"offset","nodeType":"YulIdentifier","src":"13198:6:22"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"13191:3:22","type":""}]}]},"src":"13181:220:22"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12769:6:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"12777:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"12785:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"12793:5:22","type":""}],"src":"12697:710:22"},{"body":{"nodeType":"YulBlock","src":"13507:293:22","statements":[{"body":{"nodeType":"YulBlock","src":"13556:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"13558:77:22"},"nodeType":"YulFunctionCall","src":"13558:79:22"},"nodeType":"YulExpressionStatement","src":"13558:79:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13535:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"13543:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13531:3:22"},"nodeType":"YulFunctionCall","src":"13531:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"13550:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13527:3:22"},"nodeType":"YulFunctionCall","src":"13527:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13520:6:22"},"nodeType":"YulFunctionCall","src":"13520:35:22"},"nodeType":"YulIf","src":"13517:122:22"},{"nodeType":"YulVariableDeclaration","src":"13648:34:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13675:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13662:12:22"},"nodeType":"YulFunctionCall","src":"13662:20:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13652:6:22","type":""}]},{"nodeType":"YulAssignment","src":"13691:103:22","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13767:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"13775:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13763:3:22"},"nodeType":"YulFunctionCall","src":"13763:17:22"},{"name":"length","nodeType":"YulIdentifier","src":"13782:6:22"},{"name":"end","nodeType":"YulIdentifier","src":"13790:3:22"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13700:62:22"},"nodeType":"YulFunctionCall","src":"13700:94:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"13691:5:22"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"13485:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"13493:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"13501:5:22","type":""}],"src":"13430:370:22"},{"body":{"nodeType":"YulBlock","src":"13897:229:22","statements":[{"body":{"nodeType":"YulBlock","src":"14002:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"14004:16:22"},"nodeType":"YulFunctionCall","src":"14004:18:22"},"nodeType":"YulExpressionStatement","src":"14004:18:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13974:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"13982:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13971:2:22"},"nodeType":"YulFunctionCall","src":"13971:30:22"},"nodeType":"YulIf","src":"13968:56:22"},{"nodeType":"YulAssignment","src":"14034:25:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14046:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"14054:4:22","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14042:3:22"},"nodeType":"YulFunctionCall","src":"14042:17:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"14034:4:22"}]},{"nodeType":"YulAssignment","src":"14096:23:22","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"14108:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"14114:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14104:3:22"},"nodeType":"YulFunctionCall","src":"14104:15:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"14096:4:22"}]}]},"name":"array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"13881:6:22","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"13892:4:22","type":""}],"src":"13806:320:22"},{"body":{"nodeType":"YulBlock","src":"14258:831:22","statements":[{"nodeType":"YulAssignment","src":"14268:99:22","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14359:6:22"}],"functionName":{"name":"array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"14293:65:22"},"nodeType":"YulFunctionCall","src":"14293:73:22"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"14277:15:22"},"nodeType":"YulFunctionCall","src":"14277:90:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"14268:5:22"}]},{"nodeType":"YulVariableDeclaration","src":"14376:16:22","value":{"name":"array","nodeType":"YulIdentifier","src":"14387:5:22"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"14380:3:22","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"14409:5:22"},{"name":"length","nodeType":"YulIdentifier","src":"14416:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14402:6:22"},"nodeType":"YulFunctionCall","src":"14402:21:22"},"nodeType":"YulExpressionStatement","src":"14402:21:22"},{"nodeType":"YulAssignment","src":"14432:23:22","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"14443:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"14450:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14439:3:22"},"nodeType":"YulFunctionCall","src":"14439:16:22"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"14432:3:22"}]},{"nodeType":"YulVariableDeclaration","src":"14465:44:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14483:6:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14495:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"14503:4:22","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14491:3:22"},"nodeType":"YulFunctionCall","src":"14491:17:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14479:3:22"},"nodeType":"YulFunctionCall","src":"14479:30:22"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"14469:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"14537:103:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"14551:77:22"},"nodeType":"YulFunctionCall","src":"14551:79:22"},"nodeType":"YulExpressionStatement","src":"14551:79:22"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"14524:6:22"},{"name":"end","nodeType":"YulIdentifier","src":"14532:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14521:2:22"},"nodeType":"YulFunctionCall","src":"14521:15:22"},"nodeType":"YulIf","src":"14518:122:22"},{"body":{"nodeType":"YulBlock","src":"14725:358:22","statements":[{"nodeType":"YulVariableDeclaration","src":"14740:36:22","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14772:3:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14759:12:22"},"nodeType":"YulFunctionCall","src":"14759:17:22"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"14744:11:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"14828:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"14830:77:22"},"nodeType":"YulFunctionCall","src":"14830:79:22"},"nodeType":"YulExpressionStatement","src":"14830:79:22"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"14795:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"14808:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14792:2:22"},"nodeType":"YulFunctionCall","src":"14792:35:22"},"nodeType":"YulIf","src":"14789:122:22"},{"nodeType":"YulVariableDeclaration","src":"14924:42:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14946:6:22"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"14954:11:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14942:3:22"},"nodeType":"YulFunctionCall","src":"14942:24:22"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"14928:10:22","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"14987:3:22"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"15022:10:22"},{"name":"end","nodeType":"YulIdentifier","src":"15034:3:22"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"14992:29:22"},"nodeType":"YulFunctionCall","src":"14992:46:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14980:6:22"},"nodeType":"YulFunctionCall","src":"14980:59:22"},"nodeType":"YulExpressionStatement","src":"14980:59:22"},{"nodeType":"YulAssignment","src":"15052:21:22","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"15063:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"15068:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15059:3:22"},"nodeType":"YulFunctionCall","src":"15059:14:22"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"15052:3:22"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14678:3:22"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"14683:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14675:2:22"},"nodeType":"YulFunctionCall","src":"14675:15:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"14691:25:22","statements":[{"nodeType":"YulAssignment","src":"14693:21:22","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14704:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"14709:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14700:3:22"},"nodeType":"YulFunctionCall","src":"14700:14:22"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"14693:3:22"}]}]},"pre":{"nodeType":"YulBlock","src":"14653:21:22","statements":[{"nodeType":"YulVariableDeclaration","src":"14655:17:22","value":{"name":"offset","nodeType":"YulIdentifier","src":"14666:6:22"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"14659:3:22","type":""}]}]},"src":"14649:434:22"}]},"name":"abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14228:6:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"14236:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"14244:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"14252:5:22","type":""}],"src":"14147:942:22"},{"body":{"nodeType":"YulBlock","src":"15196:302:22","statements":[{"body":{"nodeType":"YulBlock","src":"15245:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"15247:77:22"},"nodeType":"YulFunctionCall","src":"15247:79:22"},"nodeType":"YulExpressionStatement","src":"15247:79:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15224:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"15232:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15220:3:22"},"nodeType":"YulFunctionCall","src":"15220:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"15239:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15216:3:22"},"nodeType":"YulFunctionCall","src":"15216:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15209:6:22"},"nodeType":"YulFunctionCall","src":"15209:35:22"},"nodeType":"YulIf","src":"15206:122:22"},{"nodeType":"YulVariableDeclaration","src":"15337:34:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15364:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15351:12:22"},"nodeType":"YulFunctionCall","src":"15351:20:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15341:6:22","type":""}]},{"nodeType":"YulAssignment","src":"15380:112:22","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15465:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"15473:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15461:3:22"},"nodeType":"YulFunctionCall","src":"15461:17:22"},{"name":"length","nodeType":"YulIdentifier","src":"15480:6:22"},{"name":"end","nodeType":"YulIdentifier","src":"15488:3:22"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"15389:71:22"},"nodeType":"YulFunctionCall","src":"15389:103:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"15380:5:22"}]}]},"name":"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"15174:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"15182:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"15190:5:22","type":""}],"src":"15110:388:22"},{"body":{"nodeType":"YulBlock","src":"15705:1212:22","statements":[{"body":{"nodeType":"YulBlock","src":"15752:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15754:77:22"},"nodeType":"YulFunctionCall","src":"15754:79:22"},"nodeType":"YulExpressionStatement","src":"15754:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15726:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"15735:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15722:3:22"},"nodeType":"YulFunctionCall","src":"15722:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"15747:3:22","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15718:3:22"},"nodeType":"YulFunctionCall","src":"15718:33:22"},"nodeType":"YulIf","src":"15715:120:22"},{"nodeType":"YulBlock","src":"15845:302:22","statements":[{"nodeType":"YulVariableDeclaration","src":"15860:45:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15891:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"15902:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15887:3:22"},"nodeType":"YulFunctionCall","src":"15887:17:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15874:12:22"},"nodeType":"YulFunctionCall","src":"15874:31:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15864:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"15952:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"15954:77:22"},"nodeType":"YulFunctionCall","src":"15954:79:22"},"nodeType":"YulExpressionStatement","src":"15954:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15924:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"15932:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15921:2:22"},"nodeType":"YulFunctionCall","src":"15921:30:22"},"nodeType":"YulIf","src":"15918:117:22"},{"nodeType":"YulAssignment","src":"16049:88:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16109:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"16120:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16105:3:22"},"nodeType":"YulFunctionCall","src":"16105:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16129:7:22"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"16059:45:22"},"nodeType":"YulFunctionCall","src":"16059:78:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16049:6:22"}]}]},{"nodeType":"YulBlock","src":"16157:303:22","statements":[{"nodeType":"YulVariableDeclaration","src":"16172:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16203:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"16214:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16199:3:22"},"nodeType":"YulFunctionCall","src":"16199:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16186:12:22"},"nodeType":"YulFunctionCall","src":"16186:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16176:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"16265:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"16267:77:22"},"nodeType":"YulFunctionCall","src":"16267:79:22"},"nodeType":"YulExpressionStatement","src":"16267:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16237:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"16245:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16234:2:22"},"nodeType":"YulFunctionCall","src":"16234:30:22"},"nodeType":"YulIf","src":"16231:117:22"},{"nodeType":"YulAssignment","src":"16362:88:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16422:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"16433:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16418:3:22"},"nodeType":"YulFunctionCall","src":"16418:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16442:7:22"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"16372:45:22"},"nodeType":"YulFunctionCall","src":"16372:78:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"16362:6:22"}]}]},{"nodeType":"YulBlock","src":"16470:312:22","statements":[{"nodeType":"YulVariableDeclaration","src":"16485:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16516:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"16527:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16512:3:22"},"nodeType":"YulFunctionCall","src":"16512:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16499:12:22"},"nodeType":"YulFunctionCall","src":"16499:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16489:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"16578:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"16580:77:22"},"nodeType":"YulFunctionCall","src":"16580:79:22"},"nodeType":"YulExpressionStatement","src":"16580:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16550:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"16558:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16547:2:22"},"nodeType":"YulFunctionCall","src":"16547:30:22"},"nodeType":"YulIf","src":"16544:117:22"},{"nodeType":"YulAssignment","src":"16675:97:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16744:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"16755:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16740:3:22"},"nodeType":"YulFunctionCall","src":"16740:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16764:7:22"}],"functionName":{"name":"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"16685:54:22"},"nodeType":"YulFunctionCall","src":"16685:87:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"16675:6:22"}]}]},{"nodeType":"YulBlock","src":"16792:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"16807:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"16821:2:22","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16811:6:22","type":""}]},{"nodeType":"YulAssignment","src":"16837:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16872:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"16883:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16868:3:22"},"nodeType":"YulFunctionCall","src":"16868:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16892:7:22"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"16847:20:22"},"nodeType":"YulFunctionCall","src":"16847:53:22"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"16837:6:22"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptrt_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15651:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15662:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15674:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15682:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15690:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15698:6:22","type":""}],"src":"15504:1413:22"},{"body":{"nodeType":"YulBlock","src":"16988:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17005:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17028:5:22"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"17010:17:22"},"nodeType":"YulFunctionCall","src":"17010:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16998:6:22"},"nodeType":"YulFunctionCall","src":"16998:37:22"},"nodeType":"YulExpressionStatement","src":"16998:37:22"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16976:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16983:3:22","type":""}],"src":"16923:118:22"},{"body":{"nodeType":"YulBlock","src":"17145:124:22","statements":[{"nodeType":"YulAssignment","src":"17155:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17167:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"17178:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17163:3:22"},"nodeType":"YulFunctionCall","src":"17163:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17155:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17235:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17248:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"17259:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17244:3:22"},"nodeType":"YulFunctionCall","src":"17244:17:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"17191:43:22"},"nodeType":"YulFunctionCall","src":"17191:71:22"},"nodeType":"YulExpressionStatement","src":"17191:71:22"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17117:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17129:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17140:4:22","type":""}],"src":"17047:222:22"},{"body":{"nodeType":"YulBlock","src":"17405:773:22","statements":[{"body":{"nodeType":"YulBlock","src":"17452:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"17454:77:22"},"nodeType":"YulFunctionCall","src":"17454:79:22"},"nodeType":"YulExpressionStatement","src":"17454:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17426:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"17435:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17422:3:22"},"nodeType":"YulFunctionCall","src":"17422:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"17447:3:22","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17418:3:22"},"nodeType":"YulFunctionCall","src":"17418:33:22"},"nodeType":"YulIf","src":"17415:120:22"},{"nodeType":"YulBlock","src":"17545:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"17560:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"17574:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17564:6:22","type":""}]},{"nodeType":"YulAssignment","src":"17589:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17624:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"17635:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17620:3:22"},"nodeType":"YulFunctionCall","src":"17620:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17644:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"17599:20:22"},"nodeType":"YulFunctionCall","src":"17599:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"17589:6:22"}]}]},{"nodeType":"YulBlock","src":"17672:116:22","statements":[{"nodeType":"YulVariableDeclaration","src":"17687:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"17701:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17691:6:22","type":""}]},{"nodeType":"YulAssignment","src":"17717:61:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17750:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"17761:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17746:3:22"},"nodeType":"YulFunctionCall","src":"17746:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17770:7:22"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"17727:18:22"},"nodeType":"YulFunctionCall","src":"17727:51:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"17717:6:22"}]}]},{"nodeType":"YulBlock","src":"17798:116:22","statements":[{"nodeType":"YulVariableDeclaration","src":"17813:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"17827:2:22","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17817:6:22","type":""}]},{"nodeType":"YulAssignment","src":"17843:61:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17876:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"17887:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17872:3:22"},"nodeType":"YulFunctionCall","src":"17872:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17896:7:22"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"17853:18:22"},"nodeType":"YulFunctionCall","src":"17853:51:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"17843:6:22"}]}]},{"nodeType":"YulBlock","src":"17924:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"17939:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"17953:2:22","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17943:6:22","type":""}]},{"nodeType":"YulAssignment","src":"17969:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18004:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"18015:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18000:3:22"},"nodeType":"YulFunctionCall","src":"18000:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18024:7:22"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"17979:20:22"},"nodeType":"YulFunctionCall","src":"17979:53:22"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"17969:6:22"}]}]},{"nodeType":"YulBlock","src":"18052:119:22","statements":[{"nodeType":"YulVariableDeclaration","src":"18067:17:22","value":{"kind":"number","nodeType":"YulLiteral","src":"18081:3:22","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18071:6:22","type":""}]},{"nodeType":"YulAssignment","src":"18098:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18133:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"18144:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18129:3:22"},"nodeType":"YulFunctionCall","src":"18129:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18153:7:22"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"18108:20:22"},"nodeType":"YulFunctionCall","src":"18108:53:22"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"18098:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint8t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17343:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17354:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17366:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17374:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17382:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17390:6:22","type":""},{"name":"value4","nodeType":"YulTypedName","src":"17398:6:22","type":""}],"src":"17275:903:22"},{"body":{"nodeType":"YulBlock","src":"18212:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18229:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18232:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18222:6:22"},"nodeType":"YulFunctionCall","src":"18222:88:22"},"nodeType":"YulExpressionStatement","src":"18222:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18326:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18329:4:22","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18319:6:22"},"nodeType":"YulFunctionCall","src":"18319:15:22"},"nodeType":"YulExpressionStatement","src":"18319:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18350:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18353:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18343:6:22"},"nodeType":"YulFunctionCall","src":"18343:15:22"},"nodeType":"YulExpressionStatement","src":"18343:15:22"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"18184:180:22"},{"body":{"nodeType":"YulBlock","src":"18431:62:22","statements":[{"body":{"nodeType":"YulBlock","src":"18465:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"18467:16:22"},"nodeType":"YulFunctionCall","src":"18467:18:22"},"nodeType":"YulExpressionStatement","src":"18467:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18454:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"18461:1:22","type":"","value":"8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18451:2:22"},"nodeType":"YulFunctionCall","src":"18451:12:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18444:6:22"},"nodeType":"YulFunctionCall","src":"18444:20:22"},"nodeType":"YulIf","src":"18441:46:22"}]},"name":"validator_assert_t_enum$_ProposalState_$1322","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18424:5:22","type":""}],"src":"18370:123:22"},{"body":{"nodeType":"YulBlock","src":"18562:84:22","statements":[{"nodeType":"YulAssignment","src":"18572:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"18583:5:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18572:7:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18634:5:22"}],"functionName":{"name":"validator_assert_t_enum$_ProposalState_$1322","nodeType":"YulIdentifier","src":"18589:44:22"},"nodeType":"YulFunctionCall","src":"18589:51:22"},"nodeType":"YulExpressionStatement","src":"18589:51:22"}]},"name":"cleanup_t_enum$_ProposalState_$1322","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18544:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18554:7:22","type":""}],"src":"18499:147:22"},{"body":{"nodeType":"YulBlock","src":"18728:71:22","statements":[{"nodeType":"YulAssignment","src":"18738:55:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18787:5:22"}],"functionName":{"name":"cleanup_t_enum$_ProposalState_$1322","nodeType":"YulIdentifier","src":"18751:35:22"},"nodeType":"YulFunctionCall","src":"18751:42:22"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"18738:9:22"}]}]},"name":"convert_t_enum$_ProposalState_$1322_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18708:5:22","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"18718:9:22","type":""}],"src":"18652:147:22"},{"body":{"nodeType":"YulBlock","src":"18886:82:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18903:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18955:5:22"}],"functionName":{"name":"convert_t_enum$_ProposalState_$1322_to_t_uint8","nodeType":"YulIdentifier","src":"18908:46:22"},"nodeType":"YulFunctionCall","src":"18908:53:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18896:6:22"},"nodeType":"YulFunctionCall","src":"18896:66:22"},"nodeType":"YulExpressionStatement","src":"18896:66:22"}]},"name":"abi_encode_t_enum$_ProposalState_$1322_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18874:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"18881:3:22","type":""}],"src":"18805:163:22"},{"body":{"nodeType":"YulBlock","src":"19088:140:22","statements":[{"nodeType":"YulAssignment","src":"19098:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19110:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"19121:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19106:3:22"},"nodeType":"YulFunctionCall","src":"19106:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19098:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19194:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19207:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"19218:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19203:3:22"},"nodeType":"YulFunctionCall","src":"19203:17:22"}],"functionName":{"name":"abi_encode_t_enum$_ProposalState_$1322_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"19134:59:22"},"nodeType":"YulFunctionCall","src":"19134:87:22"},"nodeType":"YulExpressionStatement","src":"19134:87:22"}]},"name":"abi_encode_tuple_t_enum$_ProposalState_$1322__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19060:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19072:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19083:4:22","type":""}],"src":"18974:254:22"},{"body":{"nodeType":"YulBlock","src":"19317:391:22","statements":[{"body":{"nodeType":"YulBlock","src":"19363:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19365:77:22"},"nodeType":"YulFunctionCall","src":"19365:79:22"},"nodeType":"YulExpressionStatement","src":"19365:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19338:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"19347:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19334:3:22"},"nodeType":"YulFunctionCall","src":"19334:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"19359:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19330:3:22"},"nodeType":"YulFunctionCall","src":"19330:32:22"},"nodeType":"YulIf","src":"19327:119:22"},{"nodeType":"YulBlock","src":"19456:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"19471:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"19485:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19475:6:22","type":""}]},{"nodeType":"YulAssignment","src":"19500:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19535:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"19546:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19531:3:22"},"nodeType":"YulFunctionCall","src":"19531:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19555:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"19510:20:22"},"nodeType":"YulFunctionCall","src":"19510:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19500:6:22"}]}]},{"nodeType":"YulBlock","src":"19583:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"19598:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"19612:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19602:6:22","type":""}]},{"nodeType":"YulAssignment","src":"19628:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19663:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"19674:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19659:3:22"},"nodeType":"YulFunctionCall","src":"19659:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19683:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"19638:20:22"},"nodeType":"YulFunctionCall","src":"19638:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"19628:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19279:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19290:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19302:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19310:6:22","type":""}],"src":"19234:474:22"},{"body":{"nodeType":"YulBlock","src":"19868:288:22","statements":[{"nodeType":"YulAssignment","src":"19878:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19890:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"19901:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19886:3:22"},"nodeType":"YulFunctionCall","src":"19886:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19878:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19958:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19971:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"19982:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19967:3:22"},"nodeType":"YulFunctionCall","src":"19967:17:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19914:43:22"},"nodeType":"YulFunctionCall","src":"19914:71:22"},"nodeType":"YulExpressionStatement","src":"19914:71:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20039:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20052:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"20063:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20048:3:22"},"nodeType":"YulFunctionCall","src":"20048:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19995:43:22"},"nodeType":"YulFunctionCall","src":"19995:72:22"},"nodeType":"YulExpressionStatement","src":"19995:72:22"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"20121:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20134:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"20145:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20130:3:22"},"nodeType":"YulFunctionCall","src":"20130:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20077:43:22"},"nodeType":"YulFunctionCall","src":"20077:72:22"},"nodeType":"YulExpressionStatement","src":"20077:72:22"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19824:9:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19836:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19844:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19852:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19863:4:22","type":""}],"src":"19714:442:22"},{"body":{"nodeType":"YulBlock","src":"20243:389:22","statements":[{"body":{"nodeType":"YulBlock","src":"20289:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"20291:77:22"},"nodeType":"YulFunctionCall","src":"20291:79:22"},"nodeType":"YulExpressionStatement","src":"20291:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20264:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"20273:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20260:3:22"},"nodeType":"YulFunctionCall","src":"20260:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"20285:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20256:3:22"},"nodeType":"YulFunctionCall","src":"20256:32:22"},"nodeType":"YulIf","src":"20253:119:22"},{"nodeType":"YulBlock","src":"20382:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"20397:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"20411:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20401:6:22","type":""}]},{"nodeType":"YulAssignment","src":"20426:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20461:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"20472:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20457:3:22"},"nodeType":"YulFunctionCall","src":"20457:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20481:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"20436:20:22"},"nodeType":"YulFunctionCall","src":"20436:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20426:6:22"}]}]},{"nodeType":"YulBlock","src":"20509:116:22","statements":[{"nodeType":"YulVariableDeclaration","src":"20524:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"20538:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20528:6:22","type":""}]},{"nodeType":"YulAssignment","src":"20554:61:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20587:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"20598:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20583:3:22"},"nodeType":"YulFunctionCall","src":"20583:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20607:7:22"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"20564:18:22"},"nodeType":"YulFunctionCall","src":"20564:51:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"20554:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20205:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20216:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20228:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20236:6:22","type":""}],"src":"20162:470:22"},{"body":{"nodeType":"YulBlock","src":"20782:995:22","statements":[{"body":{"nodeType":"YulBlock","src":"20829:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"20831:77:22"},"nodeType":"YulFunctionCall","src":"20831:79:22"},"nodeType":"YulExpressionStatement","src":"20831:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20803:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"20812:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20799:3:22"},"nodeType":"YulFunctionCall","src":"20799:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"20824:3:22","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20795:3:22"},"nodeType":"YulFunctionCall","src":"20795:33:22"},"nodeType":"YulIf","src":"20792:120:22"},{"nodeType":"YulBlock","src":"20922:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"20937:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"20951:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20941:6:22","type":""}]},{"nodeType":"YulAssignment","src":"20966:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21001:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"21012:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20997:3:22"},"nodeType":"YulFunctionCall","src":"20997:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21021:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"20976:20:22"},"nodeType":"YulFunctionCall","src":"20976:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20966:6:22"}]}]},{"nodeType":"YulBlock","src":"21049:116:22","statements":[{"nodeType":"YulVariableDeclaration","src":"21064:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"21078:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21068:6:22","type":""}]},{"nodeType":"YulAssignment","src":"21094:61:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21127:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"21138:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21123:3:22"},"nodeType":"YulFunctionCall","src":"21123:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21147:7:22"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"21104:18:22"},"nodeType":"YulFunctionCall","src":"21104:51:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"21094:6:22"}]}]},{"nodeType":"YulBlock","src":"21175:298:22","statements":[{"nodeType":"YulVariableDeclaration","src":"21190:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21221:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"21232:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21217:3:22"},"nodeType":"YulFunctionCall","src":"21217:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"21204:12:22"},"nodeType":"YulFunctionCall","src":"21204:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21194:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"21283:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"21285:77:22"},"nodeType":"YulFunctionCall","src":"21285:79:22"},"nodeType":"YulExpressionStatement","src":"21285:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21255:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"21263:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21252:2:22"},"nodeType":"YulFunctionCall","src":"21252:30:22"},"nodeType":"YulIf","src":"21249:117:22"},{"nodeType":"YulAssignment","src":"21380:83:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21435:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"21446:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21431:3:22"},"nodeType":"YulFunctionCall","src":"21431:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21455:7:22"}],"functionName":{"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulIdentifier","src":"21398:32:22"},"nodeType":"YulFunctionCall","src":"21398:65:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"21380:6:22"},{"name":"value3","nodeType":"YulIdentifier","src":"21388:6:22"}]}]},{"nodeType":"YulBlock","src":"21483:287:22","statements":[{"nodeType":"YulVariableDeclaration","src":"21498:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21529:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"21540:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21525:3:22"},"nodeType":"YulFunctionCall","src":"21525:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"21512:12:22"},"nodeType":"YulFunctionCall","src":"21512:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21502:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"21591:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"21593:77:22"},"nodeType":"YulFunctionCall","src":"21593:79:22"},"nodeType":"YulExpressionStatement","src":"21593:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21563:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"21571:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21560:2:22"},"nodeType":"YulFunctionCall","src":"21560:30:22"},"nodeType":"YulIf","src":"21557:117:22"},{"nodeType":"YulAssignment","src":"21688:72:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21732:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"21743:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21728:3:22"},"nodeType":"YulFunctionCall","src":"21728:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21752:7:22"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"21698:29:22"},"nodeType":"YulFunctionCall","src":"21698:62:22"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"21688:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint8t_string_calldata_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20720:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20731:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20743:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20751:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20759:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"20767:6:22","type":""},{"name":"value4","nodeType":"YulTypedName","src":"20775:6:22","type":""}],"src":"20638:1139:22"},{"body":{"nodeType":"YulBlock","src":"21901:697:22","statements":[{"body":{"nodeType":"YulBlock","src":"21947:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"21949:77:22"},"nodeType":"YulFunctionCall","src":"21949:79:22"},"nodeType":"YulExpressionStatement","src":"21949:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"21922:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"21931:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21918:3:22"},"nodeType":"YulFunctionCall","src":"21918:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"21943:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21914:3:22"},"nodeType":"YulFunctionCall","src":"21914:32:22"},"nodeType":"YulIf","src":"21911:119:22"},{"nodeType":"YulBlock","src":"22040:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"22055:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"22069:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22059:6:22","type":""}]},{"nodeType":"YulAssignment","src":"22084:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22119:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"22130:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22115:3:22"},"nodeType":"YulFunctionCall","src":"22115:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22139:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"22094:20:22"},"nodeType":"YulFunctionCall","src":"22094:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"22084:6:22"}]}]},{"nodeType":"YulBlock","src":"22167:116:22","statements":[{"nodeType":"YulVariableDeclaration","src":"22182:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"22196:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22186:6:22","type":""}]},{"nodeType":"YulAssignment","src":"22212:61:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22245:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"22256:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22241:3:22"},"nodeType":"YulFunctionCall","src":"22241:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22265:7:22"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"22222:18:22"},"nodeType":"YulFunctionCall","src":"22222:51:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"22212:6:22"}]}]},{"nodeType":"YulBlock","src":"22293:298:22","statements":[{"nodeType":"YulVariableDeclaration","src":"22308:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22339:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"22350:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22335:3:22"},"nodeType":"YulFunctionCall","src":"22335:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"22322:12:22"},"nodeType":"YulFunctionCall","src":"22322:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22312:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"22401:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"22403:77:22"},"nodeType":"YulFunctionCall","src":"22403:79:22"},"nodeType":"YulExpressionStatement","src":"22403:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22373:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"22381:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22370:2:22"},"nodeType":"YulFunctionCall","src":"22370:30:22"},"nodeType":"YulIf","src":"22367:117:22"},{"nodeType":"YulAssignment","src":"22498:83:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22553:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"22564:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22549:3:22"},"nodeType":"YulFunctionCall","src":"22549:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22573:7:22"}],"functionName":{"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulIdentifier","src":"22516:32:22"},"nodeType":"YulFunctionCall","src":"22516:65:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"22498:6:22"},{"name":"value3","nodeType":"YulIdentifier","src":"22506:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint8t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21847:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"21858:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"21870:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21878:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21886:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"21894:6:22","type":""}],"src":"21783:815:22"},{"body":{"nodeType":"YulBlock","src":"22671:241:22","statements":[{"body":{"nodeType":"YulBlock","src":"22776:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"22778:16:22"},"nodeType":"YulFunctionCall","src":"22778:18:22"},"nodeType":"YulExpressionStatement","src":"22778:18:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22748:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"22756:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22745:2:22"},"nodeType":"YulFunctionCall","src":"22745:30:22"},"nodeType":"YulIf","src":"22742:56:22"},{"nodeType":"YulAssignment","src":"22808:37:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22838:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"22816:21:22"},"nodeType":"YulFunctionCall","src":"22816:29:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"22808:4:22"}]},{"nodeType":"YulAssignment","src":"22882:23:22","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"22894:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"22900:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22890:3:22"},"nodeType":"YulFunctionCall","src":"22890:15:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"22882:4:22"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"22655:6:22","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"22666:4:22","type":""}],"src":"22604:308:22"},{"body":{"nodeType":"YulBlock","src":"23002:341:22","statements":[{"nodeType":"YulAssignment","src":"23012:75:22","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23079:6:22"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"23037:41:22"},"nodeType":"YulFunctionCall","src":"23037:49:22"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"23021:15:22"},"nodeType":"YulFunctionCall","src":"23021:66:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"23012:5:22"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"23103:5:22"},{"name":"length","nodeType":"YulIdentifier","src":"23110:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23096:6:22"},"nodeType":"YulFunctionCall","src":"23096:21:22"},"nodeType":"YulExpressionStatement","src":"23096:21:22"},{"nodeType":"YulVariableDeclaration","src":"23126:27:22","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"23141:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"23148:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23137:3:22"},"nodeType":"YulFunctionCall","src":"23137:16:22"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"23130:3:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"23191:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"23193:77:22"},"nodeType":"YulFunctionCall","src":"23193:79:22"},"nodeType":"YulExpressionStatement","src":"23193:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"23172:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"23177:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23168:3:22"},"nodeType":"YulFunctionCall","src":"23168:16:22"},{"name":"end","nodeType":"YulIdentifier","src":"23186:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23165:2:22"},"nodeType":"YulFunctionCall","src":"23165:25:22"},"nodeType":"YulIf","src":"23162:112:22"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"23320:3:22"},{"name":"dst","nodeType":"YulIdentifier","src":"23325:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"23330:6:22"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"23283:36:22"},"nodeType":"YulFunctionCall","src":"23283:54:22"},"nodeType":"YulExpressionStatement","src":"23283:54:22"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"22975:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"22980:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"22988:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"22996:5:22","type":""}],"src":"22918:425:22"},{"body":{"nodeType":"YulBlock","src":"23425:278:22","statements":[{"body":{"nodeType":"YulBlock","src":"23474:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"23476:77:22"},"nodeType":"YulFunctionCall","src":"23476:79:22"},"nodeType":"YulExpressionStatement","src":"23476:79:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"23453:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"23461:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23449:3:22"},"nodeType":"YulFunctionCall","src":"23449:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"23468:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"23445:3:22"},"nodeType":"YulFunctionCall","src":"23445:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23438:6:22"},"nodeType":"YulFunctionCall","src":"23438:35:22"},"nodeType":"YulIf","src":"23435:122:22"},{"nodeType":"YulVariableDeclaration","src":"23566:34:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"23593:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"23580:12:22"},"nodeType":"YulFunctionCall","src":"23580:20:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"23570:6:22","type":""}]},{"nodeType":"YulAssignment","src":"23609:88:22","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"23670:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"23678:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23666:3:22"},"nodeType":"YulFunctionCall","src":"23666:17:22"},{"name":"length","nodeType":"YulIdentifier","src":"23685:6:22"},{"name":"end","nodeType":"YulIdentifier","src":"23693:3:22"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"23618:47:22"},"nodeType":"YulFunctionCall","src":"23618:79:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"23609:5:22"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"23403:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"23411:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"23419:5:22","type":""}],"src":"23363:340:22"},{"body":{"nodeType":"YulBlock","src":"23920:1382:22","statements":[{"body":{"nodeType":"YulBlock","src":"23967:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"23969:77:22"},"nodeType":"YulFunctionCall","src":"23969:79:22"},"nodeType":"YulExpressionStatement","src":"23969:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"23941:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"23950:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23937:3:22"},"nodeType":"YulFunctionCall","src":"23937:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"23962:3:22","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"23933:3:22"},"nodeType":"YulFunctionCall","src":"23933:33:22"},"nodeType":"YulIf","src":"23930:120:22"},{"nodeType":"YulBlock","src":"24060:302:22","statements":[{"nodeType":"YulVariableDeclaration","src":"24075:45:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24106:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"24117:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24102:3:22"},"nodeType":"YulFunctionCall","src":"24102:17:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"24089:12:22"},"nodeType":"YulFunctionCall","src":"24089:31:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24079:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"24167:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"24169:77:22"},"nodeType":"YulFunctionCall","src":"24169:79:22"},"nodeType":"YulExpressionStatement","src":"24169:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24139:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"24147:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24136:2:22"},"nodeType":"YulFunctionCall","src":"24136:30:22"},"nodeType":"YulIf","src":"24133:117:22"},{"nodeType":"YulAssignment","src":"24264:88:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24324:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"24335:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24320:3:22"},"nodeType":"YulFunctionCall","src":"24320:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24344:7:22"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"24274:45:22"},"nodeType":"YulFunctionCall","src":"24274:78:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"24264:6:22"}]}]},{"nodeType":"YulBlock","src":"24372:303:22","statements":[{"nodeType":"YulVariableDeclaration","src":"24387:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24418:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"24429:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24414:3:22"},"nodeType":"YulFunctionCall","src":"24414:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"24401:12:22"},"nodeType":"YulFunctionCall","src":"24401:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24391:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"24480:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"24482:77:22"},"nodeType":"YulFunctionCall","src":"24482:79:22"},"nodeType":"YulExpressionStatement","src":"24482:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24452:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"24460:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24449:2:22"},"nodeType":"YulFunctionCall","src":"24449:30:22"},"nodeType":"YulIf","src":"24446:117:22"},{"nodeType":"YulAssignment","src":"24577:88:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24637:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"24648:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24633:3:22"},"nodeType":"YulFunctionCall","src":"24633:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24657:7:22"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"24587:45:22"},"nodeType":"YulFunctionCall","src":"24587:78:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"24577:6:22"}]}]},{"nodeType":"YulBlock","src":"24685:312:22","statements":[{"nodeType":"YulVariableDeclaration","src":"24700:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24731:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"24742:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24727:3:22"},"nodeType":"YulFunctionCall","src":"24727:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"24714:12:22"},"nodeType":"YulFunctionCall","src":"24714:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24704:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"24793:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"24795:77:22"},"nodeType":"YulFunctionCall","src":"24795:79:22"},"nodeType":"YulExpressionStatement","src":"24795:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24765:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"24773:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24762:2:22"},"nodeType":"YulFunctionCall","src":"24762:30:22"},"nodeType":"YulIf","src":"24759:117:22"},{"nodeType":"YulAssignment","src":"24890:97:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24959:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"24970:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24955:3:22"},"nodeType":"YulFunctionCall","src":"24955:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24979:7:22"}],"functionName":{"name":"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"24900:54:22"},"nodeType":"YulFunctionCall","src":"24900:87:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"24890:6:22"}]}]},{"nodeType":"YulBlock","src":"25007:288:22","statements":[{"nodeType":"YulVariableDeclaration","src":"25022:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25053:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"25064:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25049:3:22"},"nodeType":"YulFunctionCall","src":"25049:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"25036:12:22"},"nodeType":"YulFunctionCall","src":"25036:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25026:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"25115:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"25117:77:22"},"nodeType":"YulFunctionCall","src":"25117:79:22"},"nodeType":"YulExpressionStatement","src":"25117:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25087:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"25095:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25084:2:22"},"nodeType":"YulFunctionCall","src":"25084:30:22"},"nodeType":"YulIf","src":"25081:117:22"},{"nodeType":"YulAssignment","src":"25212:73:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25257:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"25268:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25253:3:22"},"nodeType":"YulFunctionCall","src":"25253:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25277:7:22"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"25222:30:22"},"nodeType":"YulFunctionCall","src":"25222:63:22"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"25212:6:22"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23866:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"23877:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"23889:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23897:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23905:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23913:6:22","type":""}],"src":"23709:1593:22"},{"body":{"nodeType":"YulBlock","src":"25417:688:22","statements":[{"body":{"nodeType":"YulBlock","src":"25463:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"25465:77:22"},"nodeType":"YulFunctionCall","src":"25465:79:22"},"nodeType":"YulExpressionStatement","src":"25465:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"25438:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"25447:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25434:3:22"},"nodeType":"YulFunctionCall","src":"25434:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"25459:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"25430:3:22"},"nodeType":"YulFunctionCall","src":"25430:32:22"},"nodeType":"YulIf","src":"25427:119:22"},{"nodeType":"YulBlock","src":"25556:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"25571:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"25585:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25575:6:22","type":""}]},{"nodeType":"YulAssignment","src":"25600:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25635:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"25646:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25631:3:22"},"nodeType":"YulFunctionCall","src":"25631:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25655:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"25610:20:22"},"nodeType":"YulFunctionCall","src":"25610:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"25600:6:22"}]}]},{"nodeType":"YulBlock","src":"25683:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"25698:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"25712:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25702:6:22","type":""}]},{"nodeType":"YulAssignment","src":"25728:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25763:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"25774:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25759:3:22"},"nodeType":"YulFunctionCall","src":"25759:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25783:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"25738:20:22"},"nodeType":"YulFunctionCall","src":"25738:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"25728:6:22"}]}]},{"nodeType":"YulBlock","src":"25811:287:22","statements":[{"nodeType":"YulVariableDeclaration","src":"25826:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25857:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"25868:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25853:3:22"},"nodeType":"YulFunctionCall","src":"25853:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"25840:12:22"},"nodeType":"YulFunctionCall","src":"25840:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25830:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"25919:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"25921:77:22"},"nodeType":"YulFunctionCall","src":"25921:79:22"},"nodeType":"YulExpressionStatement","src":"25921:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25891:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"25899:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25888:2:22"},"nodeType":"YulFunctionCall","src":"25888:30:22"},"nodeType":"YulIf","src":"25885:117:22"},{"nodeType":"YulAssignment","src":"26016:72:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26060:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"26071:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26056:3:22"},"nodeType":"YulFunctionCall","src":"26056:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26080:7:22"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"26026:29:22"},"nodeType":"YulFunctionCall","src":"26026:62:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"26016:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25371:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"25382:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"25394:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25402:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"25410:6:22","type":""}],"src":"25308:797:22"},{"body":{"nodeType":"YulBlock","src":"26304:1316:22","statements":[{"body":{"nodeType":"YulBlock","src":"26351:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"26353:77:22"},"nodeType":"YulFunctionCall","src":"26353:79:22"},"nodeType":"YulExpressionStatement","src":"26353:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"26325:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"26334:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26321:3:22"},"nodeType":"YulFunctionCall","src":"26321:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"26346:3:22","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"26317:3:22"},"nodeType":"YulFunctionCall","src":"26317:33:22"},"nodeType":"YulIf","src":"26314:120:22"},{"nodeType":"YulBlock","src":"26444:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"26459:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"26473:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26463:6:22","type":""}]},{"nodeType":"YulAssignment","src":"26488:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26523:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"26534:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26519:3:22"},"nodeType":"YulFunctionCall","src":"26519:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26543:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"26498:20:22"},"nodeType":"YulFunctionCall","src":"26498:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"26488:6:22"}]}]},{"nodeType":"YulBlock","src":"26571:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"26586:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"26600:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26590:6:22","type":""}]},{"nodeType":"YulAssignment","src":"26616:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26651:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"26662:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26647:3:22"},"nodeType":"YulFunctionCall","src":"26647:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26671:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"26626:20:22"},"nodeType":"YulFunctionCall","src":"26626:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"26616:6:22"}]}]},{"nodeType":"YulBlock","src":"26699:303:22","statements":[{"nodeType":"YulVariableDeclaration","src":"26714:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26745:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"26756:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26741:3:22"},"nodeType":"YulFunctionCall","src":"26741:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"26728:12:22"},"nodeType":"YulFunctionCall","src":"26728:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26718:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"26807:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"26809:77:22"},"nodeType":"YulFunctionCall","src":"26809:79:22"},"nodeType":"YulExpressionStatement","src":"26809:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"26779:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"26787:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26776:2:22"},"nodeType":"YulFunctionCall","src":"26776:30:22"},"nodeType":"YulIf","src":"26773:117:22"},{"nodeType":"YulAssignment","src":"26904:88:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26964:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"26975:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26960:3:22"},"nodeType":"YulFunctionCall","src":"26960:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26984:7:22"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"26914:45:22"},"nodeType":"YulFunctionCall","src":"26914:78:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"26904:6:22"}]}]},{"nodeType":"YulBlock","src":"27012:303:22","statements":[{"nodeType":"YulVariableDeclaration","src":"27027:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27058:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"27069:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27054:3:22"},"nodeType":"YulFunctionCall","src":"27054:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"27041:12:22"},"nodeType":"YulFunctionCall","src":"27041:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"27031:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"27120:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"27122:77:22"},"nodeType":"YulFunctionCall","src":"27122:79:22"},"nodeType":"YulExpressionStatement","src":"27122:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"27092:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"27100:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27089:2:22"},"nodeType":"YulFunctionCall","src":"27089:30:22"},"nodeType":"YulIf","src":"27086:117:22"},{"nodeType":"YulAssignment","src":"27217:88:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27277:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"27288:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27273:3:22"},"nodeType":"YulFunctionCall","src":"27273:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"27297:7:22"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"27227:45:22"},"nodeType":"YulFunctionCall","src":"27227:78:22"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"27217:6:22"}]}]},{"nodeType":"YulBlock","src":"27325:288:22","statements":[{"nodeType":"YulVariableDeclaration","src":"27340:47:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27371:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"27382:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27367:3:22"},"nodeType":"YulFunctionCall","src":"27367:19:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"27354:12:22"},"nodeType":"YulFunctionCall","src":"27354:33:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"27344:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"27434:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"27436:77:22"},"nodeType":"YulFunctionCall","src":"27436:79:22"},"nodeType":"YulExpressionStatement","src":"27436:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"27406:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"27414:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27403:2:22"},"nodeType":"YulFunctionCall","src":"27403:30:22"},"nodeType":"YulIf","src":"27400:117:22"},{"nodeType":"YulAssignment","src":"27531:72:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27575:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"27586:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27571:3:22"},"nodeType":"YulFunctionCall","src":"27571:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"27595:7:22"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"27541:29:22"},"nodeType":"YulFunctionCall","src":"27541:62:22"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"27531:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26242:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"26253:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"26265:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26273:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"26281:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"26289:6:22","type":""},{"name":"value4","nodeType":"YulTypedName","src":"26297:6:22","type":""}],"src":"26111:1509:22"},{"body":{"nodeType":"YulBlock","src":"27713:478:22","statements":[{"body":{"nodeType":"YulBlock","src":"27762:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"27764:77:22"},"nodeType":"YulFunctionCall","src":"27764:79:22"},"nodeType":"YulExpressionStatement","src":"27764:79:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"27741:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"27749:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27737:3:22"},"nodeType":"YulFunctionCall","src":"27737:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"27756:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"27733:3:22"},"nodeType":"YulFunctionCall","src":"27733:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"27726:6:22"},"nodeType":"YulFunctionCall","src":"27726:35:22"},"nodeType":"YulIf","src":"27723:122:22"},{"nodeType":"YulAssignment","src":"27854:30:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"27877:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"27864:12:22"},"nodeType":"YulFunctionCall","src":"27864:20:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"27854:6:22"}]},{"body":{"nodeType":"YulBlock","src":"27927:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"27929:77:22"},"nodeType":"YulFunctionCall","src":"27929:79:22"},"nodeType":"YulExpressionStatement","src":"27929:79:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"27899:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"27907:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27896:2:22"},"nodeType":"YulFunctionCall","src":"27896:30:22"},"nodeType":"YulIf","src":"27893:117:22"},{"nodeType":"YulAssignment","src":"28019:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"28035:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"28043:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28031:3:22"},"nodeType":"YulFunctionCall","src":"28031:17:22"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"28019:8:22"}]},{"body":{"nodeType":"YulBlock","src":"28102:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"28104:77:22"},"nodeType":"YulFunctionCall","src":"28104:79:22"},"nodeType":"YulExpressionStatement","src":"28104:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"28067:8:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"28081:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"28089:4:22","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"28077:3:22"},"nodeType":"YulFunctionCall","src":"28077:17:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28063:3:22"},"nodeType":"YulFunctionCall","src":"28063:32:22"},{"name":"end","nodeType":"YulIdentifier","src":"28097:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28060:2:22"},"nodeType":"YulFunctionCall","src":"28060:41:22"},"nodeType":"YulIf","src":"28057:128:22"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"27680:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"27688:3:22","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"27696:8:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"27706:6:22","type":""}],"src":"27639:552:22"},{"body":{"nodeType":"YulBlock","src":"28316:698:22","statements":[{"body":{"nodeType":"YulBlock","src":"28362:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"28364:77:22"},"nodeType":"YulFunctionCall","src":"28364:79:22"},"nodeType":"YulExpressionStatement","src":"28364:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"28337:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"28346:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28333:3:22"},"nodeType":"YulFunctionCall","src":"28333:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"28358:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"28329:3:22"},"nodeType":"YulFunctionCall","src":"28329:32:22"},"nodeType":"YulIf","src":"28326:119:22"},{"nodeType":"YulBlock","src":"28455:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"28470:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"28484:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28474:6:22","type":""}]},{"nodeType":"YulAssignment","src":"28499:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28534:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"28545:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28530:3:22"},"nodeType":"YulFunctionCall","src":"28530:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28554:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"28509:20:22"},"nodeType":"YulFunctionCall","src":"28509:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"28499:6:22"}]}]},{"nodeType":"YulBlock","src":"28582:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"28597:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"28611:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28601:6:22","type":""}]},{"nodeType":"YulAssignment","src":"28627:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28662:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"28673:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28658:3:22"},"nodeType":"YulFunctionCall","src":"28658:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28682:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"28637:20:22"},"nodeType":"YulFunctionCall","src":"28637:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"28627:6:22"}]}]},{"nodeType":"YulBlock","src":"28710:297:22","statements":[{"nodeType":"YulVariableDeclaration","src":"28725:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28756:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"28767:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28752:3:22"},"nodeType":"YulFunctionCall","src":"28752:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"28739:12:22"},"nodeType":"YulFunctionCall","src":"28739:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28729:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"28818:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"28820:77:22"},"nodeType":"YulFunctionCall","src":"28820:79:22"},"nodeType":"YulExpressionStatement","src":"28820:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"28790:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"28798:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28787:2:22"},"nodeType":"YulFunctionCall","src":"28787:30:22"},"nodeType":"YulIf","src":"28784:117:22"},{"nodeType":"YulAssignment","src":"28915:82:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28969:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"28980:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28965:3:22"},"nodeType":"YulFunctionCall","src":"28965:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28989:7:22"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"28933:31:22"},"nodeType":"YulFunctionCall","src":"28933:64:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"28915:6:22"},{"name":"value3","nodeType":"YulIdentifier","src":"28923:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28262:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"28273:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"28285:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28293:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"28301:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"28309:6:22","type":""}],"src":"28197:817:22"},{"body":{"nodeType":"YulBlock","src":"29103:391:22","statements":[{"body":{"nodeType":"YulBlock","src":"29149:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"29151:77:22"},"nodeType":"YulFunctionCall","src":"29151:79:22"},"nodeType":"YulExpressionStatement","src":"29151:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"29124:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"29133:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29120:3:22"},"nodeType":"YulFunctionCall","src":"29120:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"29145:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"29116:3:22"},"nodeType":"YulFunctionCall","src":"29116:32:22"},"nodeType":"YulIf","src":"29113:119:22"},{"nodeType":"YulBlock","src":"29242:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"29257:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"29271:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"29261:6:22","type":""}]},{"nodeType":"YulAssignment","src":"29286:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29321:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"29332:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29317:3:22"},"nodeType":"YulFunctionCall","src":"29317:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"29341:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"29296:20:22"},"nodeType":"YulFunctionCall","src":"29296:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"29286:6:22"}]}]},{"nodeType":"YulBlock","src":"29369:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"29384:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"29398:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"29388:6:22","type":""}]},{"nodeType":"YulAssignment","src":"29414:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29449:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"29460:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29445:3:22"},"nodeType":"YulFunctionCall","src":"29445:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"29469:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"29424:20:22"},"nodeType":"YulFunctionCall","src":"29424:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"29414:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29065:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"29076:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"29088:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"29096:6:22","type":""}],"src":"29020:474:22"},{"body":{"nodeType":"YulBlock","src":"29643:946:22","statements":[{"body":{"nodeType":"YulBlock","src":"29690:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"29692:77:22"},"nodeType":"YulFunctionCall","src":"29692:79:22"},"nodeType":"YulExpressionStatement","src":"29692:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"29664:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"29673:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29660:3:22"},"nodeType":"YulFunctionCall","src":"29660:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"29685:3:22","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"29656:3:22"},"nodeType":"YulFunctionCall","src":"29656:33:22"},"nodeType":"YulIf","src":"29653:120:22"},{"nodeType":"YulBlock","src":"29783:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"29798:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"29812:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"29802:6:22","type":""}]},{"nodeType":"YulAssignment","src":"29827:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29862:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"29873:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29858:3:22"},"nodeType":"YulFunctionCall","src":"29858:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"29882:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"29837:20:22"},"nodeType":"YulFunctionCall","src":"29837:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"29827:6:22"}]}]},{"nodeType":"YulBlock","src":"29910:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"29925:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"29939:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"29929:6:22","type":""}]},{"nodeType":"YulAssignment","src":"29955:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29990:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"30001:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29986:3:22"},"nodeType":"YulFunctionCall","src":"29986:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"30010:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"29965:20:22"},"nodeType":"YulFunctionCall","src":"29965:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"29955:6:22"}]}]},{"nodeType":"YulBlock","src":"30038:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"30053:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"30067:2:22","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"30057:6:22","type":""}]},{"nodeType":"YulAssignment","src":"30083:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30118:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"30129:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30114:3:22"},"nodeType":"YulFunctionCall","src":"30114:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"30138:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"30093:20:22"},"nodeType":"YulFunctionCall","src":"30093:53:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"30083:6:22"}]}]},{"nodeType":"YulBlock","src":"30166:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"30181:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"30195:2:22","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"30185:6:22","type":""}]},{"nodeType":"YulAssignment","src":"30211:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30246:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"30257:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30242:3:22"},"nodeType":"YulFunctionCall","src":"30242:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"30266:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"30221:20:22"},"nodeType":"YulFunctionCall","src":"30221:53:22"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"30211:6:22"}]}]},{"nodeType":"YulBlock","src":"30294:288:22","statements":[{"nodeType":"YulVariableDeclaration","src":"30309:47:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30340:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"30351:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30336:3:22"},"nodeType":"YulFunctionCall","src":"30336:19:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"30323:12:22"},"nodeType":"YulFunctionCall","src":"30323:33:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"30313:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"30403:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"30405:77:22"},"nodeType":"YulFunctionCall","src":"30405:79:22"},"nodeType":"YulExpressionStatement","src":"30405:79:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"30375:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"30383:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"30372:2:22"},"nodeType":"YulFunctionCall","src":"30372:30:22"},"nodeType":"YulIf","src":"30369:117:22"},{"nodeType":"YulAssignment","src":"30500:72:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30544:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"30555:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30540:3:22"},"nodeType":"YulFunctionCall","src":"30540:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"30564:7:22"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"30510:29:22"},"nodeType":"YulFunctionCall","src":"30510:62:22"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"30500:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29581:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"29592:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"29604:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"29612:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"29620:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"29628:6:22","type":""},{"name":"value4","nodeType":"YulTypedName","src":"29636:6:22","type":""}],"src":"29500:1089:22"},{"body":{"nodeType":"YulBlock","src":"30627:28:22","statements":[{"nodeType":"YulAssignment","src":"30637:12:22","value":{"name":"value","nodeType":"YulIdentifier","src":"30644:5:22"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"30637:3:22"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30613:5:22","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"30623:3:22","type":""}],"src":"30595:60:22"},{"body":{"nodeType":"YulBlock","src":"30721:82:22","statements":[{"nodeType":"YulAssignment","src":"30731:66:22","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30789:5:22"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"30771:17:22"},"nodeType":"YulFunctionCall","src":"30771:24:22"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"30762:8:22"},"nodeType":"YulFunctionCall","src":"30762:34:22"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"30744:17:22"},"nodeType":"YulFunctionCall","src":"30744:53:22"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"30731:9:22"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30701:5:22","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"30711:9:22","type":""}],"src":"30661:142:22"},{"body":{"nodeType":"YulBlock","src":"30869:66:22","statements":[{"nodeType":"YulAssignment","src":"30879:50:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30923:5:22"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"30892:30:22"},"nodeType":"YulFunctionCall","src":"30892:37:22"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"30879:9:22"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30849:5:22","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"30859:9:22","type":""}],"src":"30809:126:22"},{"body":{"nodeType":"YulBlock","src":"31016:66:22","statements":[{"nodeType":"YulAssignment","src":"31026:50:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31070:5:22"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"31039:30:22"},"nodeType":"YulFunctionCall","src":"31039:37:22"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"31026:9:22"}]}]},"name":"convert_t_contract$_IVotes_$2331_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30996:5:22","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"31006:9:22","type":""}],"src":"30941:141:22"},{"body":{"nodeType":"YulBlock","src":"31168:81:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31185:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31236:5:22"}],"functionName":{"name":"convert_t_contract$_IVotes_$2331_to_t_address","nodeType":"YulIdentifier","src":"31190:45:22"},"nodeType":"YulFunctionCall","src":"31190:52:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31178:6:22"},"nodeType":"YulFunctionCall","src":"31178:65:22"},"nodeType":"YulExpressionStatement","src":"31178:65:22"}]},"name":"abi_encode_t_contract$_IVotes_$2331_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31156:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"31163:3:22","type":""}],"src":"31088:161:22"},{"body":{"nodeType":"YulBlock","src":"31368:139:22","statements":[{"nodeType":"YulAssignment","src":"31378:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31390:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"31401:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31386:3:22"},"nodeType":"YulFunctionCall","src":"31386:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31378:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"31473:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31486:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"31497:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31482:3:22"},"nodeType":"YulFunctionCall","src":"31482:17:22"}],"functionName":{"name":"abi_encode_t_contract$_IVotes_$2331_to_t_address_fromStack","nodeType":"YulIdentifier","src":"31414:58:22"},"nodeType":"YulFunctionCall","src":"31414:86:22"},"nodeType":"YulExpressionStatement","src":"31414:86:22"}]},"name":"abi_encode_tuple_t_contract$_IVotes_$2331__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31340:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31352:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31363:4:22","type":""}],"src":"31255:252:22"},{"body":{"nodeType":"YulBlock","src":"31626:34:22","statements":[{"nodeType":"YulAssignment","src":"31636:18:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"31651:3:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"31636:11:22"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31598:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"31603:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"31614:11:22","type":""}],"src":"31513:147:22"},{"body":{"nodeType":"YulBlock","src":"31806:209:22","statements":[{"nodeType":"YulAssignment","src":"31816:95:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31899:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"31904:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"31823:75:22"},"nodeType":"YulFunctionCall","src":"31823:88:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31816:3:22"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"31958:5:22"},{"name":"pos","nodeType":"YulIdentifier","src":"31965:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"31970:6:22"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"31921:36:22"},"nodeType":"YulFunctionCall","src":"31921:56:22"},"nodeType":"YulExpressionStatement","src":"31921:56:22"},{"nodeType":"YulAssignment","src":"31986:23:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31997:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"32002:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31993:3:22"},"nodeType":"YulFunctionCall","src":"31993:16:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31986:3:22"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"31779:5:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"31786:6:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"31794:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31802:3:22","type":""}],"src":"31688:327:22"},{"body":{"nodeType":"YulBlock","src":"32165:147:22","statements":[{"nodeType":"YulAssignment","src":"32176:110:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"32265:6:22"},{"name":"value1","nodeType":"YulIdentifier","src":"32273:6:22"},{"name":"pos","nodeType":"YulIdentifier","src":"32282:3:22"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"32183:81:22"},"nodeType":"YulFunctionCall","src":"32183:103:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32176:3:22"}]},{"nodeType":"YulAssignment","src":"32296:10:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"32303:3:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32296:3:22"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32136:3:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"32142:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"32150:6:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32161:3:22","type":""}],"src":"32021:291:22"},{"body":{"nodeType":"YulBlock","src":"32379:51:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32396:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32417:5:22"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"32401:15:22"},"nodeType":"YulFunctionCall","src":"32401:22:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32389:6:22"},"nodeType":"YulFunctionCall","src":"32389:35:22"},"nodeType":"YulExpressionStatement","src":"32389:35:22"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32367:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"32374:3:22","type":""}],"src":"32318:112:22"},{"body":{"nodeType":"YulBlock","src":"32642:450:22","statements":[{"nodeType":"YulAssignment","src":"32652:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32664:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"32675:3:22","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32660:3:22"},"nodeType":"YulFunctionCall","src":"32660:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32652:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"32733:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32746:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"32757:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32742:3:22"},"nodeType":"YulFunctionCall","src":"32742:17:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"32689:43:22"},"nodeType":"YulFunctionCall","src":"32689:71:22"},"nodeType":"YulExpressionStatement","src":"32689:71:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"32814:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32827:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"32838:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32823:3:22"},"nodeType":"YulFunctionCall","src":"32823:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"32770:43:22"},"nodeType":"YulFunctionCall","src":"32770:72:22"},"nodeType":"YulExpressionStatement","src":"32770:72:22"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"32892:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32905:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"32916:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32901:3:22"},"nodeType":"YulFunctionCall","src":"32901:18:22"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"32852:39:22"},"nodeType":"YulFunctionCall","src":"32852:68:22"},"nodeType":"YulExpressionStatement","src":"32852:68:22"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"32974:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32987:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"32998:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32983:3:22"},"nodeType":"YulFunctionCall","src":"32983:18:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"32930:43:22"},"nodeType":"YulFunctionCall","src":"32930:72:22"},"nodeType":"YulExpressionStatement","src":"32930:72:22"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"33056:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33069:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"33080:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33065:3:22"},"nodeType":"YulFunctionCall","src":"33065:19:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"33012:43:22"},"nodeType":"YulFunctionCall","src":"33012:73:22"},"nodeType":"YulExpressionStatement","src":"33012:73:22"}]},"name":"abi_encode_tuple_t_bytes32_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32582:9:22","type":""},{"name":"value4","nodeType":"YulTypedName","src":"32594:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"32602:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"32610:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"32618:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"32626:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32637:4:22","type":""}],"src":"32436:656:22"},{"body":{"nodeType":"YulBlock","src":"33204:68:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33226:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"33234:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33222:3:22"},"nodeType":"YulFunctionCall","src":"33222:14:22"},{"hexValue":"476f7665726e6f723a206f6e6c79476f7665726e616e6365","kind":"string","nodeType":"YulLiteral","src":"33238:26:22","type":"","value":"Governor: onlyGovernance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33215:6:22"},"nodeType":"YulFunctionCall","src":"33215:50:22"},"nodeType":"YulExpressionStatement","src":"33215:50:22"}]},"name":"store_literal_in_memory_01397b9b23826f2770c44682f6f60114915147b09511a75fee3231adbc22847f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"33196:6:22","type":""}],"src":"33098:174:22"},{"body":{"nodeType":"YulBlock","src":"33424:220:22","statements":[{"nodeType":"YulAssignment","src":"33434:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33500:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"33505:2:22","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33441:58:22"},"nodeType":"YulFunctionCall","src":"33441:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33434:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33606:3:22"}],"functionName":{"name":"store_literal_in_memory_01397b9b23826f2770c44682f6f60114915147b09511a75fee3231adbc22847f","nodeType":"YulIdentifier","src":"33517:88:22"},"nodeType":"YulFunctionCall","src":"33517:93:22"},"nodeType":"YulExpressionStatement","src":"33517:93:22"},{"nodeType":"YulAssignment","src":"33619:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33630:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"33635:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33626:3:22"},"nodeType":"YulFunctionCall","src":"33626:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33619:3:22"}]}]},"name":"abi_encode_t_stringliteral_01397b9b23826f2770c44682f6f60114915147b09511a75fee3231adbc22847f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33412:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33420:3:22","type":""}],"src":"33278:366:22"},{"body":{"nodeType":"YulBlock","src":"33821:248:22","statements":[{"nodeType":"YulAssignment","src":"33831:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33843:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"33854:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33839:3:22"},"nodeType":"YulFunctionCall","src":"33839:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33831:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33878:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"33889:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33874:3:22"},"nodeType":"YulFunctionCall","src":"33874:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33897:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"33903:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33893:3:22"},"nodeType":"YulFunctionCall","src":"33893:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33867:6:22"},"nodeType":"YulFunctionCall","src":"33867:47:22"},"nodeType":"YulExpressionStatement","src":"33867:47:22"},{"nodeType":"YulAssignment","src":"33923:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34057:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_01397b9b23826f2770c44682f6f60114915147b09511a75fee3231adbc22847f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33931:124:22"},"nodeType":"YulFunctionCall","src":"33931:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33923:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_01397b9b23826f2770c44682f6f60114915147b09511a75fee3231adbc22847f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33801:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33816:4:22","type":""}],"src":"33650:419:22"},{"body":{"nodeType":"YulBlock","src":"34103:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34120:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"34123:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34113:6:22"},"nodeType":"YulFunctionCall","src":"34113:88:22"},"nodeType":"YulExpressionStatement","src":"34113:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34217:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"34220:4:22","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34210:6:22"},"nodeType":"YulFunctionCall","src":"34210:15:22"},"nodeType":"YulExpressionStatement","src":"34210:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34241:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"34244:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"34234:6:22"},"nodeType":"YulFunctionCall","src":"34234:15:22"},"nodeType":"YulExpressionStatement","src":"34234:15:22"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"34075:180:22"},{"body":{"nodeType":"YulBlock","src":"34312:269:22","statements":[{"nodeType":"YulAssignment","src":"34322:22:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"34336:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"34342:1:22","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"34332:3:22"},"nodeType":"YulFunctionCall","src":"34332:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"34322:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"34353:38:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"34383:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"34389:1:22","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"34379:3:22"},"nodeType":"YulFunctionCall","src":"34379:12:22"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"34357:18:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"34430:51:22","statements":[{"nodeType":"YulAssignment","src":"34444:27:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"34458:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"34466:4:22","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"34454:3:22"},"nodeType":"YulFunctionCall","src":"34454:17:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"34444:6:22"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"34410:18:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34403:6:22"},"nodeType":"YulFunctionCall","src":"34403:26:22"},"nodeType":"YulIf","src":"34400:81:22"},{"body":{"nodeType":"YulBlock","src":"34533:42:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"34547:16:22"},"nodeType":"YulFunctionCall","src":"34547:18:22"},"nodeType":"YulExpressionStatement","src":"34547:18:22"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"34497:18:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"34520:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"34528:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"34517:2:22"},"nodeType":"YulFunctionCall","src":"34517:14:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"34494:2:22"},"nodeType":"YulFunctionCall","src":"34494:38:22"},"nodeType":"YulIf","src":"34491:84:22"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"34296:4:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"34305:6:22","type":""}],"src":"34261:320:22"},{"body":{"nodeType":"YulBlock","src":"34693:114:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34715:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"34723:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34711:3:22"},"nodeType":"YulFunctionCall","src":"34711:14:22"},{"hexValue":"476f7665726e6f723a2070726f706f73616c206e6f7420737563636573736675","kind":"string","nodeType":"YulLiteral","src":"34727:34:22","type":"","value":"Governor: proposal not successfu"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34704:6:22"},"nodeType":"YulFunctionCall","src":"34704:58:22"},"nodeType":"YulExpressionStatement","src":"34704:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34783:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"34791:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34779:3:22"},"nodeType":"YulFunctionCall","src":"34779:15:22"},{"hexValue":"6c","kind":"string","nodeType":"YulLiteral","src":"34796:3:22","type":"","value":"l"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34772:6:22"},"nodeType":"YulFunctionCall","src":"34772:28:22"},"nodeType":"YulExpressionStatement","src":"34772:28:22"}]},"name":"store_literal_in_memory_a608627370ddd238e48feab42026732822e64969fe5a8155723eaa5f397576d9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"34685:6:22","type":""}],"src":"34587:220:22"},{"body":{"nodeType":"YulBlock","src":"34959:220:22","statements":[{"nodeType":"YulAssignment","src":"34969:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35035:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"35040:2:22","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34976:58:22"},"nodeType":"YulFunctionCall","src":"34976:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34969:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35141:3:22"}],"functionName":{"name":"store_literal_in_memory_a608627370ddd238e48feab42026732822e64969fe5a8155723eaa5f397576d9","nodeType":"YulIdentifier","src":"35052:88:22"},"nodeType":"YulFunctionCall","src":"35052:93:22"},"nodeType":"YulExpressionStatement","src":"35052:93:22"},{"nodeType":"YulAssignment","src":"35154:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35165:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"35170:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35161:3:22"},"nodeType":"YulFunctionCall","src":"35161:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35154:3:22"}]}]},"name":"abi_encode_t_stringliteral_a608627370ddd238e48feab42026732822e64969fe5a8155723eaa5f397576d9_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34947:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34955:3:22","type":""}],"src":"34813:366:22"},{"body":{"nodeType":"YulBlock","src":"35356:248:22","statements":[{"nodeType":"YulAssignment","src":"35366:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35378:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"35389:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35374:3:22"},"nodeType":"YulFunctionCall","src":"35374:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35366:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35413:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"35424:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35409:3:22"},"nodeType":"YulFunctionCall","src":"35409:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35432:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"35438:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35428:3:22"},"nodeType":"YulFunctionCall","src":"35428:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35402:6:22"},"nodeType":"YulFunctionCall","src":"35402:47:22"},"nodeType":"YulExpressionStatement","src":"35402:47:22"},{"nodeType":"YulAssignment","src":"35458:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35592:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_a608627370ddd238e48feab42026732822e64969fe5a8155723eaa5f397576d9_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35466:124:22"},"nodeType":"YulFunctionCall","src":"35466:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35458:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_a608627370ddd238e48feab42026732822e64969fe5a8155723eaa5f397576d9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35336:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35351:4:22","type":""}],"src":"35185:419:22"},{"body":{"nodeType":"YulBlock","src":"35760:284:22","statements":[{"nodeType":"YulAssignment","src":"35770:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35782:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"35793:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35778:3:22"},"nodeType":"YulFunctionCall","src":"35778:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35770:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"35850:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35863:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"35874:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35859:3:22"},"nodeType":"YulFunctionCall","src":"35859:17:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"35806:43:22"},"nodeType":"YulFunctionCall","src":"35806:71:22"},"nodeType":"YulExpressionStatement","src":"35806:71:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"35931:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35944:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"35955:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35940:3:22"},"nodeType":"YulFunctionCall","src":"35940:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"35887:43:22"},"nodeType":"YulFunctionCall","src":"35887:72:22"},"nodeType":"YulExpressionStatement","src":"35887:72:22"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"36009:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36022:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"36033:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36018:3:22"},"nodeType":"YulFunctionCall","src":"36018:18:22"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"35969:39:22"},"nodeType":"YulFunctionCall","src":"35969:68:22"},"nodeType":"YulExpressionStatement","src":"35969:68:22"}]},"name":"abi_encode_tuple_t_bytes32_t_uint256_t_uint8__to_t_bytes32_t_uint256_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35716:9:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"35728:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"35736:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"35744:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35755:4:22","type":""}],"src":"35610:434:22"},{"body":{"nodeType":"YulBlock","src":"36156:73:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36178:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"36186:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36174:3:22"},"nodeType":"YulFunctionCall","src":"36174:14:22"},{"hexValue":"476f7665726e6f723a20756e6b6e6f776e2070726f706f73616c206964","kind":"string","nodeType":"YulLiteral","src":"36190:31:22","type":"","value":"Governor: unknown proposal id"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36167:6:22"},"nodeType":"YulFunctionCall","src":"36167:55:22"},"nodeType":"YulExpressionStatement","src":"36167:55:22"}]},"name":"store_literal_in_memory_be0e8e67d15e920d3846a46401854a27a676d8965bbdde05e68fc2cc5672c892","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"36148:6:22","type":""}],"src":"36050:179:22"},{"body":{"nodeType":"YulBlock","src":"36381:220:22","statements":[{"nodeType":"YulAssignment","src":"36391:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36457:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"36462:2:22","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36398:58:22"},"nodeType":"YulFunctionCall","src":"36398:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36391:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36563:3:22"}],"functionName":{"name":"store_literal_in_memory_be0e8e67d15e920d3846a46401854a27a676d8965bbdde05e68fc2cc5672c892","nodeType":"YulIdentifier","src":"36474:88:22"},"nodeType":"YulFunctionCall","src":"36474:93:22"},"nodeType":"YulExpressionStatement","src":"36474:93:22"},{"nodeType":"YulAssignment","src":"36576:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36587:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"36592:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36583:3:22"},"nodeType":"YulFunctionCall","src":"36583:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36576:3:22"}]}]},"name":"abi_encode_t_stringliteral_be0e8e67d15e920d3846a46401854a27a676d8965bbdde05e68fc2cc5672c892_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36369:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36377:3:22","type":""}],"src":"36235:366:22"},{"body":{"nodeType":"YulBlock","src":"36778:248:22","statements":[{"nodeType":"YulAssignment","src":"36788:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36800:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"36811:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36796:3:22"},"nodeType":"YulFunctionCall","src":"36796:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36788:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36835:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"36846:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36831:3:22"},"nodeType":"YulFunctionCall","src":"36831:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36854:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"36860:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36850:3:22"},"nodeType":"YulFunctionCall","src":"36850:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36824:6:22"},"nodeType":"YulFunctionCall","src":"36824:47:22"},"nodeType":"YulExpressionStatement","src":"36824:47:22"},{"nodeType":"YulAssignment","src":"36880:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37014:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_be0e8e67d15e920d3846a46401854a27a676d8965bbdde05e68fc2cc5672c892_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36888:124:22"},"nodeType":"YulFunctionCall","src":"36888:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36880:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_be0e8e67d15e920d3846a46401854a27a676d8965bbdde05e68fc2cc5672c892__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36758:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36773:4:22","type":""}],"src":"36607:419:22"},{"body":{"nodeType":"YulBlock","src":"37060:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37077:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37080:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37070:6:22"},"nodeType":"YulFunctionCall","src":"37070:88:22"},"nodeType":"YulExpressionStatement","src":"37070:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37174:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"37177:4:22","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37167:6:22"},"nodeType":"YulFunctionCall","src":"37167:15:22"},"nodeType":"YulExpressionStatement","src":"37167:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37198:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37201:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"37191:6:22"},"nodeType":"YulFunctionCall","src":"37191:15:22"},"nodeType":"YulExpressionStatement","src":"37191:15:22"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"37032:180:22"},{"body":{"nodeType":"YulBlock","src":"37263:149:22","statements":[{"nodeType":"YulAssignment","src":"37273:25:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"37296:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"37278:17:22"},"nodeType":"YulFunctionCall","src":"37278:20:22"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"37273:1:22"}]},{"nodeType":"YulAssignment","src":"37307:25:22","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"37330:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"37312:17:22"},"nodeType":"YulFunctionCall","src":"37312:20:22"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"37307:1:22"}]},{"nodeType":"YulAssignment","src":"37341:17:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"37353:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"37356:1:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37349:3:22"},"nodeType":"YulFunctionCall","src":"37349:9:22"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"37341:4:22"}]},{"body":{"nodeType":"YulBlock","src":"37383:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"37385:16:22"},"nodeType":"YulFunctionCall","src":"37385:18:22"},"nodeType":"YulExpressionStatement","src":"37385:18:22"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"37374:4:22"},{"name":"x","nodeType":"YulIdentifier","src":"37380:1:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"37371:2:22"},"nodeType":"YulFunctionCall","src":"37371:11:22"},"nodeType":"YulIf","src":"37368:37:22"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"37249:1:22","type":""},{"name":"y","nodeType":"YulTypedName","src":"37252:1:22","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"37258:4:22","type":""}],"src":"37218:194:22"},{"body":{"nodeType":"YulBlock","src":"37446:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37463:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37466:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37456:6:22"},"nodeType":"YulFunctionCall","src":"37456:88:22"},"nodeType":"YulExpressionStatement","src":"37456:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37560:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"37563:4:22","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37553:6:22"},"nodeType":"YulFunctionCall","src":"37553:15:22"},"nodeType":"YulExpressionStatement","src":"37553:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37584:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37587:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"37577:6:22"},"nodeType":"YulFunctionCall","src":"37577:15:22"},"nodeType":"YulExpressionStatement","src":"37577:15:22"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"37418:180:22"},{"body":{"nodeType":"YulBlock","src":"37710:130:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37732:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"37740:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37728:3:22"},"nodeType":"YulFunctionCall","src":"37728:14:22"},{"hexValue":"476f7665726e6f723a2070726f706f73657220766f7465732062656c6f772070","kind":"string","nodeType":"YulLiteral","src":"37744:34:22","type":"","value":"Governor: proposer votes below p"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37721:6:22"},"nodeType":"YulFunctionCall","src":"37721:58:22"},"nodeType":"YulExpressionStatement","src":"37721:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37800:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"37808:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37796:3:22"},"nodeType":"YulFunctionCall","src":"37796:15:22"},{"hexValue":"726f706f73616c207468726573686f6c64","kind":"string","nodeType":"YulLiteral","src":"37813:19:22","type":"","value":"roposal threshold"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37789:6:22"},"nodeType":"YulFunctionCall","src":"37789:44:22"},"nodeType":"YulExpressionStatement","src":"37789:44:22"}]},"name":"store_literal_in_memory_df78ee0077e11770202b643d4ac130b9964a5ac311c9b8d8ed6242eb4e2dcf86","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"37702:6:22","type":""}],"src":"37604:236:22"},{"body":{"nodeType":"YulBlock","src":"37992:220:22","statements":[{"nodeType":"YulAssignment","src":"38002:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38068:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"38073:2:22","type":"","value":"49"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38009:58:22"},"nodeType":"YulFunctionCall","src":"38009:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38002:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38174:3:22"}],"functionName":{"name":"store_literal_in_memory_df78ee0077e11770202b643d4ac130b9964a5ac311c9b8d8ed6242eb4e2dcf86","nodeType":"YulIdentifier","src":"38085:88:22"},"nodeType":"YulFunctionCall","src":"38085:93:22"},"nodeType":"YulExpressionStatement","src":"38085:93:22"},{"nodeType":"YulAssignment","src":"38187:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38198:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"38203:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38194:3:22"},"nodeType":"YulFunctionCall","src":"38194:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38187:3:22"}]}]},"name":"abi_encode_t_stringliteral_df78ee0077e11770202b643d4ac130b9964a5ac311c9b8d8ed6242eb4e2dcf86_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37980:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37988:3:22","type":""}],"src":"37846:366:22"},{"body":{"nodeType":"YulBlock","src":"38389:248:22","statements":[{"nodeType":"YulAssignment","src":"38399:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38411:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"38422:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38407:3:22"},"nodeType":"YulFunctionCall","src":"38407:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38399:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38446:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"38457:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38442:3:22"},"nodeType":"YulFunctionCall","src":"38442:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38465:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"38471:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38461:3:22"},"nodeType":"YulFunctionCall","src":"38461:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38435:6:22"},"nodeType":"YulFunctionCall","src":"38435:47:22"},"nodeType":"YulExpressionStatement","src":"38435:47:22"},{"nodeType":"YulAssignment","src":"38491:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38625:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_df78ee0077e11770202b643d4ac130b9964a5ac311c9b8d8ed6242eb4e2dcf86_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38499:124:22"},"nodeType":"YulFunctionCall","src":"38499:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38491:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_df78ee0077e11770202b643d4ac130b9964a5ac311c9b8d8ed6242eb4e2dcf86__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38369:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38384:4:22","type":""}],"src":"38218:419:22"},{"body":{"nodeType":"YulBlock","src":"38749:114:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38771:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"38779:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38767:3:22"},"nodeType":"YulFunctionCall","src":"38767:14:22"},{"hexValue":"476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e6774","kind":"string","nodeType":"YulLiteral","src":"38783:34:22","type":"","value":"Governor: invalid proposal lengt"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38760:6:22"},"nodeType":"YulFunctionCall","src":"38760:58:22"},"nodeType":"YulExpressionStatement","src":"38760:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38839:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"38847:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38835:3:22"},"nodeType":"YulFunctionCall","src":"38835:15:22"},{"hexValue":"68","kind":"string","nodeType":"YulLiteral","src":"38852:3:22","type":"","value":"h"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38828:6:22"},"nodeType":"YulFunctionCall","src":"38828:28:22"},"nodeType":"YulExpressionStatement","src":"38828:28:22"}]},"name":"store_literal_in_memory_35c793b1b5a6be245307722bba06fa552ac609ebfd70358ab0b3220eed40db4d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"38741:6:22","type":""}],"src":"38643:220:22"},{"body":{"nodeType":"YulBlock","src":"39015:220:22","statements":[{"nodeType":"YulAssignment","src":"39025:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39091:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"39096:2:22","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39032:58:22"},"nodeType":"YulFunctionCall","src":"39032:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39025:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39197:3:22"}],"functionName":{"name":"store_literal_in_memory_35c793b1b5a6be245307722bba06fa552ac609ebfd70358ab0b3220eed40db4d","nodeType":"YulIdentifier","src":"39108:88:22"},"nodeType":"YulFunctionCall","src":"39108:93:22"},"nodeType":"YulExpressionStatement","src":"39108:93:22"},{"nodeType":"YulAssignment","src":"39210:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39221:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"39226:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39217:3:22"},"nodeType":"YulFunctionCall","src":"39217:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39210:3:22"}]}]},"name":"abi_encode_t_stringliteral_35c793b1b5a6be245307722bba06fa552ac609ebfd70358ab0b3220eed40db4d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39003:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39011:3:22","type":""}],"src":"38869:366:22"},{"body":{"nodeType":"YulBlock","src":"39412:248:22","statements":[{"nodeType":"YulAssignment","src":"39422:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39434:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"39445:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39430:3:22"},"nodeType":"YulFunctionCall","src":"39430:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39422:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39469:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"39480:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39465:3:22"},"nodeType":"YulFunctionCall","src":"39465:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39488:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"39494:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39484:3:22"},"nodeType":"YulFunctionCall","src":"39484:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39458:6:22"},"nodeType":"YulFunctionCall","src":"39458:47:22"},"nodeType":"YulExpressionStatement","src":"39458:47:22"},{"nodeType":"YulAssignment","src":"39514:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39648:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_35c793b1b5a6be245307722bba06fa552ac609ebfd70358ab0b3220eed40db4d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39522:124:22"},"nodeType":"YulFunctionCall","src":"39522:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39514:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_35c793b1b5a6be245307722bba06fa552ac609ebfd70358ab0b3220eed40db4d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39392:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39407:4:22","type":""}],"src":"39241:419:22"},{"body":{"nodeType":"YulBlock","src":"39772:68:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39794:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"39802:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39790:3:22"},"nodeType":"YulFunctionCall","src":"39790:14:22"},{"hexValue":"476f7665726e6f723a20656d7074792070726f706f73616c","kind":"string","nodeType":"YulLiteral","src":"39806:26:22","type":"","value":"Governor: empty proposal"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39783:6:22"},"nodeType":"YulFunctionCall","src":"39783:50:22"},"nodeType":"YulExpressionStatement","src":"39783:50:22"}]},"name":"store_literal_in_memory_8400b334e0df18026c76df742cddc258619f9923d5f5b8ba67cd6eec1d1f3513","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"39764:6:22","type":""}],"src":"39666:174:22"},{"body":{"nodeType":"YulBlock","src":"39992:220:22","statements":[{"nodeType":"YulAssignment","src":"40002:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40068:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"40073:2:22","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40009:58:22"},"nodeType":"YulFunctionCall","src":"40009:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"40002:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40174:3:22"}],"functionName":{"name":"store_literal_in_memory_8400b334e0df18026c76df742cddc258619f9923d5f5b8ba67cd6eec1d1f3513","nodeType":"YulIdentifier","src":"40085:88:22"},"nodeType":"YulFunctionCall","src":"40085:93:22"},"nodeType":"YulExpressionStatement","src":"40085:93:22"},{"nodeType":"YulAssignment","src":"40187:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40198:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"40203:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40194:3:22"},"nodeType":"YulFunctionCall","src":"40194:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"40187:3:22"}]}]},"name":"abi_encode_t_stringliteral_8400b334e0df18026c76df742cddc258619f9923d5f5b8ba67cd6eec1d1f3513_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39980:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39988:3:22","type":""}],"src":"39846:366:22"},{"body":{"nodeType":"YulBlock","src":"40389:248:22","statements":[{"nodeType":"YulAssignment","src":"40399:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40411:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"40422:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40407:3:22"},"nodeType":"YulFunctionCall","src":"40407:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40399:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40446:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"40457:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40442:3:22"},"nodeType":"YulFunctionCall","src":"40442:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40465:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"40471:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40461:3:22"},"nodeType":"YulFunctionCall","src":"40461:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40435:6:22"},"nodeType":"YulFunctionCall","src":"40435:47:22"},"nodeType":"YulExpressionStatement","src":"40435:47:22"},{"nodeType":"YulAssignment","src":"40491:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40625:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_8400b334e0df18026c76df742cddc258619f9923d5f5b8ba67cd6eec1d1f3513_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40499:124:22"},"nodeType":"YulFunctionCall","src":"40499:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40491:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_8400b334e0df18026c76df742cddc258619f9923d5f5b8ba67cd6eec1d1f3513__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40369:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40384:4:22","type":""}],"src":"40218:419:22"},{"body":{"nodeType":"YulBlock","src":"40749:114:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40771:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"40779:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40767:3:22"},"nodeType":"YulFunctionCall","src":"40767:14:22"},{"hexValue":"476f7665726e6f723a2070726f706f73616c20616c7265616479206578697374","kind":"string","nodeType":"YulLiteral","src":"40783:34:22","type":"","value":"Governor: proposal already exist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40760:6:22"},"nodeType":"YulFunctionCall","src":"40760:58:22"},"nodeType":"YulExpressionStatement","src":"40760:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40839:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"40847:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40835:3:22"},"nodeType":"YulFunctionCall","src":"40835:15:22"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"40852:3:22","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40828:6:22"},"nodeType":"YulFunctionCall","src":"40828:28:22"},"nodeType":"YulExpressionStatement","src":"40828:28:22"}]},"name":"store_literal_in_memory_c1bb0f67bc14091429c4b8b5d74e1f929b2838d72b5fb3c5a2cbef13b2faab40","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"40741:6:22","type":""}],"src":"40643:220:22"},{"body":{"nodeType":"YulBlock","src":"41015:220:22","statements":[{"nodeType":"YulAssignment","src":"41025:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41091:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"41096:2:22","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41032:58:22"},"nodeType":"YulFunctionCall","src":"41032:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"41025:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41197:3:22"}],"functionName":{"name":"store_literal_in_memory_c1bb0f67bc14091429c4b8b5d74e1f929b2838d72b5fb3c5a2cbef13b2faab40","nodeType":"YulIdentifier","src":"41108:88:22"},"nodeType":"YulFunctionCall","src":"41108:93:22"},"nodeType":"YulExpressionStatement","src":"41108:93:22"},{"nodeType":"YulAssignment","src":"41210:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41221:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"41226:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41217:3:22"},"nodeType":"YulFunctionCall","src":"41217:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"41210:3:22"}]}]},"name":"abi_encode_t_stringliteral_c1bb0f67bc14091429c4b8b5d74e1f929b2838d72b5fb3c5a2cbef13b2faab40_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"41003:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"41011:3:22","type":""}],"src":"40869:366:22"},{"body":{"nodeType":"YulBlock","src":"41412:248:22","statements":[{"nodeType":"YulAssignment","src":"41422:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41434:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"41445:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41430:3:22"},"nodeType":"YulFunctionCall","src":"41430:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41422:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41469:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"41480:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41465:3:22"},"nodeType":"YulFunctionCall","src":"41465:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41488:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"41494:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"41484:3:22"},"nodeType":"YulFunctionCall","src":"41484:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41458:6:22"},"nodeType":"YulFunctionCall","src":"41458:47:22"},"nodeType":"YulExpressionStatement","src":"41458:47:22"},{"nodeType":"YulAssignment","src":"41514:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41648:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_c1bb0f67bc14091429c4b8b5d74e1f929b2838d72b5fb3c5a2cbef13b2faab40_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41522:124:22"},"nodeType":"YulFunctionCall","src":"41522:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41514:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_c1bb0f67bc14091429c4b8b5d74e1f929b2838d72b5fb3c5a2cbef13b2faab40__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41392:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"41407:4:22","type":""}],"src":"41241:419:22"},{"body":{"nodeType":"YulBlock","src":"41710:57:22","statements":[{"nodeType":"YulAssignment","src":"41720:41:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41735:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"41742:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"41731:3:22"},"nodeType":"YulFunctionCall","src":"41731:30:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"41720:7:22"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41692:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"41702:7:22","type":""}],"src":"41666:101:22"},{"body":{"nodeType":"YulBlock","src":"41816:162:22","statements":[{"nodeType":"YulAssignment","src":"41826:24:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"41848:1:22"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"41831:16:22"},"nodeType":"YulFunctionCall","src":"41831:19:22"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"41826:1:22"}]},{"nodeType":"YulAssignment","src":"41859:24:22","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"41881:1:22"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"41864:16:22"},"nodeType":"YulFunctionCall","src":"41864:19:22"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"41859:1:22"}]},{"nodeType":"YulAssignment","src":"41892:16:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"41903:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"41906:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41899:3:22"},"nodeType":"YulFunctionCall","src":"41899:9:22"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"41892:3:22"}]},{"body":{"nodeType":"YulBlock","src":"41949:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"41951:16:22"},"nodeType":"YulFunctionCall","src":"41951:18:22"},"nodeType":"YulExpressionStatement","src":"41951:18:22"}]},"condition":{"arguments":[{"name":"sum","nodeType":"YulIdentifier","src":"41924:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"41929:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"41921:2:22"},"nodeType":"YulFunctionCall","src":"41921:27:22"},"nodeType":"YulIf","src":"41918:53:22"}]},"name":"checked_add_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"41803:1:22","type":""},{"name":"y","nodeType":"YulTypedName","src":"41806:1:22","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"41812:3:22","type":""}],"src":"41773:205:22"},{"body":{"nodeType":"YulBlock","src":"42049:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42066:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"42089:5:22"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"42071:17:22"},"nodeType":"YulFunctionCall","src":"42071:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42059:6:22"},"nodeType":"YulFunctionCall","src":"42059:37:22"},"nodeType":"YulExpressionStatement","src":"42059:37:22"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"42037:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"42044:3:22","type":""}],"src":"41984:118:22"},{"body":{"nodeType":"YulBlock","src":"42182:40:22","statements":[{"nodeType":"YulAssignment","src":"42193:22:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"42209:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"42203:5:22"},"nodeType":"YulFunctionCall","src":"42203:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"42193:6:22"}]}]},"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"42165:5:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"42175:6:22","type":""}],"src":"42108:114:22"},{"body":{"nodeType":"YulBlock","src":"42339:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42356:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"42361:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42349:6:22"},"nodeType":"YulFunctionCall","src":"42349:19:22"},"nodeType":"YulExpressionStatement","src":"42349:19:22"},{"nodeType":"YulAssignment","src":"42377:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42396:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"42401:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42392:3:22"},"nodeType":"YulFunctionCall","src":"42392:14:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"42377:11:22"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"42311:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"42316:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"42327:11:22","type":""}],"src":"42228:184:22"},{"body":{"nodeType":"YulBlock","src":"42490:60:22","statements":[{"nodeType":"YulAssignment","src":"42500:11:22","value":{"name":"ptr","nodeType":"YulIdentifier","src":"42508:3:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"42500:4:22"}]},{"nodeType":"YulAssignment","src":"42521:22:22","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"42533:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"42538:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42529:3:22"},"nodeType":"YulFunctionCall","src":"42529:14:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"42521:4:22"}]}]},"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"42477:3:22","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"42485:4:22","type":""}],"src":"42418:132:22"},{"body":{"nodeType":"YulBlock","src":"42611:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42628:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"42651:5:22"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"42633:17:22"},"nodeType":"YulFunctionCall","src":"42633:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42621:6:22"},"nodeType":"YulFunctionCall","src":"42621:37:22"},"nodeType":"YulExpressionStatement","src":"42621:37:22"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"42599:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"42606:3:22","type":""}],"src":"42556:108:22"},{"body":{"nodeType":"YulBlock","src":"42750:99:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"42794:6:22"},{"name":"pos","nodeType":"YulIdentifier","src":"42802:3:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"42760:33:22"},"nodeType":"YulFunctionCall","src":"42760:46:22"},"nodeType":"YulExpressionStatement","src":"42760:46:22"},{"nodeType":"YulAssignment","src":"42815:28:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42833:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"42838:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42829:3:22"},"nodeType":"YulFunctionCall","src":"42829:14:22"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"42815:10:22"}]}]},"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"42723:6:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"42731:3:22","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"42739:10:22","type":""}],"src":"42670:179:22"},{"body":{"nodeType":"YulBlock","src":"42930:38:22","statements":[{"nodeType":"YulAssignment","src":"42940:22:22","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"42952:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"42957:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42948:3:22"},"nodeType":"YulFunctionCall","src":"42948:14:22"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"42940:4:22"}]}]},"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"42917:3:22","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"42925:4:22","type":""}],"src":"42855:113:22"},{"body":{"nodeType":"YulBlock","src":"43128:608:22","statements":[{"nodeType":"YulVariableDeclaration","src":"43138:68:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43200:5:22"}],"functionName":{"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"43152:47:22"},"nodeType":"YulFunctionCall","src":"43152:54:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"43142:6:22","type":""}]},{"nodeType":"YulAssignment","src":"43215:93:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43296:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"43301:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43222:73:22"},"nodeType":"YulFunctionCall","src":"43222:86:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"43215:3:22"}]},{"nodeType":"YulVariableDeclaration","src":"43317:71:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43382:5:22"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"43332:49:22"},"nodeType":"YulFunctionCall","src":"43332:56:22"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"43321:7:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"43397:21:22","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"43411:7:22"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"43401:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"43487:224:22","statements":[{"nodeType":"YulVariableDeclaration","src":"43501:34:22","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"43528:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"43522:5:22"},"nodeType":"YulFunctionCall","src":"43522:13:22"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"43505:13:22","type":""}]},{"nodeType":"YulAssignment","src":"43548:70:22","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"43599:13:22"},{"name":"pos","nodeType":"YulIdentifier","src":"43614:3:22"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulIdentifier","src":"43555:43:22"},"nodeType":"YulFunctionCall","src":"43555:63:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"43548:3:22"}]},{"nodeType":"YulAssignment","src":"43631:70:22","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"43694:6:22"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"43641:52:22"},"nodeType":"YulFunctionCall","src":"43641:60:22"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"43631:6:22"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"43449:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"43452:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"43446:2:22"},"nodeType":"YulFunctionCall","src":"43446:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"43460:18:22","statements":[{"nodeType":"YulAssignment","src":"43462:14:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"43471:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"43474:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43467:3:22"},"nodeType":"YulFunctionCall","src":"43467:9:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"43462:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"43431:14:22","statements":[{"nodeType":"YulVariableDeclaration","src":"43433:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"43442:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"43437:1:22","type":""}]}]},"src":"43427:284:22"},{"nodeType":"YulAssignment","src":"43720:10:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"43727:3:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"43720:3:22"}]}]},"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"43107:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"43114:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"43123:3:22","type":""}],"src":"43004:732:22"},{"body":{"nodeType":"YulBlock","src":"43816:40:22","statements":[{"nodeType":"YulAssignment","src":"43827:22:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43843:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"43837:5:22"},"nodeType":"YulFunctionCall","src":"43837:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"43827:6:22"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"43799:5:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"43809:6:22","type":""}],"src":"43742:114:22"},{"body":{"nodeType":"YulBlock","src":"43973:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43990:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"43995:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43983:6:22"},"nodeType":"YulFunctionCall","src":"43983:19:22"},"nodeType":"YulExpressionStatement","src":"43983:19:22"},{"nodeType":"YulAssignment","src":"44011:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44030:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"44035:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44026:3:22"},"nodeType":"YulFunctionCall","src":"44026:14:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"44011:11:22"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"43945:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"43950:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"43961:11:22","type":""}],"src":"43862:184:22"},{"body":{"nodeType":"YulBlock","src":"44124:60:22","statements":[{"nodeType":"YulAssignment","src":"44134:11:22","value":{"name":"ptr","nodeType":"YulIdentifier","src":"44142:3:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"44134:4:22"}]},{"nodeType":"YulAssignment","src":"44155:22:22","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"44167:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"44172:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44163:3:22"},"nodeType":"YulFunctionCall","src":"44163:14:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"44155:4:22"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"44111:3:22","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"44119:4:22","type":""}],"src":"44052:132:22"},{"body":{"nodeType":"YulBlock","src":"44245:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44262:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"44285:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"44267:17:22"},"nodeType":"YulFunctionCall","src":"44267:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44255:6:22"},"nodeType":"YulFunctionCall","src":"44255:37:22"},"nodeType":"YulExpressionStatement","src":"44255:37:22"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"44233:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"44240:3:22","type":""}],"src":"44190:108:22"},{"body":{"nodeType":"YulBlock","src":"44384:99:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"44428:6:22"},{"name":"pos","nodeType":"YulIdentifier","src":"44436:3:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"44394:33:22"},"nodeType":"YulFunctionCall","src":"44394:46:22"},"nodeType":"YulExpressionStatement","src":"44394:46:22"},{"nodeType":"YulAssignment","src":"44449:28:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44467:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"44472:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44463:3:22"},"nodeType":"YulFunctionCall","src":"44463:14:22"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"44449:10:22"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"44357:6:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"44365:3:22","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"44373:10:22","type":""}],"src":"44304:179:22"},{"body":{"nodeType":"YulBlock","src":"44564:38:22","statements":[{"nodeType":"YulAssignment","src":"44574:22:22","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"44586:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"44591:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44582:3:22"},"nodeType":"YulFunctionCall","src":"44582:14:22"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"44574:4:22"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"44551:3:22","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"44559:4:22","type":""}],"src":"44489:113:22"},{"body":{"nodeType":"YulBlock","src":"44762:608:22","statements":[{"nodeType":"YulVariableDeclaration","src":"44772:68:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"44834:5:22"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"44786:47:22"},"nodeType":"YulFunctionCall","src":"44786:54:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"44776:6:22","type":""}]},{"nodeType":"YulAssignment","src":"44849:93:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44930:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"44935:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44856:73:22"},"nodeType":"YulFunctionCall","src":"44856:86:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"44849:3:22"}]},{"nodeType":"YulVariableDeclaration","src":"44951:71:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"45016:5:22"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"44966:49:22"},"nodeType":"YulFunctionCall","src":"44966:56:22"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"44955:7:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"45031:21:22","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"45045:7:22"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"45035:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"45121:224:22","statements":[{"nodeType":"YulVariableDeclaration","src":"45135:34:22","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"45162:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"45156:5:22"},"nodeType":"YulFunctionCall","src":"45156:13:22"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"45139:13:22","type":""}]},{"nodeType":"YulAssignment","src":"45182:70:22","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"45233:13:22"},{"name":"pos","nodeType":"YulIdentifier","src":"45248:3:22"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"45189:43:22"},"nodeType":"YulFunctionCall","src":"45189:63:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"45182:3:22"}]},{"nodeType":"YulAssignment","src":"45265:70:22","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"45328:6:22"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"45275:52:22"},"nodeType":"YulFunctionCall","src":"45275:60:22"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"45265:6:22"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"45083:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"45086:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"45080:2:22"},"nodeType":"YulFunctionCall","src":"45080:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"45094:18:22","statements":[{"nodeType":"YulAssignment","src":"45096:14:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"45105:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"45108:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45101:3:22"},"nodeType":"YulFunctionCall","src":"45101:9:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"45096:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"45065:14:22","statements":[{"nodeType":"YulVariableDeclaration","src":"45067:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"45076:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"45071:1:22","type":""}]}]},"src":"45061:284:22"},{"nodeType":"YulAssignment","src":"45354:10:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"45361:3:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"45354:3:22"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"44741:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"44748:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"44757:3:22","type":""}],"src":"44638:732:22"},{"body":{"nodeType":"YulBlock","src":"45460:40:22","statements":[{"nodeType":"YulAssignment","src":"45471:22:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"45487:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"45481:5:22"},"nodeType":"YulFunctionCall","src":"45481:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"45471:6:22"}]}]},"name":"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45443:5:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"45453:6:22","type":""}],"src":"45376:124:22"},{"body":{"nodeType":"YulBlock","src":"45627:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45644:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"45649:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45637:6:22"},"nodeType":"YulFunctionCall","src":"45637:19:22"},"nodeType":"YulExpressionStatement","src":"45637:19:22"},{"nodeType":"YulAssignment","src":"45665:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45684:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"45689:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45680:3:22"},"nodeType":"YulFunctionCall","src":"45680:14:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"45665:11:22"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"45599:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"45604:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"45615:11:22","type":""}],"src":"45506:194:22"},{"body":{"nodeType":"YulBlock","src":"45788:60:22","statements":[{"nodeType":"YulAssignment","src":"45798:11:22","value":{"name":"ptr","nodeType":"YulIdentifier","src":"45806:3:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"45798:4:22"}]},{"nodeType":"YulAssignment","src":"45819:22:22","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"45831:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"45836:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45827:3:22"},"nodeType":"YulFunctionCall","src":"45827:14:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"45819:4:22"}]}]},"name":"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"45775:3:22","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"45783:4:22","type":""}],"src":"45706:142:22"},{"body":{"nodeType":"YulBlock","src":"45940:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45957:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"45962:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45950:6:22"},"nodeType":"YulFunctionCall","src":"45950:19:22"},"nodeType":"YulExpressionStatement","src":"45950:19:22"},{"nodeType":"YulAssignment","src":"45978:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45997:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"46002:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45993:3:22"},"nodeType":"YulFunctionCall","src":"45993:14:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"45978:11:22"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"45912:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"45917:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"45928:11:22","type":""}],"src":"45854:159:22"},{"body":{"nodeType":"YulBlock","src":"46101:275:22","statements":[{"nodeType":"YulVariableDeclaration","src":"46111:53:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46158:5:22"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"46125:32:22"},"nodeType":"YulFunctionCall","src":"46125:39:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"46115:6:22","type":""}]},{"nodeType":"YulAssignment","src":"46173:68:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46229:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"46234:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"46180:48:22"},"nodeType":"YulFunctionCall","src":"46180:61:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"46173:3:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46289:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"46296:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46285:3:22"},"nodeType":"YulFunctionCall","src":"46285:16:22"},{"name":"pos","nodeType":"YulIdentifier","src":"46303:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"46308:6:22"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"46250:34:22"},"nodeType":"YulFunctionCall","src":"46250:65:22"},"nodeType":"YulExpressionStatement","src":"46250:65:22"},{"nodeType":"YulAssignment","src":"46324:46:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46335:3:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"46362:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"46340:21:22"},"nodeType":"YulFunctionCall","src":"46340:29:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46331:3:22"},"nodeType":"YulFunctionCall","src":"46331:39:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"46324:3:22"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"46082:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"46089:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"46097:3:22","type":""}],"src":"46019:357:22"},{"body":{"nodeType":"YulBlock","src":"46482:96:22","statements":[{"nodeType":"YulAssignment","src":"46492:80:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"46560:6:22"},{"name":"pos","nodeType":"YulIdentifier","src":"46568:3:22"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"46506:53:22"},"nodeType":"YulFunctionCall","src":"46506:66:22"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"46492:10:22"}]}]},"name":"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"46455:6:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"46463:3:22","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"46471:10:22","type":""}],"src":"46382:196:22"},{"body":{"nodeType":"YulBlock","src":"46669:38:22","statements":[{"nodeType":"YulAssignment","src":"46679:22:22","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"46691:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"46696:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46687:3:22"},"nodeType":"YulFunctionCall","src":"46687:14:22"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"46679:4:22"}]}]},"name":"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"46656:3:22","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"46664:4:22","type":""}],"src":"46584:123:22"},{"body":{"nodeType":"YulBlock","src":"46885:847:22","statements":[{"nodeType":"YulVariableDeclaration","src":"46895:78:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46967:5:22"}],"functionName":{"name":"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"46909:57:22"},"nodeType":"YulFunctionCall","src":"46909:64:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"46899:6:22","type":""}]},{"nodeType":"YulAssignment","src":"46982:103:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47073:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"47078:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"46989:83:22"},"nodeType":"YulFunctionCall","src":"46989:96:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"46982:3:22"}]},{"nodeType":"YulVariableDeclaration","src":"47094:20:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"47111:3:22"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"47098:9:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"47123:39:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47139:3:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"47148:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"47156:4:22","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"47144:3:22"},"nodeType":"YulFunctionCall","src":"47144:17:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47135:3:22"},"nodeType":"YulFunctionCall","src":"47135:27:22"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"47127:4:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"47171:81:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"47246:5:22"}],"functionName":{"name":"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"47186:59:22"},"nodeType":"YulFunctionCall","src":"47186:66:22"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"47175:7:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"47261:21:22","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"47275:7:22"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"47265:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"47351:336:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47372:3:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"47381:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"47387:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"47377:3:22"},"nodeType":"YulFunctionCall","src":"47377:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47365:6:22"},"nodeType":"YulFunctionCall","src":"47365:33:22"},"nodeType":"YulExpressionStatement","src":"47365:33:22"},{"nodeType":"YulVariableDeclaration","src":"47411:34:22","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"47438:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"47432:5:22"},"nodeType":"YulFunctionCall","src":"47432:13:22"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"47415:13:22","type":""}]},{"nodeType":"YulAssignment","src":"47458:92:22","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"47530:13:22"},{"name":"tail","nodeType":"YulIdentifier","src":"47545:4:22"}],"functionName":{"name":"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"47466:63:22"},"nodeType":"YulFunctionCall","src":"47466:84:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47458:4:22"}]},{"nodeType":"YulAssignment","src":"47563:80:22","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"47636:6:22"}],"functionName":{"name":"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"47573:62:22"},"nodeType":"YulFunctionCall","src":"47573:70:22"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"47563:6:22"}]},{"nodeType":"YulAssignment","src":"47656:21:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47667:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"47672:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47663:3:22"},"nodeType":"YulFunctionCall","src":"47663:14:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"47656:3:22"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"47313:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"47316:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"47310:2:22"},"nodeType":"YulFunctionCall","src":"47310:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"47324:18:22","statements":[{"nodeType":"YulAssignment","src":"47326:14:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"47335:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"47338:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47331:3:22"},"nodeType":"YulFunctionCall","src":"47331:9:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"47326:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"47295:14:22","statements":[{"nodeType":"YulVariableDeclaration","src":"47297:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"47306:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"47301:1:22","type":""}]}]},"src":"47291:396:22"},{"nodeType":"YulAssignment","src":"47696:11:22","value":{"name":"tail","nodeType":"YulIdentifier","src":"47703:4:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"47696:3:22"}]},{"nodeType":"YulAssignment","src":"47716:10:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"47723:3:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"47716:3:22"}]}]},"name":"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"46864:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"46871:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"46880:3:22","type":""}],"src":"46741:991:22"},{"body":{"nodeType":"YulBlock","src":"47821:40:22","statements":[{"nodeType":"YulAssignment","src":"47832:22:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"47848:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"47842:5:22"},"nodeType":"YulFunctionCall","src":"47842:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"47832:6:22"}]}]},"name":"array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47804:5:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"47814:6:22","type":""}],"src":"47738:123:22"},{"body":{"nodeType":"YulBlock","src":"47987:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48004:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"48009:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47997:6:22"},"nodeType":"YulFunctionCall","src":"47997:19:22"},"nodeType":"YulExpressionStatement","src":"47997:19:22"},{"nodeType":"YulAssignment","src":"48025:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48044:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"48049:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48040:3:22"},"nodeType":"YulFunctionCall","src":"48040:14:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"48025:11:22"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"47959:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"47964:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"47975:11:22","type":""}],"src":"47867:193:22"},{"body":{"nodeType":"YulBlock","src":"48147:60:22","statements":[{"nodeType":"YulAssignment","src":"48157:11:22","value":{"name":"ptr","nodeType":"YulIdentifier","src":"48165:3:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"48157:4:22"}]},{"nodeType":"YulAssignment","src":"48178:22:22","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"48190:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"48195:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48186:3:22"},"nodeType":"YulFunctionCall","src":"48186:14:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"48178:4:22"}]}]},"name":"array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"48134:3:22","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"48142:4:22","type":""}],"src":"48066:141:22"},{"body":{"nodeType":"YulBlock","src":"48271:40:22","statements":[{"nodeType":"YulAssignment","src":"48282:22:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"48298:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"48292:5:22"},"nodeType":"YulFunctionCall","src":"48292:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"48282:6:22"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"48254:5:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"48264:6:22","type":""}],"src":"48213:98:22"},{"body":{"nodeType":"YulBlock","src":"48402:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48419:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"48424:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48412:6:22"},"nodeType":"YulFunctionCall","src":"48412:19:22"},"nodeType":"YulExpressionStatement","src":"48412:19:22"},{"nodeType":"YulAssignment","src":"48440:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48459:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"48464:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48455:3:22"},"nodeType":"YulFunctionCall","src":"48455:14:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"48440:11:22"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"48374:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"48379:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"48390:11:22","type":""}],"src":"48317:158:22"},{"body":{"nodeType":"YulBlock","src":"48561:273:22","statements":[{"nodeType":"YulVariableDeclaration","src":"48571:52:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"48617:5:22"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"48585:31:22"},"nodeType":"YulFunctionCall","src":"48585:38:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"48575:6:22","type":""}]},{"nodeType":"YulAssignment","src":"48632:67:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48687:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"48692:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"48639:47:22"},"nodeType":"YulFunctionCall","src":"48639:60:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"48632:3:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"48747:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"48754:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48743:3:22"},"nodeType":"YulFunctionCall","src":"48743:16:22"},{"name":"pos","nodeType":"YulIdentifier","src":"48761:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"48766:6:22"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"48708:34:22"},"nodeType":"YulFunctionCall","src":"48708:65:22"},"nodeType":"YulExpressionStatement","src":"48708:65:22"},{"nodeType":"YulAssignment","src":"48782:46:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48793:3:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"48820:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"48798:21:22"},"nodeType":"YulFunctionCall","src":"48798:29:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48789:3:22"},"nodeType":"YulFunctionCall","src":"48789:39:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"48782:3:22"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"48542:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"48549:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"48557:3:22","type":""}],"src":"48481:353:22"},{"body":{"nodeType":"YulBlock","src":"48938:94:22","statements":[{"nodeType":"YulAssignment","src":"48948:78:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"49014:6:22"},{"name":"pos","nodeType":"YulIdentifier","src":"49022:3:22"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"48962:51:22"},"nodeType":"YulFunctionCall","src":"48962:64:22"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"48948:10:22"}]}]},"name":"abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"48911:6:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"48919:3:22","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"48927:10:22","type":""}],"src":"48840:192:22"},{"body":{"nodeType":"YulBlock","src":"49122:38:22","statements":[{"nodeType":"YulAssignment","src":"49132:22:22","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"49144:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"49149:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49140:3:22"},"nodeType":"YulFunctionCall","src":"49140:14:22"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"49132:4:22"}]}]},"name":"array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"49109:3:22","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"49117:4:22","type":""}],"src":"49038:122:22"},{"body":{"nodeType":"YulBlock","src":"49334:841:22","statements":[{"nodeType":"YulVariableDeclaration","src":"49344:77:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"49415:5:22"}],"functionName":{"name":"array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"49358:56:22"},"nodeType":"YulFunctionCall","src":"49358:63:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"49348:6:22","type":""}]},{"nodeType":"YulAssignment","src":"49430:102:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49520:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"49525:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"49437:82:22"},"nodeType":"YulFunctionCall","src":"49437:95:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"49430:3:22"}]},{"nodeType":"YulVariableDeclaration","src":"49541:20:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"49558:3:22"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"49545:9:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"49570:39:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49586:3:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"49595:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"49603:4:22","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"49591:3:22"},"nodeType":"YulFunctionCall","src":"49591:17:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49582:3:22"},"nodeType":"YulFunctionCall","src":"49582:27:22"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"49574:4:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"49618:80:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"49692:5:22"}],"functionName":{"name":"array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"49633:58:22"},"nodeType":"YulFunctionCall","src":"49633:65:22"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"49622:7:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"49707:21:22","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"49721:7:22"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"49711:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"49797:333:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49818:3:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"49827:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"49833:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"49823:3:22"},"nodeType":"YulFunctionCall","src":"49823:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49811:6:22"},"nodeType":"YulFunctionCall","src":"49811:33:22"},"nodeType":"YulExpressionStatement","src":"49811:33:22"},{"nodeType":"YulVariableDeclaration","src":"49857:34:22","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"49884:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"49878:5:22"},"nodeType":"YulFunctionCall","src":"49878:13:22"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"49861:13:22","type":""}]},{"nodeType":"YulAssignment","src":"49904:90:22","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"49974:13:22"},{"name":"tail","nodeType":"YulIdentifier","src":"49989:4:22"}],"functionName":{"name":"abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"49912:61:22"},"nodeType":"YulFunctionCall","src":"49912:82:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"49904:4:22"}]},{"nodeType":"YulAssignment","src":"50007:79:22","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"50079:6:22"}],"functionName":{"name":"array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"50017:61:22"},"nodeType":"YulFunctionCall","src":"50017:69:22"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"50007:6:22"}]},{"nodeType":"YulAssignment","src":"50099:21:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50110:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"50115:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50106:3:22"},"nodeType":"YulFunctionCall","src":"50106:14:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"50099:3:22"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"49759:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"49762:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"49756:2:22"},"nodeType":"YulFunctionCall","src":"49756:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"49770:18:22","statements":[{"nodeType":"YulAssignment","src":"49772:14:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"49781:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"49784:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49777:3:22"},"nodeType":"YulFunctionCall","src":"49777:9:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"49772:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"49741:14:22","statements":[{"nodeType":"YulVariableDeclaration","src":"49743:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"49752:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"49747:1:22","type":""}]}]},"src":"49737:393:22"},{"nodeType":"YulAssignment","src":"50139:11:22","value":{"name":"tail","nodeType":"YulIdentifier","src":"50146:4:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"50139:3:22"}]},{"nodeType":"YulAssignment","src":"50159:10:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"50166:3:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"50159:3:22"}]}]},"name":"abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49313:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"49320:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"49329:3:22","type":""}],"src":"49192:983:22"},{"body":{"nodeType":"YulBlock","src":"50240:81:22","statements":[{"nodeType":"YulAssignment","src":"50250:65:22","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"50307:5:22"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"50290:16:22"},"nodeType":"YulFunctionCall","src":"50290:23:22"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"50281:8:22"},"nodeType":"YulFunctionCall","src":"50281:33:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"50263:17:22"},"nodeType":"YulFunctionCall","src":"50263:52:22"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"50250:9:22"}]}]},"name":"convert_t_uint64_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"50220:5:22","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"50230:9:22","type":""}],"src":"50181:140:22"},{"body":{"nodeType":"YulBlock","src":"50391:65:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50408:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"50443:5:22"}],"functionName":{"name":"convert_t_uint64_to_t_uint256","nodeType":"YulIdentifier","src":"50413:29:22"},"nodeType":"YulFunctionCall","src":"50413:36:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50401:6:22"},"nodeType":"YulFunctionCall","src":"50401:49:22"},"nodeType":"YulExpressionStatement","src":"50401:49:22"}]},"name":"abi_encode_t_uint64_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"50379:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"50386:3:22","type":""}],"src":"50327:129:22"},{"body":{"nodeType":"YulBlock","src":"51040:1297:22","statements":[{"nodeType":"YulAssignment","src":"51050:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51062:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"51073:3:22","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51058:3:22"},"nodeType":"YulFunctionCall","src":"51058:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"51050:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"51131:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51144:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"51155:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51140:3:22"},"nodeType":"YulFunctionCall","src":"51140:17:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"51087:43:22"},"nodeType":"YulFunctionCall","src":"51087:71:22"},"nodeType":"YulExpressionStatement","src":"51087:71:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"51212:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51225:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"51236:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51221:3:22"},"nodeType":"YulFunctionCall","src":"51221:18:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"51168:43:22"},"nodeType":"YulFunctionCall","src":"51168:72:22"},"nodeType":"YulExpressionStatement","src":"51168:72:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51261:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"51272:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51257:3:22"},"nodeType":"YulFunctionCall","src":"51257:18:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"51281:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"51287:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"51277:3:22"},"nodeType":"YulFunctionCall","src":"51277:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51250:6:22"},"nodeType":"YulFunctionCall","src":"51250:48:22"},"nodeType":"YulExpressionStatement","src":"51250:48:22"},{"nodeType":"YulAssignment","src":"51307:116:22","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"51409:6:22"},{"name":"tail","nodeType":"YulIdentifier","src":"51418:4:22"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"51315:93:22"},"nodeType":"YulFunctionCall","src":"51315:108:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"51307:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51444:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"51455:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51440:3:22"},"nodeType":"YulFunctionCall","src":"51440:18:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"51464:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"51470:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"51460:3:22"},"nodeType":"YulFunctionCall","src":"51460:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51433:6:22"},"nodeType":"YulFunctionCall","src":"51433:48:22"},"nodeType":"YulExpressionStatement","src":"51433:48:22"},{"nodeType":"YulAssignment","src":"51490:116:22","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"51592:6:22"},{"name":"tail","nodeType":"YulIdentifier","src":"51601:4:22"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"51498:93:22"},"nodeType":"YulFunctionCall","src":"51498:108:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"51490:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51627:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"51638:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51623:3:22"},"nodeType":"YulFunctionCall","src":"51623:19:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"51648:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"51654:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"51644:3:22"},"nodeType":"YulFunctionCall","src":"51644:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51616:6:22"},"nodeType":"YulFunctionCall","src":"51616:49:22"},"nodeType":"YulExpressionStatement","src":"51616:49:22"},{"nodeType":"YulAssignment","src":"51674:136:22","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"51796:6:22"},{"name":"tail","nodeType":"YulIdentifier","src":"51805:4:22"}],"functionName":{"name":"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"51682:113:22"},"nodeType":"YulFunctionCall","src":"51682:128:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"51674:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51831:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"51842:3:22","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51827:3:22"},"nodeType":"YulFunctionCall","src":"51827:19:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"51852:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"51858:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"51848:3:22"},"nodeType":"YulFunctionCall","src":"51848:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51820:6:22"},"nodeType":"YulFunctionCall","src":"51820:49:22"},"nodeType":"YulExpressionStatement","src":"51820:49:22"},{"nodeType":"YulAssignment","src":"51878:134:22","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"51998:6:22"},{"name":"tail","nodeType":"YulIdentifier","src":"52007:4:22"}],"functionName":{"name":"abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"51886:111:22"},"nodeType":"YulFunctionCall","src":"51886:126:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"51878:4:22"}]},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"52065:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52078:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"52089:3:22","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52074:3:22"},"nodeType":"YulFunctionCall","src":"52074:19:22"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"52022:42:22"},"nodeType":"YulFunctionCall","src":"52022:72:22"},"nodeType":"YulExpressionStatement","src":"52022:72:22"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"52147:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52160:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"52171:3:22","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52156:3:22"},"nodeType":"YulFunctionCall","src":"52156:19:22"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"52104:42:22"},"nodeType":"YulFunctionCall","src":"52104:72:22"},"nodeType":"YulExpressionStatement","src":"52104:72:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52197:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"52208:3:22","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52193:3:22"},"nodeType":"YulFunctionCall","src":"52193:19:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"52218:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"52224:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"52214:3:22"},"nodeType":"YulFunctionCall","src":"52214:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52186:6:22"},"nodeType":"YulFunctionCall","src":"52186:49:22"},"nodeType":"YulExpressionStatement","src":"52186:49:22"},{"nodeType":"YulAssignment","src":"52244:86:22","value":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"52316:6:22"},{"name":"tail","nodeType":"YulIdentifier","src":"52325:4:22"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"52252:63:22"},"nodeType":"YulFunctionCall","src":"52252:78:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"52244:4:22"}]}]},"name":"abi_encode_tuple_t_uint256_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_uint64_t_uint64_t_string_memory_ptr__to_t_uint256_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50948:9:22","type":""},{"name":"value8","nodeType":"YulTypedName","src":"50960:6:22","type":""},{"name":"value7","nodeType":"YulTypedName","src":"50968:6:22","type":""},{"name":"value6","nodeType":"YulTypedName","src":"50976:6:22","type":""},{"name":"value5","nodeType":"YulTypedName","src":"50984:6:22","type":""},{"name":"value4","nodeType":"YulTypedName","src":"50992:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"51000:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"51008:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"51016:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"51024:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"51035:4:22","type":""}],"src":"50462:1875:22"},{"body":{"nodeType":"YulBlock","src":"52693:692:22","statements":[{"nodeType":"YulAssignment","src":"52703:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52715:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"52726:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52711:3:22"},"nodeType":"YulFunctionCall","src":"52711:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"52703:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52751:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"52762:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52747:3:22"},"nodeType":"YulFunctionCall","src":"52747:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"52770:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"52776:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"52766:3:22"},"nodeType":"YulFunctionCall","src":"52766:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52740:6:22"},"nodeType":"YulFunctionCall","src":"52740:47:22"},"nodeType":"YulExpressionStatement","src":"52740:47:22"},{"nodeType":"YulAssignment","src":"52796:116:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"52898:6:22"},{"name":"tail","nodeType":"YulIdentifier","src":"52907:4:22"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"52804:93:22"},"nodeType":"YulFunctionCall","src":"52804:108:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"52796:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52933:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"52944:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52929:3:22"},"nodeType":"YulFunctionCall","src":"52929:18:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"52953:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"52959:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"52949:3:22"},"nodeType":"YulFunctionCall","src":"52949:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52922:6:22"},"nodeType":"YulFunctionCall","src":"52922:48:22"},"nodeType":"YulExpressionStatement","src":"52922:48:22"},{"nodeType":"YulAssignment","src":"52979:116:22","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"53081:6:22"},{"name":"tail","nodeType":"YulIdentifier","src":"53090:4:22"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"52987:93:22"},"nodeType":"YulFunctionCall","src":"52987:108:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"52979:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53116:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"53127:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53112:3:22"},"nodeType":"YulFunctionCall","src":"53112:18:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"53136:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"53142:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"53132:3:22"},"nodeType":"YulFunctionCall","src":"53132:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53105:6:22"},"nodeType":"YulFunctionCall","src":"53105:48:22"},"nodeType":"YulExpressionStatement","src":"53105:48:22"},{"nodeType":"YulAssignment","src":"53162:134:22","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"53282:6:22"},{"name":"tail","nodeType":"YulIdentifier","src":"53291:4:22"}],"functionName":{"name":"abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"53170:111:22"},"nodeType":"YulFunctionCall","src":"53170:126:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"53162:4:22"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"53350:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53363:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"53374:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53359:3:22"},"nodeType":"YulFunctionCall","src":"53359:18:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"53306:43:22"},"nodeType":"YulFunctionCall","src":"53306:72:22"},"nodeType":"YulExpressionStatement","src":"53306:72:22"}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_bytes32__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"52641:9:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"52653:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"52661:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"52669:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"52677:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"52688:4:22","type":""}],"src":"52343:1042:22"},{"body":{"nodeType":"YulBlock","src":"53497:120:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"53519:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"53527:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53515:3:22"},"nodeType":"YulFunctionCall","src":"53515:14:22"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032","kind":"string","nodeType":"YulLiteral","src":"53531:34:22","type":"","value":"SafeCast: value doesn't fit in 2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53508:6:22"},"nodeType":"YulFunctionCall","src":"53508:58:22"},"nodeType":"YulExpressionStatement","src":"53508:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"53587:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"53595:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53583:3:22"},"nodeType":"YulFunctionCall","src":"53583:15:22"},{"hexValue":"32342062697473","kind":"string","nodeType":"YulLiteral","src":"53600:9:22","type":"","value":"24 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53576:6:22"},"nodeType":"YulFunctionCall","src":"53576:34:22"},"nodeType":"YulExpressionStatement","src":"53576:34:22"}]},"name":"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"53489:6:22","type":""}],"src":"53391:226:22"},{"body":{"nodeType":"YulBlock","src":"53769:220:22","statements":[{"nodeType":"YulAssignment","src":"53779:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"53845:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"53850:2:22","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"53786:58:22"},"nodeType":"YulFunctionCall","src":"53786:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"53779:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"53951:3:22"}],"functionName":{"name":"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","nodeType":"YulIdentifier","src":"53862:88:22"},"nodeType":"YulFunctionCall","src":"53862:93:22"},"nodeType":"YulExpressionStatement","src":"53862:93:22"},{"nodeType":"YulAssignment","src":"53964:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"53975:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"53980:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53971:3:22"},"nodeType":"YulFunctionCall","src":"53971:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"53964:3:22"}]}]},"name":"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"53757:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"53765:3:22","type":""}],"src":"53623:366:22"},{"body":{"nodeType":"YulBlock","src":"54166:248:22","statements":[{"nodeType":"YulAssignment","src":"54176:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54188:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"54199:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54184:3:22"},"nodeType":"YulFunctionCall","src":"54184:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"54176:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54223:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"54234:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54219:3:22"},"nodeType":"YulFunctionCall","src":"54219:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"54242:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"54248:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"54238:3:22"},"nodeType":"YulFunctionCall","src":"54238:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54212:6:22"},"nodeType":"YulFunctionCall","src":"54212:47:22"},"nodeType":"YulExpressionStatement","src":"54212:47:22"},{"nodeType":"YulAssignment","src":"54268:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"54402:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"54276:124:22"},"nodeType":"YulFunctionCall","src":"54276:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"54268:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"54146:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"54161:4:22","type":""}],"src":"53995:419:22"},{"body":{"nodeType":"YulBlock","src":"54526:119:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"54548:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"54556:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54544:3:22"},"nodeType":"YulFunctionCall","src":"54544:14:22"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033","kind":"string","nodeType":"YulLiteral","src":"54560:34:22","type":"","value":"SafeCast: value doesn't fit in 3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54537:6:22"},"nodeType":"YulFunctionCall","src":"54537:58:22"},"nodeType":"YulExpressionStatement","src":"54537:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"54616:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"54624:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54612:3:22"},"nodeType":"YulFunctionCall","src":"54612:15:22"},{"hexValue":"322062697473","kind":"string","nodeType":"YulLiteral","src":"54629:8:22","type":"","value":"2 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54605:6:22"},"nodeType":"YulFunctionCall","src":"54605:33:22"},"nodeType":"YulExpressionStatement","src":"54605:33:22"}]},"name":"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"54518:6:22","type":""}],"src":"54420:225:22"},{"body":{"nodeType":"YulBlock","src":"54797:220:22","statements":[{"nodeType":"YulAssignment","src":"54807:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"54873:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"54878:2:22","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"54814:58:22"},"nodeType":"YulFunctionCall","src":"54814:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"54807:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"54979:3:22"}],"functionName":{"name":"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","nodeType":"YulIdentifier","src":"54890:88:22"},"nodeType":"YulFunctionCall","src":"54890:93:22"},"nodeType":"YulExpressionStatement","src":"54890:93:22"},{"nodeType":"YulAssignment","src":"54992:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"55003:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"55008:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54999:3:22"},"nodeType":"YulFunctionCall","src":"54999:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"54992:3:22"}]}]},"name":"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"54785:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"54793:3:22","type":""}],"src":"54651:366:22"},{"body":{"nodeType":"YulBlock","src":"55194:248:22","statements":[{"nodeType":"YulAssignment","src":"55204:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"55216:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"55227:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55212:3:22"},"nodeType":"YulFunctionCall","src":"55212:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"55204:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"55251:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"55262:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55247:3:22"},"nodeType":"YulFunctionCall","src":"55247:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"55270:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"55276:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"55266:3:22"},"nodeType":"YulFunctionCall","src":"55266:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"55240:6:22"},"nodeType":"YulFunctionCall","src":"55240:47:22"},"nodeType":"YulExpressionStatement","src":"55240:47:22"},{"nodeType":"YulAssignment","src":"55296:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"55430:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"55304:124:22"},"nodeType":"YulFunctionCall","src":"55304:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"55296:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"55174:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"55189:4:22","type":""}],"src":"55023:419:22"},{"body":{"nodeType":"YulBlock","src":"55554:116:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"55576:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"55584:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55572:3:22"},"nodeType":"YulFunctionCall","src":"55572:14:22"},{"hexValue":"476f7665726e6f723a20766f7465206e6f742063757272656e746c7920616374","kind":"string","nodeType":"YulLiteral","src":"55588:34:22","type":"","value":"Governor: vote not currently act"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"55565:6:22"},"nodeType":"YulFunctionCall","src":"55565:58:22"},"nodeType":"YulExpressionStatement","src":"55565:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"55644:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"55652:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55640:3:22"},"nodeType":"YulFunctionCall","src":"55640:15:22"},{"hexValue":"697665","kind":"string","nodeType":"YulLiteral","src":"55657:5:22","type":"","value":"ive"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"55633:6:22"},"nodeType":"YulFunctionCall","src":"55633:30:22"},"nodeType":"YulExpressionStatement","src":"55633:30:22"}]},"name":"store_literal_in_memory_5b1e239298a1362f9b5245bd4e9393de28380a12326aa31532e03fe3f1061d80","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"55546:6:22","type":""}],"src":"55448:222:22"},{"body":{"nodeType":"YulBlock","src":"55822:220:22","statements":[{"nodeType":"YulAssignment","src":"55832:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"55898:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"55903:2:22","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"55839:58:22"},"nodeType":"YulFunctionCall","src":"55839:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"55832:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"56004:3:22"}],"functionName":{"name":"store_literal_in_memory_5b1e239298a1362f9b5245bd4e9393de28380a12326aa31532e03fe3f1061d80","nodeType":"YulIdentifier","src":"55915:88:22"},"nodeType":"YulFunctionCall","src":"55915:93:22"},"nodeType":"YulExpressionStatement","src":"55915:93:22"},{"nodeType":"YulAssignment","src":"56017:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"56028:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"56033:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56024:3:22"},"nodeType":"YulFunctionCall","src":"56024:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"56017:3:22"}]}]},"name":"abi_encode_t_stringliteral_5b1e239298a1362f9b5245bd4e9393de28380a12326aa31532e03fe3f1061d80_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"55810:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"55818:3:22","type":""}],"src":"55676:366:22"},{"body":{"nodeType":"YulBlock","src":"56219:248:22","statements":[{"nodeType":"YulAssignment","src":"56229:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56241:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"56252:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56237:3:22"},"nodeType":"YulFunctionCall","src":"56237:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"56229:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56276:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"56287:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56272:3:22"},"nodeType":"YulFunctionCall","src":"56272:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"56295:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"56301:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"56291:3:22"},"nodeType":"YulFunctionCall","src":"56291:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56265:6:22"},"nodeType":"YulFunctionCall","src":"56265:47:22"},"nodeType":"YulExpressionStatement","src":"56265:47:22"},{"nodeType":"YulAssignment","src":"56321:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"56455:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_5b1e239298a1362f9b5245bd4e9393de28380a12326aa31532e03fe3f1061d80_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"56329:124:22"},"nodeType":"YulFunctionCall","src":"56329:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"56321:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_5b1e239298a1362f9b5245bd4e9393de28380a12326aa31532e03fe3f1061d80__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"56199:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"56214:4:22","type":""}],"src":"56048:419:22"},{"body":{"nodeType":"YulBlock","src":"56671:438:22","statements":[{"nodeType":"YulAssignment","src":"56681:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56693:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"56704:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56689:3:22"},"nodeType":"YulFunctionCall","src":"56689:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"56681:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"56762:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56775:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"56786:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56771:3:22"},"nodeType":"YulFunctionCall","src":"56771:17:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"56718:43:22"},"nodeType":"YulFunctionCall","src":"56718:71:22"},"nodeType":"YulExpressionStatement","src":"56718:71:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"56839:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56852:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"56863:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56848:3:22"},"nodeType":"YulFunctionCall","src":"56848:18:22"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"56799:39:22"},"nodeType":"YulFunctionCall","src":"56799:68:22"},"nodeType":"YulExpressionStatement","src":"56799:68:22"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"56921:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56934:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"56945:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56930:3:22"},"nodeType":"YulFunctionCall","src":"56930:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"56877:43:22"},"nodeType":"YulFunctionCall","src":"56877:72:22"},"nodeType":"YulExpressionStatement","src":"56877:72:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56970:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"56981:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56966:3:22"},"nodeType":"YulFunctionCall","src":"56966:18:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"56990:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"56996:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"56986:3:22"},"nodeType":"YulFunctionCall","src":"56986:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56959:6:22"},"nodeType":"YulFunctionCall","src":"56959:48:22"},"nodeType":"YulExpressionStatement","src":"56959:48:22"},{"nodeType":"YulAssignment","src":"57016:86:22","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"57088:6:22"},{"name":"tail","nodeType":"YulIdentifier","src":"57097:4:22"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"57024:63:22"},"nodeType":"YulFunctionCall","src":"57024:78:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"57016:4:22"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint8_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint8_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"56619:9:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"56631:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"56639:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"56647:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"56655:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"56666:4:22","type":""}],"src":"56473:636:22"},{"body":{"nodeType":"YulBlock","src":"57210:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"57227:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"57232:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"57220:6:22"},"nodeType":"YulFunctionCall","src":"57220:19:22"},"nodeType":"YulExpressionStatement","src":"57220:19:22"},{"nodeType":"YulAssignment","src":"57248:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"57267:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"57272:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57263:3:22"},"nodeType":"YulFunctionCall","src":"57263:14:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"57248:11:22"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"57182:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"57187:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"57198:11:22","type":""}],"src":"57115:168:22"},{"body":{"nodeType":"YulBlock","src":"57379:283:22","statements":[{"nodeType":"YulVariableDeclaration","src":"57389:52:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"57435:5:22"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"57403:31:22"},"nodeType":"YulFunctionCall","src":"57403:38:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"57393:6:22","type":""}]},{"nodeType":"YulAssignment","src":"57450:77:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"57515:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"57520:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"57457:57:22"},"nodeType":"YulFunctionCall","src":"57457:70:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"57450:3:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"57575:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"57582:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57571:3:22"},"nodeType":"YulFunctionCall","src":"57571:16:22"},{"name":"pos","nodeType":"YulIdentifier","src":"57589:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"57594:6:22"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"57536:34:22"},"nodeType":"YulFunctionCall","src":"57536:65:22"},"nodeType":"YulExpressionStatement","src":"57536:65:22"},{"nodeType":"YulAssignment","src":"57610:46:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"57621:3:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"57648:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"57626:21:22"},"nodeType":"YulFunctionCall","src":"57626:29:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57617:3:22"},"nodeType":"YulFunctionCall","src":"57617:39:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"57610:3:22"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"57360:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"57367:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"57375:3:22","type":""}],"src":"57289:373:22"},{"body":{"nodeType":"YulBlock","src":"57912:590:22","statements":[{"nodeType":"YulAssignment","src":"57922:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57934:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"57945:3:22","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57930:3:22"},"nodeType":"YulFunctionCall","src":"57930:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"57922:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"58003:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"58016:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"58027:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58012:3:22"},"nodeType":"YulFunctionCall","src":"58012:17:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"57959:43:22"},"nodeType":"YulFunctionCall","src":"57959:71:22"},"nodeType":"YulExpressionStatement","src":"57959:71:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"58080:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"58093:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"58104:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58089:3:22"},"nodeType":"YulFunctionCall","src":"58089:18:22"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"58040:39:22"},"nodeType":"YulFunctionCall","src":"58040:68:22"},"nodeType":"YulExpressionStatement","src":"58040:68:22"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"58162:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"58175:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"58186:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58171:3:22"},"nodeType":"YulFunctionCall","src":"58171:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"58118:43:22"},"nodeType":"YulFunctionCall","src":"58118:72:22"},"nodeType":"YulExpressionStatement","src":"58118:72:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"58211:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"58222:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58207:3:22"},"nodeType":"YulFunctionCall","src":"58207:18:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"58231:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"58237:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"58227:3:22"},"nodeType":"YulFunctionCall","src":"58227:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"58200:6:22"},"nodeType":"YulFunctionCall","src":"58200:48:22"},"nodeType":"YulExpressionStatement","src":"58200:48:22"},{"nodeType":"YulAssignment","src":"58257:86:22","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"58329:6:22"},{"name":"tail","nodeType":"YulIdentifier","src":"58338:4:22"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"58265:63:22"},"nodeType":"YulFunctionCall","src":"58265:78:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"58257:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"58364:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"58375:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58360:3:22"},"nodeType":"YulFunctionCall","src":"58360:19:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"58385:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"58391:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"58381:3:22"},"nodeType":"YulFunctionCall","src":"58381:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"58353:6:22"},"nodeType":"YulFunctionCall","src":"58353:49:22"},"nodeType":"YulExpressionStatement","src":"58353:49:22"},{"nodeType":"YulAssignment","src":"58411:84:22","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"58481:6:22"},{"name":"tail","nodeType":"YulIdentifier","src":"58490:4:22"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"58419:61:22"},"nodeType":"YulFunctionCall","src":"58419:76:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"58411:4:22"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint8_t_uint256_t_string_memory_ptr_t_bytes_memory_ptr__to_t_uint256_t_uint8_t_uint256_t_string_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"57852:9:22","type":""},{"name":"value4","nodeType":"YulTypedName","src":"57864:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"57872:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"57880:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"57888:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"57896:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"57907:4:22","type":""}],"src":"57668:834:22"},{"body":{"nodeType":"YulBlock","src":"58614:185:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"58636:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"58644:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58632:3:22"},"nodeType":"YulFunctionCall","src":"58632:14:22"},{"hexValue":"476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f","kind":"string","nodeType":"YulLiteral","src":"58648:34:22","type":"","value":"GovernorVotesQuorumFraction: quo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"58625:6:22"},"nodeType":"YulFunctionCall","src":"58625:58:22"},"nodeType":"YulExpressionStatement","src":"58625:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"58704:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"58712:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58700:3:22"},"nodeType":"YulFunctionCall","src":"58700:15:22"},{"hexValue":"72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e61","kind":"string","nodeType":"YulLiteral","src":"58717:34:22","type":"","value":"rumNumerator over quorumDenomina"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"58693:6:22"},"nodeType":"YulFunctionCall","src":"58693:59:22"},"nodeType":"YulExpressionStatement","src":"58693:59:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"58773:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"58781:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58769:3:22"},"nodeType":"YulFunctionCall","src":"58769:15:22"},{"hexValue":"746f72","kind":"string","nodeType":"YulLiteral","src":"58786:5:22","type":"","value":"tor"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"58762:6:22"},"nodeType":"YulFunctionCall","src":"58762:30:22"},"nodeType":"YulExpressionStatement","src":"58762:30:22"}]},"name":"store_literal_in_memory_0687f8064c09ccf183090b5092c4485c730072a161487645a7e37b56cef356bb","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"58606:6:22","type":""}],"src":"58508:291:22"},{"body":{"nodeType":"YulBlock","src":"58951:220:22","statements":[{"nodeType":"YulAssignment","src":"58961:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"59027:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"59032:2:22","type":"","value":"67"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"58968:58:22"},"nodeType":"YulFunctionCall","src":"58968:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"58961:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"59133:3:22"}],"functionName":{"name":"store_literal_in_memory_0687f8064c09ccf183090b5092c4485c730072a161487645a7e37b56cef356bb","nodeType":"YulIdentifier","src":"59044:88:22"},"nodeType":"YulFunctionCall","src":"59044:93:22"},"nodeType":"YulExpressionStatement","src":"59044:93:22"},{"nodeType":"YulAssignment","src":"59146:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"59157:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"59162:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59153:3:22"},"nodeType":"YulFunctionCall","src":"59153:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"59146:3:22"}]}]},"name":"abi_encode_t_stringliteral_0687f8064c09ccf183090b5092c4485c730072a161487645a7e37b56cef356bb_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"58939:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"58947:3:22","type":""}],"src":"58805:366:22"},{"body":{"nodeType":"YulBlock","src":"59348:248:22","statements":[{"nodeType":"YulAssignment","src":"59358:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"59370:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"59381:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59366:3:22"},"nodeType":"YulFunctionCall","src":"59366:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"59358:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"59405:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"59416:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59401:3:22"},"nodeType":"YulFunctionCall","src":"59401:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"59424:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"59430:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"59420:3:22"},"nodeType":"YulFunctionCall","src":"59420:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"59394:6:22"},"nodeType":"YulFunctionCall","src":"59394:47:22"},"nodeType":"YulExpressionStatement","src":"59394:47:22"},{"nodeType":"YulAssignment","src":"59450:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"59584:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_0687f8064c09ccf183090b5092c4485c730072a161487645a7e37b56cef356bb_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"59458:124:22"},"nodeType":"YulFunctionCall","src":"59458:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"59450:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_0687f8064c09ccf183090b5092c4485c730072a161487645a7e37b56cef356bb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"59328:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"59343:4:22","type":""}],"src":"59177:419:22"},{"body":{"nodeType":"YulBlock","src":"59728:206:22","statements":[{"nodeType":"YulAssignment","src":"59738:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"59750:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"59761:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59746:3:22"},"nodeType":"YulFunctionCall","src":"59746:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"59738:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"59818:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"59831:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"59842:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59827:3:22"},"nodeType":"YulFunctionCall","src":"59827:17:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"59774:43:22"},"nodeType":"YulFunctionCall","src":"59774:71:22"},"nodeType":"YulExpressionStatement","src":"59774:71:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"59899:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"59912:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"59923:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59908:3:22"},"nodeType":"YulFunctionCall","src":"59908:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"59855:43:22"},"nodeType":"YulFunctionCall","src":"59855:72:22"},"nodeType":"YulExpressionStatement","src":"59855:72:22"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"59692:9:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"59704:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"59712:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"59723:4:22","type":""}],"src":"59602:332:22"},{"body":{"nodeType":"YulBlock","src":"59983:190:22","statements":[{"nodeType":"YulAssignment","src":"59993:33:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"60020:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"60002:17:22"},"nodeType":"YulFunctionCall","src":"60002:24:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"59993:5:22"}]},{"body":{"nodeType":"YulBlock","src":"60116:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"60118:16:22"},"nodeType":"YulFunctionCall","src":"60118:18:22"},"nodeType":"YulExpressionStatement","src":"60118:18:22"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"60041:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"60048:66:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"60038:2:22"},"nodeType":"YulFunctionCall","src":"60038:77:22"},"nodeType":"YulIf","src":"60035:103:22"},{"nodeType":"YulAssignment","src":"60147:20:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"60158:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"60165:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60154:3:22"},"nodeType":"YulFunctionCall","src":"60154:13:22"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"60147:3:22"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"59969:5:22","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"59979:3:22","type":""}],"src":"59940:233:22"},{"body":{"nodeType":"YulBlock","src":"60287:278:22","statements":[{"nodeType":"YulVariableDeclaration","src":"60297:52:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"60343:5:22"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"60311:31:22"},"nodeType":"YulFunctionCall","src":"60311:38:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"60301:6:22","type":""}]},{"nodeType":"YulAssignment","src":"60358:95:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"60441:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"60446:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"60365:75:22"},"nodeType":"YulFunctionCall","src":"60365:88:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"60358:3:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"60501:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"60508:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60497:3:22"},"nodeType":"YulFunctionCall","src":"60497:16:22"},{"name":"pos","nodeType":"YulIdentifier","src":"60515:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"60520:6:22"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"60462:34:22"},"nodeType":"YulFunctionCall","src":"60462:65:22"},"nodeType":"YulExpressionStatement","src":"60462:65:22"},{"nodeType":"YulAssignment","src":"60536:23:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"60547:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"60552:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60543:3:22"},"nodeType":"YulFunctionCall","src":"60543:16:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"60536:3:22"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"60268:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"60275:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"60283:3:22","type":""}],"src":"60179:386:22"},{"body":{"nodeType":"YulBlock","src":"60705:137:22","statements":[{"nodeType":"YulAssignment","src":"60716:100:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"60803:6:22"},{"name":"pos","nodeType":"YulIdentifier","src":"60812:3:22"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"60723:79:22"},"nodeType":"YulFunctionCall","src":"60723:93:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"60716:3:22"}]},{"nodeType":"YulAssignment","src":"60826:10:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"60833:3:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"60826:3:22"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"60684:3:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"60690:6:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"60701:3:22","type":""}],"src":"60571:271:22"},{"body":{"nodeType":"YulBlock","src":"60892:147:22","statements":[{"nodeType":"YulAssignment","src":"60902:25:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"60925:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"60907:17:22"},"nodeType":"YulFunctionCall","src":"60907:20:22"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"60902:1:22"}]},{"nodeType":"YulAssignment","src":"60936:25:22","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"60959:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"60941:17:22"},"nodeType":"YulFunctionCall","src":"60941:20:22"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"60936:1:22"}]},{"nodeType":"YulAssignment","src":"60970:16:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"60981:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"60984:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60977:3:22"},"nodeType":"YulFunctionCall","src":"60977:9:22"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"60970:3:22"}]},{"body":{"nodeType":"YulBlock","src":"61010:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"61012:16:22"},"nodeType":"YulFunctionCall","src":"61012:18:22"},"nodeType":"YulExpressionStatement","src":"61012:18:22"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"61002:1:22"},{"name":"sum","nodeType":"YulIdentifier","src":"61005:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"60999:2:22"},"nodeType":"YulFunctionCall","src":"60999:10:22"},"nodeType":"YulIf","src":"60996:36:22"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"60879:1:22","type":""},{"name":"y","nodeType":"YulTypedName","src":"60882:1:22","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"60888:3:22","type":""}],"src":"60848:191:22"},{"body":{"nodeType":"YulBlock","src":"61151:76:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"61173:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"61181:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61169:3:22"},"nodeType":"YulFunctionCall","src":"61169:14:22"},{"hexValue":"436865636b706f696e74733a20626c6f636b206e6f7420796574206d696e6564","kind":"string","nodeType":"YulLiteral","src":"61185:34:22","type":"","value":"Checkpoints: block not yet mined"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"61162:6:22"},"nodeType":"YulFunctionCall","src":"61162:58:22"},"nodeType":"YulExpressionStatement","src":"61162:58:22"}]},"name":"store_literal_in_memory_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"61143:6:22","type":""}],"src":"61045:182:22"},{"body":{"nodeType":"YulBlock","src":"61379:220:22","statements":[{"nodeType":"YulAssignment","src":"61389:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"61455:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"61460:2:22","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"61396:58:22"},"nodeType":"YulFunctionCall","src":"61396:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"61389:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"61561:3:22"}],"functionName":{"name":"store_literal_in_memory_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be","nodeType":"YulIdentifier","src":"61472:88:22"},"nodeType":"YulFunctionCall","src":"61472:93:22"},"nodeType":"YulExpressionStatement","src":"61472:93:22"},{"nodeType":"YulAssignment","src":"61574:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"61585:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"61590:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61581:3:22"},"nodeType":"YulFunctionCall","src":"61581:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"61574:3:22"}]}]},"name":"abi_encode_t_stringliteral_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"61367:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"61375:3:22","type":""}],"src":"61233:366:22"},{"body":{"nodeType":"YulBlock","src":"61776:248:22","statements":[{"nodeType":"YulAssignment","src":"61786:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"61798:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"61809:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61794:3:22"},"nodeType":"YulFunctionCall","src":"61794:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"61786:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"61833:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"61844:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61829:3:22"},"nodeType":"YulFunctionCall","src":"61829:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"61852:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"61858:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"61848:3:22"},"nodeType":"YulFunctionCall","src":"61848:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"61822:6:22"},"nodeType":"YulFunctionCall","src":"61822:47:22"},"nodeType":"YulExpressionStatement","src":"61822:47:22"},{"nodeType":"YulAssignment","src":"61878:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"62012:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"61886:124:22"},"nodeType":"YulFunctionCall","src":"61886:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"61878:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61756:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"61771:4:22","type":""}],"src":"61605:419:22"},{"body":{"nodeType":"YulBlock","src":"62136:119:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"62158:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"62166:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"62154:3:22"},"nodeType":"YulFunctionCall","src":"62154:14:22"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036","kind":"string","nodeType":"YulLiteral","src":"62170:34:22","type":"","value":"SafeCast: value doesn't fit in 6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"62147:6:22"},"nodeType":"YulFunctionCall","src":"62147:58:22"},"nodeType":"YulExpressionStatement","src":"62147:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"62226:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"62234:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"62222:3:22"},"nodeType":"YulFunctionCall","src":"62222:15:22"},{"hexValue":"342062697473","kind":"string","nodeType":"YulLiteral","src":"62239:8:22","type":"","value":"4 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"62215:6:22"},"nodeType":"YulFunctionCall","src":"62215:33:22"},"nodeType":"YulExpressionStatement","src":"62215:33:22"}]},"name":"store_literal_in_memory_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"62128:6:22","type":""}],"src":"62030:225:22"},{"body":{"nodeType":"YulBlock","src":"62407:220:22","statements":[{"nodeType":"YulAssignment","src":"62417:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"62483:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"62488:2:22","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"62424:58:22"},"nodeType":"YulFunctionCall","src":"62424:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"62417:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"62589:3:22"}],"functionName":{"name":"store_literal_in_memory_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","nodeType":"YulIdentifier","src":"62500:88:22"},"nodeType":"YulFunctionCall","src":"62500:93:22"},"nodeType":"YulExpressionStatement","src":"62500:93:22"},{"nodeType":"YulAssignment","src":"62602:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"62613:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"62618:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"62609:3:22"},"nodeType":"YulFunctionCall","src":"62609:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"62602:3:22"}]}]},"name":"abi_encode_t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"62395:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"62403:3:22","type":""}],"src":"62261:366:22"},{"body":{"nodeType":"YulBlock","src":"62804:248:22","statements":[{"nodeType":"YulAssignment","src":"62814:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"62826:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"62837:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"62822:3:22"},"nodeType":"YulFunctionCall","src":"62822:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"62814:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"62861:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"62872:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"62857:3:22"},"nodeType":"YulFunctionCall","src":"62857:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"62880:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"62886:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"62876:3:22"},"nodeType":"YulFunctionCall","src":"62876:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"62850:6:22"},"nodeType":"YulFunctionCall","src":"62850:47:22"},"nodeType":"YulExpressionStatement","src":"62850:47:22"},{"nodeType":"YulAssignment","src":"62906:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"63040:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"62914:124:22"},"nodeType":"YulFunctionCall","src":"62914:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"62906:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"62784:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"62799:4:22","type":""}],"src":"62633:419:22"},{"body":{"nodeType":"YulBlock","src":"63184:206:22","statements":[{"nodeType":"YulAssignment","src":"63194:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"63206:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"63217:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"63202:3:22"},"nodeType":"YulFunctionCall","src":"63202:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"63194:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"63274:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"63287:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"63298:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"63283:3:22"},"nodeType":"YulFunctionCall","src":"63283:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"63230:43:22"},"nodeType":"YulFunctionCall","src":"63230:71:22"},"nodeType":"YulExpressionStatement","src":"63230:71:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"63355:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"63368:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"63379:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"63364:3:22"},"nodeType":"YulFunctionCall","src":"63364:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"63311:43:22"},"nodeType":"YulFunctionCall","src":"63311:72:22"},"nodeType":"YulExpressionStatement","src":"63311:72:22"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"63148:9:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"63160:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"63168:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"63179:4:22","type":""}],"src":"63058:332:22"},{"body":{"nodeType":"YulBlock","src":"63459:80:22","statements":[{"nodeType":"YulAssignment","src":"63469:22:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"63484:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"63478:5:22"},"nodeType":"YulFunctionCall","src":"63478:13:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"63469:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"63527:5:22"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"63500:26:22"},"nodeType":"YulFunctionCall","src":"63500:33:22"},"nodeType":"YulExpressionStatement","src":"63500:33:22"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"63437:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"63445:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"63453:5:22","type":""}],"src":"63396:143:22"},{"body":{"nodeType":"YulBlock","src":"63622:274:22","statements":[{"body":{"nodeType":"YulBlock","src":"63668:83:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"63670:77:22"},"nodeType":"YulFunctionCall","src":"63670:79:22"},"nodeType":"YulExpressionStatement","src":"63670:79:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"63643:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"63652:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"63639:3:22"},"nodeType":"YulFunctionCall","src":"63639:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"63664:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"63635:3:22"},"nodeType":"YulFunctionCall","src":"63635:32:22"},"nodeType":"YulIf","src":"63632:119:22"},{"nodeType":"YulBlock","src":"63761:128:22","statements":[{"nodeType":"YulVariableDeclaration","src":"63776:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"63790:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"63780:6:22","type":""}]},{"nodeType":"YulAssignment","src":"63805:74:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"63851:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"63862:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"63847:3:22"},"nodeType":"YulFunctionCall","src":"63847:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"63871:7:22"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"63815:31:22"},"nodeType":"YulFunctionCall","src":"63815:64:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"63805:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"63592:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"63603:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"63615:6:22","type":""}],"src":"63545:351:22"},{"body":{"nodeType":"YulBlock","src":"64008:120:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"64030:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"64038:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"64026:3:22"},"nodeType":"YulFunctionCall","src":"64026:14:22"},{"hexValue":"476f7665726e6f7253657474696e67733a20766f74696e6720706572696f6420","kind":"string","nodeType":"YulLiteral","src":"64042:34:22","type":"","value":"GovernorSettings: voting period "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"64019:6:22"},"nodeType":"YulFunctionCall","src":"64019:58:22"},"nodeType":"YulExpressionStatement","src":"64019:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"64098:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"64106:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"64094:3:22"},"nodeType":"YulFunctionCall","src":"64094:15:22"},{"hexValue":"746f6f206c6f77","kind":"string","nodeType":"YulLiteral","src":"64111:9:22","type":"","value":"too low"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"64087:6:22"},"nodeType":"YulFunctionCall","src":"64087:34:22"},"nodeType":"YulExpressionStatement","src":"64087:34:22"}]},"name":"store_literal_in_memory_3f314603cb191f371d117be724372820f824fc7fbb608c5408b31620bafe9a83","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"64000:6:22","type":""}],"src":"63902:226:22"},{"body":{"nodeType":"YulBlock","src":"64280:220:22","statements":[{"nodeType":"YulAssignment","src":"64290:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"64356:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"64361:2:22","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"64297:58:22"},"nodeType":"YulFunctionCall","src":"64297:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"64290:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"64462:3:22"}],"functionName":{"name":"store_literal_in_memory_3f314603cb191f371d117be724372820f824fc7fbb608c5408b31620bafe9a83","nodeType":"YulIdentifier","src":"64373:88:22"},"nodeType":"YulFunctionCall","src":"64373:93:22"},"nodeType":"YulExpressionStatement","src":"64373:93:22"},{"nodeType":"YulAssignment","src":"64475:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"64486:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"64491:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"64482:3:22"},"nodeType":"YulFunctionCall","src":"64482:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"64475:3:22"}]}]},"name":"abi_encode_t_stringliteral_3f314603cb191f371d117be724372820f824fc7fbb608c5408b31620bafe9a83_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"64268:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"64276:3:22","type":""}],"src":"64134:366:22"},{"body":{"nodeType":"YulBlock","src":"64677:248:22","statements":[{"nodeType":"YulAssignment","src":"64687:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"64699:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"64710:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"64695:3:22"},"nodeType":"YulFunctionCall","src":"64695:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"64687:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"64734:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"64745:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"64730:3:22"},"nodeType":"YulFunctionCall","src":"64730:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"64753:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"64759:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"64749:3:22"},"nodeType":"YulFunctionCall","src":"64749:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"64723:6:22"},"nodeType":"YulFunctionCall","src":"64723:47:22"},"nodeType":"YulExpressionStatement","src":"64723:47:22"},{"nodeType":"YulAssignment","src":"64779:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"64913:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_3f314603cb191f371d117be724372820f824fc7fbb608c5408b31620bafe9a83_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"64787:124:22"},"nodeType":"YulFunctionCall","src":"64787:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"64779:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_3f314603cb191f371d117be724372820f824fc7fbb608c5408b31620bafe9a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"64657:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"64672:4:22","type":""}],"src":"64506:419:22"},{"body":{"nodeType":"YulBlock","src":"64979:362:22","statements":[{"nodeType":"YulAssignment","src":"64989:25:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"65012:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"64994:17:22"},"nodeType":"YulFunctionCall","src":"64994:20:22"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"64989:1:22"}]},{"nodeType":"YulAssignment","src":"65023:25:22","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"65046:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"65028:17:22"},"nodeType":"YulFunctionCall","src":"65028:20:22"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"65023:1:22"}]},{"nodeType":"YulVariableDeclaration","src":"65057:28:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"65080:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"65083:1:22"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"65076:3:22"},"nodeType":"YulFunctionCall","src":"65076:9:22"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"65061:11:22","type":""}]},{"nodeType":"YulAssignment","src":"65094:41:22","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"65123:11:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"65105:17:22"},"nodeType":"YulFunctionCall","src":"65105:30:22"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"65094:7:22"}]},{"body":{"nodeType":"YulBlock","src":"65312:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"65314:16:22"},"nodeType":"YulFunctionCall","src":"65314:18:22"},"nodeType":"YulExpressionStatement","src":"65314:18:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"65245:1:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"65238:6:22"},"nodeType":"YulFunctionCall","src":"65238:9:22"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"65268:1:22"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"65275:7:22"},{"name":"x","nodeType":"YulIdentifier","src":"65284:1:22"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"65271:3:22"},"nodeType":"YulFunctionCall","src":"65271:15:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"65265:2:22"},"nodeType":"YulFunctionCall","src":"65265:22:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"65218:2:22"},"nodeType":"YulFunctionCall","src":"65218:83:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"65198:6:22"},"nodeType":"YulFunctionCall","src":"65198:113:22"},"nodeType":"YulIf","src":"65195:139:22"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"64962:1:22","type":""},{"name":"y","nodeType":"YulTypedName","src":"64965:1:22","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"64971:7:22","type":""}],"src":"64931:410:22"},{"body":{"nodeType":"YulBlock","src":"65375:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"65392:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"65395:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"65385:6:22"},"nodeType":"YulFunctionCall","src":"65385:88:22"},"nodeType":"YulExpressionStatement","src":"65385:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"65489:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"65492:4:22","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"65482:6:22"},"nodeType":"YulFunctionCall","src":"65482:15:22"},"nodeType":"YulExpressionStatement","src":"65482:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"65513:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"65516:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"65506:6:22"},"nodeType":"YulFunctionCall","src":"65506:15:22"},"nodeType":"YulExpressionStatement","src":"65506:15:22"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"65347:180:22"},{"body":{"nodeType":"YulBlock","src":"65575:143:22","statements":[{"nodeType":"YulAssignment","src":"65585:25:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"65608:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"65590:17:22"},"nodeType":"YulFunctionCall","src":"65590:20:22"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"65585:1:22"}]},{"nodeType":"YulAssignment","src":"65619:25:22","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"65642:1:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"65624:17:22"},"nodeType":"YulFunctionCall","src":"65624:20:22"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"65619:1:22"}]},{"body":{"nodeType":"YulBlock","src":"65666:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"65668:16:22"},"nodeType":"YulFunctionCall","src":"65668:18:22"},"nodeType":"YulExpressionStatement","src":"65668:18:22"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"65663:1:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"65656:6:22"},"nodeType":"YulFunctionCall","src":"65656:9:22"},"nodeType":"YulIf","src":"65653:35:22"},{"nodeType":"YulAssignment","src":"65698:14:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"65707:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"65710:1:22"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"65703:3:22"},"nodeType":"YulFunctionCall","src":"65703:9:22"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"65698:1:22"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"65564:1:22","type":""},{"name":"y","nodeType":"YulTypedName","src":"65567:1:22","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"65573:1:22","type":""}],"src":"65533:185:22"},{"body":{"nodeType":"YulBlock","src":"65830:67:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"65852:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"65860:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"65848:3:22"},"nodeType":"YulFunctionCall","src":"65848:14:22"},{"hexValue":"436865636b706f696e743a20696e76616c6964206b6579","kind":"string","nodeType":"YulLiteral","src":"65864:25:22","type":"","value":"Checkpoint: invalid key"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"65841:6:22"},"nodeType":"YulFunctionCall","src":"65841:49:22"},"nodeType":"YulExpressionStatement","src":"65841:49:22"}]},"name":"store_literal_in_memory_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"65822:6:22","type":""}],"src":"65724:173:22"},{"body":{"nodeType":"YulBlock","src":"66049:220:22","statements":[{"nodeType":"YulAssignment","src":"66059:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"66125:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"66130:2:22","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"66066:58:22"},"nodeType":"YulFunctionCall","src":"66066:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"66059:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"66231:3:22"}],"functionName":{"name":"store_literal_in_memory_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df","nodeType":"YulIdentifier","src":"66142:88:22"},"nodeType":"YulFunctionCall","src":"66142:93:22"},"nodeType":"YulExpressionStatement","src":"66142:93:22"},{"nodeType":"YulAssignment","src":"66244:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"66255:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"66260:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"66251:3:22"},"nodeType":"YulFunctionCall","src":"66251:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"66244:3:22"}]}]},"name":"abi_encode_t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"66037:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"66045:3:22","type":""}],"src":"65903:366:22"},{"body":{"nodeType":"YulBlock","src":"66446:248:22","statements":[{"nodeType":"YulAssignment","src":"66456:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"66468:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"66479:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"66464:3:22"},"nodeType":"YulFunctionCall","src":"66464:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"66456:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"66503:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"66514:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"66499:3:22"},"nodeType":"YulFunctionCall","src":"66499:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"66522:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"66528:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"66518:3:22"},"nodeType":"YulFunctionCall","src":"66518:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"66492:6:22"},"nodeType":"YulFunctionCall","src":"66492:47:22"},"nodeType":"YulExpressionStatement","src":"66492:47:22"},{"nodeType":"YulAssignment","src":"66548:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"66682:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"66556:124:22"},"nodeType":"YulFunctionCall","src":"66556:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"66548:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"66426:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"66441:4:22","type":""}],"src":"66275:419:22"},{"body":{"nodeType":"YulBlock","src":"66814:34:22","statements":[{"nodeType":"YulAssignment","src":"66824:18:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"66839:3:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"66824:11:22"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"66786:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"66791:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"66802:11:22","type":""}],"src":"66700:148:22"},{"body":{"nodeType":"YulBlock","src":"66960:108:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"66982:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"66990:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"66978:3:22"},"nodeType":"YulFunctionCall","src":"66978:14:22"},{"kind":"number","nodeType":"YulLiteral","src":"66994:66:22","type":"","value":"0x1901000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"66971:6:22"},"nodeType":"YulFunctionCall","src":"66971:90:22"},"nodeType":"YulExpressionStatement","src":"66971:90:22"}]},"name":"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"66952:6:22","type":""}],"src":"66854:214:22"},{"body":{"nodeType":"YulBlock","src":"67238:236:22","statements":[{"nodeType":"YulAssignment","src":"67248:91:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"67332:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"67337:1:22","type":"","value":"2"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"67255:76:22"},"nodeType":"YulFunctionCall","src":"67255:84:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"67248:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"67437:3:22"}],"functionName":{"name":"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","nodeType":"YulIdentifier","src":"67348:88:22"},"nodeType":"YulFunctionCall","src":"67348:93:22"},"nodeType":"YulExpressionStatement","src":"67348:93:22"},{"nodeType":"YulAssignment","src":"67450:18:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"67461:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"67466:1:22","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"67457:3:22"},"nodeType":"YulFunctionCall","src":"67457:11:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"67450:3:22"}]}]},"name":"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"67226:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"67234:3:22","type":""}],"src":"67074:400:22"},{"body":{"nodeType":"YulBlock","src":"67527:32:22","statements":[{"nodeType":"YulAssignment","src":"67537:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"67548:5:22"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"67537:7:22"}]}]},"name":"leftAlign_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"67509:5:22","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"67519:7:22","type":""}],"src":"67480:79:22"},{"body":{"nodeType":"YulBlock","src":"67648:74:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"67665:3:22"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"67708:5:22"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"67690:17:22"},"nodeType":"YulFunctionCall","src":"67690:24:22"}],"functionName":{"name":"leftAlign_t_bytes32","nodeType":"YulIdentifier","src":"67670:19:22"},"nodeType":"YulFunctionCall","src":"67670:45:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"67658:6:22"},"nodeType":"YulFunctionCall","src":"67658:58:22"},"nodeType":"YulExpressionStatement","src":"67658:58:22"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"67636:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"67643:3:22","type":""}],"src":"67565:157:22"},{"body":{"nodeType":"YulBlock","src":"67973:418:22","statements":[{"nodeType":"YulAssignment","src":"67984:155:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"68135:3:22"}],"functionName":{"name":"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"67991:142:22"},"nodeType":"YulFunctionCall","src":"67991:148:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"67984:3:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"68211:6:22"},{"name":"pos","nodeType":"YulIdentifier","src":"68220:3:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"68149:61:22"},"nodeType":"YulFunctionCall","src":"68149:75:22"},"nodeType":"YulExpressionStatement","src":"68149:75:22"},{"nodeType":"YulAssignment","src":"68233:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"68244:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"68249:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"68240:3:22"},"nodeType":"YulFunctionCall","src":"68240:12:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"68233:3:22"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"68324:6:22"},{"name":"pos","nodeType":"YulIdentifier","src":"68333:3:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"68262:61:22"},"nodeType":"YulFunctionCall","src":"68262:75:22"},"nodeType":"YulExpressionStatement","src":"68262:75:22"},{"nodeType":"YulAssignment","src":"68346:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"68357:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"68362:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"68353:3:22"},"nodeType":"YulFunctionCall","src":"68353:12:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"68346:3:22"}]},{"nodeType":"YulAssignment","src":"68375:10:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"68382:3:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"68375:3:22"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"67944:3:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"67950:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"67958:6:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"67969:3:22","type":""}],"src":"67728:663:22"},{"body":{"nodeType":"YulBlock","src":"68575:367:22","statements":[{"nodeType":"YulAssignment","src":"68585:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"68597:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"68608:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"68593:3:22"},"nodeType":"YulFunctionCall","src":"68593:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"68585:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"68666:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"68679:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"68690:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"68675:3:22"},"nodeType":"YulFunctionCall","src":"68675:17:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"68622:43:22"},"nodeType":"YulFunctionCall","src":"68622:71:22"},"nodeType":"YulExpressionStatement","src":"68622:71:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"68743:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"68756:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"68767:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"68752:3:22"},"nodeType":"YulFunctionCall","src":"68752:18:22"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"68703:39:22"},"nodeType":"YulFunctionCall","src":"68703:68:22"},"nodeType":"YulExpressionStatement","src":"68703:68:22"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"68825:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"68838:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"68849:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"68834:3:22"},"nodeType":"YulFunctionCall","src":"68834:18:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"68781:43:22"},"nodeType":"YulFunctionCall","src":"68781:72:22"},"nodeType":"YulExpressionStatement","src":"68781:72:22"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"68907:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"68920:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"68931:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"68916:3:22"},"nodeType":"YulFunctionCall","src":"68916:18:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"68863:43:22"},"nodeType":"YulFunctionCall","src":"68863:72:22"},"nodeType":"YulExpressionStatement","src":"68863:72:22"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"68523:9:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"68535:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"68543:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"68551:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"68559:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"68570:4:22","type":""}],"src":"68397:545:22"},{"body":{"nodeType":"YulBlock","src":"69054:68:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"69076:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"69084:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"69072:3:22"},"nodeType":"YulFunctionCall","src":"69072:14:22"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"69088:26:22","type":"","value":"ECDSA: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"69065:6:22"},"nodeType":"YulFunctionCall","src":"69065:50:22"},"nodeType":"YulExpressionStatement","src":"69065:50:22"}]},"name":"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"69046:6:22","type":""}],"src":"68948:174:22"},{"body":{"nodeType":"YulBlock","src":"69274:220:22","statements":[{"nodeType":"YulAssignment","src":"69284:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"69350:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"69355:2:22","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"69291:58:22"},"nodeType":"YulFunctionCall","src":"69291:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"69284:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"69456:3:22"}],"functionName":{"name":"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","nodeType":"YulIdentifier","src":"69367:88:22"},"nodeType":"YulFunctionCall","src":"69367:93:22"},"nodeType":"YulExpressionStatement","src":"69367:93:22"},{"nodeType":"YulAssignment","src":"69469:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"69480:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"69485:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"69476:3:22"},"nodeType":"YulFunctionCall","src":"69476:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"69469:3:22"}]}]},"name":"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"69262:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"69270:3:22","type":""}],"src":"69128:366:22"},{"body":{"nodeType":"YulBlock","src":"69671:248:22","statements":[{"nodeType":"YulAssignment","src":"69681:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"69693:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"69704:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"69689:3:22"},"nodeType":"YulFunctionCall","src":"69689:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"69681:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"69728:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"69739:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"69724:3:22"},"nodeType":"YulFunctionCall","src":"69724:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"69747:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"69753:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"69743:3:22"},"nodeType":"YulFunctionCall","src":"69743:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"69717:6:22"},"nodeType":"YulFunctionCall","src":"69717:47:22"},"nodeType":"YulExpressionStatement","src":"69717:47:22"},{"nodeType":"YulAssignment","src":"69773:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"69907:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"69781:124:22"},"nodeType":"YulFunctionCall","src":"69781:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"69773:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"69651:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"69666:4:22","type":""}],"src":"69500:419:22"},{"body":{"nodeType":"YulBlock","src":"70031:75:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"70053:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"70061:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"70049:3:22"},"nodeType":"YulFunctionCall","src":"70049:14:22"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","kind":"string","nodeType":"YulLiteral","src":"70065:33:22","type":"","value":"ECDSA: invalid signature length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"70042:6:22"},"nodeType":"YulFunctionCall","src":"70042:57:22"},"nodeType":"YulExpressionStatement","src":"70042:57:22"}]},"name":"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"70023:6:22","type":""}],"src":"69925:181:22"},{"body":{"nodeType":"YulBlock","src":"70258:220:22","statements":[{"nodeType":"YulAssignment","src":"70268:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"70334:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"70339:2:22","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"70275:58:22"},"nodeType":"YulFunctionCall","src":"70275:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"70268:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"70440:3:22"}],"functionName":{"name":"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","nodeType":"YulIdentifier","src":"70351:88:22"},"nodeType":"YulFunctionCall","src":"70351:93:22"},"nodeType":"YulExpressionStatement","src":"70351:93:22"},{"nodeType":"YulAssignment","src":"70453:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"70464:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"70469:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"70460:3:22"},"nodeType":"YulFunctionCall","src":"70460:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"70453:3:22"}]}]},"name":"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"70246:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"70254:3:22","type":""}],"src":"70112:366:22"},{"body":{"nodeType":"YulBlock","src":"70655:248:22","statements":[{"nodeType":"YulAssignment","src":"70665:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"70677:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"70688:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"70673:3:22"},"nodeType":"YulFunctionCall","src":"70673:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"70665:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"70712:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"70723:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"70708:3:22"},"nodeType":"YulFunctionCall","src":"70708:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"70731:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"70737:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"70727:3:22"},"nodeType":"YulFunctionCall","src":"70727:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"70701:6:22"},"nodeType":"YulFunctionCall","src":"70701:47:22"},"nodeType":"YulExpressionStatement","src":"70701:47:22"},{"nodeType":"YulAssignment","src":"70757:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"70891:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"70765:124:22"},"nodeType":"YulFunctionCall","src":"70765:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"70757:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"70635:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"70650:4:22","type":""}],"src":"70484:419:22"},{"body":{"nodeType":"YulBlock","src":"71015:115:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"71037:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"71045:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"71033:3:22"},"nodeType":"YulFunctionCall","src":"71033:14:22"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c","kind":"string","nodeType":"YulLiteral","src":"71049:34:22","type":"","value":"ECDSA: invalid signature 's' val"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"71026:6:22"},"nodeType":"YulFunctionCall","src":"71026:58:22"},"nodeType":"YulExpressionStatement","src":"71026:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"71105:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"71113:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"71101:3:22"},"nodeType":"YulFunctionCall","src":"71101:15:22"},{"hexValue":"7565","kind":"string","nodeType":"YulLiteral","src":"71118:4:22","type":"","value":"ue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"71094:6:22"},"nodeType":"YulFunctionCall","src":"71094:29:22"},"nodeType":"YulExpressionStatement","src":"71094:29:22"}]},"name":"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"71007:6:22","type":""}],"src":"70909:221:22"},{"body":{"nodeType":"YulBlock","src":"71282:220:22","statements":[{"nodeType":"YulAssignment","src":"71292:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"71358:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"71363:2:22","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"71299:58:22"},"nodeType":"YulFunctionCall","src":"71299:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"71292:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"71464:3:22"}],"functionName":{"name":"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","nodeType":"YulIdentifier","src":"71375:88:22"},"nodeType":"YulFunctionCall","src":"71375:93:22"},"nodeType":"YulExpressionStatement","src":"71375:93:22"},{"nodeType":"YulAssignment","src":"71477:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"71488:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"71493:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"71484:3:22"},"nodeType":"YulFunctionCall","src":"71484:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"71477:3:22"}]}]},"name":"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"71270:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"71278:3:22","type":""}],"src":"71136:366:22"},{"body":{"nodeType":"YulBlock","src":"71679:248:22","statements":[{"nodeType":"YulAssignment","src":"71689:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"71701:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"71712:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"71697:3:22"},"nodeType":"YulFunctionCall","src":"71697:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"71689:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"71736:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"71747:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"71732:3:22"},"nodeType":"YulFunctionCall","src":"71732:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"71755:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"71761:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"71751:3:22"},"nodeType":"YulFunctionCall","src":"71751:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"71725:6:22"},"nodeType":"YulFunctionCall","src":"71725:47:22"},"nodeType":"YulExpressionStatement","src":"71725:47:22"},{"nodeType":"YulAssignment","src":"71781:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"71915:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"71789:124:22"},"nodeType":"YulFunctionCall","src":"71789:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"71781:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"71659:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"71674:4:22","type":""}],"src":"71508:419:22"},{"body":{"nodeType":"YulBlock","src":"72039:120:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"72061:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"72069:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"72057:3:22"},"nodeType":"YulFunctionCall","src":"72057:14:22"},{"hexValue":"476f7665726e6f72566f74696e6753696d706c653a20766f746520616c726561","kind":"string","nodeType":"YulLiteral","src":"72073:34:22","type":"","value":"GovernorVotingSimple: vote alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"72050:6:22"},"nodeType":"YulFunctionCall","src":"72050:58:22"},"nodeType":"YulExpressionStatement","src":"72050:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"72129:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"72137:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"72125:3:22"},"nodeType":"YulFunctionCall","src":"72125:15:22"},{"hexValue":"64792063617374","kind":"string","nodeType":"YulLiteral","src":"72142:9:22","type":"","value":"dy cast"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"72118:6:22"},"nodeType":"YulFunctionCall","src":"72118:34:22"},"nodeType":"YulExpressionStatement","src":"72118:34:22"}]},"name":"store_literal_in_memory_52977fe78dd360b196702e8b1aa8e7d06cd560911da4c4d483548d7b2d1a38d8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"72031:6:22","type":""}],"src":"71933:226:22"},{"body":{"nodeType":"YulBlock","src":"72311:220:22","statements":[{"nodeType":"YulAssignment","src":"72321:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"72387:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"72392:2:22","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"72328:58:22"},"nodeType":"YulFunctionCall","src":"72328:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"72321:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"72493:3:22"}],"functionName":{"name":"store_literal_in_memory_52977fe78dd360b196702e8b1aa8e7d06cd560911da4c4d483548d7b2d1a38d8","nodeType":"YulIdentifier","src":"72404:88:22"},"nodeType":"YulFunctionCall","src":"72404:93:22"},"nodeType":"YulExpressionStatement","src":"72404:93:22"},{"nodeType":"YulAssignment","src":"72506:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"72517:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"72522:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"72513:3:22"},"nodeType":"YulFunctionCall","src":"72513:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"72506:3:22"}]}]},"name":"abi_encode_t_stringliteral_52977fe78dd360b196702e8b1aa8e7d06cd560911da4c4d483548d7b2d1a38d8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"72299:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"72307:3:22","type":""}],"src":"72165:366:22"},{"body":{"nodeType":"YulBlock","src":"72708:248:22","statements":[{"nodeType":"YulAssignment","src":"72718:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"72730:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"72741:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"72726:3:22"},"nodeType":"YulFunctionCall","src":"72726:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"72718:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"72765:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"72776:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"72761:3:22"},"nodeType":"YulFunctionCall","src":"72761:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"72784:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"72790:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"72780:3:22"},"nodeType":"YulFunctionCall","src":"72780:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"72754:6:22"},"nodeType":"YulFunctionCall","src":"72754:47:22"},"nodeType":"YulExpressionStatement","src":"72754:47:22"},{"nodeType":"YulAssignment","src":"72810:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"72944:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_52977fe78dd360b196702e8b1aa8e7d06cd560911da4c4d483548d7b2d1a38d8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"72818:124:22"},"nodeType":"YulFunctionCall","src":"72818:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"72810:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_52977fe78dd360b196702e8b1aa8e7d06cd560911da4c4d483548d7b2d1a38d8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"72688:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"72703:4:22","type":""}],"src":"72537:419:22"},{"body":{"nodeType":"YulBlock","src":"73068:134:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"73090:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"73098:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"73086:3:22"},"nodeType":"YulFunctionCall","src":"73086:14:22"},{"hexValue":"476f7665726e6f72566f74696e6753696d706c653a20696e76616c6964207661","kind":"string","nodeType":"YulLiteral","src":"73102:34:22","type":"","value":"GovernorVotingSimple: invalid va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"73079:6:22"},"nodeType":"YulFunctionCall","src":"73079:58:22"},"nodeType":"YulExpressionStatement","src":"73079:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"73158:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"73166:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"73154:3:22"},"nodeType":"YulFunctionCall","src":"73154:15:22"},{"hexValue":"6c756520666f7220656e756d20566f746554797065","kind":"string","nodeType":"YulLiteral","src":"73171:23:22","type":"","value":"lue for enum VoteType"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"73147:6:22"},"nodeType":"YulFunctionCall","src":"73147:48:22"},"nodeType":"YulExpressionStatement","src":"73147:48:22"}]},"name":"store_literal_in_memory_c16dd4ca2a7081ef35bfb3860532c95d6b1aacddadf6f22f1058fc06b5718887","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"73060:6:22","type":""}],"src":"72962:240:22"},{"body":{"nodeType":"YulBlock","src":"73354:220:22","statements":[{"nodeType":"YulAssignment","src":"73364:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"73430:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"73435:2:22","type":"","value":"53"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"73371:58:22"},"nodeType":"YulFunctionCall","src":"73371:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"73364:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"73536:3:22"}],"functionName":{"name":"store_literal_in_memory_c16dd4ca2a7081ef35bfb3860532c95d6b1aacddadf6f22f1058fc06b5718887","nodeType":"YulIdentifier","src":"73447:88:22"},"nodeType":"YulFunctionCall","src":"73447:93:22"},"nodeType":"YulExpressionStatement","src":"73447:93:22"},{"nodeType":"YulAssignment","src":"73549:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"73560:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"73565:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"73556:3:22"},"nodeType":"YulFunctionCall","src":"73556:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"73549:3:22"}]}]},"name":"abi_encode_t_stringliteral_c16dd4ca2a7081ef35bfb3860532c95d6b1aacddadf6f22f1058fc06b5718887_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"73342:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"73350:3:22","type":""}],"src":"73208:366:22"},{"body":{"nodeType":"YulBlock","src":"73751:248:22","statements":[{"nodeType":"YulAssignment","src":"73761:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"73773:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"73784:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"73769:3:22"},"nodeType":"YulFunctionCall","src":"73769:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"73761:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"73808:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"73819:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"73804:3:22"},"nodeType":"YulFunctionCall","src":"73804:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"73827:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"73833:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"73823:3:22"},"nodeType":"YulFunctionCall","src":"73823:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"73797:6:22"},"nodeType":"YulFunctionCall","src":"73797:47:22"},"nodeType":"YulExpressionStatement","src":"73797:47:22"},{"nodeType":"YulAssignment","src":"73853:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"73987:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_c16dd4ca2a7081ef35bfb3860532c95d6b1aacddadf6f22f1058fc06b5718887_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"73861:124:22"},"nodeType":"YulFunctionCall","src":"73861:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"73853:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_c16dd4ca2a7081ef35bfb3860532c95d6b1aacddadf6f22f1058fc06b5718887__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"73731:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"73746:4:22","type":""}],"src":"73580:419:22"},{"body":{"nodeType":"YulBlock","src":"74215:454:22","statements":[{"nodeType":"YulAssignment","src":"74225:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"74237:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"74248:3:22","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"74233:3:22"},"nodeType":"YulFunctionCall","src":"74233:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"74225:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"74306:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"74319:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"74330:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"74315:3:22"},"nodeType":"YulFunctionCall","src":"74315:17:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"74262:43:22"},"nodeType":"YulFunctionCall","src":"74262:71:22"},"nodeType":"YulExpressionStatement","src":"74262:71:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"74387:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"74400:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"74411:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"74396:3:22"},"nodeType":"YulFunctionCall","src":"74396:18:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"74343:43:22"},"nodeType":"YulFunctionCall","src":"74343:72:22"},"nodeType":"YulExpressionStatement","src":"74343:72:22"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"74469:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"74482:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"74493:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"74478:3:22"},"nodeType":"YulFunctionCall","src":"74478:18:22"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"74425:43:22"},"nodeType":"YulFunctionCall","src":"74425:72:22"},"nodeType":"YulExpressionStatement","src":"74425:72:22"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"74551:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"74564:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"74575:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"74560:3:22"},"nodeType":"YulFunctionCall","src":"74560:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"74507:43:22"},"nodeType":"YulFunctionCall","src":"74507:72:22"},"nodeType":"YulExpressionStatement","src":"74507:72:22"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"74633:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"74646:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"74657:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"74642:3:22"},"nodeType":"YulFunctionCall","src":"74642:19:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"74589:43:22"},"nodeType":"YulFunctionCall","src":"74589:73:22"},"nodeType":"YulExpressionStatement","src":"74589:73:22"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"74155:9:22","type":""},{"name":"value4","nodeType":"YulTypedName","src":"74167:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"74175:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"74183:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"74191:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"74199:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"74210:4:22","type":""}],"src":"74005:664:22"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint8t_string_calldata_ptrt_bytes_memory_ptrt_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value5 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value7 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // bytes[]\n    function abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_bytes_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // bytes[]\n    function abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptrt_bytes32(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint8t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_ProposalState_$1322(value) {\n        if iszero(lt(value, 8)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_ProposalState_$1322(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_ProposalState_$1322(value)\n    }\n\n    function convert_t_enum$_ProposalState_$1322_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_ProposalState_$1322(value)\n    }\n\n    function abi_encode_t_enum$_ProposalState_$1322_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_ProposalState_$1322_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_ProposalState_$1322__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_ProposalState_$1322_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint8(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint8t_string_calldata_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint8t_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IVotes_$2331_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IVotes_$2331_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IVotes_$2331_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IVotes_$2331__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IVotes_$2331_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function store_literal_in_memory_01397b9b23826f2770c44682f6f60114915147b09511a75fee3231adbc22847f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Governor: onlyGovernance\")\n\n    }\n\n    function abi_encode_t_stringliteral_01397b9b23826f2770c44682f6f60114915147b09511a75fee3231adbc22847f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_01397b9b23826f2770c44682f6f60114915147b09511a75fee3231adbc22847f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_01397b9b23826f2770c44682f6f60114915147b09511a75fee3231adbc22847f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_01397b9b23826f2770c44682f6f60114915147b09511a75fee3231adbc22847f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_a608627370ddd238e48feab42026732822e64969fe5a8155723eaa5f397576d9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Governor: proposal not successfu\")\n\n        mstore(add(memPtr, 32), \"l\")\n\n    }\n\n    function abi_encode_t_stringliteral_a608627370ddd238e48feab42026732822e64969fe5a8155723eaa5f397576d9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_a608627370ddd238e48feab42026732822e64969fe5a8155723eaa5f397576d9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a608627370ddd238e48feab42026732822e64969fe5a8155723eaa5f397576d9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a608627370ddd238e48feab42026732822e64969fe5a8155723eaa5f397576d9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint256_t_uint8__to_t_bytes32_t_uint256_t_uint8__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_be0e8e67d15e920d3846a46401854a27a676d8965bbdde05e68fc2cc5672c892(memPtr) {\n\n        mstore(add(memPtr, 0), \"Governor: unknown proposal id\")\n\n    }\n\n    function abi_encode_t_stringliteral_be0e8e67d15e920d3846a46401854a27a676d8965bbdde05e68fc2cc5672c892_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_be0e8e67d15e920d3846a46401854a27a676d8965bbdde05e68fc2cc5672c892(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_be0e8e67d15e920d3846a46401854a27a676d8965bbdde05e68fc2cc5672c892__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_be0e8e67d15e920d3846a46401854a27a676d8965bbdde05e68fc2cc5672c892_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_df78ee0077e11770202b643d4ac130b9964a5ac311c9b8d8ed6242eb4e2dcf86(memPtr) {\n\n        mstore(add(memPtr, 0), \"Governor: proposer votes below p\")\n\n        mstore(add(memPtr, 32), \"roposal threshold\")\n\n    }\n\n    function abi_encode_t_stringliteral_df78ee0077e11770202b643d4ac130b9964a5ac311c9b8d8ed6242eb4e2dcf86_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_df78ee0077e11770202b643d4ac130b9964a5ac311c9b8d8ed6242eb4e2dcf86(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_df78ee0077e11770202b643d4ac130b9964a5ac311c9b8d8ed6242eb4e2dcf86__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df78ee0077e11770202b643d4ac130b9964a5ac311c9b8d8ed6242eb4e2dcf86_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_35c793b1b5a6be245307722bba06fa552ac609ebfd70358ab0b3220eed40db4d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Governor: invalid proposal lengt\")\n\n        mstore(add(memPtr, 32), \"h\")\n\n    }\n\n    function abi_encode_t_stringliteral_35c793b1b5a6be245307722bba06fa552ac609ebfd70358ab0b3220eed40db4d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_35c793b1b5a6be245307722bba06fa552ac609ebfd70358ab0b3220eed40db4d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_35c793b1b5a6be245307722bba06fa552ac609ebfd70358ab0b3220eed40db4d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_35c793b1b5a6be245307722bba06fa552ac609ebfd70358ab0b3220eed40db4d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8400b334e0df18026c76df742cddc258619f9923d5f5b8ba67cd6eec1d1f3513(memPtr) {\n\n        mstore(add(memPtr, 0), \"Governor: empty proposal\")\n\n    }\n\n    function abi_encode_t_stringliteral_8400b334e0df18026c76df742cddc258619f9923d5f5b8ba67cd6eec1d1f3513_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_8400b334e0df18026c76df742cddc258619f9923d5f5b8ba67cd6eec1d1f3513(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8400b334e0df18026c76df742cddc258619f9923d5f5b8ba67cd6eec1d1f3513__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8400b334e0df18026c76df742cddc258619f9923d5f5b8ba67cd6eec1d1f3513_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c1bb0f67bc14091429c4b8b5d74e1f929b2838d72b5fb3c5a2cbef13b2faab40(memPtr) {\n\n        mstore(add(memPtr, 0), \"Governor: proposal already exist\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function abi_encode_t_stringliteral_c1bb0f67bc14091429c4b8b5d74e1f929b2838d72b5fb3c5a2cbef13b2faab40_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_c1bb0f67bc14091429c4b8b5d74e1f929b2838d72b5fb3c5a2cbef13b2faab40(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c1bb0f67bc14091429c4b8b5d74e1f929b2838d72b5fb3c5a2cbef13b2faab40__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c1bb0f67bc14091429c4b8b5d74e1f929b2838d72b5fb3c5a2cbef13b2faab40_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function checked_add_t_uint64(x, y) -> sum {\n        x := cleanup_t_uint64(x)\n        y := cleanup_t_uint64(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // string[] -> string[]\n    function abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // bytes[] -> bytes[]\n    function abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_bytes_memory_ptr_to_t_bytes_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function convert_t_uint64_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint64(value)))\n    }\n\n    function abi_encode_t_uint64_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint64_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_uint64_t_uint64_t_string_memory_ptr__to_t_uint256_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value4,  tail)\n\n        mstore(add(headStart, 160), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(value5,  tail)\n\n        abi_encode_t_uint64_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint64_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        mstore(add(headStart, 256), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value8,  tail)\n\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_bytes32__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 2\")\n\n        mstore(add(memPtr, 32), \"24 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 3\")\n\n        mstore(add(memPtr, 32), \"2 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5b1e239298a1362f9b5245bd4e9393de28380a12326aa31532e03fe3f1061d80(memPtr) {\n\n        mstore(add(memPtr, 0), \"Governor: vote not currently act\")\n\n        mstore(add(memPtr, 32), \"ive\")\n\n    }\n\n    function abi_encode_t_stringliteral_5b1e239298a1362f9b5245bd4e9393de28380a12326aa31532e03fe3f1061d80_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_5b1e239298a1362f9b5245bd4e9393de28380a12326aa31532e03fe3f1061d80(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5b1e239298a1362f9b5245bd4e9393de28380a12326aa31532e03fe3f1061d80__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5b1e239298a1362f9b5245bd4e9393de28380a12326aa31532e03fe3f1061d80_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint8_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint8_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint8_t_uint256_t_string_memory_ptr_t_bytes_memory_ptr__to_t_uint256_t_uint8_t_uint256_t_string_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function store_literal_in_memory_0687f8064c09ccf183090b5092c4485c730072a161487645a7e37b56cef356bb(memPtr) {\n\n        mstore(add(memPtr, 0), \"GovernorVotesQuorumFraction: quo\")\n\n        mstore(add(memPtr, 32), \"rumNumerator over quorumDenomina\")\n\n        mstore(add(memPtr, 64), \"tor\")\n\n    }\n\n    function abi_encode_t_stringliteral_0687f8064c09ccf183090b5092c4485c730072a161487645a7e37b56cef356bb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 67)\n        store_literal_in_memory_0687f8064c09ccf183090b5092c4485c730072a161487645a7e37b56cef356bb(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0687f8064c09ccf183090b5092c4485c730072a161487645a7e37b56cef356bb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0687f8064c09ccf183090b5092c4485c730072a161487645a7e37b56cef356bb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be(memPtr) {\n\n        mstore(add(memPtr, 0), \"Checkpoints: block not yet mined\")\n\n    }\n\n    function abi_encode_t_stringliteral_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_65bd29ebd873d82da6b3634513fc6582859c8e00f2a09cb4bdbeddf7d05eb5be_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 6\")\n\n        mstore(add(memPtr, 32), \"4 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_3f314603cb191f371d117be724372820f824fc7fbb608c5408b31620bafe9a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"GovernorSettings: voting period \")\n\n        mstore(add(memPtr, 32), \"too low\")\n\n    }\n\n    function abi_encode_t_stringliteral_3f314603cb191f371d117be724372820f824fc7fbb608c5408b31620bafe9a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_3f314603cb191f371d117be724372820f824fc7fbb608c5408b31620bafe9a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3f314603cb191f371d117be724372820f824fc7fbb608c5408b31620bafe9a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3f314603cb191f371d117be724372820f824fc7fbb608c5408b31620bafe9a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df(memPtr) {\n\n        mstore(add(memPtr, 0), \"Checkpoint: invalid key\")\n\n    }\n\n    function abi_encode_t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b717461289064d78d4f64eae2786bccf758ed88a7bfa28ee6fa5093be89d54df_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541(memPtr) {\n\n        mstore(add(memPtr, 0), 0x1901000000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 2)\n        store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541(pos)\n        end := add(pos, 2)\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature length\")\n\n    }\n\n    function abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature 's' val\")\n\n        mstore(add(memPtr, 32), \"ue\")\n\n    }\n\n    function abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_52977fe78dd360b196702e8b1aa8e7d06cd560911da4c4d483548d7b2d1a38d8(memPtr) {\n\n        mstore(add(memPtr, 0), \"GovernorVotingSimple: vote alrea\")\n\n        mstore(add(memPtr, 32), \"dy cast\")\n\n    }\n\n    function abi_encode_t_stringliteral_52977fe78dd360b196702e8b1aa8e7d06cd560911da4c4d483548d7b2d1a38d8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_52977fe78dd360b196702e8b1aa8e7d06cd560911da4c4d483548d7b2d1a38d8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_52977fe78dd360b196702e8b1aa8e7d06cd560911da4c4d483548d7b2d1a38d8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_52977fe78dd360b196702e8b1aa8e7d06cd560911da4c4d483548d7b2d1a38d8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c16dd4ca2a7081ef35bfb3860532c95d6b1aacddadf6f22f1058fc06b5718887(memPtr) {\n\n        mstore(add(memPtr, 0), \"GovernorVotingSimple: invalid va\")\n\n        mstore(add(memPtr, 32), \"lue for enum VoteType\")\n\n    }\n\n    function abi_encode_t_stringliteral_c16dd4ca2a7081ef35bfb3860532c95d6b1aacddadf6f22f1058fc06b5718887_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 53)\n        store_literal_in_memory_c16dd4ca2a7081ef35bfb3860532c95d6b1aacddadf6f22f1058fc06b5718887(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c16dd4ca2a7081ef35bfb3860532c95d6b1aacddadf6f22f1058fc06b5718887__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c16dd4ca2a7081ef35bfb3860532c95d6b1aacddadf6f22f1058fc06b5718887_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2018":[{"length":32,"start":7680},{"length":32,"start":10657},{"length":32,"start":11113}],"4869":[{"length":32,"start":12346}],"4871":[{"length":32,"start":12305}],"4873":[{"length":32,"start":12219}],"4875":[{"length":32,"start":12422}],"4877":[{"length":32,"start":12455}],"4879":[{"length":32,"start":12389}]},"linkReferences":{},"object":"60806040526004361061021e5760003560e01c806370b0f66011610123578063c28bc2fa116100ab578063eb9019d41161006f578063eb9019d4146108ed578063ece40cc11461092a578063f23a6e6114610953578063f8ce560a14610990578063fc0c546a146109cd57610264565b8063c28bc2fa14610815578063c59057e414610831578063dd4e2ba51461086e578063deaaa7cc14610899578063ea0217cf146108c457610264565b80639a802a6d116100f25780639a802a6d14610708578063a7713a7014610745578063b58131b014610770578063bc197c811461079b578063c01f9e37146107d857610264565b806370b0f6601461063a5780637b3c71d3146106635780637d5e81e2146106a057806397c3d334146106dd57610264565b80633932abb1116101a6578063544ffc9c11610175578063544ffc9c1461051957806354fd4d501461055857806356781388146105835780635f398a14146105c057806360c4247f146105fd57610264565b80633932abb1146104375780633bccf4fd146104625780633e4f49e61461049f57806343859632146104dc57610264565b806306fdde03116101ed57806306fdde0314610337578063150b7a02146103625780632656227d1461039f5780632d63f693146103cf5780632fe3e2611461040c57610264565b806301ffc9a71461026957806302a251a3146102a657806303420181146102d157806306f3f9e61461030e57610264565b36610264573073ffffffffffffffffffffffffffffffffffffffff166102426109f8565b73ffffffffffffffffffffffffffffffffffffffff161461026257600080fd5b005b600080fd5b34801561027557600080fd5b50610290600480360381019061028b9190613811565b610a00565b60405161029d9190613859565b60405180910390f35b3480156102b257600080fd5b506102bb610b65565b6040516102c8919061388d565b60405180910390f35b3480156102dd57600080fd5b506102f860048036038101906102f39190613ae9565b610b74565b604051610305919061388d565b60405180910390f35b34801561031a57600080fd5b5061033560048036038101906103309190613bc7565b610c59565b005b34801561034357600080fd5b5061034c610d50565b6040516103599190613c73565b60405180910390f35b34801561036e57600080fd5b5061038960048036038101906103849190613cf3565b610de2565b6040516103969190613d85565b60405180910390f35b6103b960048036038101906103b49190614007565b610df6565b6040516103c6919061388d565b60405180910390f35b3480156103db57600080fd5b506103f660048036038101906103f19190613bc7565b610f43565b604051610403919061388d565b60405180910390f35b34801561041857600080fd5b50610421610fb1565b60405161042e91906140d1565b60405180910390f35b34801561044357600080fd5b5061044c610fd5565b604051610459919061388d565b60405180910390f35b34801561046e57600080fd5b50610489600480360381019061048491906140ec565b610fe4565b604051610496919061388d565b60405180910390f35b3480156104ab57600080fd5b506104c660048036038101906104c19190613bc7565b61106e565b6040516104d391906141de565b60405180910390f35b3480156104e857600080fd5b5061050360048036038101906104fe91906141f9565b611182565b6040516105109190613859565b60405180910390f35b34801561052557600080fd5b50610540600480360381019061053b9190613bc7565b6111ed565b60405161054f93929190614239565b60405180910390f35b34801561056457600080fd5b5061056d611225565b60405161057a9190613c73565b60405180910390f35b34801561058f57600080fd5b506105aa60048036038101906105a59190614270565b611262565b6040516105b7919061388d565b60405180910390f35b3480156105cc57600080fd5b506105e760048036038101906105e291906142b0565b611293565b6040516105f4919061388d565b60405180910390f35b34801561060957600080fd5b50610624600480360381019061061f9190613bc7565b6112fd565b604051610631919061388d565b60405180910390f35b34801561064657600080fd5b50610661600480360381019061065c9190613bc7565b611449565b005b34801561066f57600080fd5b5061068a60048036038101906106859190614354565b611540565b604051610697919061388d565b60405180910390f35b3480156106ac57600080fd5b506106c760048036038101906106c29190614469565b6115a8565b6040516106d4919061388d565b60405180910390f35b3480156106e957600080fd5b506106f26118af565b6040516106ff919061388d565b60405180910390f35b34801561071457600080fd5b5061072f600480360381019061072a9190614540565b6118b8565b60405161073c919061388d565b60405180910390f35b34801561075157600080fd5b5061075a6118ce565b604051610767919061388d565b60405180910390f35b34801561077c57600080fd5b50610785611915565b604051610792919061388d565b60405180910390f35b3480156107a757600080fd5b506107c260048036038101906107bd91906145af565b611924565b6040516107cf9190613d85565b60405180910390f35b3480156107e457600080fd5b506107ff60048036038101906107fa9190613bc7565b611939565b60405161080c919061388d565b60405180910390f35b61082f600480360381019061082a91906146d4565b6119a7565b005b34801561083d57600080fd5b5061085860048036038101906108539190614007565b611b30565b604051610865919061388d565b60405180910390f35b34801561087a57600080fd5b50610883611b6c565b6040516108909190613c73565b60405180910390f35b3480156108a557600080fd5b506108ae611ba9565b6040516108bb91906140d1565b60405180910390f35b3480156108d057600080fd5b506108eb60048036038101906108e69190613bc7565b611bcd565b005b3480156108f957600080fd5b50610914600480360381019061090f9190614748565b611cc4565b604051610921919061388d565b60405180910390f35b34801561093657600080fd5b50610951600480360381019061094c9190613bc7565b611ce0565b005b34801561095f57600080fd5b5061097a60048036038101906109759190614788565b611dd7565b6040516109879190613d85565b60405180910390f35b34801561099c57600080fd5b506109b760048036038101906109b29190613bc7565b611dec565b6040516109c4919061388d565b60405180910390f35b3480156109d957600080fd5b506109e2611dfe565b6040516109ef919061487e565b60405180910390f35b600030905090565b6000639a802a6d60e01b630342018160e01b635f398a1460e01b7f79dd796f000000000000000000000000000000000000000000000000000000001818187bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610ae657507f79dd796f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610b4e57507f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610b5e5750610b5d82611fb8565b5b9050919050565b6000610b6f612022565b905090565b600080610bf7610bef7fb3b3f3b703cd84ce352197dcff232b1b5d3cfb2025ce47cf04742d0651f1af888c8c8c8c604051610bb09291906148c9565b60405180910390208b80519060200120604051602001610bd49594939291906148f1565b6040516020818303038152906040528051906020012061202c565b868686612046565b9050610c4a8a828b8b8b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508a612071565b91505098975050505050505050565b610c616109f8565b73ffffffffffffffffffffffffffffffffffffffff16610c7f61222d565b73ffffffffffffffffffffffffffffffffffffffff1614610cd5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ccc90614990565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff16610cf46109f8565b73ffffffffffffffffffffffffffffffffffffffff1614610d44576000610d19612235565b604051610d279291906148c9565b604051809103902090505b80610d3d6002612242565b03610d3257505b610d4d8161231e565b50565b606060008054610d5f906149df565b80601f0160208091040260200160405190810160405280929190818152602001828054610d8b906149df565b8015610dd85780601f10610dad57610100808354040283529160200191610dd8565b820191906000526020600020905b815481529060010190602001808311610dbb57829003601f168201915b5050505050905090565b600063150b7a0260e01b9050949350505050565b600080610e0586868686611b30565b90506000610e128261106e565b905060046007811115610e2857610e27614167565b5b816007811115610e3b57610e3a614167565b5b1480610e6b575060056007811115610e5657610e55614167565b5b816007811115610e6957610e68614167565b5b145b610eaa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea190614a82565b60405180910390fd5b600180600084815260200190815260200160002060020160006101000a81548160ff0219169083151502179055507f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f82604051610f07919061388d565b60405180910390a1610f1c82888888886124d2565b610f2982888888886125b5565b610f3682888888886126c4565b8192505050949350505050565b6000610fa0600160008481526020019081526020016000206000016040518060200160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152505061271f565b67ffffffffffffffff169050919050565b7fb3b3f3b703cd84ce352197dcff232b1b5d3cfb2025ce47cf04742d0651f1af8881565b6000610fdf61272d565b905090565b60008061104561103d7f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f898960405160200161102293929190614aa2565b6040516020818303038152906040528051906020012061202c565b868686612046565b905061106287828860405180602001604052806000815250612737565b91505095945050505050565b6000806001600084815260200190815260200160002090508060020160009054906101000a900460ff16156110a757600791505061117d565b8060020160019054906101000a900460ff16156110c857600291505061117d565b60006110d384610f43565b905060008103611118576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110f90614b25565b60405180910390fd5b43811061112a5760009250505061117d565b600061113585611939565b905043811061114a576001935050505061117d565b61115385612757565b801561116457506111638561279e565b5b15611175576004935050505061117d565b600393505050505b919050565b60006007600084815260200190815260200160002060030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600080600080600760008681526020019081526020016000209050806000015481600101548260020154935093509350509193909250565b60606040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250905090565b60008061126d61222d565b905061128a84828560405180602001604052806000815250612737565b91505092915050565b60008061129e61222d565b90506112f187828888888080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505087612071565b91505095945050505050565b60008060096000018054905090506000810361131e57600854915050611444565b600060096000016001836113329190614b74565b8154811061134357611342614ba8565b5b906000526020600020016040518060400160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681525050905083816000015163ffffffff161161142b5780602001517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1692505050611444565b61143f8460096127c990919063ffffffff16565b925050505b919050565b6114516109f8565b73ffffffffffffffffffffffffffffffffffffffff1661146f61222d565b73ffffffffffffffffffffffffffffffffffffffff16146114c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114bc90614990565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff166114e46109f8565b73ffffffffffffffffffffffffffffffffffffffff1614611534576000611509612235565b6040516115179291906148c9565b604051809103902090505b8061152d6002612242565b0361152257505b61153d816128b8565b50565b60008061154b61222d565b905061159d86828787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050612737565b915050949350505050565b60006115b2611915565b6115cf6115bd61222d565b6001436115ca9190614b74565b611cc4565b1015611610576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161160790614c49565b60405180910390fd5b60006116258686868680519060200120611b30565b9050845186511461166b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161166290614cdb565b60405180910390fd5b83518651146116af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116a690614cdb565b60405180910390fd5b60008651116116f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116ea90614d47565b60405180910390fd5b6000600160008381526020019081526020016000209050611753816000016040518060200160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250506128fd565b611792576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161178990614dd9565b60405180910390fd5b60006117a461179f610fd5565b612917565b6117ad43612917565b6117b79190614e0d565b905060006117cb6117c6610b65565b612917565b826117d69190614e0d565b90506117ee828460000161296e90919063ffffffff16565b611804818460010161296e90919063ffffffff16565b7f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e08461182e61222d565b8b8b8d5167ffffffffffffffff81111561184b5761184a613988565b5b60405190808252806020026020018201604052801561187e57816020015b60608152602001906001900390816118695790505b508c88888e60405161189899989796959493929190615228565b60405180910390a183945050505050949350505050565b60006064905090565b60006118c584848461299d565b90509392505050565b6000806009600001805490501461190c576118e96009611efb565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16611910565b6008545b905090565b600061191f612a44565b905090565b600063bc197c8160e01b905095945050505050565b6000611996600160008481526020019081526020016000206001016040518060200160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152505061271f565b67ffffffffffffffff169050919050565b6119af6109f8565b73ffffffffffffffffffffffffffffffffffffffff166119cd61222d565b73ffffffffffffffffffffffffffffffffffffffff1614611a23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a1a90614990565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff16611a426109f8565b73ffffffffffffffffffffffffffffffffffffffff1614611a92576000611a67612235565b604051611a759291906148c9565b604051809103902090505b80611a8b6002612242565b03611a8057505b6000808573ffffffffffffffffffffffffffffffffffffffff16858585604051611abd9291906148c9565b60006040518083038185875af1925050503d8060008114611afa576040519150601f19603f3d011682016040523d82523d6000602084013e611aff565b606091505b5091509150611b278282604051806060016040528060288152602001615e6360289139612a4e565b50505050505050565b600084848484604051602001611b4994939291906152d8565b6040516020818303038152906040528051906020012060001c9050949350505050565b60606040518060400160405280602081526020017f737570706f72743d627261766f2671756f72756d3d666f722c6162737461696e815250905090565b7f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f81565b611bd56109f8565b73ffffffffffffffffffffffffffffffffffffffff16611bf361222d565b73ffffffffffffffffffffffffffffffffffffffff1614611c49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c4090614990565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff16611c686109f8565b73ffffffffffffffffffffffffffffffffffffffff1614611cb8576000611c8d612235565b604051611c9b9291906148c9565b604051809103902090505b80611cb16002612242565b03611ca657505b611cc181612a70565b50565b6000611cd88383611cd3612af8565b61299d565b905092915050565b611ce86109f8565b73ffffffffffffffffffffffffffffffffffffffff16611d0661222d565b73ffffffffffffffffffffffffffffffffffffffff1614611d5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d5390614990565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff16611d7b6109f8565b73ffffffffffffffffffffffffffffffffffffffff1614611dcb576000611da0612235565b604051611dae9291906148c9565b604051809103902090505b80611dc46002612242565b03611db957505b611dd481612b0f565b50565b600063f23a6e6160e01b905095945050505050565b6000611df782612b54565b9050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8016821115611e85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e7c906153a4565b60405180910390fd5b819050919050565b600080611eae84600001611ea043611f65565b611ea986611e22565b612c1c565b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff169150807bffffffffffffffffffffffffffffffffffffffffffffffffffffffff169050915091509250929050565b6000808260000180549050905060008114611f5a57611f2983600001600183611f249190614b74565b612fa2565b60000160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16611f5d565b60005b915050919050565b600063ffffffff8016821115611fb0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fa790615436565b60405180910390fd5b819050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000600554905090565b600061203f612039612fb7565b836130d1565b9050919050565b600080600061205787878787613104565b91509150612064816131e6565b8192505050949350505050565b6000806001600088815260200190815260200160002090506001600781111561209d5761209c614167565b5b6120a68861106e565b60078111156120b8576120b7614167565b5b146120f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120ef906154c8565b60405180910390fd5b600061215787612147846000016040518060200160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152505061271f565b67ffffffffffffffff168661299d565b9050612166888888848861334c565b60008451036121c8578673ffffffffffffffffffffffffffffffffffffffff167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda4898884896040516121bb94939291906154e8565b60405180910390a261221f565b8673ffffffffffffffffffffffffffffffffffffffff167fe2babfbac5889a709b63bb7f598b324e08bc5a4fb9ec647fb3cbc9ec07eb8712898884898960405161221695949392919061557e565b60405180910390a25b809250505095945050505050565b600033905090565b3660008036915091509091565b600061224d82613550565b15612284576040517f3db2a12a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008260000160009054906101000a9004600f0b905082600101600082600f0b600f0b815260200190815260200160002054915082600101600082600f0b600f0b815260200190815260200160002060009055600181018360000160006101000a8154816fffffffffffffffffffffffffffffffff0219169083600f0b6fffffffffffffffffffffffffffffffff16021790555050919050565b6123266118af565b811115612368576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161235f90615677565b60405180910390fd5b60006123726118ce565b90506000811415801561238d57506000600960000180549050145b1561247f5760096000016040518060400160405280600063ffffffff1681526020016123b884611e22565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a8154817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16021790555050505b612493826009611e8d90919063ffffffff16565b50507f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b463399781836040516124c6929190615697565b60405180910390a15050565b3073ffffffffffffffffffffffffffffffffffffffff166124f16109f8565b73ffffffffffffffffffffffffffffffffffffffff16146125ae5760005b84518110156125ac573073ffffffffffffffffffffffffffffffffffffffff1685828151811061254257612541614ba8565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff160361259b5761259a83828151811061257b5761257a614ba8565b5b602002602001015180519060200120600261358590919063ffffffff16565b5b806125a5906156c0565b905061250f565b505b5050505050565b6000604051806060016040528060278152602001615e8b60279139905060005b85518110156126bb576000808783815181106125f4576125f3614ba8565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1687848151811061262557612624614ba8565b5b60200260200101518785815181106126405761263f614ba8565b5b60200260200101516040516126559190615739565b60006040518083038185875af1925050503d8060008114612692576040519150601f19603f3d011682016040523d82523d6000602084013e612697565b606091505b50915091506126a7828286612a4e565b505050806126b4906156c0565b90506125d5565b50505050505050565b3073ffffffffffffffffffffffffffffffffffffffff166126e36109f8565b73ffffffffffffffffffffffffffffffffffffffff1614612718576127086002613550565b612717576127166002613601565b5b5b5050505050565b600081600001519050919050565b6000600454905090565b600061274d85858585612748612af8565b612071565b9050949350505050565b600080600760008481526020019081526020016000209050806002015481600101546127839190615750565b61279461278f85610f43565b611dec565b1115915050919050565b6000806007600084815260200190815260200160002090508060000154816001015411915050919050565b600043821061280d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612804906157d0565b60405180910390fd5b600061281883611f65565b905060008460000180549050905060006128388660000184600085613682565b90506000811461288c5761285b866000016001836128569190614b74565b612fa2565b60000160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1661288f565b60005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16935050505092915050565b7fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a93600454826040516128eb929190615697565b60405180910390a18060048190555050565b600080826000015167ffffffffffffffff16149050919050565b600067ffffffffffffffff8016821115612966576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161295d90615862565b60405180910390fd5b819050919050565b808260000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633a46b1a885856040518363ffffffff1660e01b81526004016129fa929190615882565b602060405180830381865afa158015612a17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a3b91906158c0565b90509392505050565b6000600654905090565b60608315612a5e57829050612a69565b612a6883836136f5565b5b9392505050565b60008111612ab3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612aaa9061595f565b60405180910390fd5b7f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e882860055482604051612ae6929190615697565b60405180910390a18060058190555050565b606060405180602001604052806000815250905090565b7fccb45da8d5717e6c4544694297c4ba5cf151d455c9bb0ed4fc7a38411bc0546160065482604051612b42929190615697565b60405180910390a18060068190555050565b6000612b5e6118af565b612b67836112fd565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16638e539e8c856040518263ffffffff1660e01b8152600401612bc0919061388d565b602060405180830381865afa158015612bdd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c0191906158c0565b612c0b919061597f565b612c1591906159f0565b9050919050565b6000806000858054905090506000811115612eb2576000612c4987600184612c449190614b74565b612fa2565b6040518060400160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff168152505090508563ffffffff16816000015163ffffffff161115612d3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d3490615a6d565b60405180910390fd5b8563ffffffff16816000015163ffffffff1603612dc15784612d6b88600185612d669190614b74565b612fa2565b60000160046101000a8154817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff160217905550612ea1565b8660405180604001604052808863ffffffff168152602001877bffffffffffffffffffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a8154817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16021790555050505b806020015185935093505050612f9a565b8560405180604001604052808763ffffffff168152602001867bffffffffffffffffffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a8154817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff160217905550505060008492509250505b935093915050565b60008260005281602060002001905092915050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614801561303357507f000000000000000000000000000000000000000000000000000000000000000046145b15613060577f000000000000000000000000000000000000000000000000000000000000000090506130ce565b6130cb7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000613745565b90505b90565b600082826040516020016130e6929190615b05565b60405160208183030381529060405280519060200120905092915050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c111561313f5760006003915091506131dd565b6000600187878787604051600081526020016040526040516131649493929190615b3c565b6020604051602081039080840390855afa158015613186573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036131d4576000600192509250506131dd565b80600092509250505b94509492505050565b600060048111156131fa576131f9614167565b5b81600481111561320d5761320c614167565b5b0315613349576001600481111561322757613226614167565b5b81600481111561323a57613239614167565b5b0361327a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161327190615bcd565b60405180910390fd5b6002600481111561328e5761328d614167565b5b8160048111156132a1576132a0614167565b5b036132e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016132d890615c39565b60405180910390fd5b600360048111156132f5576132f4614167565b5b81600481111561330857613307614167565b5b03613348576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161333f90615ccb565b60405180910390fd5b5b50565b60006007600087815260200190815260200160002090508060030160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156133f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016133e990615d5d565b60405180910390fd5b60018160030160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600060028111156134605761345f614167565b5b60ff168460ff160361348c57828160000160008282546134809190615750565b92505081905550613548565b600160028111156134a05761349f614167565b5b60ff168460ff16036134cc57828160010160008282546134c09190615750565b92505081905550613547565b6002808111156134df576134de614167565b5b60ff168460ff160361350b57828160020160008282546134ff9190615750565b92505081905550613546565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161353d90615def565b60405180910390fd5b5b5b505050505050565b60008160000160009054906101000a9004600f0b600f0b8260000160109054906101000a9004600f0b600f0b13159050919050565b60008260000160109054906101000a9004600f0b90508183600101600083600f0b600f0b815260200190815260200160002081905550600181018360000160106101000a8154816fffffffffffffffffffffffffffffffff0219169083600f0b6fffffffffffffffffffffffffffffffff160217905550505050565b60008160000160006101000a8154816fffffffffffffffffffffffffffffffff0219169083600f0b6fffffffffffffffffffffffffffffffff16021790555060008160000160106101000a8154816fffffffffffffffffffffffffffffffff0219169083600f0b6fffffffffffffffffffffffffffffffff16021790555050565b60005b818310156136ea576000613699848461377f565b90508463ffffffff166136ac8783612fa2565b60000160009054906101000a900463ffffffff1663ffffffff1611156136d4578092506136e4565b6001816136e19190615750565b93505b50613685565b819050949350505050565b6000825111156137085781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161373c9190613c73565b60405180910390fd5b60008383834630604051602001613760959493929190615e0f565b6040516020818303038152906040528051906020012090509392505050565b6000600282841861379091906159f0565b82841661379d9190615750565b905092915050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6137ee816137b9565b81146137f957600080fd5b50565b60008135905061380b816137e5565b92915050565b600060208284031215613827576138266137af565b5b6000613835848285016137fc565b91505092915050565b60008115159050919050565b6138538161383e565b82525050565b600060208201905061386e600083018461384a565b92915050565b6000819050919050565b61388781613874565b82525050565b60006020820190506138a2600083018461387e565b92915050565b6138b181613874565b81146138bc57600080fd5b50565b6000813590506138ce816138a8565b92915050565b600060ff82169050919050565b6138ea816138d4565b81146138f557600080fd5b50565b600081359050613907816138e1565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126139325761393161390d565b5b8235905067ffffffffffffffff81111561394f5761394e613912565b5b60208301915083600182028301111561396b5761396a613917565b5b9250929050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6139c082613977565b810181811067ffffffffffffffff821117156139df576139de613988565b5b80604052505050565b60006139f26137a5565b90506139fe82826139b7565b919050565b600067ffffffffffffffff821115613a1e57613a1d613988565b5b613a2782613977565b9050602081019050919050565b82818337600083830152505050565b6000613a56613a5184613a03565b6139e8565b905082815260208101848484011115613a7257613a71613972565b5b613a7d848285613a34565b509392505050565b600082601f830112613a9a57613a9961390d565b5b8135613aaa848260208601613a43565b91505092915050565b6000819050919050565b613ac681613ab3565b8114613ad157600080fd5b50565b600081359050613ae381613abd565b92915050565b60008060008060008060008060e0898b031215613b0957613b086137af565b5b6000613b178b828c016138bf565b9850506020613b288b828c016138f8565b975050604089013567ffffffffffffffff811115613b4957613b486137b4565b5b613b558b828c0161391c565b9650965050606089013567ffffffffffffffff811115613b7857613b776137b4565b5b613b848b828c01613a85565b9450506080613b958b828c016138f8565b93505060a0613ba68b828c01613ad4565b92505060c0613bb78b828c01613ad4565b9150509295985092959890939650565b600060208284031215613bdd57613bdc6137af565b5b6000613beb848285016138bf565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015613c2e578082015181840152602081019050613c13565b60008484015250505050565b6000613c4582613bf4565b613c4f8185613bff565b9350613c5f818560208601613c10565b613c6881613977565b840191505092915050565b60006020820190508181036000830152613c8d8184613c3a565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613cc082613c95565b9050919050565b613cd081613cb5565b8114613cdb57600080fd5b50565b600081359050613ced81613cc7565b92915050565b60008060008060808587031215613d0d57613d0c6137af565b5b6000613d1b87828801613cde565b9450506020613d2c87828801613cde565b9350506040613d3d878288016138bf565b925050606085013567ffffffffffffffff811115613d5e57613d5d6137b4565b5b613d6a87828801613a85565b91505092959194509250565b613d7f816137b9565b82525050565b6000602082019050613d9a6000830184613d76565b92915050565b600067ffffffffffffffff821115613dbb57613dba613988565b5b602082029050602081019050919050565b6000613ddf613dda84613da0565b6139e8565b90508083825260208201905060208402830185811115613e0257613e01613917565b5b835b81811015613e2b5780613e178882613cde565b845260208401935050602081019050613e04565b5050509392505050565b600082601f830112613e4a57613e4961390d565b5b8135613e5a848260208601613dcc565b91505092915050565b600067ffffffffffffffff821115613e7e57613e7d613988565b5b602082029050602081019050919050565b6000613ea2613e9d84613e63565b6139e8565b90508083825260208201905060208402830185811115613ec557613ec4613917565b5b835b81811015613eee5780613eda88826138bf565b845260208401935050602081019050613ec7565b5050509392505050565b600082601f830112613f0d57613f0c61390d565b5b8135613f1d848260208601613e8f565b91505092915050565b600067ffffffffffffffff821115613f4157613f40613988565b5b602082029050602081019050919050565b6000613f65613f6084613f26565b6139e8565b90508083825260208201905060208402830185811115613f8857613f87613917565b5b835b81811015613fcf57803567ffffffffffffffff811115613fad57613fac61390d565b5b808601613fba8982613a85565b85526020850194505050602081019050613f8a565b5050509392505050565b600082601f830112613fee57613fed61390d565b5b8135613ffe848260208601613f52565b91505092915050565b60008060008060808587031215614021576140206137af565b5b600085013567ffffffffffffffff81111561403f5761403e6137b4565b5b61404b87828801613e35565b945050602085013567ffffffffffffffff81111561406c5761406b6137b4565b5b61407887828801613ef8565b935050604085013567ffffffffffffffff811115614099576140986137b4565b5b6140a587828801613fd9565b92505060606140b687828801613ad4565b91505092959194509250565b6140cb81613ab3565b82525050565b60006020820190506140e660008301846140c2565b92915050565b600080600080600060a08688031215614108576141076137af565b5b6000614116888289016138bf565b9550506020614127888289016138f8565b9450506040614138888289016138f8565b935050606061414988828901613ad4565b925050608061415a88828901613ad4565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600881106141a7576141a6614167565b5b50565b60008190506141b882614196565b919050565b60006141c8826141aa565b9050919050565b6141d8816141bd565b82525050565b60006020820190506141f360008301846141cf565b92915050565b600080604083850312156142105761420f6137af565b5b600061421e858286016138bf565b925050602061422f85828601613cde565b9150509250929050565b600060608201905061424e600083018661387e565b61425b602083018561387e565b614268604083018461387e565b949350505050565b60008060408385031215614287576142866137af565b5b6000614295858286016138bf565b92505060206142a6858286016138f8565b9150509250929050565b6000806000806000608086880312156142cc576142cb6137af565b5b60006142da888289016138bf565b95505060206142eb888289016138f8565b945050604086013567ffffffffffffffff81111561430c5761430b6137b4565b5b6143188882890161391c565b9350935050606086013567ffffffffffffffff81111561433b5761433a6137b4565b5b61434788828901613a85565b9150509295509295909350565b6000806000806060858703121561436e5761436d6137af565b5b600061437c878288016138bf565b945050602061438d878288016138f8565b935050604085013567ffffffffffffffff8111156143ae576143ad6137b4565b5b6143ba8782880161391c565b925092505092959194509250565b600067ffffffffffffffff8211156143e3576143e2613988565b5b6143ec82613977565b9050602081019050919050565b600061440c614407846143c8565b6139e8565b90508281526020810184848401111561442857614427613972565b5b614433848285613a34565b509392505050565b600082601f8301126144505761444f61390d565b5b81356144608482602086016143f9565b91505092915050565b60008060008060808587031215614483576144826137af565b5b600085013567ffffffffffffffff8111156144a1576144a06137b4565b5b6144ad87828801613e35565b945050602085013567ffffffffffffffff8111156144ce576144cd6137b4565b5b6144da87828801613ef8565b935050604085013567ffffffffffffffff8111156144fb576144fa6137b4565b5b61450787828801613fd9565b925050606085013567ffffffffffffffff811115614528576145276137b4565b5b6145348782880161443b565b91505092959194509250565b600080600060608486031215614559576145586137af565b5b600061456786828701613cde565b9350506020614578868287016138bf565b925050604084013567ffffffffffffffff811115614599576145986137b4565b5b6145a586828701613a85565b9150509250925092565b600080600080600060a086880312156145cb576145ca6137af565b5b60006145d988828901613cde565b95505060206145ea88828901613cde565b945050604086013567ffffffffffffffff81111561460b5761460a6137b4565b5b61461788828901613ef8565b935050606086013567ffffffffffffffff811115614638576146376137b4565b5b61464488828901613ef8565b925050608086013567ffffffffffffffff811115614665576146646137b4565b5b61467188828901613a85565b9150509295509295909350565b60008083601f8401126146945761469361390d565b5b8235905067ffffffffffffffff8111156146b1576146b0613912565b5b6020830191508360018202830111156146cd576146cc613917565b5b9250929050565b600080600080606085870312156146ee576146ed6137af565b5b60006146fc87828801613cde565b945050602061470d878288016138bf565b935050604085013567ffffffffffffffff81111561472e5761472d6137b4565b5b61473a8782880161467e565b925092505092959194509250565b6000806040838503121561475f5761475e6137af565b5b600061476d85828601613cde565b925050602061477e858286016138bf565b9150509250929050565b600080600080600060a086880312156147a4576147a36137af565b5b60006147b288828901613cde565b95505060206147c388828901613cde565b94505060406147d4888289016138bf565b93505060606147e5888289016138bf565b925050608086013567ffffffffffffffff811115614806576148056137b4565b5b61481288828901613a85565b9150509295509295909350565b6000819050919050565b600061484461483f61483a84613c95565b61481f565b613c95565b9050919050565b600061485682614829565b9050919050565b60006148688261484b565b9050919050565b6148788161485d565b82525050565b6000602082019050614893600083018461486f565b92915050565b600081905092915050565b60006148b08385614899565b93506148bd838584613a34565b82840190509392505050565b60006148d68284866148a4565b91508190509392505050565b6148eb816138d4565b82525050565b600060a08201905061490660008301886140c2565b614913602083018761387e565b61492060408301866148e2565b61492d60608301856140c2565b61493a60808301846140c2565b9695505050505050565b7f476f7665726e6f723a206f6e6c79476f7665726e616e63650000000000000000600082015250565b600061497a601883613bff565b915061498582614944565b602082019050919050565b600060208201905081810360008301526149a98161496d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806149f757607f821691505b602082108103614a0a57614a096149b0565b5b50919050565b7f476f7665726e6f723a2070726f706f73616c206e6f742073756363657373667560008201527f6c00000000000000000000000000000000000000000000000000000000000000602082015250565b6000614a6c602183613bff565b9150614a7782614a10565b604082019050919050565b60006020820190508181036000830152614a9b81614a5f565b9050919050565b6000606082019050614ab760008301866140c2565b614ac4602083018561387e565b614ad160408301846148e2565b949350505050565b7f476f7665726e6f723a20756e6b6e6f776e2070726f706f73616c206964000000600082015250565b6000614b0f601d83613bff565b9150614b1a82614ad9565b602082019050919050565b60006020820190508181036000830152614b3e81614b02565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000614b7f82613874565b9150614b8a83613874565b9250828203905081811115614ba257614ba1614b45565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f476f7665726e6f723a2070726f706f73657220766f7465732062656c6f77207060008201527f726f706f73616c207468726573686f6c64000000000000000000000000000000602082015250565b6000614c33603183613bff565b9150614c3e82614bd7565b604082019050919050565b60006020820190508181036000830152614c6281614c26565b9050919050565b7f476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e677460008201527f6800000000000000000000000000000000000000000000000000000000000000602082015250565b6000614cc5602183613bff565b9150614cd082614c69565b604082019050919050565b60006020820190508181036000830152614cf481614cb8565b9050919050565b7f476f7665726e6f723a20656d7074792070726f706f73616c0000000000000000600082015250565b6000614d31601883613bff565b9150614d3c82614cfb565b602082019050919050565b60006020820190508181036000830152614d6081614d24565b9050919050565b7f476f7665726e6f723a2070726f706f73616c20616c726561647920657869737460008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000614dc3602183613bff565b9150614dce82614d67565b604082019050919050565b60006020820190508181036000830152614df281614db6565b9050919050565b600067ffffffffffffffff82169050919050565b6000614e1882614df9565b9150614e2383614df9565b9250828201905067ffffffffffffffff811115614e4357614e42614b45565b5b92915050565b614e5281613cb5565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b614e8d81613cb5565b82525050565b6000614e9f8383614e84565b60208301905092915050565b6000602082019050919050565b6000614ec382614e58565b614ecd8185614e63565b9350614ed883614e74565b8060005b83811015614f09578151614ef08882614e93565b9750614efb83614eab565b925050600181019050614edc565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b614f4b81613874565b82525050565b6000614f5d8383614f42565b60208301905092915050565b6000602082019050919050565b6000614f8182614f16565b614f8b8185614f21565b9350614f9683614f32565b8060005b83811015614fc7578151614fae8882614f51565b9750614fb983614f69565b925050600181019050614f9a565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b600061501c82613bf4565b6150268185615000565b9350615036818560208601613c10565b61503f81613977565b840191505092915050565b60006150568383615011565b905092915050565b6000602082019050919050565b600061507682614fd4565b6150808185614fdf565b93508360208202850161509285614ff0565b8060005b858110156150ce57848403895281516150af858261504a565b94506150ba8361505e565b925060208a01995050600181019050615096565b50829750879550505050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60006151338261510c565b61513d8185615117565b935061514d818560208601613c10565b61515681613977565b840191505092915050565b600061516d8383615128565b905092915050565b6000602082019050919050565b600061518d826150e0565b61519781856150eb565b9350836020820285016151a9856150fc565b8060005b858110156151e557848403895281516151c68582615161565b94506151d183615175565b925060208a019950506001810190506151ad565b50829750879550505050505092915050565b600061521261520d61520884614df9565b61481f565b613874565b9050919050565b615222816151f7565b82525050565b60006101208201905061523e600083018c61387e565b61524b602083018b614e49565b818103604083015261525d818a614eb8565b905081810360608301526152718189614f76565b90508181036080830152615285818861506b565b905081810360a08301526152998187615182565b90506152a860c0830186615219565b6152b560e0830185615219565b8181036101008301526152c88184613c3a565b90509a9950505050505050505050565b600060808201905081810360008301526152f28187614eb8565b905081810360208301526153068186614f76565b9050818103604083015261531a8185615182565b905061532960608301846140c2565b95945050505050565b7f53616665436173743a2076616c756520646f65736e27742066697420696e203260008201527f3234206269747300000000000000000000000000000000000000000000000000602082015250565b600061538e602783613bff565b915061539982615332565b604082019050919050565b600060208201905081810360008301526153bd81615381565b9050919050565b7f53616665436173743a2076616c756520646f65736e27742066697420696e203360008201527f3220626974730000000000000000000000000000000000000000000000000000602082015250565b6000615420602683613bff565b915061542b826153c4565b604082019050919050565b6000602082019050818103600083015261544f81615413565b9050919050565b7f476f7665726e6f723a20766f7465206e6f742063757272656e746c792061637460008201527f6976650000000000000000000000000000000000000000000000000000000000602082015250565b60006154b2602383613bff565b91506154bd82615456565b604082019050919050565b600060208201905081810360008301526154e1816154a5565b9050919050565b60006080820190506154fd600083018761387e565b61550a60208301866148e2565b615517604083018561387e565b81810360608301526155298184613c3a565b905095945050505050565b600082825260208201905092915050565b60006155508261510c565b61555a8185615534565b935061556a818560208601613c10565b61557381613977565b840191505092915050565b600060a082019050615593600083018861387e565b6155a060208301876148e2565b6155ad604083018661387e565b81810360608301526155bf8185613c3a565b905081810360808301526155d38184615545565b90509695505050505050565b7f476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f60008201527f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e6160208201527f746f720000000000000000000000000000000000000000000000000000000000604082015250565b6000615661604383613bff565b915061566c826155df565b606082019050919050565b6000602082019050818103600083015261569081615654565b9050919050565b60006040820190506156ac600083018561387e565b6156b9602083018461387e565b9392505050565b60006156cb82613874565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036156fd576156fc614b45565b5b600182019050919050565b60006157138261510c565b61571d8185614899565b935061572d818560208601613c10565b80840191505092915050565b60006157458284615708565b915081905092915050565b600061575b82613874565b915061576683613874565b925082820190508082111561577e5761577d614b45565b5b92915050565b7f436865636b706f696e74733a20626c6f636b206e6f7420796574206d696e6564600082015250565b60006157ba602083613bff565b91506157c582615784565b602082019050919050565b600060208201905081810360008301526157e9816157ad565b9050919050565b7f53616665436173743a2076616c756520646f65736e27742066697420696e203660008201527f3420626974730000000000000000000000000000000000000000000000000000602082015250565b600061584c602683613bff565b9150615857826157f0565b604082019050919050565b6000602082019050818103600083015261587b8161583f565b9050919050565b60006040820190506158976000830185614e49565b6158a4602083018461387e565b9392505050565b6000815190506158ba816138a8565b92915050565b6000602082840312156158d6576158d56137af565b5b60006158e4848285016158ab565b91505092915050565b7f476f7665726e6f7253657474696e67733a20766f74696e6720706572696f642060008201527f746f6f206c6f7700000000000000000000000000000000000000000000000000602082015250565b6000615949602783613bff565b9150615954826158ed565b604082019050919050565b600060208201905081810360008301526159788161593c565b9050919050565b600061598a82613874565b915061599583613874565b92508282026159a381613874565b915082820484148315176159ba576159b9614b45565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006159fb82613874565b9150615a0683613874565b925082615a1657615a156159c1565b5b828204905092915050565b7f436865636b706f696e743a20696e76616c6964206b6579000000000000000000600082015250565b6000615a57601783613bff565b9150615a6282615a21565b602082019050919050565b60006020820190508181036000830152615a8681615a4a565b9050919050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000615ace600283615a8d565b9150615ad982615a98565b600282019050919050565b6000819050919050565b615aff615afa82613ab3565b615ae4565b82525050565b6000615b1082615ac1565b9150615b1c8285615aee565b602082019150615b2c8284615aee565b6020820191508190509392505050565b6000608082019050615b5160008301876140c2565b615b5e60208301866148e2565b615b6b60408301856140c2565b615b7860608301846140c2565b95945050505050565b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b6000615bb7601883613bff565b9150615bc282615b81565b602082019050919050565b60006020820190508181036000830152615be681615baa565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b6000615c23601f83613bff565b9150615c2e82615bed565b602082019050919050565b60006020820190508181036000830152615c5281615c16565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b6000615cb5602283613bff565b9150615cc082615c59565b604082019050919050565b60006020820190508181036000830152615ce481615ca8565b9050919050565b7f476f7665726e6f72566f74696e6753696d706c653a20766f746520616c72656160008201527f6479206361737400000000000000000000000000000000000000000000000000602082015250565b6000615d47602783613bff565b9150615d5282615ceb565b604082019050919050565b60006020820190508181036000830152615d7681615d3a565b9050919050565b7f476f7665726e6f72566f74696e6753696d706c653a20696e76616c696420766160008201527f6c756520666f7220656e756d20566f7465547970650000000000000000000000602082015250565b6000615dd9603583613bff565b9150615de482615d7d565b604082019050919050565b60006020820190508181036000830152615e0881615dcc565b9050919050565b600060a082019050615e2460008301886140c2565b615e3160208301876140c2565b615e3e60408301866140c2565b615e4b606083018561387e565b615e586080830184614e49565b969550505050505056fe476f7665726e6f723a2072656c617920726576657274656420776974686f7574206d657373616765476f7665726e6f723a2063616c6c20726576657274656420776974686f7574206d657373616765a26469706673582212203003350ba7c770b7f0bc1c5559c008026ba93e4d6df749c10e9f7999fc4b421164736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70B0F660 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0xC28BC2FA GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xEB9019D4 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xEB9019D4 EQ PUSH2 0x8ED JUMPI DUP1 PUSH4 0xECE40CC1 EQ PUSH2 0x92A JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x953 JUMPI DUP1 PUSH4 0xF8CE560A EQ PUSH2 0x990 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x9CD JUMPI PUSH2 0x264 JUMP JUMPDEST DUP1 PUSH4 0xC28BC2FA EQ PUSH2 0x815 JUMPI DUP1 PUSH4 0xC59057E4 EQ PUSH2 0x831 JUMPI DUP1 PUSH4 0xDD4E2BA5 EQ PUSH2 0x86E JUMPI DUP1 PUSH4 0xDEAAA7CC EQ PUSH2 0x899 JUMPI DUP1 PUSH4 0xEA0217CF EQ PUSH2 0x8C4 JUMPI PUSH2 0x264 JUMP JUMPDEST DUP1 PUSH4 0x9A802A6D GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x9A802A6D EQ PUSH2 0x708 JUMPI DUP1 PUSH4 0xA7713A70 EQ PUSH2 0x745 JUMPI DUP1 PUSH4 0xB58131B0 EQ PUSH2 0x770 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x79B JUMPI DUP1 PUSH4 0xC01F9E37 EQ PUSH2 0x7D8 JUMPI PUSH2 0x264 JUMP JUMPDEST DUP1 PUSH4 0x70B0F660 EQ PUSH2 0x63A JUMPI DUP1 PUSH4 0x7B3C71D3 EQ PUSH2 0x663 JUMPI DUP1 PUSH4 0x7D5E81E2 EQ PUSH2 0x6A0 JUMPI DUP1 PUSH4 0x97C3D334 EQ PUSH2 0x6DD JUMPI PUSH2 0x264 JUMP JUMPDEST DUP1 PUSH4 0x3932ABB1 GT PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x544FFC9C GT PUSH2 0x175 JUMPI DUP1 PUSH4 0x544FFC9C EQ PUSH2 0x519 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x558 JUMPI DUP1 PUSH4 0x56781388 EQ PUSH2 0x583 JUMPI DUP1 PUSH4 0x5F398A14 EQ PUSH2 0x5C0 JUMPI DUP1 PUSH4 0x60C4247F EQ PUSH2 0x5FD JUMPI PUSH2 0x264 JUMP JUMPDEST DUP1 PUSH4 0x3932ABB1 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x3BCCF4FD EQ PUSH2 0x462 JUMPI DUP1 PUSH4 0x3E4F49E6 EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0x43859632 EQ PUSH2 0x4DC JUMPI PUSH2 0x264 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 GT PUSH2 0x1ED JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0x2656227D EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0x2D63F693 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0x2FE3E261 EQ PUSH2 0x40C JUMPI PUSH2 0x264 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x2A251A3 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x3420181 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x6F3F9E6 EQ PUSH2 0x30E JUMPI PUSH2 0x264 JUMP JUMPDEST CALLDATASIZE PUSH2 0x264 JUMPI ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x242 PUSH2 0x9F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x3811 JUMP JUMPDEST PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x3859 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BB PUSH2 0xB65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x3AE9 JUMP JUMPDEST PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x335 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x330 SWAP2 SWAP1 PUSH2 0x3BC7 JUMP JUMPDEST PUSH2 0xC59 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34C PUSH2 0xD50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x359 SWAP2 SWAP1 PUSH2 0x3C73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x389 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x3CF3 JUMP JUMPDEST PUSH2 0xDE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x3D85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x4007 JUMP JUMPDEST PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x3BC7 JUMP JUMPDEST PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x403 SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x418 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x421 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x40D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44C PUSH2 0xFD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x489 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x484 SWAP2 SWAP1 PUSH2 0x40EC JUMP JUMPDEST PUSH2 0xFE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x496 SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x3BC7 JUMP JUMPDEST PUSH2 0x106E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0x41DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x503 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0x41F9 JUMP JUMPDEST PUSH2 0x1182 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x510 SWAP2 SWAP1 PUSH2 0x3859 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x525 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x540 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53B SWAP2 SWAP1 PUSH2 0x3BC7 JUMP JUMPDEST PUSH2 0x11ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x56D PUSH2 0x1225 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57A SWAP2 SWAP1 PUSH2 0x3C73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A5 SWAP2 SWAP1 PUSH2 0x4270 JUMP JUMPDEST PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B7 SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E2 SWAP2 SWAP1 PUSH2 0x42B0 JUMP JUMPDEST PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F4 SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x624 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x61F SWAP2 SWAP1 PUSH2 0x3BC7 JUMP JUMPDEST PUSH2 0x12FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x631 SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x661 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65C SWAP2 SWAP1 PUSH2 0x3BC7 JUMP JUMPDEST PUSH2 0x1449 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x68A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x685 SWAP2 SWAP1 PUSH2 0x4354 JUMP JUMPDEST PUSH2 0x1540 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x697 SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C2 SWAP2 SWAP1 PUSH2 0x4469 JUMP JUMPDEST PUSH2 0x15A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D4 SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F2 PUSH2 0x18AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6FF SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x714 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x72F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x72A SWAP2 SWAP1 PUSH2 0x4540 JUMP JUMPDEST PUSH2 0x18B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x73C SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x751 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x75A PUSH2 0x18CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x767 SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x77C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x785 PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x792 SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7BD SWAP2 SWAP1 PUSH2 0x45AF JUMP JUMPDEST PUSH2 0x1924 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7CF SWAP2 SWAP1 PUSH2 0x3D85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7FA SWAP2 SWAP1 PUSH2 0x3BC7 JUMP JUMPDEST PUSH2 0x1939 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80C SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x82A SWAP2 SWAP1 PUSH2 0x46D4 JUMP JUMPDEST PUSH2 0x19A7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x83D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x858 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x853 SWAP2 SWAP1 PUSH2 0x4007 JUMP JUMPDEST PUSH2 0x1B30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x865 SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x87A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x883 PUSH2 0x1B6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x890 SWAP2 SWAP1 PUSH2 0x3C73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8AE PUSH2 0x1BA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8BB SWAP2 SWAP1 PUSH2 0x40D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8E6 SWAP2 SWAP1 PUSH2 0x3BC7 JUMP JUMPDEST PUSH2 0x1BCD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x914 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x90F SWAP2 SWAP1 PUSH2 0x4748 JUMP JUMPDEST PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x921 SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x936 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x951 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94C SWAP2 SWAP1 PUSH2 0x3BC7 JUMP JUMPDEST PUSH2 0x1CE0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x95F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x97A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x975 SWAP2 SWAP1 PUSH2 0x4788 JUMP JUMPDEST PUSH2 0x1DD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x987 SWAP2 SWAP1 PUSH2 0x3D85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x99C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9B2 SWAP2 SWAP1 PUSH2 0x3BC7 JUMP JUMPDEST PUSH2 0x1DEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9C4 SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9E2 PUSH2 0x1DFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9EF SWAP2 SWAP1 PUSH2 0x487E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 ADDRESS SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x9A802A6D PUSH1 0xE0 SHL PUSH4 0x3420181 PUSH1 0xE0 SHL PUSH4 0x5F398A14 PUSH1 0xE0 SHL PUSH32 0x79DD796F00000000000000000000000000000000000000000000000000000000 XOR XOR XOR PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xAE6 JUMPI POP PUSH32 0x79DD796F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xB4E JUMPI POP PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xB5E JUMPI POP PUSH2 0xB5D DUP3 PUSH2 0x1FB8 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6F PUSH2 0x2022 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBF7 PUSH2 0xBEF PUSH32 0xB3B3F3B703CD84CE352197DCFF232B1B5D3CFB2025CE47CF04742D0651F1AF88 DUP13 DUP13 DUP13 DUP13 PUSH1 0x40 MLOAD PUSH2 0xBB0 SWAP3 SWAP2 SWAP1 PUSH2 0x48C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP12 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBD4 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x48F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x202C JUMP JUMPDEST DUP7 DUP7 DUP7 PUSH2 0x2046 JUMP JUMPDEST SWAP1 POP PUSH2 0xC4A DUP11 DUP3 DUP12 DUP12 DUP12 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP11 PUSH2 0x2071 JUMP JUMPDEST SWAP2 POP POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC61 PUSH2 0x9F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC7F PUSH2 0x222D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCD5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCC SWAP1 PUSH2 0x4990 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCF4 PUSH2 0x9F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD44 JUMPI PUSH1 0x0 PUSH2 0xD19 PUSH2 0x2235 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD27 SWAP3 SWAP2 SWAP1 PUSH2 0x48C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP JUMPDEST DUP1 PUSH2 0xD3D PUSH1 0x2 PUSH2 0x2242 JUMP JUMPDEST SUB PUSH2 0xD32 JUMPI POP JUMPDEST PUSH2 0xD4D DUP2 PUSH2 0x231E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0xD5F SWAP1 PUSH2 0x49DF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD8B SWAP1 PUSH2 0x49DF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDD8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDAD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDD8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDBB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE05 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1B30 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE12 DUP3 PUSH2 0x106E JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0xE28 JUMPI PUSH2 0xE27 PUSH2 0x4167 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0xE3B JUMPI PUSH2 0xE3A PUSH2 0x4167 JUMP JUMPDEST JUMPDEST EQ DUP1 PUSH2 0xE6B JUMPI POP PUSH1 0x5 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0xE56 JUMPI PUSH2 0xE55 PUSH2 0x4167 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0xE69 JUMPI PUSH2 0xE68 PUSH2 0x4167 JUMP JUMPDEST JUMPDEST EQ JUMPDEST PUSH2 0xEAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA1 SWAP1 PUSH2 0x4A82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x712AE1383F79AC853F8D882153778E0260EF8F03B504E2866E0593E04D2B291F DUP3 PUSH1 0x40 MLOAD PUSH2 0xF07 SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xF1C DUP3 DUP9 DUP9 DUP9 DUP9 PUSH2 0x24D2 JUMP JUMPDEST PUSH2 0xF29 DUP3 DUP9 DUP9 DUP9 DUP9 PUSH2 0x25B5 JUMP JUMPDEST PUSH2 0xF36 DUP3 DUP9 DUP9 DUP9 DUP9 PUSH2 0x26C4 JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x271F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xB3B3F3B703CD84CE352197DCFF232B1B5D3CFB2025CE47CF04742D0651F1AF88 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFDF PUSH2 0x272D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1045 PUSH2 0x103D PUSH32 0x150214D74D59B7D1E90C73FC22EF3D991DD0A76B046543D4D80AB92D2A50328F DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1022 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4AA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x202C JUMP JUMPDEST DUP7 DUP7 DUP7 PUSH2 0x2046 JUMP JUMPDEST SWAP1 POP PUSH2 0x1062 DUP8 DUP3 DUP9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2737 JUMP JUMPDEST SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x10A7 JUMPI PUSH1 0x7 SWAP2 POP POP PUSH2 0x117D JUMP JUMPDEST DUP1 PUSH1 0x2 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x10C8 JUMPI PUSH1 0x2 SWAP2 POP POP PUSH2 0x117D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D3 DUP5 PUSH2 0xF43 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0x1118 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110F SWAP1 PUSH2 0x4B25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST NUMBER DUP2 LT PUSH2 0x112A JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x117D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1135 DUP6 PUSH2 0x1939 JUMP JUMPDEST SWAP1 POP NUMBER DUP2 LT PUSH2 0x114A JUMPI PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x117D JUMP JUMPDEST PUSH2 0x1153 DUP6 PUSH2 0x2757 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1164 JUMPI POP PUSH2 0x1163 DUP6 PUSH2 0x279E JUMP JUMPDEST JUMPDEST ISZERO PUSH2 0x1175 JUMPI PUSH1 0x4 SWAP4 POP POP POP POP PUSH2 0x117D JUMP JUMPDEST PUSH1 0x3 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x7 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD DUP2 PUSH1 0x1 ADD SLOAD DUP3 PUSH1 0x2 ADD SLOAD SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x126D PUSH2 0x222D JUMP JUMPDEST SWAP1 POP PUSH2 0x128A DUP5 DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2737 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x129E PUSH2 0x222D JUMP JUMPDEST SWAP1 POP PUSH2 0x12F1 DUP8 DUP3 DUP9 DUP9 DUP9 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP8 PUSH2 0x2071 JUMP JUMPDEST SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x9 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0x131E JUMPI PUSH1 0x8 SLOAD SWAP2 POP POP PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 ADD PUSH1 0x1 DUP4 PUSH2 0x1332 SWAP2 SWAP1 PUSH2 0x4B74 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1343 JUMPI PUSH2 0x1342 PUSH2 0x4BA8 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP4 DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND GT PUSH2 0x142B JUMPI DUP1 PUSH1 0x20 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP POP POP PUSH2 0x1444 JUMP JUMPDEST PUSH2 0x143F DUP5 PUSH1 0x9 PUSH2 0x27C9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1451 PUSH2 0x9F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x146F PUSH2 0x222D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14BC SWAP1 PUSH2 0x4990 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14E4 PUSH2 0x9F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1534 JUMPI PUSH1 0x0 PUSH2 0x1509 PUSH2 0x2235 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1517 SWAP3 SWAP2 SWAP1 PUSH2 0x48C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP JUMPDEST DUP1 PUSH2 0x152D PUSH1 0x2 PUSH2 0x2242 JUMP JUMPDEST SUB PUSH2 0x1522 JUMPI POP JUMPDEST PUSH2 0x153D DUP2 PUSH2 0x28B8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x154B PUSH2 0x222D JUMP JUMPDEST SWAP1 POP PUSH2 0x159D DUP7 DUP3 DUP8 DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x2737 JUMP JUMPDEST SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B2 PUSH2 0x1915 JUMP JUMPDEST PUSH2 0x15CF PUSH2 0x15BD PUSH2 0x222D JUMP JUMPDEST PUSH1 0x1 NUMBER PUSH2 0x15CA SWAP2 SWAP1 PUSH2 0x4B74 JUMP JUMPDEST PUSH2 0x1CC4 JUMP JUMPDEST LT ISZERO PUSH2 0x1610 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1607 SWAP1 PUSH2 0x4C49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1625 DUP7 DUP7 DUP7 DUP7 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1B30 JUMP JUMPDEST SWAP1 POP DUP5 MLOAD DUP7 MLOAD EQ PUSH2 0x166B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1662 SWAP1 PUSH2 0x4CDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 MLOAD DUP7 MLOAD EQ PUSH2 0x16AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A6 SWAP1 PUSH2 0x4CDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 MLOAD GT PUSH2 0x16F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16EA SWAP1 PUSH2 0x4D47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1753 DUP2 PUSH1 0x0 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x28FD JUMP JUMPDEST PUSH2 0x1792 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1789 SWAP1 PUSH2 0x4DD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x17A4 PUSH2 0x179F PUSH2 0xFD5 JUMP JUMPDEST PUSH2 0x2917 JUMP JUMPDEST PUSH2 0x17AD NUMBER PUSH2 0x2917 JUMP JUMPDEST PUSH2 0x17B7 SWAP2 SWAP1 PUSH2 0x4E0D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x17CB PUSH2 0x17C6 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x2917 JUMP JUMPDEST DUP3 PUSH2 0x17D6 SWAP2 SWAP1 PUSH2 0x4E0D JUMP JUMPDEST SWAP1 POP PUSH2 0x17EE DUP3 DUP5 PUSH1 0x0 ADD PUSH2 0x296E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1804 DUP2 DUP5 PUSH1 0x1 ADD PUSH2 0x296E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x7D84A6263AE0D98D3329BD7B46BB4E8D6F98CD35A7ADB45C274C8B7FD5EBD5E0 DUP5 PUSH2 0x182E PUSH2 0x222D JUMP JUMPDEST DUP12 DUP12 DUP14 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x184B JUMPI PUSH2 0x184A PUSH2 0x3988 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x187E JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1869 JUMPI SWAP1 POP JUMPDEST POP DUP13 DUP9 DUP9 DUP15 PUSH1 0x40 MLOAD PUSH2 0x1898 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5228 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP4 SWAP5 POP POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18C5 DUP5 DUP5 DUP5 PUSH2 0x299D JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x9 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP EQ PUSH2 0x190C JUMPI PUSH2 0x18E9 PUSH1 0x9 PUSH2 0x1EFB JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1910 JUMP JUMPDEST PUSH1 0x8 SLOAD JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x191F PUSH2 0x2A44 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1996 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x271F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19AF PUSH2 0x9F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19CD PUSH2 0x222D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A1A SWAP1 PUSH2 0x4990 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A42 PUSH2 0x9F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A92 JUMPI PUSH1 0x0 PUSH2 0x1A67 PUSH2 0x2235 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A75 SWAP3 SWAP2 SWAP1 PUSH2 0x48C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP JUMPDEST DUP1 PUSH2 0x1A8B PUSH1 0x2 PUSH2 0x2242 JUMP JUMPDEST SUB PUSH2 0x1A80 JUMPI POP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1ABD SWAP3 SWAP2 SWAP1 PUSH2 0x48C9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1AFA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1B27 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5E63 PUSH1 0x28 SWAP2 CODECOPY PUSH2 0x2A4E JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B49 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x52D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x737570706F72743D627261766F2671756F72756D3D666F722C6162737461696E DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x150214D74D59B7D1E90C73FC22EF3D991DD0A76B046543D4D80AB92D2A50328F DUP2 JUMP JUMPDEST PUSH2 0x1BD5 PUSH2 0x9F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BF3 PUSH2 0x222D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C40 SWAP1 PUSH2 0x4990 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C68 PUSH2 0x9F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CB8 JUMPI PUSH1 0x0 PUSH2 0x1C8D PUSH2 0x2235 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9B SWAP3 SWAP2 SWAP1 PUSH2 0x48C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP JUMPDEST DUP1 PUSH2 0x1CB1 PUSH1 0x2 PUSH2 0x2242 JUMP JUMPDEST SUB PUSH2 0x1CA6 JUMPI POP JUMPDEST PUSH2 0x1CC1 DUP2 PUSH2 0x2A70 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD8 DUP4 DUP4 PUSH2 0x1CD3 PUSH2 0x2AF8 JUMP JUMPDEST PUSH2 0x299D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CE8 PUSH2 0x9F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D06 PUSH2 0x222D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D5C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D53 SWAP1 PUSH2 0x4990 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D7B PUSH2 0x9F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1DCB JUMPI PUSH1 0x0 PUSH2 0x1DA0 PUSH2 0x2235 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DAE SWAP3 SWAP2 SWAP1 PUSH2 0x48C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP JUMPDEST DUP1 PUSH2 0x1DC4 PUSH1 0x2 PUSH2 0x2242 JUMP JUMPDEST SUB PUSH2 0x1DB9 JUMPI POP JUMPDEST PUSH2 0x1DD4 DUP2 PUSH2 0x2B0F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF7 DUP3 PUSH2 0x2B54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x1E85 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E7C SWAP1 PUSH2 0x53A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1EAE DUP5 PUSH1 0x0 ADD PUSH2 0x1EA0 NUMBER PUSH2 0x1F65 JUMP JUMPDEST PUSH2 0x1EA9 DUP7 PUSH2 0x1E22 JUMP JUMPDEST PUSH2 0x2C1C JUMP JUMPDEST DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x1F5A JUMPI PUSH2 0x1F29 DUP4 PUSH1 0x0 ADD PUSH1 0x1 DUP4 PUSH2 0x1F24 SWAP2 SWAP1 PUSH2 0x4B74 JUMP JUMPDEST PUSH2 0x2FA2 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F5D JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x1FB0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FA7 SWAP1 PUSH2 0x5436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x203F PUSH2 0x2039 PUSH2 0x2FB7 JUMP JUMPDEST DUP4 PUSH2 0x30D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2057 DUP8 DUP8 DUP8 DUP8 PUSH2 0x3104 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x2064 DUP2 PUSH2 0x31E6 JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x1 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x209D JUMPI PUSH2 0x209C PUSH2 0x4167 JUMP JUMPDEST JUMPDEST PUSH2 0x20A6 DUP9 PUSH2 0x106E JUMP JUMPDEST PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x20B8 JUMPI PUSH2 0x20B7 PUSH2 0x4167 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x20F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20EF SWAP1 PUSH2 0x54C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2157 DUP8 PUSH2 0x2147 DUP5 PUSH1 0x0 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x271F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND DUP7 PUSH2 0x299D JUMP JUMPDEST SWAP1 POP PUSH2 0x2166 DUP9 DUP9 DUP9 DUP5 DUP9 PUSH2 0x334C JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD SUB PUSH2 0x21C8 JUMPI DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB8E138887D0AA13BAB447E82DE9D5C1777041ECD21CA36BA824FF1E6C07DDDA4 DUP10 DUP9 DUP5 DUP10 PUSH1 0x40 MLOAD PUSH2 0x21BB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x54E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x221F JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2BABFBAC5889A709B63BB7F598B324E08BC5A4FB9EC647FB3CBC9EC07EB8712 DUP10 DUP9 DUP5 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0x2216 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x557E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP1 SWAP3 POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATASIZE SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x224D DUP3 PUSH2 0x3550 JUMP JUMPDEST ISZERO PUSH2 0x2284 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3DB2A12A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xF SIGNEXTEND SWAP1 POP DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 PUSH1 0xF SIGNEXTEND PUSH1 0xF SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 PUSH1 0xF SIGNEXTEND PUSH1 0xF SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP2 ADD DUP4 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xF SIGNEXTEND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2326 PUSH2 0x18AF JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x2368 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x235F SWAP1 PUSH2 0x5677 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2372 PUSH2 0x18CE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO DUP1 ISZERO PUSH2 0x238D JUMPI POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP EQ JUMPDEST ISZERO PUSH2 0x247F JUMPI PUSH1 0x9 PUSH1 0x0 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x23B8 DUP5 PUSH2 0x1E22 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST PUSH2 0x2493 DUP3 PUSH1 0x9 PUSH2 0x1E8D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP PUSH32 0x553476BF02EF2726E8CE5CED78D63E26E602E4A2257B1F559418E24B4633997 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x24C6 SWAP3 SWAP2 SWAP1 PUSH2 0x5697 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x24F1 PUSH2 0x9F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x25AE JUMPI PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x25AC JUMPI ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2542 JUMPI PUSH2 0x2541 PUSH2 0x4BA8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x259B JUMPI PUSH2 0x259A DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x257B JUMPI PUSH2 0x257A PUSH2 0x4BA8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x2 PUSH2 0x3585 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x25A5 SWAP1 PUSH2 0x56C0 JUMP JUMPDEST SWAP1 POP PUSH2 0x250F JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5E8B PUSH1 0x27 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x26BB JUMPI PUSH1 0x0 DUP1 DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x25F4 JUMPI PUSH2 0x25F3 PUSH2 0x4BA8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2625 JUMPI PUSH2 0x2624 PUSH2 0x4BA8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x2640 JUMPI PUSH2 0x263F PUSH2 0x4BA8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x2655 SWAP2 SWAP1 PUSH2 0x5739 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2692 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2697 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x26A7 DUP3 DUP3 DUP7 PUSH2 0x2A4E JUMP JUMPDEST POP POP POP DUP1 PUSH2 0x26B4 SWAP1 PUSH2 0x56C0 JUMP JUMPDEST SWAP1 POP PUSH2 0x25D5 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x26E3 PUSH2 0x9F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2718 JUMPI PUSH2 0x2708 PUSH1 0x2 PUSH2 0x3550 JUMP JUMPDEST PUSH2 0x2717 JUMPI PUSH2 0x2716 PUSH1 0x2 PUSH2 0x3601 JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x274D DUP6 DUP6 DUP6 DUP6 PUSH2 0x2748 PUSH2 0x2AF8 JUMP JUMPDEST PUSH2 0x2071 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD DUP2 PUSH1 0x1 ADD SLOAD PUSH2 0x2783 SWAP2 SWAP1 PUSH2 0x5750 JUMP JUMPDEST PUSH2 0x2794 PUSH2 0x278F DUP6 PUSH2 0xF43 JUMP JUMPDEST PUSH2 0x1DEC JUMP JUMPDEST GT ISZERO SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD DUP2 PUSH1 0x1 ADD SLOAD GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x280D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2804 SWAP1 PUSH2 0x57D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2818 DUP4 PUSH2 0x1F65 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 PUSH2 0x2838 DUP7 PUSH1 0x0 ADD DUP5 PUSH1 0x0 DUP6 PUSH2 0x3682 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x288C JUMPI PUSH2 0x285B DUP7 PUSH1 0x0 ADD PUSH1 0x1 DUP4 PUSH2 0x2856 SWAP2 SWAP1 PUSH2 0x4B74 JUMP JUMPDEST PUSH2 0x2FA2 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x288F JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xC565B045403DC03C2EEA82B81A0465EDAD9E2E7FC4D97E11421C209DA93D7A93 PUSH1 0x4 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH2 0x28EB SWAP3 SWAP2 SWAP1 PUSH2 0x5697 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x2966 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x295D SWAP1 PUSH2 0x5862 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3A46B1A8 DUP6 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29FA SWAP3 SWAP2 SWAP1 PUSH2 0x5882 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A17 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A3B SWAP2 SWAP1 PUSH2 0x58C0 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2A5E JUMPI DUP3 SWAP1 POP PUSH2 0x2A69 JUMP JUMPDEST PUSH2 0x2A68 DUP4 DUP4 PUSH2 0x36F5 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2AB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AAA SWAP1 PUSH2 0x595F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x7E3F7F0708A84DE9203036ABAA450DCCC85AD5FF52F78C170F3EDB55CF5E8828 PUSH1 0x5 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH2 0x2AE6 SWAP3 SWAP2 SWAP1 PUSH2 0x5697 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0xCCB45DA8D5717E6C4544694297C4BA5CF151D455C9BB0ED4FC7A38411BC05461 PUSH1 0x6 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH2 0x2B42 SWAP3 SWAP2 SWAP1 PUSH2 0x5697 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B5E PUSH2 0x18AF JUMP JUMPDEST PUSH2 0x2B67 DUP4 PUSH2 0x12FD JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8E539E8C DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BC0 SWAP2 SWAP1 PUSH2 0x388D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BDD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C01 SWAP2 SWAP1 PUSH2 0x58C0 JUMP JUMPDEST PUSH2 0x2C0B SWAP2 SWAP1 PUSH2 0x597F JUMP JUMPDEST PUSH2 0x2C15 SWAP2 SWAP1 PUSH2 0x59F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x2EB2 JUMPI PUSH1 0x0 PUSH2 0x2C49 DUP8 PUSH1 0x1 DUP5 PUSH2 0x2C44 SWAP2 SWAP1 PUSH2 0x4B74 JUMP JUMPDEST PUSH2 0x2FA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP6 PUSH4 0xFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x2D3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D34 SWAP1 PUSH2 0x5A6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH4 0xFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND SUB PUSH2 0x2DC1 JUMPI DUP5 PUSH2 0x2D6B DUP9 PUSH1 0x1 DUP6 PUSH2 0x2D66 SWAP2 SWAP1 PUSH2 0x4B74 JUMP JUMPDEST PUSH2 0x2FA2 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x2EA1 JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD DUP6 SWAP4 POP SWAP4 POP POP POP PUSH2 0x2F9A JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x0 DUP5 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x3033 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x3060 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x30CE JUMP JUMPDEST PUSH2 0x30CB PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x3745 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x30E6 SWAP3 SWAP2 SWAP1 PUSH2 0x5B05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x313F JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x31DD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3164 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5B3C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3186 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x31D4 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x31DD JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x31FA JUMPI PUSH2 0x31F9 PUSH2 0x4167 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x320D JUMPI PUSH2 0x320C PUSH2 0x4167 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x3349 JUMPI PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x3227 JUMPI PUSH2 0x3226 PUSH2 0x4167 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x323A JUMPI PUSH2 0x3239 PUSH2 0x4167 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x327A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3271 SWAP1 PUSH2 0x5BCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x328E JUMPI PUSH2 0x328D PUSH2 0x4167 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x32A1 JUMPI PUSH2 0x32A0 PUSH2 0x4167 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x32E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32D8 SWAP1 PUSH2 0x5C39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x32F5 JUMPI PUSH2 0x32F4 PUSH2 0x4167 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x3308 JUMPI PUSH2 0x3307 PUSH2 0x4167 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x3348 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x333F SWAP1 PUSH2 0x5CCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x33F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33E9 SWAP1 PUSH2 0x5D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3460 JUMPI PUSH2 0x345F PUSH2 0x4167 JUMP JUMPDEST JUMPDEST PUSH1 0xFF AND DUP5 PUSH1 0xFF AND SUB PUSH2 0x348C JUMPI DUP3 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3480 SWAP2 SWAP1 PUSH2 0x5750 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3548 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x34A0 JUMPI PUSH2 0x349F PUSH2 0x4167 JUMP JUMPDEST JUMPDEST PUSH1 0xFF AND DUP5 PUSH1 0xFF AND SUB PUSH2 0x34CC JUMPI DUP3 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x34C0 SWAP2 SWAP1 PUSH2 0x5750 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3547 JUMP JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x34DF JUMPI PUSH2 0x34DE PUSH2 0x4167 JUMP JUMPDEST JUMPDEST PUSH1 0xFF AND DUP5 PUSH1 0xFF AND SUB PUSH2 0x350B JUMPI DUP3 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x34FF SWAP2 SWAP1 PUSH2 0x5750 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3546 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x353D SWAP1 PUSH2 0x5DEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xF SIGNEXTEND PUSH1 0xF SIGNEXTEND DUP3 PUSH1 0x0 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xF SIGNEXTEND PUSH1 0xF SIGNEXTEND SGT ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xF SIGNEXTEND SWAP1 POP DUP2 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP4 PUSH1 0xF SIGNEXTEND PUSH1 0xF SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP2 ADD DUP4 PUSH1 0x0 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xF SIGNEXTEND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xF SIGNEXTEND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xF SIGNEXTEND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x36EA JUMPI PUSH1 0x0 PUSH2 0x3699 DUP5 DUP5 PUSH2 0x377F JUMP JUMPDEST SWAP1 POP DUP5 PUSH4 0xFFFFFFFF AND PUSH2 0x36AC DUP8 DUP4 PUSH2 0x2FA2 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x36D4 JUMPI DUP1 SWAP3 POP PUSH2 0x36E4 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x36E1 SWAP2 SWAP1 PUSH2 0x5750 JUMP JUMPDEST SWAP4 POP JUMPDEST POP PUSH2 0x3685 JUMP JUMPDEST DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x3708 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x373C SWAP2 SWAP1 PUSH2 0x3C73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP4 DUP4 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3760 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5E0F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP5 XOR PUSH2 0x3790 SWAP2 SWAP1 PUSH2 0x59F0 JUMP JUMPDEST DUP3 DUP5 AND PUSH2 0x379D SWAP2 SWAP1 PUSH2 0x5750 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37EE DUP2 PUSH2 0x37B9 JUMP JUMPDEST DUP2 EQ PUSH2 0x37F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x380B DUP2 PUSH2 0x37E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3827 JUMPI PUSH2 0x3826 PUSH2 0x37AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3835 DUP5 DUP3 DUP6 ADD PUSH2 0x37FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3853 DUP2 PUSH2 0x383E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x386E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x384A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3887 DUP2 PUSH2 0x3874 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x38A2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x387E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x38B1 DUP2 PUSH2 0x3874 JUMP JUMPDEST DUP2 EQ PUSH2 0x38BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x38CE DUP2 PUSH2 0x38A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38EA DUP2 PUSH2 0x38D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x38F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3907 DUP2 PUSH2 0x38E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3932 JUMPI PUSH2 0x3931 PUSH2 0x390D JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x394F JUMPI PUSH2 0x394E PUSH2 0x3912 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x396B JUMPI PUSH2 0x396A PUSH2 0x3917 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x39C0 DUP3 PUSH2 0x3977 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x39DF JUMPI PUSH2 0x39DE PUSH2 0x3988 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39F2 PUSH2 0x37A5 JUMP JUMPDEST SWAP1 POP PUSH2 0x39FE DUP3 DUP3 PUSH2 0x39B7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3A1E JUMPI PUSH2 0x3A1D PUSH2 0x3988 JUMP JUMPDEST JUMPDEST PUSH2 0x3A27 DUP3 PUSH2 0x3977 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A56 PUSH2 0x3A51 DUP5 PUSH2 0x3A03 JUMP JUMPDEST PUSH2 0x39E8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3A72 JUMPI PUSH2 0x3A71 PUSH2 0x3972 JUMP JUMPDEST JUMPDEST PUSH2 0x3A7D DUP5 DUP3 DUP6 PUSH2 0x3A34 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3A9A JUMPI PUSH2 0x3A99 PUSH2 0x390D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3AAA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3A43 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3AC6 DUP2 PUSH2 0x3AB3 JUMP JUMPDEST DUP2 EQ PUSH2 0x3AD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3AE3 DUP2 PUSH2 0x3ABD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xE0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x3B09 JUMPI PUSH2 0x3B08 PUSH2 0x37AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B17 DUP12 DUP3 DUP13 ADD PUSH2 0x38BF JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x3B28 DUP12 DUP3 DUP13 ADD PUSH2 0x38F8 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B49 JUMPI PUSH2 0x3B48 PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x3B55 DUP12 DUP3 DUP13 ADD PUSH2 0x391C JUMP JUMPDEST SWAP7 POP SWAP7 POP POP PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B78 JUMPI PUSH2 0x3B77 PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x3B84 DUP12 DUP3 DUP13 ADD PUSH2 0x3A85 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x3B95 DUP12 DUP3 DUP13 ADD PUSH2 0x38F8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x3BA6 DUP12 DUP3 DUP13 ADD PUSH2 0x3AD4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x3BB7 DUP12 DUP3 DUP13 ADD PUSH2 0x3AD4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BDD JUMPI PUSH2 0x3BDC PUSH2 0x37AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3BEB DUP5 DUP3 DUP6 ADD PUSH2 0x38BF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3C2E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3C13 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C45 DUP3 PUSH2 0x3BF4 JUMP JUMPDEST PUSH2 0x3C4F DUP2 DUP6 PUSH2 0x3BFF JUMP JUMPDEST SWAP4 POP PUSH2 0x3C5F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3C10 JUMP JUMPDEST PUSH2 0x3C68 DUP2 PUSH2 0x3977 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C8D DUP2 DUP5 PUSH2 0x3C3A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CC0 DUP3 PUSH2 0x3C95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CD0 DUP2 PUSH2 0x3CB5 JUMP JUMPDEST DUP2 EQ PUSH2 0x3CDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3CED DUP2 PUSH2 0x3CC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3D0D JUMPI PUSH2 0x3D0C PUSH2 0x37AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3D1B DUP8 DUP3 DUP9 ADD PUSH2 0x3CDE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3D2C DUP8 DUP3 DUP9 ADD PUSH2 0x3CDE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3D3D DUP8 DUP3 DUP9 ADD PUSH2 0x38BF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D5E JUMPI PUSH2 0x3D5D PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x3D6A DUP8 DUP3 DUP9 ADD PUSH2 0x3A85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x3D7F DUP2 PUSH2 0x37B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3D9A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3D76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3DBB JUMPI PUSH2 0x3DBA PUSH2 0x3988 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DDF PUSH2 0x3DDA DUP5 PUSH2 0x3DA0 JUMP JUMPDEST PUSH2 0x39E8 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x3E02 JUMPI PUSH2 0x3E01 PUSH2 0x3917 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3E2B JUMPI DUP1 PUSH2 0x3E17 DUP9 DUP3 PUSH2 0x3CDE JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3E04 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3E4A JUMPI PUSH2 0x3E49 PUSH2 0x390D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3E5A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3DCC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3E7E JUMPI PUSH2 0x3E7D PUSH2 0x3988 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EA2 PUSH2 0x3E9D DUP5 PUSH2 0x3E63 JUMP JUMPDEST PUSH2 0x39E8 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x3EC5 JUMPI PUSH2 0x3EC4 PUSH2 0x3917 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3EEE JUMPI DUP1 PUSH2 0x3EDA DUP9 DUP3 PUSH2 0x38BF JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3EC7 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3F0D JUMPI PUSH2 0x3F0C PUSH2 0x390D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3F1D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3E8F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3F41 JUMPI PUSH2 0x3F40 PUSH2 0x3988 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F65 PUSH2 0x3F60 DUP5 PUSH2 0x3F26 JUMP JUMPDEST PUSH2 0x39E8 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x3F88 JUMPI PUSH2 0x3F87 PUSH2 0x3917 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3FCF JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3FAD JUMPI PUSH2 0x3FAC PUSH2 0x390D JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x3FBA DUP10 DUP3 PUSH2 0x3A85 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3F8A JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3FEE JUMPI PUSH2 0x3FED PUSH2 0x390D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3FFE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3F52 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4021 JUMPI PUSH2 0x4020 PUSH2 0x37AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x403F JUMPI PUSH2 0x403E PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x404B DUP8 DUP3 DUP9 ADD PUSH2 0x3E35 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x406C JUMPI PUSH2 0x406B PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x4078 DUP8 DUP3 DUP9 ADD PUSH2 0x3EF8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4099 JUMPI PUSH2 0x4098 PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x40A5 DUP8 DUP3 DUP9 ADD PUSH2 0x3FD9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x40B6 DUP8 DUP3 DUP9 ADD PUSH2 0x3AD4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x40CB DUP2 PUSH2 0x3AB3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x40E6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4108 JUMPI PUSH2 0x4107 PUSH2 0x37AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4116 DUP9 DUP3 DUP10 ADD PUSH2 0x38BF JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x4127 DUP9 DUP3 DUP10 ADD PUSH2 0x38F8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x4138 DUP9 DUP3 DUP10 ADD PUSH2 0x38F8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x4149 DUP9 DUP3 DUP10 ADD PUSH2 0x3AD4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x415A DUP9 DUP3 DUP10 ADD PUSH2 0x3AD4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x8 DUP2 LT PUSH2 0x41A7 JUMPI PUSH2 0x41A6 PUSH2 0x4167 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x41B8 DUP3 PUSH2 0x4196 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41C8 DUP3 PUSH2 0x41AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x41D8 DUP2 PUSH2 0x41BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x41F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x41CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4210 JUMPI PUSH2 0x420F PUSH2 0x37AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x421E DUP6 DUP3 DUP7 ADD PUSH2 0x38BF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x422F DUP6 DUP3 DUP7 ADD PUSH2 0x3CDE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x424E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x387E JUMP JUMPDEST PUSH2 0x425B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x387E JUMP JUMPDEST PUSH2 0x4268 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x387E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4287 JUMPI PUSH2 0x4286 PUSH2 0x37AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4295 DUP6 DUP3 DUP7 ADD PUSH2 0x38BF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x42A6 DUP6 DUP3 DUP7 ADD PUSH2 0x38F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x42CC JUMPI PUSH2 0x42CB PUSH2 0x37AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x42DA DUP9 DUP3 DUP10 ADD PUSH2 0x38BF JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x42EB DUP9 DUP3 DUP10 ADD PUSH2 0x38F8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x430C JUMPI PUSH2 0x430B PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x4318 DUP9 DUP3 DUP10 ADD PUSH2 0x391C JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x433B JUMPI PUSH2 0x433A PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x4347 DUP9 DUP3 DUP10 ADD PUSH2 0x3A85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x436E JUMPI PUSH2 0x436D PUSH2 0x37AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x437C DUP8 DUP3 DUP9 ADD PUSH2 0x38BF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x438D DUP8 DUP3 DUP9 ADD PUSH2 0x38F8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x43AE JUMPI PUSH2 0x43AD PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x43BA DUP8 DUP3 DUP9 ADD PUSH2 0x391C JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x43E3 JUMPI PUSH2 0x43E2 PUSH2 0x3988 JUMP JUMPDEST JUMPDEST PUSH2 0x43EC DUP3 PUSH2 0x3977 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x440C PUSH2 0x4407 DUP5 PUSH2 0x43C8 JUMP JUMPDEST PUSH2 0x39E8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4428 JUMPI PUSH2 0x4427 PUSH2 0x3972 JUMP JUMPDEST JUMPDEST PUSH2 0x4433 DUP5 DUP3 DUP6 PUSH2 0x3A34 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4450 JUMPI PUSH2 0x444F PUSH2 0x390D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4460 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x43F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4483 JUMPI PUSH2 0x4482 PUSH2 0x37AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x44A1 JUMPI PUSH2 0x44A0 PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x44AD DUP8 DUP3 DUP9 ADD PUSH2 0x3E35 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x44CE JUMPI PUSH2 0x44CD PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x44DA DUP8 DUP3 DUP9 ADD PUSH2 0x3EF8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x44FB JUMPI PUSH2 0x44FA PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x4507 DUP8 DUP3 DUP9 ADD PUSH2 0x3FD9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4528 JUMPI PUSH2 0x4527 PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x4534 DUP8 DUP3 DUP9 ADD PUSH2 0x443B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4559 JUMPI PUSH2 0x4558 PUSH2 0x37AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4567 DUP7 DUP3 DUP8 ADD PUSH2 0x3CDE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4578 DUP7 DUP3 DUP8 ADD PUSH2 0x38BF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4599 JUMPI PUSH2 0x4598 PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x45A5 DUP7 DUP3 DUP8 ADD PUSH2 0x3A85 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x45CB JUMPI PUSH2 0x45CA PUSH2 0x37AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x45D9 DUP9 DUP3 DUP10 ADD PUSH2 0x3CDE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x45EA DUP9 DUP3 DUP10 ADD PUSH2 0x3CDE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x460B JUMPI PUSH2 0x460A PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x4617 DUP9 DUP3 DUP10 ADD PUSH2 0x3EF8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4638 JUMPI PUSH2 0x4637 PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x4644 DUP9 DUP3 DUP10 ADD PUSH2 0x3EF8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4665 JUMPI PUSH2 0x4664 PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x4671 DUP9 DUP3 DUP10 ADD PUSH2 0x3A85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x4694 JUMPI PUSH2 0x4693 PUSH2 0x390D JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x46B1 JUMPI PUSH2 0x46B0 PUSH2 0x3912 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x46CD JUMPI PUSH2 0x46CC PUSH2 0x3917 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x46EE JUMPI PUSH2 0x46ED PUSH2 0x37AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x46FC DUP8 DUP3 DUP9 ADD PUSH2 0x3CDE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x470D DUP8 DUP3 DUP9 ADD PUSH2 0x38BF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x472E JUMPI PUSH2 0x472D PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x473A DUP8 DUP3 DUP9 ADD PUSH2 0x467E JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x475F JUMPI PUSH2 0x475E PUSH2 0x37AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x476D DUP6 DUP3 DUP7 ADD PUSH2 0x3CDE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x477E DUP6 DUP3 DUP7 ADD PUSH2 0x38BF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x47A4 JUMPI PUSH2 0x47A3 PUSH2 0x37AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x47B2 DUP9 DUP3 DUP10 ADD PUSH2 0x3CDE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x47C3 DUP9 DUP3 DUP10 ADD PUSH2 0x3CDE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x47D4 DUP9 DUP3 DUP10 ADD PUSH2 0x38BF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x47E5 DUP9 DUP3 DUP10 ADD PUSH2 0x38BF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4806 JUMPI PUSH2 0x4805 PUSH2 0x37B4 JUMP JUMPDEST JUMPDEST PUSH2 0x4812 DUP9 DUP3 DUP10 ADD PUSH2 0x3A85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4844 PUSH2 0x483F PUSH2 0x483A DUP5 PUSH2 0x3C95 JUMP JUMPDEST PUSH2 0x481F JUMP JUMPDEST PUSH2 0x3C95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4856 DUP3 PUSH2 0x4829 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4868 DUP3 PUSH2 0x484B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4878 DUP2 PUSH2 0x485D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4893 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x486F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48B0 DUP4 DUP6 PUSH2 0x4899 JUMP JUMPDEST SWAP4 POP PUSH2 0x48BD DUP4 DUP6 DUP5 PUSH2 0x3A34 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48D6 DUP3 DUP5 DUP7 PUSH2 0x48A4 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x48EB DUP2 PUSH2 0x38D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x4906 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x40C2 JUMP JUMPDEST PUSH2 0x4913 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x387E JUMP JUMPDEST PUSH2 0x4920 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x48E2 JUMP JUMPDEST PUSH2 0x492D PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x40C2 JUMP JUMPDEST PUSH2 0x493A PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x40C2 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x476F7665726E6F723A206F6E6C79476F7665726E616E63650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x497A PUSH1 0x18 DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x4985 DUP3 PUSH2 0x4944 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x49A9 DUP2 PUSH2 0x496D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x49F7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4A0A JUMPI PUSH2 0x4A09 PUSH2 0x49B0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476F7665726E6F723A2070726F706F73616C206E6F7420737563636573736675 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A6C PUSH1 0x21 DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x4A77 DUP3 PUSH2 0x4A10 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A9B DUP2 PUSH2 0x4A5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4AB7 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x40C2 JUMP JUMPDEST PUSH2 0x4AC4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x387E JUMP JUMPDEST PUSH2 0x4AD1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x48E2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x476F7665726E6F723A20756E6B6E6F776E2070726F706F73616C206964000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B0F PUSH1 0x1D DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x4B1A DUP3 PUSH2 0x4AD9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B3E DUP2 PUSH2 0x4B02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4B7F DUP3 PUSH2 0x3874 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B8A DUP4 PUSH2 0x3874 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x4BA2 JUMPI PUSH2 0x4BA1 PUSH2 0x4B45 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x476F7665726E6F723A2070726F706F73657220766F7465732062656C6F772070 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F706F73616C207468726573686F6C64000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C33 PUSH1 0x31 DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x4C3E DUP3 PUSH2 0x4BD7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C62 DUP2 PUSH2 0x4C26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476F7665726E6F723A20696E76616C69642070726F706F73616C206C656E6774 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6800000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CC5 PUSH1 0x21 DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x4CD0 DUP3 PUSH2 0x4C69 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4CF4 DUP2 PUSH2 0x4CB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476F7665726E6F723A20656D7074792070726F706F73616C0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D31 PUSH1 0x18 DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x4D3C DUP3 PUSH2 0x4CFB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4D60 DUP2 PUSH2 0x4D24 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476F7665726E6F723A2070726F706F73616C20616C7265616479206578697374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DC3 PUSH1 0x21 DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x4DCE DUP3 PUSH2 0x4D67 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4DF2 DUP2 PUSH2 0x4DB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E18 DUP3 PUSH2 0x4DF9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E23 DUP4 PUSH2 0x4DF9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4E43 JUMPI PUSH2 0x4E42 PUSH2 0x4B45 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4E52 DUP2 PUSH2 0x3CB5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E8D DUP2 PUSH2 0x3CB5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E9F DUP4 DUP4 PUSH2 0x4E84 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EC3 DUP3 PUSH2 0x4E58 JUMP JUMPDEST PUSH2 0x4ECD DUP2 DUP6 PUSH2 0x4E63 JUMP JUMPDEST SWAP4 POP PUSH2 0x4ED8 DUP4 PUSH2 0x4E74 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4F09 JUMPI DUP2 MLOAD PUSH2 0x4EF0 DUP9 DUP3 PUSH2 0x4E93 JUMP JUMPDEST SWAP8 POP PUSH2 0x4EFB DUP4 PUSH2 0x4EAB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4EDC JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4F4B DUP2 PUSH2 0x3874 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F5D DUP4 DUP4 PUSH2 0x4F42 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F81 DUP3 PUSH2 0x4F16 JUMP JUMPDEST PUSH2 0x4F8B DUP2 DUP6 PUSH2 0x4F21 JUMP JUMPDEST SWAP4 POP PUSH2 0x4F96 DUP4 PUSH2 0x4F32 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4FC7 JUMPI DUP2 MLOAD PUSH2 0x4FAE DUP9 DUP3 PUSH2 0x4F51 JUMP JUMPDEST SWAP8 POP PUSH2 0x4FB9 DUP4 PUSH2 0x4F69 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4F9A JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x501C DUP3 PUSH2 0x3BF4 JUMP JUMPDEST PUSH2 0x5026 DUP2 DUP6 PUSH2 0x5000 JUMP JUMPDEST SWAP4 POP PUSH2 0x5036 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3C10 JUMP JUMPDEST PUSH2 0x503F DUP2 PUSH2 0x3977 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5056 DUP4 DUP4 PUSH2 0x5011 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5076 DUP3 PUSH2 0x4FD4 JUMP JUMPDEST PUSH2 0x5080 DUP2 DUP6 PUSH2 0x4FDF JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x5092 DUP6 PUSH2 0x4FF0 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x50CE JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x50AF DUP6 DUP3 PUSH2 0x504A JUMP JUMPDEST SWAP5 POP PUSH2 0x50BA DUP4 PUSH2 0x505E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5096 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5133 DUP3 PUSH2 0x510C JUMP JUMPDEST PUSH2 0x513D DUP2 DUP6 PUSH2 0x5117 JUMP JUMPDEST SWAP4 POP PUSH2 0x514D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3C10 JUMP JUMPDEST PUSH2 0x5156 DUP2 PUSH2 0x3977 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x516D DUP4 DUP4 PUSH2 0x5128 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x518D DUP3 PUSH2 0x50E0 JUMP JUMPDEST PUSH2 0x5197 DUP2 DUP6 PUSH2 0x50EB JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x51A9 DUP6 PUSH2 0x50FC JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x51E5 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x51C6 DUP6 DUP3 PUSH2 0x5161 JUMP JUMPDEST SWAP5 POP PUSH2 0x51D1 DUP4 PUSH2 0x5175 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x51AD JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5212 PUSH2 0x520D PUSH2 0x5208 DUP5 PUSH2 0x4DF9 JUMP JUMPDEST PUSH2 0x481F JUMP JUMPDEST PUSH2 0x3874 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5222 DUP2 PUSH2 0x51F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x523E PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x387E JUMP JUMPDEST PUSH2 0x524B PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x4E49 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x525D DUP2 DUP11 PUSH2 0x4EB8 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x5271 DUP2 DUP10 PUSH2 0x4F76 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x5285 DUP2 DUP9 PUSH2 0x506B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x5299 DUP2 DUP8 PUSH2 0x5182 JUMP JUMPDEST SWAP1 POP PUSH2 0x52A8 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x5219 JUMP JUMPDEST PUSH2 0x52B5 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x5219 JUMP JUMPDEST DUP2 DUP2 SUB PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x52C8 DUP2 DUP5 PUSH2 0x3C3A JUMP JUMPDEST SWAP1 POP SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x52F2 DUP2 DUP8 PUSH2 0x4EB8 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x5306 DUP2 DUP7 PUSH2 0x4F76 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x531A DUP2 DUP6 PUSH2 0x5182 JUMP JUMPDEST SWAP1 POP PUSH2 0x5329 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x40C2 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3234206269747300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x538E PUSH1 0x27 DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x5399 DUP3 PUSH2 0x5332 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x53BD DUP2 PUSH2 0x5381 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3220626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5420 PUSH1 0x26 DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x542B DUP3 PUSH2 0x53C4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x544F DUP2 PUSH2 0x5413 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476F7665726E6F723A20766F7465206E6F742063757272656E746C7920616374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6976650000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54B2 PUSH1 0x23 DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x54BD DUP3 PUSH2 0x5456 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x54E1 DUP2 PUSH2 0x54A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x54FD PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x387E JUMP JUMPDEST PUSH2 0x550A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x48E2 JUMP JUMPDEST PUSH2 0x5517 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x387E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x5529 DUP2 DUP5 PUSH2 0x3C3A JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5550 DUP3 PUSH2 0x510C JUMP JUMPDEST PUSH2 0x555A DUP2 DUP6 PUSH2 0x5534 JUMP JUMPDEST SWAP4 POP PUSH2 0x556A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3C10 JUMP JUMPDEST PUSH2 0x5573 DUP2 PUSH2 0x3977 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x5593 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x387E JUMP JUMPDEST PUSH2 0x55A0 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x48E2 JUMP JUMPDEST PUSH2 0x55AD PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x387E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x55BF DUP2 DUP6 PUSH2 0x3C3A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x55D3 DUP2 DUP5 PUSH2 0x5545 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x476F7665726E6F72566F74657351756F72756D4672616374696F6E3A2071756F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72756D4E756D657261746F72206F7665722071756F72756D44656E6F6D696E61 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x746F720000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5661 PUSH1 0x43 DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x566C DUP3 PUSH2 0x55DF JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5690 DUP2 PUSH2 0x5654 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x56AC PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x387E JUMP JUMPDEST PUSH2 0x56B9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x387E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56CB DUP3 PUSH2 0x3874 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x56FD JUMPI PUSH2 0x56FC PUSH2 0x4B45 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5713 DUP3 PUSH2 0x510C JUMP JUMPDEST PUSH2 0x571D DUP2 DUP6 PUSH2 0x4899 JUMP JUMPDEST SWAP4 POP PUSH2 0x572D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3C10 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5745 DUP3 DUP5 PUSH2 0x5708 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x575B DUP3 PUSH2 0x3874 JUMP JUMPDEST SWAP2 POP PUSH2 0x5766 DUP4 PUSH2 0x3874 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x577E JUMPI PUSH2 0x577D PUSH2 0x4B45 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436865636B706F696E74733A20626C6F636B206E6F7420796574206D696E6564 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57BA PUSH1 0x20 DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x57C5 DUP3 PUSH2 0x5784 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x57E9 DUP2 PUSH2 0x57AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2036 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3420626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x584C PUSH1 0x26 DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x5857 DUP3 PUSH2 0x57F0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x587B DUP2 PUSH2 0x583F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5897 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4E49 JUMP JUMPDEST PUSH2 0x58A4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x387E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x58BA DUP2 PUSH2 0x38A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x58D6 JUMPI PUSH2 0x58D5 PUSH2 0x37AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x58E4 DUP5 DUP3 DUP6 ADD PUSH2 0x58AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x476F7665726E6F7253657474696E67733A20766F74696E6720706572696F6420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x746F6F206C6F7700000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5949 PUSH1 0x27 DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x5954 DUP3 PUSH2 0x58ED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5978 DUP2 PUSH2 0x593C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x598A DUP3 PUSH2 0x3874 JUMP JUMPDEST SWAP2 POP PUSH2 0x5995 DUP4 PUSH2 0x3874 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x59A3 DUP2 PUSH2 0x3874 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x59BA JUMPI PUSH2 0x59B9 PUSH2 0x4B45 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x59FB DUP3 PUSH2 0x3874 JUMP JUMPDEST SWAP2 POP PUSH2 0x5A06 DUP4 PUSH2 0x3874 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x5A16 JUMPI PUSH2 0x5A15 PUSH2 0x59C1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436865636B706F696E743A20696E76616C6964206B6579000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A57 PUSH1 0x17 DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x5A62 DUP3 PUSH2 0x5A21 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5A86 DUP2 PUSH2 0x5A4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5ACE PUSH1 0x2 DUP4 PUSH2 0x5A8D JUMP JUMPDEST SWAP2 POP PUSH2 0x5AD9 DUP3 PUSH2 0x5A98 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5AFF PUSH2 0x5AFA DUP3 PUSH2 0x3AB3 JUMP JUMPDEST PUSH2 0x5AE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B10 DUP3 PUSH2 0x5AC1 JUMP JUMPDEST SWAP2 POP PUSH2 0x5B1C DUP3 DUP6 PUSH2 0x5AEE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x5B2C DUP3 DUP5 PUSH2 0x5AEE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x5B51 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x40C2 JUMP JUMPDEST PUSH2 0x5B5E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x48E2 JUMP JUMPDEST PUSH2 0x5B6B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x40C2 JUMP JUMPDEST PUSH2 0x5B78 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x40C2 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BB7 PUSH1 0x18 DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x5BC2 DUP3 PUSH2 0x5B81 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5BE6 DUP2 PUSH2 0x5BAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C23 PUSH1 0x1F DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x5C2E DUP3 PUSH2 0x5BED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5C52 DUP2 PUSH2 0x5C16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CB5 PUSH1 0x22 DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x5CC0 DUP3 PUSH2 0x5C59 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5CE4 DUP2 PUSH2 0x5CA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476F7665726E6F72566F74696E6753696D706C653A20766F746520616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6479206361737400000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D47 PUSH1 0x27 DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x5D52 DUP3 PUSH2 0x5CEB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5D76 DUP2 PUSH2 0x5D3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x476F7665726E6F72566F74696E6753696D706C653A20696E76616C6964207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C756520666F7220656E756D20566F7465547970650000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DD9 PUSH1 0x35 DUP4 PUSH2 0x3BFF JUMP JUMPDEST SWAP2 POP PUSH2 0x5DE4 DUP3 PUSH2 0x5D7D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5E08 DUP2 PUSH2 0x5DCC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x5E24 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x40C2 JUMP JUMPDEST PUSH2 0x5E31 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x40C2 JUMP JUMPDEST PUSH2 0x5E3E PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x40C2 JUMP JUMPDEST PUSH2 0x5E4B PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x387E JUMP JUMPDEST PUSH2 0x5E58 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x4E49 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID SELFBALANCE PUSH16 0x7665726E6F723A2072656C6179207265 PUSH23 0x657274656420776974686F7574206D657373616765476F PUSH23 0x65726E6F723A2063616C6C207265766572746564207769 PUSH21 0x686F7574206D657373616765A26469706673582212 KECCAK256 ADDRESS SUB CALLDATALOAD SIGNEXTEND 0xA7 0xC7 PUSH17 0xB7F0BC1C5559C008026BA93E4D6DF749C1 0xE SWAP16 PUSH26 0x99FC4B421164736F6C6343000811003300000000000000000000 ","sourceMap":"438:1161:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3749:4:0;3726:28;;:11;:9;:11::i;:::-;:28;;;3718:37;;;;;;438:1161:21;;;;;3829:738:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1017:172:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16332:784:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3127:150:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4623:98:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;19868:200;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10757:867;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7171:163;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1341:147;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;841:170:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15821:427:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6189:914;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1039:167:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1278:389;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;4780:99:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14831:198;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15444:312;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1664:649:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1738:126:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;15099:266:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9290:1408;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2419:94:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14544:227:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1357:191:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1416:181:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;20444:247:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7402:161;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;19182:326;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5824:308;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;843:136:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1240:95:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2039:130:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14298:176:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2354:150:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;20144:219:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1195:215:21;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;420:29:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;19696:98:0;19748:7;19782:4;19767:20;;19696:98;:::o;3829:738::-;3931:4;4352:32;;;4287:46;;;4227:41;;;4181:27;:87;:152;:203;4153:232;;;:11;:232;;;;:290;;;;4416:27;4401:42;;;:11;:42;;;;4153:290;:355;;;;4474:34;4459:49;;;:11;:49;;;;4153:355;:407;;;;4524:36;4548:11;4524:23;:36::i;:::-;4153:407;4134:426;;3829:738;;;:::o;1017:172:21:-;1132:7;1162:20;:18;:20::i;:::-;1155:27;;1017:172;:::o;16332:784:0:-;16580:7;16599:13;16615:423;16642:341;1400:88;16793:10;16829:7;16878:6;;16862:24;;;;;;;:::i;:::-;;;;;;;;16922:6;16912:17;;;;;;16707:244;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16676:293;;;;;;16642:16;:341::i;:::-;16997:1;17012;17027;16615:13;:423::i;:::-;16599:439;;17056:53;17066:10;17078:5;17085:7;17094:6;;17056:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17102:6;17056:9;:53::i;:::-;17049:60;;;16332:784;;;;;;;;;;:::o;3127:150:5:-;3023:11:0;:9;:11::i;:::-;3007:27;;:12;:10;:12::i;:::-;:27;;;2999:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3100:4;3077:28;;:11;:9;:11::i;:::-;:28;;;3073:277;;3121:19;3153:10;:8;:10::i;:::-;3143:21;;;;;;;:::i;:::-;;;;;;;;3121:43;;3288:52;3325:11;3295:26;:15;:24;:26::i;:::-;:41;3288:52;;3107:243;3073:277;3228:42:5::1;3251:18;3228:22;:42::i;:::-;3127:150:::0;:::o;4623:98:0:-;4677:13;4709:5;4702:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4623:98;:::o;19868:200::-;20006:6;20031:30;;;20024:37;;19868:200;;;;;;:::o;10757:867::-;10955:7;10974:18;10995:57;11008:7;11017:6;11025:9;11036:15;10995:12;:57::i;:::-;10974:78;;11063:20;11086:17;11092:10;11086:5;:17::i;:::-;11063:40;;11144:23;11134:33;;;;;;;;:::i;:::-;;:6;:33;;;;;;;;:::i;:::-;;;:67;;;;11181:20;11171:30;;;;;;;;:::i;:::-;;:6;:30;;;;;;;;:::i;:::-;;;11134:67;11113:147;;;;;;;;;;;;:::i;:::-;;;;;;;;;11304:4;11270:10;:22;11281:10;11270:22;;;;;;;;;;;:31;;;:38;;;;;;;;;;;;;;;;;;11324:28;11341:10;11324:28;;;;;;:::i;:::-;;;;;;;;11363:71;11378:10;11390:7;11399:6;11407:9;11418:15;11363:14;:71::i;:::-;11444:65;11453:10;11465:7;11474:6;11482:9;11493:15;11444:8;:65::i;:::-;11519:70;11533:10;11545:7;11554:6;11562:9;11573:15;11519:13;:70::i;:::-;11607:10;11600:17;;;;10757:867;;;;;;:::o;7171:163::-;7255:7;7281:46;:10;:22;7292:10;7281:22;;;;;;;;;;;:32;;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:46::i;:::-;7274:53;;;;7171:163;;;:::o;1341:147::-;1400:88;1341:147;:::o;841:170:21:-;955:7;985:19;:17;:19::i;:::-;978:26;;841:170;:::o;15821:427:0:-;15989:7;16008:13;16024:159;16051:77;1282:53;16106:10;16118:7;16078:48;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16068:59;;;;;;16051:16;:77::i;:::-;16142:1;16157;16172;16024:13;:159::i;:::-;16008:175;;16200:41;16210:10;16222:5;16229:7;16200:41;;;;;;;;;;;;:9;:41::i;:::-;16193:48;;;15821:427;;;;;;;:::o;6189:914::-;6262:13;6287:29;6319:10;:22;6330:10;6319:22;;;;;;;;;;;6287:54;;6356:8;:17;;;;;;;;;;;;6352:77;;;6396:22;6389:29;;;;;6352:77;6443:8;:17;;;;;;;;;;;;6439:77;;;6483:22;6476:29;;;;;6439:77;6526:16;6545:28;6562:10;6545:16;:28::i;:::-;6526:47;;6600:1;6588:8;:13;6584:83;;6617:39;;;;;;;;;;:::i;:::-;;;;;;;;6584:83;6693:12;6681:8;:24;6677:83;;6728:21;6721:28;;;;;;6677:83;6770:16;6789:28;6806:10;6789:16;:28::i;:::-;6770:47;;6844:12;6832:8;:24;6828:82;;6879:20;6872:27;;;;;;;6828:82;6924:26;6939:10;6924:14;:26::i;:::-;:56;;;;;6954:26;6969:10;6954:14;:26::i;:::-;6924:56;6920:177;;;7003:23;6996:30;;;;;;;6920:177;7064:22;7057:29;;;;;6189:914;;;;:::o;1039:167:2:-;1132:4;1155:14;:26;1170:10;1155:26;;;;;;;;;;;:35;;:44;1191:7;1155:44;;;;;;;;;;;;;;;;;;;;;;;;;1148:51;;1039:167;;;;:::o;1278:389::-;1395:20;1429:16;1459:20;1504:33;1540:14;:26;1555:10;1540:26;;;;;;;;;;;1504:62;;1584:12;:25;;;1611:12;:21;;;1634:12;:25;;;1576:84;;;;;;;1278:389;;;;;:::o;4780:99:0:-;4837:13;4862:10;;;;;;;;;;;;;;;;;;;4780:99;:::o;14831:198::-;14917:7;14936:13;14952:12;:10;:12::i;:::-;14936:28;;14981:41;14991:10;15003:5;15010:7;14981:41;;;;;;;;;;;;:9;:41::i;:::-;14974:48;;;14831:198;;;;:::o;15444:312::-;15632:7;15651:13;15667:12;:10;:12::i;:::-;15651:28;;15696:53;15706:10;15718:5;15725:7;15734:6;;15696:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15742:6;15696:9;:53::i;:::-;15689:60;;;15444:312;;;;;;;:::o;1664:649:5:-;1739:7;1814:14;1831:23;:36;;:43;;;;1814:60;;1898:1;1888:6;:11;1884:65;;1922:16;;1915:23;;;;;1884:65;2017:36;2056:23;:36;;2102:1;2093:6;:10;;;;:::i;:::-;2056:48;;;;;;;;:::i;:::-;;;;;;;;;2017:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2141:11;2118:6;:19;;;:34;;;2114:85;;2175:6;:13;;;2168:20;;;;;;;;2114:85;2259:47;2294:11;2259:23;:34;;:47;;;;:::i;:::-;2252:54;;;;1664:649;;;;:::o;1738:126:3:-;3023:11:0;:9;:11::i;:::-;3007:27;;:12;:10;:12::i;:::-;:27;;;2999:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3100:4;3077:28;;:11;:9;:11::i;:::-;:28;;;3073:277;;3121:19;3153:10;:8;:10::i;:::-;3143:21;;;;;;;:::i;:::-;;;;;;;;3121:43;;3288:52;3325:11;3295:26;:15;:24;:26::i;:::-;:41;3288:52;;3107:243;3073:277;1826:31:3::1;1842:14;1826:15;:31::i;:::-;1738:126:::0;:::o;15099:266:0:-;15249:7;15268:13;15284:12;:10;:12::i;:::-;15268:28;;15313:45;15323:10;15335:5;15342:7;15351:6;;15313:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:45::i;:::-;15306:52;;;15099:266;;;;;;:::o;9290:1408::-;9482:7;9566:19;:17;:19::i;:::-;9522:40;9531:12;:10;:12::i;:::-;9560:1;9545:12;:16;;;;:::i;:::-;9522:8;:40::i;:::-;:63;;9501:159;;;;;;;;;;;;:::i;:::-;;;;;;;;;9671:18;9692:71;9705:7;9714:6;9722:9;9749:11;9733:29;;;;;;9692:12;:71::i;:::-;9671:92;;9800:6;:13;9782:7;:14;:31;9774:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;9887:9;:16;9869:7;:14;:34;9861:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;9976:1;9959:7;:14;:18;9951:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;10017:29;10049:10;:22;10060:10;10049:22;;;;;;;;;;;10017:54;;10089:28;:8;:18;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:28::i;:::-;10081:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;10166:15;10210:24;:13;:11;:13::i;:::-;:22;:24::i;:::-;10184:23;:12;:21;:23::i;:::-;:50;;;;:::i;:::-;10166:68;;10244:15;10273:25;:14;:12;:14::i;:::-;:23;:25::i;:::-;10262:8;:36;;;;:::i;:::-;10244:54;;10309:40;10340:8;10309;:18;;:30;;:40;;;;:::i;:::-;10359:38;10388:8;10359;:16;;:28;;:38;;;;:::i;:::-;10413:250;10442:10;10466:12;:10;:12::i;:::-;10492:7;10513:6;10546:7;:14;10533:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10575:9;10598:8;10620;10642:11;10413:250;;;;;;;;;;;;;;:::i;:::-;;;;;;;;10681:10;10674:17;;;;;;9290:1408;;;;;;:::o;2419:94:5:-;2477:7;2503:3;2496:10;;2419:94;:::o;14544:227:0:-;14699:7;14725:39;14735:7;14744:11;14757:6;14725:9;:39::i;:::-;14718:46;;14544:227;;;;;:::o;1357:191:5:-;1413:7;1486:1;1439:23;:36;;:43;;;;:48;:102;;1509:32;:23;:30;:32::i;:::-;1439:102;;;;;1490:16;;1439:102;1432:109;;1357:191;:::o;1416:181:21:-;1535:7;1565:25;:23;:25::i;:::-;1558:32;;1416:181;:::o;20444:247:0:-;20623:6;20648:36;;;20641:43;;20444:247;;;;;;;:::o;7402:161::-;7486:7;7512:44;:10;:22;7523:10;7512:22;;;;;;;;;;;:30;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:44::i;:::-;7505:51;;;;7402:161;;;:::o;19182:326::-;3023:11;:9;:11::i;:::-;3007:27;;:12;:10;:12::i;:::-;:27;;;2999:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3100:4;3077:28;;:11;:9;:11::i;:::-;:28;;;3073:277;;3121:19;3153:10;:8;:10::i;:::-;3143:21;;;;;;;:::i;:::-;;;;;;;;3121:43;;3288:52;3325:11;3295:26;:15;:24;:26::i;:::-;:41;3288:52;;3107:243;3073:277;19330:12:::1;19344:23:::0;19371:6:::1;:11;;19390:5;19397:4;;19371:31;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19329:73;;;;19412:89;19437:7;19446:10;19412:89;;;;;;;;;;;;;;;;;:24;:89::i;:::-;;19319:189;;19182:326:::0;;;;:::o;5824:308::-;6024:7;6079;6088:6;6096:9;6107:15;6068:55;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6058:66;;;;;;6050:75;;6043:82;;5824:308;;;;;;:::o;843:136:2:-;906:13;931:41;;;;;;;;;;;;;;;;;;;843:136;:::o;1240:95:0:-;1282:53;1240:95;:::o;2039:130:3:-;3023:11:0;:9;:11::i;:::-;3007:27;;:12;:10;:12::i;:::-;:27;;;2999:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3100:4;3077:28;;:11;:9;:11::i;:::-;:28;;;3073:277;;3121:19;3153:10;:8;:10::i;:::-;3143:21;;;;;;;:::i;:::-;;;;;;;;3121:43;;3288:52;3325:11;3295:26;:15;:24;:26::i;:::-;:41;3288:52;;3107:243;3073:277;2129:33:3::1;2146:15;2129:16;:33::i;:::-;2039:130:::0;:::o;14298:176:0:-;14392:7;14418:49;14428:7;14437:11;14450:16;:14;:16::i;:::-;14418:9;:49::i;:::-;14411:56;;14298:176;;;;:::o;2354:150:3:-;3023:11:0;:9;:11::i;:::-;3007:27;;:12;:10;:12::i;:::-;:27;;;2999:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3100:4;3077:28;;:11;:9;:11::i;:::-;:28;;;3073:277;;3121:19;3153:10;:8;:10::i;:::-;3143:21;;;;;;;:::i;:::-;;;;;;;;3121:43;;3288:52;3325:11;3295:26;:15;:24;:26::i;:::-;:41;3288:52;;3107:243;3073:277;2454:43:3::1;2476:20;2454:21;:43::i;:::-;2354:150:::0;:::o;20144:219:0:-;20300:6;20325:31;;;20318:38;;20144:219;;;;;;;:::o;1195:215:21:-;1348:7;1378:25;1391:11;1378:12;:25::i;:::-;1371:32;;1195:215;;;:::o;420:29:4:-;;;:::o;2836:192:19:-;2893:7;2929:17;2920:26;;:5;:26;;2912:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3015:5;3000:21;;2836:192;;;:::o;3000:197:10:-;3069:7;3078;3104:86;3112:4;:17;;3131:31;3149:12;3131:17;:31::i;:::-;3164:25;3183:5;3164:18;:25::i;:::-;3104:7;:86::i;:::-;3097:93;;;;;;;;;;;;;;3000:197;;;;;:::o;3779:205::-;3840:7;3859:11;3873:4;:17;;:24;;;;3859:38;;3921:1;3914:3;:8;:63;;3929:41;3943:4;:17;;3968:1;3962:3;:7;;;;:::i;:::-;3929:13;:41::i;:::-;:48;;;;;;;;;;;;3914:63;;;3925:1;3914:63;3907:70;;;3779:205;;;:::o;15264:187:19:-;15320:6;15355:16;15346:25;;:5;:25;;15338:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;15438:5;15424:20;;15264:187;;;:::o;829:155:16:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;1271:108:3:-;1333:7;1359:13;;1352:20;;1271:108;:::o;4348:165:15:-;4425:7;4451:55;4473:20;:18;:20::i;:::-;4495:10;4451:21;:55::i;:::-;4444:62;;4348:165;;;:::o;6696:270:14:-;6819:7;6839:17;6858:18;6880:25;6891:4;6897:1;6900;6903;6880:10;:25::i;:::-;6838:67;;;;6915:18;6927:5;6915:11;:18::i;:::-;6950:9;6943:16;;;;6696:270;;;;;;:::o;17962:769:0:-;18148:7;18167:29;18199:10;:22;18210:10;18199:22;;;;;;;;;;;18167:54;;18260:20;18239:41;;;;;;;;:::i;:::-;;:17;18245:10;18239:5;:17::i;:::-;:41;;;;;;;;:::i;:::-;;;18231:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;18331:14;18348:60;18358:7;18367:32;:8;:18;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:32::i;:::-;18348:60;;18401:6;18348:9;:60::i;:::-;18331:77;;18418:56;18429:10;18441:7;18450;18459:6;18467;18418:10;:56::i;:::-;18506:1;18489:6;:13;:18;18485:216;;18537:7;18528:54;;;18546:10;18558:7;18567:6;18575;18528:54;;;;;;;;;:::i;:::-;;;;;;;;18485:216;;;18637:7;18618:72;;;18646:10;18658:7;18667:6;18675;18683;18618:72;;;;;;;;;;:::i;:::-;;;;;;;;18485:216;18718:6;18711:13;;;;17962:769;;;;;;;:::o;640:96:11:-;693:7;719:10;712:17;;640:96;:::o;742:99::-;793:14;;826:8;;819:15;;;;742:99;;:::o;3287:324:20:-;3351:13;3380:12;3386:5;3380;:12::i;:::-;3376:32;;;3401:7;;;;;;;;;;;;;;3376:32;3418:17;3438:5;:12;;;;;;;;;;;;3418:32;;3468:5;:11;;:23;3480:10;3468:23;;;;;;;;;;;;;;;;3460:31;;3508:5;:11;;:23;3520:10;3508:23;;;;;;;;;;;;;;;3501:30;;;3593:1;3580:10;:14;3565:5;:12;;;:29;;;;;;;;;;;;;;;;;;;;3366:245;3287:324;;;:::o;3498:887:5:-;3628:19;:17;:19::i;:::-;3606:18;:41;;3585:155;;;;;;;;;;;;:::i;:::-;;;;;;;;;3751:26;3780:17;:15;:17::i;:::-;3751:46;;3953:1;3931:18;:23;;:75;;;;;4005:1;3958:23;:36;;:43;;;;:48;3931:75;3927:268;;;4022:23;:36;;4081:89;;;;;;;;4119:1;4081:89;;;;;;4130:38;4149:18;4130;:38::i;:::-;4081:89;;;;;4022:162;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3927:268;4252:48;4281:18;4252:23;:28;;:48;;;;:::i;:::-;;;4316:62;4339:18;4359;4316:62;;;;;;;:::i;:::-;;;;;;;;3575:810;3498:887;:::o;12360:499:0:-;12622:4;12599:28;;:11;:9;:11::i;:::-;:28;;;12595:258;;12648:9;12643:200;12667:7;:14;12663:1;:18;12643:200;;;12732:4;12710:27;;:7;12718:1;12710:10;;;;;;;;:::i;:::-;;;;;;;;:27;;;12706:123;;12761:49;12796:9;12806:1;12796:12;;;;;;;;:::i;:::-;;;;;;;;12786:23;;;;;;12761:15;:24;;:49;;;;:::i;:::-;12706:123;12683:3;;;;:::i;:::-;;;12643:200;;;;12595:258;12360:499;;;;;:::o;11749:541::-;11972:26;:70;;;;;;;;;;;;;;;;;;;12057:9;12052:232;12076:7;:14;12072:1;:18;12052:232;;;12112:12;12126:23;12153:7;12161:1;12153:10;;;;;;;;:::i;:::-;;;;;;;;:15;;12176:6;12183:1;12176:9;;;;;;;;:::i;:::-;;;;;;;;12187;12197:1;12187:12;;;;;;;;:::i;:::-;;;;;;;;12153:47;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12111:89;;;;12214:59;12239:7;12248:10;12260:12;12214:24;:59::i;:::-;;12097:187;;12092:3;;;;:::i;:::-;;;12052:232;;;;11962:328;11749:541;;;;;:::o;12928:396::-;13201:4;13178:28;;:11;:9;:11::i;:::-;:28;;;13174:144;;13227:23;:15;:21;:23::i;:::-;13222:86;;13270:23;:15;:21;:23::i;:::-;13222:86;13174:144;12928:396;;;;;:::o;1170:117:13:-;1240:6;1265:5;:15;;;1258:22;;1170:117;;;:::o;1101:106:3:-;1162:7;1188:12;;1181:19;;1101:106;:::o;17425:255:0:-;17582:7;17608:65;17618:10;17630:7;17639;17648:6;17656:16;:14;:16::i;:::-;17608:9;:65::i;:::-;17601:72;;17425:255;;;;;;:::o;1732:276:2:-;1816:4;1832:33;1868:14;:26;1883:10;1868:26;;;;;;;;;;;1832:62;;1976:12;:25;;;1952:12;:21;;;:49;;;;:::i;:::-;1912:36;1919:28;1936:10;1919:16;:28::i;:::-;1912:6;:36::i;:::-;:89;;1905:96;;;1732:276;;;:::o;2142:236::-;2226:4;2242:33;2278:14;:26;2293:10;2278:26;;;;;;;;;;;2242:62;;2346:12;:25;;;2322:12;:21;;;:49;2315:56;;;2142:236;;;:::o;1222:439:10:-;1308:7;1349:12;1335:11;:26;1327:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;1408:10;1421:30;1439:11;1421:17;:30::i;:::-;1408:43;;1462:11;1476:4;:17;;:24;;;;1462:38;;1510:11;1524:50;1543:4;:17;;1562:3;1567:1;1570:3;1524:18;:50::i;:::-;1510:64;;1598:1;1591:3;:8;:63;;1606:41;1620:4;:17;;1645:1;1639:3;:7;;;;:::i;:::-;1606:13;:41::i;:::-;:48;;;;;;;;;;;;1591:63;;;1602:1;1591:63;1584:70;;;;;;;1222:439;;;;:::o;2622:171:3:-;2703:44;2718:12;;2732:14;2703:44;;;;;;;:::i;:::-;;;;;;;;2772:14;2757:12;:29;;;;2622:171;:::o;1511:116:13:-;1577:4;1619:1;1600:5;:15;;;:20;;;1593:27;;1511:116;;;:::o;13216:187:19:-;13272:6;13307:16;13298:25;;:5;:25;;13290:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;13390:5;13376:20;;13216:187;;;:::o;1293:119:13:-;1396:9;1378:5;:15;;;:27;;;;;;;;;;;;;;;;;;1293:119;;:::o;651:225:4:-;803:7;829:5;:18;;;848:7;857:11;829:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;822:47;;651:225;;;;;:::o;1447:118:3:-;1514:7;1540:18;;1533:25;;1447:118;:::o;8315:295:9:-;8461:12;8489:7;8485:119;;;8519:10;8512:17;;;;8485:119;8560:33;8568:10;8580:12;8560:7;:33::i;:::-;8315:295;;;;;;:::o;2913:316:3:-;3074:1;3056:15;:19;3048:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;3134:47;3150:13;;3165:15;3134:47;;;;;;;:::i;:::-;;;;;;;;3207:15;3191:13;:31;;;;2913:316;:::o;9134:97:0:-;9191:12;9215:9;;;;;;;;;;;;;;9134:97;:::o;3359:213:3:-;3452:62;3473:18;;3493:20;3452:62;;;;;;;:::i;:::-;;;;;;;;3545:20;3524:18;:41;;;;3359:213;:::o;2651:200:5:-;2726:7;2825:19;:17;:19::i;:::-;2793:28;2809:11;2793:15;:28::i;:::-;2753:5;:24;;;2778:11;2753:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:68;;;;:::i;:::-;2752:92;;;;:::i;:::-;2745:99;;2651:200;;;:::o;4999:879:10:-;5117:7;5126;5145:11;5159:4;:11;;;;5145:25;;5191:1;5185:3;:7;5181:691;;;5260:22;5285:28;5299:4;5311:1;5305:3;:7;;;;:::i;:::-;5285:13;:28::i;:::-;5260:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5409:3;5388:24;;:4;:17;;;:24;;;;5380:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5525:3;5504:24;;:4;:17;;;:24;;;5500:202;;5586:5;5548:28;5562:4;5574:1;5568:3;:7;;;;:::i;:::-;5548:13;:28::i;:::-;:35;;;:43;;;;;;;;;;;;;;;;;;5500:202;;;5630:4;5640:46;;;;;;;;5666:3;5640:46;;;;;;5679:5;5640:46;;;;;5630:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5500:202;5723:4;:11;;;5736:5;5715:27;;;;;;;;5181:691;5773:4;5783:46;;;;;;;;5809:3;5783:46;;;;;;5822:5;5783:46;;;;;5773:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5852:1;5855:5;5844:17;;;;;4999:879;;;;;;;:::o;7568:237::-;7653:25;7723:9;7720:1;7713:20;7785:3;7778:4;7775:1;7765:18;7761:28;7746:43;;7568:237;;;;:::o;3152:308:15:-;3205:7;3245:12;3228:29;;3236:4;3228:29;;;:66;;;;;3278:16;3261:13;:33;3228:66;3224:230;;;3317:24;3310:31;;;;3224:230;3379:64;3401:10;3413:12;3427:15;3379:21;:64::i;:::-;3372:71;;3152:308;;:::o;8341:194:14:-;8434:7;8499:15;8516:10;8470:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8460:68;;;;;;8453:75;;8341:194;;;;:::o;5069:1494::-;5195:7;5204:12;6119:66;6114:1;6106:10;;:79;6102:161;;;6217:1;6221:30;6201:51;;;;;;6102:161;6357:14;6374:24;6384:4;6390:1;6393;6396;6374:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6357:41;;6430:1;6412:20;;:6;:20;;;6408:101;;6464:1;6468:29;6448:50;;;;;;;6408:101;6527:6;6535:20;6519:37;;;;;5069:1494;;;;;;;;:::o;570:511::-;647:20;638:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;634:441;683:7;634:441;743:29;734:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;730:345;;788:34;;;;;;;;;;:::i;:::-;;;;;;;;730:345;852:35;843:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;839:236;;903:41;;;;;;;;;;:::i;:::-;;;;;;;;839:236;974:30;965:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;961:114;;1020:44;;;;;;;;;;:::i;:::-;;;;;;;;961:114;570:511;;:::o;2518:812:2:-;2712:33;2748:14;:26;2763:10;2748:26;;;;;;;;;;;2712:62;;2794:12;:21;;:30;2816:7;2794:30;;;;;;;;;;;;;;;;;;;;;;;;;2793:31;2785:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;2911:4;2878:12;:21;;:30;2900:7;2878:30;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;2947:16;2941:23;;;;;;;;:::i;:::-;;2930:34;;:7;:34;;;2926:398;;3009:6;2980:12;:25;;;:35;;;;;;;:::i;:::-;;;;;;;;2926:398;;;3053:12;3047:19;;;;;;;;:::i;:::-;;3036:30;;:7;:30;;;3032:292;;3107:6;3082:12;:21;;;:31;;;;;;;:::i;:::-;;;;;;;;3032:292;;;3151:16;3145:23;;;;;;;;:::i;:::-;;3134:34;;:7;:34;;;3130:194;;3213:6;3184:12;:25;;;:35;;;;;;;:::i;:::-;;;;;;;;3130:194;;;3250:63;;;;;;;;;;:::i;:::-;;;;;;;;3130:194;3032:292;2926:398;2702:628;2518:812;;;;;:::o;5777:122:20:-;5843:4;5880:5;:12;;;;;;;;;;;;5866:26;;:5;:10;;;;;;;;;;;;:26;;;;5859:33;;5777:122;;;:::o;2088:226::-;2168:16;2187:5;:10;;;;;;;;;;;;2168:29;;2232:5;2207;:11;;:22;2219:9;2207:22;;;;;;;;;;;;;;;:30;;;;2296:1;2284:9;:13;2271:5;:10;;;:26;;;;;;;;;;;;;;;;;;;;2158:156;2088:226;;:::o;5159:109::-;5236:1;5221:5;:12;;;:16;;;;;;;;;;;;;;;;;;;;5260:1;5247:5;:10;;;:14;;;;;;;;;;;;;;;;;;;;5159:109;:::o;6209:438:10:-;6363:7;6382:238;6395:4;6389:3;:10;6382:238;;;6415:11;6429:23;6442:3;6447:4;6429:12;:23::i;:::-;6415:37;;6510:3;6470:43;;:24;6484:4;6490:3;6470:13;:24::i;:::-;:37;;;;;;;;;;;;:43;;;6466:144;;;6540:3;6533:10;;6466:144;;;6594:1;6588:3;:7;;;;:::i;:::-;6582:13;;6466:144;6401:219;6382:238;;;6636:4;6629:11;;6209:438;;;;;;:::o;8616:540:9:-;8795:1;8775:10;:17;:21;8771:379;;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;;;;;;;;;;:::i;:::-;;;;;;;;3466:257:15;3606:7;3653:8;3663;3673:11;3686:13;3709:4;3642:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3632:84;;;;;;3625:91;;3466:257;;;;;:::o;805:153:18:-;867:7;950:1;945;941;:5;940:11;;;;:::i;:::-;935:1;931;:5;930:21;;;;:::i;:::-;923:28;;805:153;;;;:::o;7:75:22:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:118::-;1688:24;1706:5;1688:24;:::i;:::-;1683:3;1676:37;1601:118;;:::o;1725:222::-;1818:4;1856:2;1845:9;1841:18;1833:26;;1869:71;1937:1;1926:9;1922:17;1913:6;1869:71;:::i;:::-;1725:222;;;;:::o;1953:122::-;2026:24;2044:5;2026:24;:::i;:::-;2019:5;2016:35;2006:63;;2065:1;2062;2055:12;2006:63;1953:122;:::o;2081:139::-;2127:5;2165:6;2152:20;2143:29;;2181:33;2208:5;2181:33;:::i;:::-;2081:139;;;;:::o;2226:86::-;2261:7;2301:4;2294:5;2290:16;2279:27;;2226:86;;;:::o;2318:118::-;2389:22;2405:5;2389:22;:::i;:::-;2382:5;2379:33;2369:61;;2426:1;2423;2416:12;2369:61;2318:118;:::o;2442:135::-;2486:5;2524:6;2511:20;2502:29;;2540:31;2565:5;2540:31;:::i;:::-;2442:135;;;;:::o;2583:117::-;2692:1;2689;2682:12;2706:117;2815:1;2812;2805:12;2829:117;2938:1;2935;2928:12;2966:553;3024:8;3034:6;3084:3;3077:4;3069:6;3065:17;3061:27;3051:122;;3092:79;;:::i;:::-;3051:122;3205:6;3192:20;3182:30;;3235:18;3227:6;3224:30;3221:117;;;3257:79;;:::i;:::-;3221:117;3371:4;3363:6;3359:17;3347:29;;3425:3;3417:4;3409:6;3405:17;3395:8;3391:32;3388:41;3385:128;;;3432:79;;:::i;:::-;3385:128;2966:553;;;;;:::o;3525:117::-;3634:1;3631;3624:12;3648:102;3689:6;3740:2;3736:7;3731:2;3724:5;3720:14;3716:28;3706:38;;3648:102;;;:::o;3756:180::-;3804:77;3801:1;3794:88;3901:4;3898:1;3891:15;3925:4;3922:1;3915:15;3942:281;4025:27;4047:4;4025:27;:::i;:::-;4017:6;4013:40;4155:6;4143:10;4140:22;4119:18;4107:10;4104:34;4101:62;4098:88;;;4166:18;;:::i;:::-;4098:88;4206:10;4202:2;4195:22;3985:238;3942:281;;:::o;4229:129::-;4263:6;4290:20;;:::i;:::-;4280:30;;4319:33;4347:4;4339:6;4319:33;:::i;:::-;4229:129;;;:::o;4364:307::-;4425:4;4515:18;4507:6;4504:30;4501:56;;;4537:18;;:::i;:::-;4501:56;4575:29;4597:6;4575:29;:::i;:::-;4567:37;;4659:4;4653;4649:15;4641:23;;4364:307;;;:::o;4677:146::-;4774:6;4769:3;4764;4751:30;4815:1;4806:6;4801:3;4797:16;4790:27;4677:146;;;:::o;4829:423::-;4906:5;4931:65;4947:48;4988:6;4947:48;:::i;:::-;4931:65;:::i;:::-;4922:74;;5019:6;5012:5;5005:21;5057:4;5050:5;5046:16;5095:3;5086:6;5081:3;5077:16;5074:25;5071:112;;;5102:79;;:::i;:::-;5071:112;5192:54;5239:6;5234:3;5229;5192:54;:::i;:::-;4912:340;4829:423;;;;;:::o;5271:338::-;5326:5;5375:3;5368:4;5360:6;5356:17;5352:27;5342:122;;5383:79;;:::i;:::-;5342:122;5500:6;5487:20;5525:78;5599:3;5591:6;5584:4;5576:6;5572:17;5525:78;:::i;:::-;5516:87;;5332:277;5271:338;;;;:::o;5615:77::-;5652:7;5681:5;5670:16;;5615:77;;;:::o;5698:122::-;5771:24;5789:5;5771:24;:::i;:::-;5764:5;5761:35;5751:63;;5810:1;5807;5800:12;5751:63;5698:122;:::o;5826:139::-;5872:5;5910:6;5897:20;5888:29;;5926:33;5953:5;5926:33;:::i;:::-;5826:139;;;;:::o;5971:1573::-;6101:6;6109;6117;6125;6133;6141;6149;6157;6206:3;6194:9;6185:7;6181:23;6177:33;6174:120;;;6213:79;;:::i;:::-;6174:120;6333:1;6358:53;6403:7;6394:6;6383:9;6379:22;6358:53;:::i;:::-;6348:63;;6304:117;6460:2;6486:51;6529:7;6520:6;6509:9;6505:22;6486:51;:::i;:::-;6476:61;;6431:116;6614:2;6603:9;6599:18;6586:32;6645:18;6637:6;6634:30;6631:117;;;6667:79;;:::i;:::-;6631:117;6780:65;6837:7;6828:6;6817:9;6813:22;6780:65;:::i;:::-;6762:83;;;;6557:298;6922:2;6911:9;6907:18;6894:32;6953:18;6945:6;6942:30;6939:117;;;6975:79;;:::i;:::-;6939:117;7080:62;7134:7;7125:6;7114:9;7110:22;7080:62;:::i;:::-;7070:72;;6865:287;7191:3;7218:51;7261:7;7252:6;7241:9;7237:22;7218:51;:::i;:::-;7208:61;;7162:117;7318:3;7345:53;7390:7;7381:6;7370:9;7366:22;7345:53;:::i;:::-;7335:63;;7289:119;7447:3;7474:53;7519:7;7510:6;7499:9;7495:22;7474:53;:::i;:::-;7464:63;;7418:119;5971:1573;;;;;;;;;;;:::o;7550:329::-;7609:6;7658:2;7646:9;7637:7;7633:23;7629:32;7626:119;;;7664:79;;:::i;:::-;7626:119;7784:1;7809:53;7854:7;7845:6;7834:9;7830:22;7809:53;:::i;:::-;7799:63;;7755:117;7550:329;;;;:::o;7885:99::-;7937:6;7971:5;7965:12;7955:22;;7885:99;;;:::o;7990:169::-;8074:11;8108:6;8103:3;8096:19;8148:4;8143:3;8139:14;8124:29;;7990:169;;;;:::o;8165:246::-;8246:1;8256:113;8270:6;8267:1;8264:13;8256:113;;;8355:1;8350:3;8346:11;8340:18;8336:1;8331:3;8327:11;8320:39;8292:2;8289:1;8285:10;8280:15;;8256:113;;;8403:1;8394:6;8389:3;8385:16;8378:27;8227:184;8165:246;;;:::o;8417:377::-;8505:3;8533:39;8566:5;8533:39;:::i;:::-;8588:71;8652:6;8647:3;8588:71;:::i;:::-;8581:78;;8668:65;8726:6;8721:3;8714:4;8707:5;8703:16;8668:65;:::i;:::-;8758:29;8780:6;8758:29;:::i;:::-;8753:3;8749:39;8742:46;;8509:285;8417:377;;;;:::o;8800:313::-;8913:4;8951:2;8940:9;8936:18;8928:26;;9000:9;8994:4;8990:20;8986:1;8975:9;8971:17;8964:47;9028:78;9101:4;9092:6;9028:78;:::i;:::-;9020:86;;8800:313;;;;:::o;9119:126::-;9156:7;9196:42;9189:5;9185:54;9174:65;;9119:126;;;:::o;9251:96::-;9288:7;9317:24;9335:5;9317:24;:::i;:::-;9306:35;;9251:96;;;:::o;9353:122::-;9426:24;9444:5;9426:24;:::i;:::-;9419:5;9416:35;9406:63;;9465:1;9462;9455:12;9406:63;9353:122;:::o;9481:139::-;9527:5;9565:6;9552:20;9543:29;;9581:33;9608:5;9581:33;:::i;:::-;9481:139;;;;:::o;9626:943::-;9721:6;9729;9737;9745;9794:3;9782:9;9773:7;9769:23;9765:33;9762:120;;;9801:79;;:::i;:::-;9762:120;9921:1;9946:53;9991:7;9982:6;9971:9;9967:22;9946:53;:::i;:::-;9936:63;;9892:117;10048:2;10074:53;10119:7;10110:6;10099:9;10095:22;10074:53;:::i;:::-;10064:63;;10019:118;10176:2;10202:53;10247:7;10238:6;10227:9;10223:22;10202:53;:::i;:::-;10192:63;;10147:118;10332:2;10321:9;10317:18;10304:32;10363:18;10355:6;10352:30;10349:117;;;10385:79;;:::i;:::-;10349:117;10490:62;10544:7;10535:6;10524:9;10520:22;10490:62;:::i;:::-;10480:72;;10275:287;9626:943;;;;;;;:::o;10575:115::-;10660:23;10677:5;10660:23;:::i;:::-;10655:3;10648:36;10575:115;;:::o;10696:218::-;10787:4;10825:2;10814:9;10810:18;10802:26;;10838:69;10904:1;10893:9;10889:17;10880:6;10838:69;:::i;:::-;10696:218;;;;:::o;10920:311::-;10997:4;11087:18;11079:6;11076:30;11073:56;;;11109:18;;:::i;:::-;11073:56;11159:4;11151:6;11147:17;11139:25;;11219:4;11213;11209:15;11201:23;;10920:311;;;:::o;11254:710::-;11350:5;11375:81;11391:64;11448:6;11391:64;:::i;:::-;11375:81;:::i;:::-;11366:90;;11476:5;11505:6;11498:5;11491:21;11539:4;11532:5;11528:16;11521:23;;11592:4;11584:6;11580:17;11572:6;11568:30;11621:3;11613:6;11610:15;11607:122;;;11640:79;;:::i;:::-;11607:122;11755:6;11738:220;11772:6;11767:3;11764:15;11738:220;;;11847:3;11876:37;11909:3;11897:10;11876:37;:::i;:::-;11871:3;11864:50;11943:4;11938:3;11934:14;11927:21;;11814:144;11798:4;11793:3;11789:14;11782:21;;11738:220;;;11742:21;11356:608;;11254:710;;;;;:::o;11987:370::-;12058:5;12107:3;12100:4;12092:6;12088:17;12084:27;12074:122;;12115:79;;:::i;:::-;12074:122;12232:6;12219:20;12257:94;12347:3;12339:6;12332:4;12324:6;12320:17;12257:94;:::i;:::-;12248:103;;12064:293;11987:370;;;;:::o;12363:311::-;12440:4;12530:18;12522:6;12519:30;12516:56;;;12552:18;;:::i;:::-;12516:56;12602:4;12594:6;12590:17;12582:25;;12662:4;12656;12652:15;12644:23;;12363:311;;;:::o;12697:710::-;12793:5;12818:81;12834:64;12891:6;12834:64;:::i;:::-;12818:81;:::i;:::-;12809:90;;12919:5;12948:6;12941:5;12934:21;12982:4;12975:5;12971:16;12964:23;;13035:4;13027:6;13023:17;13015:6;13011:30;13064:3;13056:6;13053:15;13050:122;;;13083:79;;:::i;:::-;13050:122;13198:6;13181:220;13215:6;13210:3;13207:15;13181:220;;;13290:3;13319:37;13352:3;13340:10;13319:37;:::i;:::-;13314:3;13307:50;13386:4;13381:3;13377:14;13370:21;;13257:144;13241:4;13236:3;13232:14;13225:21;;13181:220;;;13185:21;12799:608;;12697:710;;;;;:::o;13430:370::-;13501:5;13550:3;13543:4;13535:6;13531:17;13527:27;13517:122;;13558:79;;:::i;:::-;13517:122;13675:6;13662:20;13700:94;13790:3;13782:6;13775:4;13767:6;13763:17;13700:94;:::i;:::-;13691:103;;13507:293;13430:370;;;;:::o;13806:320::-;13892:4;13982:18;13974:6;13971:30;13968:56;;;14004:18;;:::i;:::-;13968:56;14054:4;14046:6;14042:17;14034:25;;14114:4;14108;14104:15;14096:23;;13806:320;;;:::o;14147:942::-;14252:5;14277:90;14293:73;14359:6;14293:73;:::i;:::-;14277:90;:::i;:::-;14268:99;;14387:5;14416:6;14409:5;14402:21;14450:4;14443:5;14439:16;14432:23;;14503:4;14495:6;14491:17;14483:6;14479:30;14532:3;14524:6;14521:15;14518:122;;;14551:79;;:::i;:::-;14518:122;14666:6;14649:434;14683:6;14678:3;14675:15;14649:434;;;14772:3;14759:17;14808:18;14795:11;14792:35;14789:122;;;14830:79;;:::i;:::-;14789:122;14954:11;14946:6;14942:24;14992:46;15034:3;15022:10;14992:46;:::i;:::-;14987:3;14980:59;15068:4;15063:3;15059:14;15052:21;;14725:358;;14709:4;14704:3;14700:14;14693:21;;14649:434;;;14653:21;14258:831;;14147:942;;;;;:::o;15110:388::-;15190:5;15239:3;15232:4;15224:6;15220:17;15216:27;15206:122;;15247:79;;:::i;:::-;15206:122;15364:6;15351:20;15389:103;15488:3;15480:6;15473:4;15465:6;15461:17;15389:103;:::i;:::-;15380:112;;15196:302;15110:388;;;;:::o;15504:1413::-;15674:6;15682;15690;15698;15747:3;15735:9;15726:7;15722:23;15718:33;15715:120;;;15754:79;;:::i;:::-;15715:120;15902:1;15891:9;15887:17;15874:31;15932:18;15924:6;15921:30;15918:117;;;15954:79;;:::i;:::-;15918:117;16059:78;16129:7;16120:6;16109:9;16105:22;16059:78;:::i;:::-;16049:88;;15845:302;16214:2;16203:9;16199:18;16186:32;16245:18;16237:6;16234:30;16231:117;;;16267:79;;:::i;:::-;16231:117;16372:78;16442:7;16433:6;16422:9;16418:22;16372:78;:::i;:::-;16362:88;;16157:303;16527:2;16516:9;16512:18;16499:32;16558:18;16550:6;16547:30;16544:117;;;16580:79;;:::i;:::-;16544:117;16685:87;16764:7;16755:6;16744:9;16740:22;16685:87;:::i;:::-;16675:97;;16470:312;16821:2;16847:53;16892:7;16883:6;16872:9;16868:22;16847:53;:::i;:::-;16837:63;;16792:118;15504:1413;;;;;;;:::o;16923:118::-;17010:24;17028:5;17010:24;:::i;:::-;17005:3;16998:37;16923:118;;:::o;17047:222::-;17140:4;17178:2;17167:9;17163:18;17155:26;;17191:71;17259:1;17248:9;17244:17;17235:6;17191:71;:::i;:::-;17047:222;;;;:::o;17275:903::-;17366:6;17374;17382;17390;17398;17447:3;17435:9;17426:7;17422:23;17418:33;17415:120;;;17454:79;;:::i;:::-;17415:120;17574:1;17599:53;17644:7;17635:6;17624:9;17620:22;17599:53;:::i;:::-;17589:63;;17545:117;17701:2;17727:51;17770:7;17761:6;17750:9;17746:22;17727:51;:::i;:::-;17717:61;;17672:116;17827:2;17853:51;17896:7;17887:6;17876:9;17872:22;17853:51;:::i;:::-;17843:61;;17798:116;17953:2;17979:53;18024:7;18015:6;18004:9;18000:22;17979:53;:::i;:::-;17969:63;;17924:118;18081:3;18108:53;18153:7;18144:6;18133:9;18129:22;18108:53;:::i;:::-;18098:63;;18052:119;17275:903;;;;;;;;:::o;18184:180::-;18232:77;18229:1;18222:88;18329:4;18326:1;18319:15;18353:4;18350:1;18343:15;18370:123;18461:1;18454:5;18451:12;18441:46;;18467:18;;:::i;:::-;18441:46;18370:123;:::o;18499:147::-;18554:7;18583:5;18572:16;;18589:51;18634:5;18589:51;:::i;:::-;18499:147;;;:::o;18652:::-;18718:9;18751:42;18787:5;18751:42;:::i;:::-;18738:55;;18652:147;;;:::o;18805:163::-;18908:53;18955:5;18908:53;:::i;:::-;18903:3;18896:66;18805:163;;:::o;18974:254::-;19083:4;19121:2;19110:9;19106:18;19098:26;;19134:87;19218:1;19207:9;19203:17;19194:6;19134:87;:::i;:::-;18974:254;;;;:::o;19234:474::-;19302:6;19310;19359:2;19347:9;19338:7;19334:23;19330:32;19327:119;;;19365:79;;:::i;:::-;19327:119;19485:1;19510:53;19555:7;19546:6;19535:9;19531:22;19510:53;:::i;:::-;19500:63;;19456:117;19612:2;19638:53;19683:7;19674:6;19663:9;19659:22;19638:53;:::i;:::-;19628:63;;19583:118;19234:474;;;;;:::o;19714:442::-;19863:4;19901:2;19890:9;19886:18;19878:26;;19914:71;19982:1;19971:9;19967:17;19958:6;19914:71;:::i;:::-;19995:72;20063:2;20052:9;20048:18;20039:6;19995:72;:::i;:::-;20077;20145:2;20134:9;20130:18;20121:6;20077:72;:::i;:::-;19714:442;;;;;;:::o;20162:470::-;20228:6;20236;20285:2;20273:9;20264:7;20260:23;20256:32;20253:119;;;20291:79;;:::i;:::-;20253:119;20411:1;20436:53;20481:7;20472:6;20461:9;20457:22;20436:53;:::i;:::-;20426:63;;20382:117;20538:2;20564:51;20607:7;20598:6;20587:9;20583:22;20564:51;:::i;:::-;20554:61;;20509:116;20162:470;;;;;:::o;20638:1139::-;20743:6;20751;20759;20767;20775;20824:3;20812:9;20803:7;20799:23;20795:33;20792:120;;;20831:79;;:::i;:::-;20792:120;20951:1;20976:53;21021:7;21012:6;21001:9;20997:22;20976:53;:::i;:::-;20966:63;;20922:117;21078:2;21104:51;21147:7;21138:6;21127:9;21123:22;21104:51;:::i;:::-;21094:61;;21049:116;21232:2;21221:9;21217:18;21204:32;21263:18;21255:6;21252:30;21249:117;;;21285:79;;:::i;:::-;21249:117;21398:65;21455:7;21446:6;21435:9;21431:22;21398:65;:::i;:::-;21380:83;;;;21175:298;21540:2;21529:9;21525:18;21512:32;21571:18;21563:6;21560:30;21557:117;;;21593:79;;:::i;:::-;21557:117;21698:62;21752:7;21743:6;21732:9;21728:22;21698:62;:::i;:::-;21688:72;;21483:287;20638:1139;;;;;;;;:::o;21783:815::-;21870:6;21878;21886;21894;21943:2;21931:9;21922:7;21918:23;21914:32;21911:119;;;21949:79;;:::i;:::-;21911:119;22069:1;22094:53;22139:7;22130:6;22119:9;22115:22;22094:53;:::i;:::-;22084:63;;22040:117;22196:2;22222:51;22265:7;22256:6;22245:9;22241:22;22222:51;:::i;:::-;22212:61;;22167:116;22350:2;22339:9;22335:18;22322:32;22381:18;22373:6;22370:30;22367:117;;;22403:79;;:::i;:::-;22367:117;22516:65;22573:7;22564:6;22553:9;22549:22;22516:65;:::i;:::-;22498:83;;;;22293:298;21783:815;;;;;;;:::o;22604:308::-;22666:4;22756:18;22748:6;22745:30;22742:56;;;22778:18;;:::i;:::-;22742:56;22816:29;22838:6;22816:29;:::i;:::-;22808:37;;22900:4;22894;22890:15;22882:23;;22604:308;;;:::o;22918:425::-;22996:5;23021:66;23037:49;23079:6;23037:49;:::i;:::-;23021:66;:::i;:::-;23012:75;;23110:6;23103:5;23096:21;23148:4;23141:5;23137:16;23186:3;23177:6;23172:3;23168:16;23165:25;23162:112;;;23193:79;;:::i;:::-;23162:112;23283:54;23330:6;23325:3;23320;23283:54;:::i;:::-;23002:341;22918:425;;;;;:::o;23363:340::-;23419:5;23468:3;23461:4;23453:6;23449:17;23445:27;23435:122;;23476:79;;:::i;:::-;23435:122;23593:6;23580:20;23618:79;23693:3;23685:6;23678:4;23670:6;23666:17;23618:79;:::i;:::-;23609:88;;23425:278;23363:340;;;;:::o;23709:1593::-;23889:6;23897;23905;23913;23962:3;23950:9;23941:7;23937:23;23933:33;23930:120;;;23969:79;;:::i;:::-;23930:120;24117:1;24106:9;24102:17;24089:31;24147:18;24139:6;24136:30;24133:117;;;24169:79;;:::i;:::-;24133:117;24274:78;24344:7;24335:6;24324:9;24320:22;24274:78;:::i;:::-;24264:88;;24060:302;24429:2;24418:9;24414:18;24401:32;24460:18;24452:6;24449:30;24446:117;;;24482:79;;:::i;:::-;24446:117;24587:78;24657:7;24648:6;24637:9;24633:22;24587:78;:::i;:::-;24577:88;;24372:303;24742:2;24731:9;24727:18;24714:32;24773:18;24765:6;24762:30;24759:117;;;24795:79;;:::i;:::-;24759:117;24900:87;24979:7;24970:6;24959:9;24955:22;24900:87;:::i;:::-;24890:97;;24685:312;25064:2;25053:9;25049:18;25036:32;25095:18;25087:6;25084:30;25081:117;;;25117:79;;:::i;:::-;25081:117;25222:63;25277:7;25268:6;25257:9;25253:22;25222:63;:::i;:::-;25212:73;;25007:288;23709:1593;;;;;;;:::o;25308:797::-;25394:6;25402;25410;25459:2;25447:9;25438:7;25434:23;25430:32;25427:119;;;25465:79;;:::i;:::-;25427:119;25585:1;25610:53;25655:7;25646:6;25635:9;25631:22;25610:53;:::i;:::-;25600:63;;25556:117;25712:2;25738:53;25783:7;25774:6;25763:9;25759:22;25738:53;:::i;:::-;25728:63;;25683:118;25868:2;25857:9;25853:18;25840:32;25899:18;25891:6;25888:30;25885:117;;;25921:79;;:::i;:::-;25885:117;26026:62;26080:7;26071:6;26060:9;26056:22;26026:62;:::i;:::-;26016:72;;25811:287;25308:797;;;;;:::o;26111:1509::-;26265:6;26273;26281;26289;26297;26346:3;26334:9;26325:7;26321:23;26317:33;26314:120;;;26353:79;;:::i;:::-;26314:120;26473:1;26498:53;26543:7;26534:6;26523:9;26519:22;26498:53;:::i;:::-;26488:63;;26444:117;26600:2;26626:53;26671:7;26662:6;26651:9;26647:22;26626:53;:::i;:::-;26616:63;;26571:118;26756:2;26745:9;26741:18;26728:32;26787:18;26779:6;26776:30;26773:117;;;26809:79;;:::i;:::-;26773:117;26914:78;26984:7;26975:6;26964:9;26960:22;26914:78;:::i;:::-;26904:88;;26699:303;27069:2;27058:9;27054:18;27041:32;27100:18;27092:6;27089:30;27086:117;;;27122:79;;:::i;:::-;27086:117;27227:78;27297:7;27288:6;27277:9;27273:22;27227:78;:::i;:::-;27217:88;;27012:303;27382:3;27371:9;27367:19;27354:33;27414:18;27406:6;27403:30;27400:117;;;27436:79;;:::i;:::-;27400:117;27541:62;27595:7;27586:6;27575:9;27571:22;27541:62;:::i;:::-;27531:72;;27325:288;26111:1509;;;;;;;;:::o;27639:552::-;27696:8;27706:6;27756:3;27749:4;27741:6;27737:17;27733:27;27723:122;;27764:79;;:::i;:::-;27723:122;27877:6;27864:20;27854:30;;27907:18;27899:6;27896:30;27893:117;;;27929:79;;:::i;:::-;27893:117;28043:4;28035:6;28031:17;28019:29;;28097:3;28089:4;28081:6;28077:17;28067:8;28063:32;28060:41;28057:128;;;28104:79;;:::i;:::-;28057:128;27639:552;;;;;:::o;28197:817::-;28285:6;28293;28301;28309;28358:2;28346:9;28337:7;28333:23;28329:32;28326:119;;;28364:79;;:::i;:::-;28326:119;28484:1;28509:53;28554:7;28545:6;28534:9;28530:22;28509:53;:::i;:::-;28499:63;;28455:117;28611:2;28637:53;28682:7;28673:6;28662:9;28658:22;28637:53;:::i;:::-;28627:63;;28582:118;28767:2;28756:9;28752:18;28739:32;28798:18;28790:6;28787:30;28784:117;;;28820:79;;:::i;:::-;28784:117;28933:64;28989:7;28980:6;28969:9;28965:22;28933:64;:::i;:::-;28915:82;;;;28710:297;28197:817;;;;;;;:::o;29020:474::-;29088:6;29096;29145:2;29133:9;29124:7;29120:23;29116:32;29113:119;;;29151:79;;:::i;:::-;29113:119;29271:1;29296:53;29341:7;29332:6;29321:9;29317:22;29296:53;:::i;:::-;29286:63;;29242:117;29398:2;29424:53;29469:7;29460:6;29449:9;29445:22;29424:53;:::i;:::-;29414:63;;29369:118;29020:474;;;;;:::o;29500:1089::-;29604:6;29612;29620;29628;29636;29685:3;29673:9;29664:7;29660:23;29656:33;29653:120;;;29692:79;;:::i;:::-;29653:120;29812:1;29837:53;29882:7;29873:6;29862:9;29858:22;29837:53;:::i;:::-;29827:63;;29783:117;29939:2;29965:53;30010:7;30001:6;29990:9;29986:22;29965:53;:::i;:::-;29955:63;;29910:118;30067:2;30093:53;30138:7;30129:6;30118:9;30114:22;30093:53;:::i;:::-;30083:63;;30038:118;30195:2;30221:53;30266:7;30257:6;30246:9;30242:22;30221:53;:::i;:::-;30211:63;;30166:118;30351:3;30340:9;30336:19;30323:33;30383:18;30375:6;30372:30;30369:117;;;30405:79;;:::i;:::-;30369:117;30510:62;30564:7;30555:6;30544:9;30540:22;30510:62;:::i;:::-;30500:72;;30294:288;29500:1089;;;;;;;;:::o;30595:60::-;30623:3;30644:5;30637:12;;30595:60;;;:::o;30661:142::-;30711:9;30744:53;30762:34;30771:24;30789:5;30771:24;:::i;:::-;30762:34;:::i;:::-;30744:53;:::i;:::-;30731:66;;30661:142;;;:::o;30809:126::-;30859:9;30892:37;30923:5;30892:37;:::i;:::-;30879:50;;30809:126;;;:::o;30941:141::-;31006:9;31039:37;31070:5;31039:37;:::i;:::-;31026:50;;30941:141;;;:::o;31088:161::-;31190:52;31236:5;31190:52;:::i;:::-;31185:3;31178:65;31088:161;;:::o;31255:252::-;31363:4;31401:2;31390:9;31386:18;31378:26;;31414:86;31497:1;31486:9;31482:17;31473:6;31414:86;:::i;:::-;31255:252;;;;:::o;31513:147::-;31614:11;31651:3;31636:18;;31513:147;;;;:::o;31688:327::-;31802:3;31823:88;31904:6;31899:3;31823:88;:::i;:::-;31816:95;;31921:56;31970:6;31965:3;31958:5;31921:56;:::i;:::-;32002:6;31997:3;31993:16;31986:23;;31688:327;;;;;:::o;32021:291::-;32161:3;32183:103;32282:3;32273:6;32265;32183:103;:::i;:::-;32176:110;;32303:3;32296:10;;32021:291;;;;;:::o;32318:112::-;32401:22;32417:5;32401:22;:::i;:::-;32396:3;32389:35;32318:112;;:::o;32436:656::-;32637:4;32675:3;32664:9;32660:19;32652:27;;32689:71;32757:1;32746:9;32742:17;32733:6;32689:71;:::i;:::-;32770:72;32838:2;32827:9;32823:18;32814:6;32770:72;:::i;:::-;32852:68;32916:2;32905:9;32901:18;32892:6;32852:68;:::i;:::-;32930:72;32998:2;32987:9;32983:18;32974:6;32930:72;:::i;:::-;33012:73;33080:3;33069:9;33065:19;33056:6;33012:73;:::i;:::-;32436:656;;;;;;;;:::o;33098:174::-;33238:26;33234:1;33226:6;33222:14;33215:50;33098:174;:::o;33278:366::-;33420:3;33441:67;33505:2;33500:3;33441:67;:::i;:::-;33434:74;;33517:93;33606:3;33517:93;:::i;:::-;33635:2;33630:3;33626:12;33619:19;;33278:366;;;:::o;33650:419::-;33816:4;33854:2;33843:9;33839:18;33831:26;;33903:9;33897:4;33893:20;33889:1;33878:9;33874:17;33867:47;33931:131;34057:4;33931:131;:::i;:::-;33923:139;;33650:419;;;:::o;34075:180::-;34123:77;34120:1;34113:88;34220:4;34217:1;34210:15;34244:4;34241:1;34234:15;34261:320;34305:6;34342:1;34336:4;34332:12;34322:22;;34389:1;34383:4;34379:12;34410:18;34400:81;;34466:4;34458:6;34454:17;34444:27;;34400:81;34528:2;34520:6;34517:14;34497:18;34494:38;34491:84;;34547:18;;:::i;:::-;34491:84;34312:269;34261:320;;;:::o;34587:220::-;34727:34;34723:1;34715:6;34711:14;34704:58;34796:3;34791:2;34783:6;34779:15;34772:28;34587:220;:::o;34813:366::-;34955:3;34976:67;35040:2;35035:3;34976:67;:::i;:::-;34969:74;;35052:93;35141:3;35052:93;:::i;:::-;35170:2;35165:3;35161:12;35154:19;;34813:366;;;:::o;35185:419::-;35351:4;35389:2;35378:9;35374:18;35366:26;;35438:9;35432:4;35428:20;35424:1;35413:9;35409:17;35402:47;35466:131;35592:4;35466:131;:::i;:::-;35458:139;;35185:419;;;:::o;35610:434::-;35755:4;35793:2;35782:9;35778:18;35770:26;;35806:71;35874:1;35863:9;35859:17;35850:6;35806:71;:::i;:::-;35887:72;35955:2;35944:9;35940:18;35931:6;35887:72;:::i;:::-;35969:68;36033:2;36022:9;36018:18;36009:6;35969:68;:::i;:::-;35610:434;;;;;;:::o;36050:179::-;36190:31;36186:1;36178:6;36174:14;36167:55;36050:179;:::o;36235:366::-;36377:3;36398:67;36462:2;36457:3;36398:67;:::i;:::-;36391:74;;36474:93;36563:3;36474:93;:::i;:::-;36592:2;36587:3;36583:12;36576:19;;36235:366;;;:::o;36607:419::-;36773:4;36811:2;36800:9;36796:18;36788:26;;36860:9;36854:4;36850:20;36846:1;36835:9;36831:17;36824:47;36888:131;37014:4;36888:131;:::i;:::-;36880:139;;36607:419;;;:::o;37032:180::-;37080:77;37077:1;37070:88;37177:4;37174:1;37167:15;37201:4;37198:1;37191:15;37218:194;37258:4;37278:20;37296:1;37278:20;:::i;:::-;37273:25;;37312:20;37330:1;37312:20;:::i;:::-;37307:25;;37356:1;37353;37349:9;37341:17;;37380:1;37374:4;37371:11;37368:37;;;37385:18;;:::i;:::-;37368:37;37218:194;;;;:::o;37418:180::-;37466:77;37463:1;37456:88;37563:4;37560:1;37553:15;37587:4;37584:1;37577:15;37604:236;37744:34;37740:1;37732:6;37728:14;37721:58;37813:19;37808:2;37800:6;37796:15;37789:44;37604:236;:::o;37846:366::-;37988:3;38009:67;38073:2;38068:3;38009:67;:::i;:::-;38002:74;;38085:93;38174:3;38085:93;:::i;:::-;38203:2;38198:3;38194:12;38187:19;;37846:366;;;:::o;38218:419::-;38384:4;38422:2;38411:9;38407:18;38399:26;;38471:9;38465:4;38461:20;38457:1;38446:9;38442:17;38435:47;38499:131;38625:4;38499:131;:::i;:::-;38491:139;;38218:419;;;:::o;38643:220::-;38783:34;38779:1;38771:6;38767:14;38760:58;38852:3;38847:2;38839:6;38835:15;38828:28;38643:220;:::o;38869:366::-;39011:3;39032:67;39096:2;39091:3;39032:67;:::i;:::-;39025:74;;39108:93;39197:3;39108:93;:::i;:::-;39226:2;39221:3;39217:12;39210:19;;38869:366;;;:::o;39241:419::-;39407:4;39445:2;39434:9;39430:18;39422:26;;39494:9;39488:4;39484:20;39480:1;39469:9;39465:17;39458:47;39522:131;39648:4;39522:131;:::i;:::-;39514:139;;39241:419;;;:::o;39666:174::-;39806:26;39802:1;39794:6;39790:14;39783:50;39666:174;:::o;39846:366::-;39988:3;40009:67;40073:2;40068:3;40009:67;:::i;:::-;40002:74;;40085:93;40174:3;40085:93;:::i;:::-;40203:2;40198:3;40194:12;40187:19;;39846:366;;;:::o;40218:419::-;40384:4;40422:2;40411:9;40407:18;40399:26;;40471:9;40465:4;40461:20;40457:1;40446:9;40442:17;40435:47;40499:131;40625:4;40499:131;:::i;:::-;40491:139;;40218:419;;;:::o;40643:220::-;40783:34;40779:1;40771:6;40767:14;40760:58;40852:3;40847:2;40839:6;40835:15;40828:28;40643:220;:::o;40869:366::-;41011:3;41032:67;41096:2;41091:3;41032:67;:::i;:::-;41025:74;;41108:93;41197:3;41108:93;:::i;:::-;41226:2;41221:3;41217:12;41210:19;;40869:366;;;:::o;41241:419::-;41407:4;41445:2;41434:9;41430:18;41422:26;;41494:9;41488:4;41484:20;41480:1;41469:9;41465:17;41458:47;41522:131;41648:4;41522:131;:::i;:::-;41514:139;;41241:419;;;:::o;41666:101::-;41702:7;41742:18;41735:5;41731:30;41720:41;;41666:101;;;:::o;41773:205::-;41812:3;41831:19;41848:1;41831:19;:::i;:::-;41826:24;;41864:19;41881:1;41864:19;:::i;:::-;41859:24;;41906:1;41903;41899:9;41892:16;;41929:18;41924:3;41921:27;41918:53;;;41951:18;;:::i;:::-;41918:53;41773:205;;;;:::o;41984:118::-;42071:24;42089:5;42071:24;:::i;:::-;42066:3;42059:37;41984:118;;:::o;42108:114::-;42175:6;42209:5;42203:12;42193:22;;42108:114;;;:::o;42228:184::-;42327:11;42361:6;42356:3;42349:19;42401:4;42396:3;42392:14;42377:29;;42228:184;;;;:::o;42418:132::-;42485:4;42508:3;42500:11;;42538:4;42533:3;42529:14;42521:22;;42418:132;;;:::o;42556:108::-;42633:24;42651:5;42633:24;:::i;:::-;42628:3;42621:37;42556:108;;:::o;42670:179::-;42739:10;42760:46;42802:3;42794:6;42760:46;:::i;:::-;42838:4;42833:3;42829:14;42815:28;;42670:179;;;;:::o;42855:113::-;42925:4;42957;42952:3;42948:14;42940:22;;42855:113;;;:::o;43004:732::-;43123:3;43152:54;43200:5;43152:54;:::i;:::-;43222:86;43301:6;43296:3;43222:86;:::i;:::-;43215:93;;43332:56;43382:5;43332:56;:::i;:::-;43411:7;43442:1;43427:284;43452:6;43449:1;43446:13;43427:284;;;43528:6;43522:13;43555:63;43614:3;43599:13;43555:63;:::i;:::-;43548:70;;43641:60;43694:6;43641:60;:::i;:::-;43631:70;;43487:224;43474:1;43471;43467:9;43462:14;;43427:284;;;43431:14;43727:3;43720:10;;43128:608;;;43004:732;;;;:::o;43742:114::-;43809:6;43843:5;43837:12;43827:22;;43742:114;;;:::o;43862:184::-;43961:11;43995:6;43990:3;43983:19;44035:4;44030:3;44026:14;44011:29;;43862:184;;;;:::o;44052:132::-;44119:4;44142:3;44134:11;;44172:4;44167:3;44163:14;44155:22;;44052:132;;;:::o;44190:108::-;44267:24;44285:5;44267:24;:::i;:::-;44262:3;44255:37;44190:108;;:::o;44304:179::-;44373:10;44394:46;44436:3;44428:6;44394:46;:::i;:::-;44472:4;44467:3;44463:14;44449:28;;44304:179;;;;:::o;44489:113::-;44559:4;44591;44586:3;44582:14;44574:22;;44489:113;;;:::o;44638:732::-;44757:3;44786:54;44834:5;44786:54;:::i;:::-;44856:86;44935:6;44930:3;44856:86;:::i;:::-;44849:93;;44966:56;45016:5;44966:56;:::i;:::-;45045:7;45076:1;45061:284;45086:6;45083:1;45080:13;45061:284;;;45162:6;45156:13;45189:63;45248:3;45233:13;45189:63;:::i;:::-;45182:70;;45275:60;45328:6;45275:60;:::i;:::-;45265:70;;45121:224;45108:1;45105;45101:9;45096:14;;45061:284;;;45065:14;45361:3;45354:10;;44762:608;;;44638:732;;;;:::o;45376:124::-;45453:6;45487:5;45481:12;45471:22;;45376:124;;;:::o;45506:194::-;45615:11;45649:6;45644:3;45637:19;45689:4;45684:3;45680:14;45665:29;;45506:194;;;;:::o;45706:142::-;45783:4;45806:3;45798:11;;45836:4;45831:3;45827:14;45819:22;;45706:142;;;:::o;45854:159::-;45928:11;45962:6;45957:3;45950:19;46002:4;45997:3;45993:14;45978:29;;45854:159;;;;:::o;46019:357::-;46097:3;46125:39;46158:5;46125:39;:::i;:::-;46180:61;46234:6;46229:3;46180:61;:::i;:::-;46173:68;;46250:65;46308:6;46303:3;46296:4;46289:5;46285:16;46250:65;:::i;:::-;46340:29;46362:6;46340:29;:::i;:::-;46335:3;46331:39;46324:46;;46101:275;46019:357;;;;:::o;46382:196::-;46471:10;46506:66;46568:3;46560:6;46506:66;:::i;:::-;46492:80;;46382:196;;;;:::o;46584:123::-;46664:4;46696;46691:3;46687:14;46679:22;;46584:123;;;:::o;46741:991::-;46880:3;46909:64;46967:5;46909:64;:::i;:::-;46989:96;47078:6;47073:3;46989:96;:::i;:::-;46982:103;;47111:3;47156:4;47148:6;47144:17;47139:3;47135:27;47186:66;47246:5;47186:66;:::i;:::-;47275:7;47306:1;47291:396;47316:6;47313:1;47310:13;47291:396;;;47387:9;47381:4;47377:20;47372:3;47365:33;47438:6;47432:13;47466:84;47545:4;47530:13;47466:84;:::i;:::-;47458:92;;47573:70;47636:6;47573:70;:::i;:::-;47563:80;;47672:4;47667:3;47663:14;47656:21;;47351:336;47338:1;47335;47331:9;47326:14;;47291:396;;;47295:14;47703:4;47696:11;;47723:3;47716:10;;46885:847;;;;;46741:991;;;;:::o;47738:123::-;47814:6;47848:5;47842:12;47832:22;;47738:123;;;:::o;47867:193::-;47975:11;48009:6;48004:3;47997:19;48049:4;48044:3;48040:14;48025:29;;47867:193;;;;:::o;48066:141::-;48142:4;48165:3;48157:11;;48195:4;48190:3;48186:14;48178:22;;48066:141;;;:::o;48213:98::-;48264:6;48298:5;48292:12;48282:22;;48213:98;;;:::o;48317:158::-;48390:11;48424:6;48419:3;48412:19;48464:4;48459:3;48455:14;48440:29;;48317:158;;;;:::o;48481:353::-;48557:3;48585:38;48617:5;48585:38;:::i;:::-;48639:60;48692:6;48687:3;48639:60;:::i;:::-;48632:67;;48708:65;48766:6;48761:3;48754:4;48747:5;48743:16;48708:65;:::i;:::-;48798:29;48820:6;48798:29;:::i;:::-;48793:3;48789:39;48782:46;;48561:273;48481:353;;;;:::o;48840:192::-;48927:10;48962:64;49022:3;49014:6;48962:64;:::i;:::-;48948:78;;48840:192;;;;:::o;49038:122::-;49117:4;49149;49144:3;49140:14;49132:22;;49038:122;;;:::o;49192:983::-;49329:3;49358:63;49415:5;49358:63;:::i;:::-;49437:95;49525:6;49520:3;49437:95;:::i;:::-;49430:102;;49558:3;49603:4;49595:6;49591:17;49586:3;49582:27;49633:65;49692:5;49633:65;:::i;:::-;49721:7;49752:1;49737:393;49762:6;49759:1;49756:13;49737:393;;;49833:9;49827:4;49823:20;49818:3;49811:33;49884:6;49878:13;49912:82;49989:4;49974:13;49912:82;:::i;:::-;49904:90;;50017:69;50079:6;50017:69;:::i;:::-;50007:79;;50115:4;50110:3;50106:14;50099:21;;49797:333;49784:1;49781;49777:9;49772:14;;49737:393;;;49741:14;50146:4;50139:11;;50166:3;50159:10;;49334:841;;;;;49192:983;;;;:::o;50181:140::-;50230:9;50263:52;50281:33;50290:23;50307:5;50290:23;:::i;:::-;50281:33;:::i;:::-;50263:52;:::i;:::-;50250:65;;50181:140;;;:::o;50327:129::-;50413:36;50443:5;50413:36;:::i;:::-;50408:3;50401:49;50327:129;;:::o;50462:1875::-;51035:4;51073:3;51062:9;51058:19;51050:27;;51087:71;51155:1;51144:9;51140:17;51131:6;51087:71;:::i;:::-;51168:72;51236:2;51225:9;51221:18;51212:6;51168:72;:::i;:::-;51287:9;51281:4;51277:20;51272:2;51261:9;51257:18;51250:48;51315:108;51418:4;51409:6;51315:108;:::i;:::-;51307:116;;51470:9;51464:4;51460:20;51455:2;51444:9;51440:18;51433:48;51498:108;51601:4;51592:6;51498:108;:::i;:::-;51490:116;;51654:9;51648:4;51644:20;51638:3;51627:9;51623:19;51616:49;51682:128;51805:4;51796:6;51682:128;:::i;:::-;51674:136;;51858:9;51852:4;51848:20;51842:3;51831:9;51827:19;51820:49;51886:126;52007:4;51998:6;51886:126;:::i;:::-;51878:134;;52022:72;52089:3;52078:9;52074:19;52065:6;52022:72;:::i;:::-;52104;52171:3;52160:9;52156:19;52147:6;52104:72;:::i;:::-;52224:9;52218:4;52214:20;52208:3;52197:9;52193:19;52186:49;52252:78;52325:4;52316:6;52252:78;:::i;:::-;52244:86;;50462:1875;;;;;;;;;;;;:::o;52343:1042::-;52688:4;52726:3;52715:9;52711:19;52703:27;;52776:9;52770:4;52766:20;52762:1;52751:9;52747:17;52740:47;52804:108;52907:4;52898:6;52804:108;:::i;:::-;52796:116;;52959:9;52953:4;52949:20;52944:2;52933:9;52929:18;52922:48;52987:108;53090:4;53081:6;52987:108;:::i;:::-;52979:116;;53142:9;53136:4;53132:20;53127:2;53116:9;53112:18;53105:48;53170:126;53291:4;53282:6;53170:126;:::i;:::-;53162:134;;53306:72;53374:2;53363:9;53359:18;53350:6;53306:72;:::i;:::-;52343:1042;;;;;;;:::o;53391:226::-;53531:34;53527:1;53519:6;53515:14;53508:58;53600:9;53595:2;53587:6;53583:15;53576:34;53391:226;:::o;53623:366::-;53765:3;53786:67;53850:2;53845:3;53786:67;:::i;:::-;53779:74;;53862:93;53951:3;53862:93;:::i;:::-;53980:2;53975:3;53971:12;53964:19;;53623:366;;;:::o;53995:419::-;54161:4;54199:2;54188:9;54184:18;54176:26;;54248:9;54242:4;54238:20;54234:1;54223:9;54219:17;54212:47;54276:131;54402:4;54276:131;:::i;:::-;54268:139;;53995:419;;;:::o;54420:225::-;54560:34;54556:1;54548:6;54544:14;54537:58;54629:8;54624:2;54616:6;54612:15;54605:33;54420:225;:::o;54651:366::-;54793:3;54814:67;54878:2;54873:3;54814:67;:::i;:::-;54807:74;;54890:93;54979:3;54890:93;:::i;:::-;55008:2;55003:3;54999:12;54992:19;;54651:366;;;:::o;55023:419::-;55189:4;55227:2;55216:9;55212:18;55204:26;;55276:9;55270:4;55266:20;55262:1;55251:9;55247:17;55240:47;55304:131;55430:4;55304:131;:::i;:::-;55296:139;;55023:419;;;:::o;55448:222::-;55588:34;55584:1;55576:6;55572:14;55565:58;55657:5;55652:2;55644:6;55640:15;55633:30;55448:222;:::o;55676:366::-;55818:3;55839:67;55903:2;55898:3;55839:67;:::i;:::-;55832:74;;55915:93;56004:3;55915:93;:::i;:::-;56033:2;56028:3;56024:12;56017:19;;55676:366;;;:::o;56048:419::-;56214:4;56252:2;56241:9;56237:18;56229:26;;56301:9;56295:4;56291:20;56287:1;56276:9;56272:17;56265:47;56329:131;56455:4;56329:131;:::i;:::-;56321:139;;56048:419;;;:::o;56473:636::-;56666:4;56704:3;56693:9;56689:19;56681:27;;56718:71;56786:1;56775:9;56771:17;56762:6;56718:71;:::i;:::-;56799:68;56863:2;56852:9;56848:18;56839:6;56799:68;:::i;:::-;56877:72;56945:2;56934:9;56930:18;56921:6;56877:72;:::i;:::-;56996:9;56990:4;56986:20;56981:2;56970:9;56966:18;56959:48;57024:78;57097:4;57088:6;57024:78;:::i;:::-;57016:86;;56473:636;;;;;;;:::o;57115:168::-;57198:11;57232:6;57227:3;57220:19;57272:4;57267:3;57263:14;57248:29;;57115:168;;;;:::o;57289:373::-;57375:3;57403:38;57435:5;57403:38;:::i;:::-;57457:70;57520:6;57515:3;57457:70;:::i;:::-;57450:77;;57536:65;57594:6;57589:3;57582:4;57575:5;57571:16;57536:65;:::i;:::-;57626:29;57648:6;57626:29;:::i;:::-;57621:3;57617:39;57610:46;;57379:283;57289:373;;;;:::o;57668:834::-;57907:4;57945:3;57934:9;57930:19;57922:27;;57959:71;58027:1;58016:9;58012:17;58003:6;57959:71;:::i;:::-;58040:68;58104:2;58093:9;58089:18;58080:6;58040:68;:::i;:::-;58118:72;58186:2;58175:9;58171:18;58162:6;58118:72;:::i;:::-;58237:9;58231:4;58227:20;58222:2;58211:9;58207:18;58200:48;58265:78;58338:4;58329:6;58265:78;:::i;:::-;58257:86;;58391:9;58385:4;58381:20;58375:3;58364:9;58360:19;58353:49;58419:76;58490:4;58481:6;58419:76;:::i;:::-;58411:84;;57668:834;;;;;;;;:::o;58508:291::-;58648:34;58644:1;58636:6;58632:14;58625:58;58717:34;58712:2;58704:6;58700:15;58693:59;58786:5;58781:2;58773:6;58769:15;58762:30;58508:291;:::o;58805:366::-;58947:3;58968:67;59032:2;59027:3;58968:67;:::i;:::-;58961:74;;59044:93;59133:3;59044:93;:::i;:::-;59162:2;59157:3;59153:12;59146:19;;58805:366;;;:::o;59177:419::-;59343:4;59381:2;59370:9;59366:18;59358:26;;59430:9;59424:4;59420:20;59416:1;59405:9;59401:17;59394:47;59458:131;59584:4;59458:131;:::i;:::-;59450:139;;59177:419;;;:::o;59602:332::-;59723:4;59761:2;59750:9;59746:18;59738:26;;59774:71;59842:1;59831:9;59827:17;59818:6;59774:71;:::i;:::-;59855:72;59923:2;59912:9;59908:18;59899:6;59855:72;:::i;:::-;59602:332;;;;;:::o;59940:233::-;59979:3;60002:24;60020:5;60002:24;:::i;:::-;59993:33;;60048:66;60041:5;60038:77;60035:103;;60118:18;;:::i;:::-;60035:103;60165:1;60158:5;60154:13;60147:20;;59940:233;;;:::o;60179:386::-;60283:3;60311:38;60343:5;60311:38;:::i;:::-;60365:88;60446:6;60441:3;60365:88;:::i;:::-;60358:95;;60462:65;60520:6;60515:3;60508:4;60501:5;60497:16;60462:65;:::i;:::-;60552:6;60547:3;60543:16;60536:23;;60287:278;60179:386;;;;:::o;60571:271::-;60701:3;60723:93;60812:3;60803:6;60723:93;:::i;:::-;60716:100;;60833:3;60826:10;;60571:271;;;;:::o;60848:191::-;60888:3;60907:20;60925:1;60907:20;:::i;:::-;60902:25;;60941:20;60959:1;60941:20;:::i;:::-;60936:25;;60984:1;60981;60977:9;60970:16;;61005:3;61002:1;60999:10;60996:36;;;61012:18;;:::i;:::-;60996:36;60848:191;;;;:::o;61045:182::-;61185:34;61181:1;61173:6;61169:14;61162:58;61045:182;:::o;61233:366::-;61375:3;61396:67;61460:2;61455:3;61396:67;:::i;:::-;61389:74;;61472:93;61561:3;61472:93;:::i;:::-;61590:2;61585:3;61581:12;61574:19;;61233:366;;;:::o;61605:419::-;61771:4;61809:2;61798:9;61794:18;61786:26;;61858:9;61852:4;61848:20;61844:1;61833:9;61829:17;61822:47;61886:131;62012:4;61886:131;:::i;:::-;61878:139;;61605:419;;;:::o;62030:225::-;62170:34;62166:1;62158:6;62154:14;62147:58;62239:8;62234:2;62226:6;62222:15;62215:33;62030:225;:::o;62261:366::-;62403:3;62424:67;62488:2;62483:3;62424:67;:::i;:::-;62417:74;;62500:93;62589:3;62500:93;:::i;:::-;62618:2;62613:3;62609:12;62602:19;;62261:366;;;:::o;62633:419::-;62799:4;62837:2;62826:9;62822:18;62814:26;;62886:9;62880:4;62876:20;62872:1;62861:9;62857:17;62850:47;62914:131;63040:4;62914:131;:::i;:::-;62906:139;;62633:419;;;:::o;63058:332::-;63179:4;63217:2;63206:9;63202:18;63194:26;;63230:71;63298:1;63287:9;63283:17;63274:6;63230:71;:::i;:::-;63311:72;63379:2;63368:9;63364:18;63355:6;63311:72;:::i;:::-;63058:332;;;;;:::o;63396:143::-;63453:5;63484:6;63478:13;63469:22;;63500:33;63527:5;63500:33;:::i;:::-;63396:143;;;;:::o;63545:351::-;63615:6;63664:2;63652:9;63643:7;63639:23;63635:32;63632:119;;;63670:79;;:::i;:::-;63632:119;63790:1;63815:64;63871:7;63862:6;63851:9;63847:22;63815:64;:::i;:::-;63805:74;;63761:128;63545:351;;;;:::o;63902:226::-;64042:34;64038:1;64030:6;64026:14;64019:58;64111:9;64106:2;64098:6;64094:15;64087:34;63902:226;:::o;64134:366::-;64276:3;64297:67;64361:2;64356:3;64297:67;:::i;:::-;64290:74;;64373:93;64462:3;64373:93;:::i;:::-;64491:2;64486:3;64482:12;64475:19;;64134:366;;;:::o;64506:419::-;64672:4;64710:2;64699:9;64695:18;64687:26;;64759:9;64753:4;64749:20;64745:1;64734:9;64730:17;64723:47;64787:131;64913:4;64787:131;:::i;:::-;64779:139;;64506:419;;;:::o;64931:410::-;64971:7;64994:20;65012:1;64994:20;:::i;:::-;64989:25;;65028:20;65046:1;65028:20;:::i;:::-;65023:25;;65083:1;65080;65076:9;65105:30;65123:11;65105:30;:::i;:::-;65094:41;;65284:1;65275:7;65271:15;65268:1;65265:22;65245:1;65238:9;65218:83;65195:139;;65314:18;;:::i;:::-;65195:139;64979:362;64931:410;;;;:::o;65347:180::-;65395:77;65392:1;65385:88;65492:4;65489:1;65482:15;65516:4;65513:1;65506:15;65533:185;65573:1;65590:20;65608:1;65590:20;:::i;:::-;65585:25;;65624:20;65642:1;65624:20;:::i;:::-;65619:25;;65663:1;65653:35;;65668:18;;:::i;:::-;65653:35;65710:1;65707;65703:9;65698:14;;65533:185;;;;:::o;65724:173::-;65864:25;65860:1;65852:6;65848:14;65841:49;65724:173;:::o;65903:366::-;66045:3;66066:67;66130:2;66125:3;66066:67;:::i;:::-;66059:74;;66142:93;66231:3;66142:93;:::i;:::-;66260:2;66255:3;66251:12;66244:19;;65903:366;;;:::o;66275:419::-;66441:4;66479:2;66468:9;66464:18;66456:26;;66528:9;66522:4;66518:20;66514:1;66503:9;66499:17;66492:47;66556:131;66682:4;66556:131;:::i;:::-;66548:139;;66275:419;;;:::o;66700:148::-;66802:11;66839:3;66824:18;;66700:148;;;;:::o;66854:214::-;66994:66;66990:1;66982:6;66978:14;66971:90;66854:214;:::o;67074:400::-;67234:3;67255:84;67337:1;67332:3;67255:84;:::i;:::-;67248:91;;67348:93;67437:3;67348:93;:::i;:::-;67466:1;67461:3;67457:11;67450:18;;67074:400;;;:::o;67480:79::-;67519:7;67548:5;67537:16;;67480:79;;;:::o;67565:157::-;67670:45;67690:24;67708:5;67690:24;:::i;:::-;67670:45;:::i;:::-;67665:3;67658:58;67565:157;;:::o;67728:663::-;67969:3;67991:148;68135:3;67991:148;:::i;:::-;67984:155;;68149:75;68220:3;68211:6;68149:75;:::i;:::-;68249:2;68244:3;68240:12;68233:19;;68262:75;68333:3;68324:6;68262:75;:::i;:::-;68362:2;68357:3;68353:12;68346:19;;68382:3;68375:10;;67728:663;;;;;:::o;68397:545::-;68570:4;68608:3;68597:9;68593:19;68585:27;;68622:71;68690:1;68679:9;68675:17;68666:6;68622:71;:::i;:::-;68703:68;68767:2;68756:9;68752:18;68743:6;68703:68;:::i;:::-;68781:72;68849:2;68838:9;68834:18;68825:6;68781:72;:::i;:::-;68863;68931:2;68920:9;68916:18;68907:6;68863:72;:::i;:::-;68397:545;;;;;;;:::o;68948:174::-;69088:26;69084:1;69076:6;69072:14;69065:50;68948:174;:::o;69128:366::-;69270:3;69291:67;69355:2;69350:3;69291:67;:::i;:::-;69284:74;;69367:93;69456:3;69367:93;:::i;:::-;69485:2;69480:3;69476:12;69469:19;;69128:366;;;:::o;69500:419::-;69666:4;69704:2;69693:9;69689:18;69681:26;;69753:9;69747:4;69743:20;69739:1;69728:9;69724:17;69717:47;69781:131;69907:4;69781:131;:::i;:::-;69773:139;;69500:419;;;:::o;69925:181::-;70065:33;70061:1;70053:6;70049:14;70042:57;69925:181;:::o;70112:366::-;70254:3;70275:67;70339:2;70334:3;70275:67;:::i;:::-;70268:74;;70351:93;70440:3;70351:93;:::i;:::-;70469:2;70464:3;70460:12;70453:19;;70112:366;;;:::o;70484:419::-;70650:4;70688:2;70677:9;70673:18;70665:26;;70737:9;70731:4;70727:20;70723:1;70712:9;70708:17;70701:47;70765:131;70891:4;70765:131;:::i;:::-;70757:139;;70484:419;;;:::o;70909:221::-;71049:34;71045:1;71037:6;71033:14;71026:58;71118:4;71113:2;71105:6;71101:15;71094:29;70909:221;:::o;71136:366::-;71278:3;71299:67;71363:2;71358:3;71299:67;:::i;:::-;71292:74;;71375:93;71464:3;71375:93;:::i;:::-;71493:2;71488:3;71484:12;71477:19;;71136:366;;;:::o;71508:419::-;71674:4;71712:2;71701:9;71697:18;71689:26;;71761:9;71755:4;71751:20;71747:1;71736:9;71732:17;71725:47;71789:131;71915:4;71789:131;:::i;:::-;71781:139;;71508:419;;;:::o;71933:226::-;72073:34;72069:1;72061:6;72057:14;72050:58;72142:9;72137:2;72129:6;72125:15;72118:34;71933:226;:::o;72165:366::-;72307:3;72328:67;72392:2;72387:3;72328:67;:::i;:::-;72321:74;;72404:93;72493:3;72404:93;:::i;:::-;72522:2;72517:3;72513:12;72506:19;;72165:366;;;:::o;72537:419::-;72703:4;72741:2;72730:9;72726:18;72718:26;;72790:9;72784:4;72780:20;72776:1;72765:9;72761:17;72754:47;72818:131;72944:4;72818:131;:::i;:::-;72810:139;;72537:419;;;:::o;72962:240::-;73102:34;73098:1;73090:6;73086:14;73079:58;73171:23;73166:2;73158:6;73154:15;73147:48;72962:240;:::o;73208:366::-;73350:3;73371:67;73435:2;73430:3;73371:67;:::i;:::-;73364:74;;73447:93;73536:3;73447:93;:::i;:::-;73565:2;73560:3;73556:12;73549:19;;73208:366;;;:::o;73580:419::-;73746:4;73784:2;73773:9;73769:18;73761:26;;73833:9;73827:4;73823:20;73819:1;73808:9;73804:17;73797:47;73861:131;73987:4;73861:131;:::i;:::-;73853:139;;73580:419;;;:::o;74005:664::-;74210:4;74248:3;74237:9;74233:19;74225:27;;74262:71;74330:1;74319:9;74315:17;74306:6;74262:71;:::i;:::-;74343:72;74411:2;74400:9;74396:18;74387:6;74343:72;:::i;:::-;74425;74493:2;74482:9;74478:18;74469:6;74425:72;:::i;:::-;74507;74575:2;74564:9;74560:18;74551:6;74507:72;:::i;:::-;74589:73;74657:3;74646:9;74642:19;74633:6;74589:73;:::i;:::-;74005:664;;;;;;;;:::o"},"methodIdentifiers":{"BALLOT_TYPEHASH()":"deaaa7cc","COUNTING_MODE()":"dd4e2ba5","EXTENDED_BALLOT_TYPEHASH()":"2fe3e261","castVote(uint256,uint8)":"56781388","castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)":"3bccf4fd","castVoteWithReason(uint256,uint8,string)":"7b3c71d3","castVoteWithReasonAndParams(uint256,uint8,string,bytes)":"5f398a14","castVoteWithReasonAndParamsBySig(uint256,uint8,string,bytes,uint8,bytes32,bytes32)":"03420181","execute(address[],uint256[],bytes[],bytes32)":"2656227d","getVotes(address,uint256)":"eb9019d4","getVotesWithParams(address,uint256,bytes)":"9a802a6d","hasVoted(uint256,address)":"43859632","hashProposal(address[],uint256[],bytes[],bytes32)":"c59057e4","name()":"06fdde03","onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","onERC721Received(address,address,uint256,bytes)":"150b7a02","proposalDeadline(uint256)":"c01f9e37","proposalSnapshot(uint256)":"2d63f693","proposalThreshold()":"b58131b0","proposalVotes(uint256)":"544ffc9c","propose(address[],uint256[],bytes[],string)":"7d5e81e2","quorum(uint256)":"f8ce560a","quorumDenominator()":"97c3d334","quorumNumerator()":"a7713a70","quorumNumerator(uint256)":"60c4247f","relay(address,uint256,bytes)":"c28bc2fa","setProposalThreshold(uint256)":"ece40cc1","setVotingDelay(uint256)":"70b0f660","setVotingPeriod(uint256)":"ea0217cf","state(uint256)":"3e4f49e6","supportsInterface(bytes4)":"01ffc9a7","token()":"fc0c546a","updateQuorumNumerator(uint256)":"06f3f9e6","version()":"54fd4d50","votingDelay()":"3932abb1","votingPeriod()":"02a251a3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IVotes\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Empty\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldProposalThreshold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newProposalThreshold\",\"type\":\"uint256\"}],\"name\":\"ProposalThresholdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldQuorumNumerator\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newQuorumNumerator\",\"type\":\"uint256\"}],\"name\":\"QuorumNumeratorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"VoteCastWithParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingDelay\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingDelay\",\"type\":\"uint256\"}],\"name\":\"VotingDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"VotingPeriodSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COUNTING_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EXTENDED_BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"}],\"name\":\"castVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteBySig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"castVoteWithReason\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"castVoteWithReasonAndParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteWithReasonAndParamsBySig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"getVotesWithParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"hashProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalSnapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"abstainVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorumDenominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"quorumNumerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorumNumerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"relay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newProposalThreshold\",\"type\":\"uint256\"}],\"name\":\"setProposalThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newVotingDelay\",\"type\":\"uint256\"}],\"name\":\"setVotingDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"setVotingPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum IGovernor.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IVotes\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newQuorumNumerator\",\"type\":\"uint256\"}],\"name\":\"updateQuorumNumerator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"Empty()\":[{\"details\":\"An operation (e.g. {front}) couldn't be completed due to the queue being empty.\"}]},\"kind\":\"dev\",\"methods\":{\"COUNTING_MODE()\":{\"details\":\"See {IGovernor-COUNTING_MODE}.\"},\"castVote(uint256,uint8)\":{\"details\":\"See {IGovernor-castVote}.\"},\"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)\":{\"details\":\"See {IGovernor-castVoteBySig}.\"},\"castVoteWithReason(uint256,uint8,string)\":{\"details\":\"See {IGovernor-castVoteWithReason}.\"},\"castVoteWithReasonAndParams(uint256,uint8,string,bytes)\":{\"details\":\"See {IGovernor-castVoteWithReasonAndParams}.\"},\"castVoteWithReasonAndParamsBySig(uint256,uint8,string,bytes,uint8,bytes32,bytes32)\":{\"details\":\"See {IGovernor-castVoteWithReasonAndParamsBySig}.\"},\"execute(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-execute}.\"},\"getVotes(address,uint256)\":{\"details\":\"See {IGovernor-getVotes}.\"},\"getVotesWithParams(address,uint256,bytes)\":{\"details\":\"See {IGovernor-getVotesWithParams}.\"},\"hasVoted(uint256,address)\":{\"details\":\"See {IGovernor-hasVoted}.\"},\"hashProposal(address[],uint256[],bytes[],bytes32)\":{\"details\":\"See {IGovernor-hashProposal}. The proposal id is produced by hashing the ABI encoded `targets` array, the `values` array, the `calldatas` array and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in advance, before the proposal is submitted. Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the same proposal (with same operation and same description) will have the same id if submitted on multiple governors across multiple networks. This also means that in order to execute the same operation twice (on the same governor) the proposer will have to change the description in order to avoid proposal id conflicts.\"},\"name()\":{\"details\":\"See {IGovernor-name}.\"},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155Receiver-onERC1155BatchReceived}.\"},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155Receiver-onERC1155Received}.\"},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}.\"},\"proposalDeadline(uint256)\":{\"details\":\"See {IGovernor-proposalDeadline}.\"},\"proposalSnapshot(uint256)\":{\"details\":\"See {IGovernor-proposalSnapshot}.\"},\"proposalVotes(uint256)\":{\"details\":\"Accessor to the internal vote counts.\"},\"propose(address[],uint256[],bytes[],string)\":{\"details\":\"See {IGovernor-propose}.\"},\"quorumDenominator()\":{\"details\":\"Returns the quorum denominator. Defaults to 100, but may be overridden.\"},\"quorumNumerator()\":{\"details\":\"Returns the current quorum numerator. See {quorumDenominator}.\"},\"quorumNumerator(uint256)\":{\"details\":\"Returns the quorum numerator at a specific block number. See {quorumDenominator}.\"},\"relay(address,uint256,bytes)\":{\"details\":\"Relays a transaction or function call to an arbitrary target. In cases where the governance executor is some contract other than the governor itself, like when using a timelock, this function can be invoked in a governance proposal to recover tokens or Ether that was sent to the governor contract by mistake. Note that if the executor is simply the governor itself, use of `relay` is redundant.\"},\"setProposalThreshold(uint256)\":{\"details\":\"Update the proposal threshold. This operation can only be performed through a governance proposal. Emits a {ProposalThresholdSet} event.\"},\"setVotingDelay(uint256)\":{\"details\":\"Update the voting delay. This operation can only be performed through a governance proposal. Emits a {VotingDelaySet} event.\"},\"setVotingPeriod(uint256)\":{\"details\":\"Update the voting period. This operation can only be performed through a governance proposal. Emits a {VotingPeriodSet} event.\"},\"state(uint256)\":{\"details\":\"See {IGovernor-state}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"updateQuorumNumerator(uint256)\":{\"details\":\"Changes the quorum numerator. Emits a {QuorumNumeratorUpdated} event. Requirements: - Must be called through a governance proposal. - New numerator must be smaller or equal to the denominator.\"},\"version()\":{\"details\":\"See {IGovernor-version}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyGovernor.sol\":\"MyGovernor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/Governor.sol\":{\"keccak256\":\"0x57da86c5f5c46ab8f2cf67ada4258567a9270f89499690f40ed8160788733a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9fab32423b6dbc9cf70737380a9444731acbe042945b65674858e064370be3a\",\"dweb:/ipfs/QmPLopcmcMBLkazDRVEVgts5ADMjXBba1vqtZcRGCRHtbF\"]},\"@openzeppelin/contracts/governance/IGovernor.sol\":{\"keccak256\":\"0xa52d593ff06a2353f78fa149da31f2ca94f03d1eff99bde41977fa2fe985a92f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d275abef31363d629e2a1a06f439bb7d2f26f66545ddb61f74b174de6f034a8\",\"dweb:/ipfs/QmPfjkyNcfiiZnPtYCvGfSHikbYzZxut3D4pBhBZ2VwfoT\"]},\"@openzeppelin/contracts/governance/extensions/GovernorCountingSimple.sol\":{\"keccak256\":\"0x0f9c01248b04279913cc08936e9d15494ec3700c21768a175f91e72ba52c7789\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60518084110ae055e83e9d75c47334aabb3e9db45f6895557bb4ad7f1a658b91\",\"dweb:/ipfs/QmVKJnESDYK52gy59iMChFibs4XWuUxRNxo23zY72h2crY\"]},\"@openzeppelin/contracts/governance/extensions/GovernorSettings.sol\":{\"keccak256\":\"0xab3781f09dfb447d0c2f5bbb2aafc9ff86333f16c61580ab85d7c8a87491eab9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58571bc89cd0e54fa9af6b41e53e2110c6f5767eb691af8ad88759dbde07b3fd\",\"dweb:/ipfs/QmbeoatuYT5ukpGLWZh4DHb7yrC3TpBbm9hDdWwkdUuUy4\"]},\"@openzeppelin/contracts/governance/extensions/GovernorVotes.sol\":{\"keccak256\":\"0xf818ee82b0faf7938ced9fcc851600b17202c8f6b1b33e01035702cadda684bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aaea7133e6c40ce2c9c2235c72ffec8befbe50c6df0414565675f2648562484\",\"dweb:/ipfs/QmSvUuPuorTqpscvfmhV4PCJCjJDFpMmjcxTnJUB64cj98\"]},\"@openzeppelin/contracts/governance/extensions/GovernorVotesQuorumFraction.sol\":{\"keccak256\":\"0x78a9387835f2dd3409988348661df2724630c7bb31bb3da54146c568460c42af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe76999864eaa47e124dfa6f3124eb5d42d5ef705508fb8ad696372f0f40da92\",\"dweb:/ipfs/Qmbjd3L2Rz1sp9rZ5yzwCH2nQFZTQThR9naCkGZY5DVN2p\"]},\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86\",\"dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Checkpoints.sol\":{\"keccak256\":\"0xf586981d605e0c0f07a44e158a3da023bd526409d3709e969d323b2d91398078\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df93b9e4731d4e904a7216af640c5ec0a4ef5f87051fedc2a272b3b3039f1247\",\"dweb:/ipfs/QmYvPqBpuZXxnedpn1vAMuHfustou2hByanL8zRA3qm3ob\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/Timers.sol\":{\"keccak256\":\"0x29791a62950a7983e02a673639c1a781d1e448691800456c2ce4b99715391b14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f37b3c682657d4b1790b5e564d4c9445856c93aa79ffed43fd076959118118\",\"dweb:/ipfs/QmcBGSacnV1JDz7kicsFijDYBxx5CmLSjUSJVLqyn7zH3G\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\":{\"keccak256\":\"0x4859ffd6dd69382a1462930c00b6e394007da80e78e510f56930271034737bf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0497f84a7fdfafac2046d23b456a05454365d38bb59883b7d8ce398a26704f4f\",\"dweb:/ipfs/QmZSXpAvoXWkxQ4U2GJ4juWvmn4Fd7zeH9wXZq6wKUbfi6\"]},\"contracts/MyGovernor.sol\":{\"keccak256\":\"0xf513b00c87ada458bcbe58caef22963e6f50f6c0e40fac1c31a62ec0ba7a61db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://69d760b6fcd104f8dcb20efe819f5b7ee47b9f61fe585ebb5b79d460b940d7d3\",\"dweb:/ipfs/QmXwLJLaA9ZXMzjN84bGXJZ8QPzhgg2DrPn4bszVJXfLU6\"]}},\"version\":1}"}}}}}